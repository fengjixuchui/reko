void fn0000802E(word32 r0, word32 r2, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000802E_entry:
// DataOut: ap fp r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000802E:
	word32 r3_9 = Mem0[0x000192E0:word32]
	word32 sp_13
	byte CVZN_14
	byte ZN_15
	bool C_16
	bool V_17
	word32 r4_18
	word32 r3_19
	bool Z_20
	bool N_21
	word32 ap_22
	byte CZN_23
	word32 r2_24
	word32 r0_25
	word32 fp_26
	call r3_9 + 2 (retsize: 4; depth: 16)
		uses: C_11,dwLoc08_5,dwLoc0C_7,r3_9,r4,sp_6,V_12,ZN_10
		defs: ap_22,C_16,CVZN_14,CZN_23,fp_26,N_21,r0_25,r2_24,r3_19,r4_18,sp_13,V_17,Z_20,ZN_15
	word32 sp_34
	byte CVZN_35
	byte ZN_36
	bool C_37
	bool V_38
	word32 r4_39
	word32 r3_40
	bool Z_41
	bool N_42
	word32 ap_43
	byte CZN_44
	word32 r2_45
	word32 r0_46
	word32 fp_47
	call r3_19 + 2 (retsize: 4; depth: 24)
		uses: ap_22,C_32,CVZN_14,CZN_23,dwLoc08_5,dwLoc0C_7,dwLoc10_28,dwLoc14_30,fp_26,N_21,r0_25,r2_24,r3_19,r4_18,sp_29,V_33,Z_20,ZN_31
		defs: ap_43,C_37,CVZN_35,CZN_44,fp_47,N_42,r0_46,r2_45,r3_40,r4_39,sp_34,V_38,Z_41,ZN_36
	word32 sp_55
	byte CVZN_56
	byte ZN_57
	bool C_58
	bool V_59
	word32 r4_60
	word32 r3_61
	bool Z_62
	bool N_63
	word32 ap_64
	byte CZN_65
	word32 r2_66
	word32 r0_67
	word32 fp_68
	call r3_40 + 2 (retsize: 4; depth: 32)
		uses: ap_43,C_53,CVZN_35,CZN_44,dwLoc08_5,dwLoc0C_7,dwLoc10_28,dwLoc14_30,dwLoc18_49,dwLoc1C_51,fp_47,N_42,r0_46,r2_45,r3_40,r4_39,sp_50,V_54,Z_41,ZN_52
		defs: ap_64,C_58,CVZN_56,CZN_65,fp_68,N_63,r0_67,r2_66,r3_61,r4_60,sp_55,V_59,Z_62,ZN_57
	word32 sp_76
	byte CVZN_77
	byte ZN_78
	bool C_79
	bool V_80
	word32 r4_81
	word32 r3_82
	bool Z_83
	bool N_84
	word32 ap_85
	byte CZN_86
	word32 r2_87
	word32 r0_88
	word32 fp_89
	call r3_61 + 2 (retsize: 4; depth: 40)
		uses: ap_64,C_74,CVZN_56,CZN_65,dwLoc08_5,dwLoc0C_7,dwLoc10_28,dwLoc14_30,dwLoc18_49,dwLoc1C_51,dwLoc20_70,dwLoc24_72,fp_68,N_63,r0_67,r2_66,r3_61,r4_60,sp_71,V_75,Z_62,ZN_73
		defs: ap_85,C_79,CVZN_77,CZN_86,fp_89,N_84,r0_88,r2_87,r3_82,r4_81,sp_76,V_80,Z_83,ZN_78
	word32 r3_159 = 0x00000000
	branch Mem0[ap_85 + 4:word32] != 0x00000001 l00008081
// DataOut: ap fp r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000807F:
	r3_159 = 0x00000001
// DataOut: ap fp r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000024 r3:0x00000000 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4
// LocalsOut: fp(32)

l00008081:
	Mem97[r2_87 + 96:word32] = r3_159
	fn00008EC2(fp_89)
	branch (r0_88 & 0x00000001) != 0x00000000 l0000809C
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000024 r3:<invalid> -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4
// Terminates process

l0000809C:
	Mem120[fp - 0x00000030:uint32] = 0x0000005D
	Mem123[fp - 0x00000034:word32] = Mem120[Mem120[ap_85 + 8:word32]:word32]
	word32 sp_127
	byte CVZN_128
	byte ZN_129
	bool C_130
	bool V_131
	word32 r4_132
	word32 r3_133
	bool Z_134
	bool N_135
	word32 ap_136
	byte CZN_137
	word32 r2_138
	word32 r0_139
	word32 fp_140
	call Mem123[0x000192DC:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_85,C_125,CVZN_95,CZN_91,dwLoc08_5,dwLoc0C_7,dwLoc10_28,dwLoc14_30,dwLoc18_49,dwLoc1C_51,dwLoc20_70,dwLoc24_72,dwLoc28_100,dwLoc2C_103,fp_89,N_84,r0_88,r2_87,r3_107,r4_81,sp_121,V_126,Z_92,ZN_124
		defs: ap_136,C_130,CVZN_128,CZN_137,fp_140,N_135,r0_139,r2_138,r3_133,r4_132,sp_127,V_131,Z_134,ZN_129
	branch r0_139 != 0x00000000 l000080B8
// DataOut: ap r4 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4

l000080B8:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: r3:r0 sp:sp - 0x0000000C r4:r0 -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4

l000080AF:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: r3:r0 sp:sp - 0x0000000C r4:r0 -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4

l000080BA:
	Mem149[sp_127 - 0x00000004:word32] = 0x00000007
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 sp:sp - 0x0000000C r4:<invalid> -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4

l00008098:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4

fn0000802E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 r0:r0 sp:fp - 0x00000004 fp:<invalid> ap:<invalid> -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4



void fn00008CCE(word32 r2, word32 r3, word32 r4, word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap r2 r3 r4
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00008CCE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00008CCE_entry:
// DataOut: ap r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008CCE:
	branch Mem0[ap + 4:word32] == 0x00000000 l00008CF4
// DataOut: r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008CF4:
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid>
// LocalsOut: fp(32)

l00008CEC:
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid>
// LocalsOut: fp(32)

l00008CF6:
	branch Mem0[r2:word32] != 0x00000000 l00008D00
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid> r0:<invalid>
// LocalsOut: fp(32)

l00008D00:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid> r0:<invalid> r6:<invalid>

l00008CFD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid> r0:<invalid> r6:<invalid>
// LocalsOut: fp(32)

l00008DAC:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid> r0:<invalid> r6:<invalid>



void fn00008EC2(word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00008EC2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00008EC2_entry:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008EC2:
	Mem4[fp + -280:word16] = 0x0000
	Mem7[fp + -278:byte] = 0x0E
	Mem9[fp + -277:byte] = 0x02
	Mem11[fp + -276:word32] = 0x00000000
	Mem13[fp + -288:word16] = 0x0000
	Mem15[fp + -286:byte] = 0x0E
	Mem17[fp + -285:byte] = 0x02
	Mem19[fp + -284:word32] = 0x00000000
	Mem21[fp + -296:word16] = 0x0000
	Mem23[fp + -294:byte] = 0x0E
	Mem25[fp + -293:byte] = 0x02
	Mem27[fp + -292:word32] = 0x00000000
	Mem29[fp + -304:word16] = 0x0000
	Mem31[fp + -302:byte] = 0x0E
	Mem33[fp + -301:byte] = 0x02
	Mem35[fp + -300:word32] = 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00009A52()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00009A52_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00009A52_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009A52:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word32 fn00009B0A(word32 r0, word32 r8, word32 r10, word32 r11, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & apOut, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r10 r11 r8
// LiveOut: ap fp r0 r3
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r9 sp
// Preserved:
fn00009B0A_entry:
// DataOut: ap fp r0 r10 r11 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009B0A:
	word32 r3_12
	word32 r6_13
	word32 r7_14
	word32 ap_15
	word32 fp_16
	word32 r0_17 = fn0000AA6A(r0, r8, r10, r11, ap, fp, out r3_12, out r6_13, out r7_14, out ap_15, out fp_16)
	Mem19[ap_15 + 0x0001019C:word32] = r0_17
	branch r0_17 > 0x00000002 l00009B2A
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): C
// SymbolicIn: sp:fp

l00009B2A:
	branch false l00009B2C
// DataOut: fp r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid>

l00009B2C:
// DataOut: fp r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid>

l00009B38:
	word32 r3_57
	word32 fp_58
	word32 r0_59 = fn00009C8A(r6_13, r7_14, fp_16, out r3_57, out fp_58)
	word32 fp_61
	*fpOut = Mem19[fp_58 + 0x0000000C:word32]
	word32 ap_62
	*apOut = Mem19[fp_58 + 0x00000008:word32]
	return r0_59
// DataOut: ap fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid>

l00009B22_1:
	word32 sp_43
	byte CVZN_44
	byte ZN_45
	bool C_46
	bool V_47
	word32 r0_48
	word32 ap_49
	word32 fp_50
	word32 r8_51
	word32 r10_52
	word32 r11_53
	word32 r3_54
	word32 r6_55
	word32 r7_56
	call 0x00009B26 + r0_17 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_15,C_21,CVZN_24,fp_16,r0_17,r10,r11,r3_12,r6_13,r7_14,r8,sp_2,V_22,ZN_20
		defs: ap_49,C_46,CVZN_44,fp_50,r0_48,r10_52,r11_53,r3_54,r6_55,r7_56,r8_51,sp_43,V_47,ZN_45
	return r0_48
// DataOut: ap fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid>

fn00009B0A_exit:
// DataOut: ap fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid>



void fn00009BAE(word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00009BAE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00009BAE_entry:
// DataOut: r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009BAE:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word32 fn00009C8A(word32 r6, word32 r7, word32 fp, ptr32 & r3Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r6 r7
// LiveOut: fp r0 r3
// Trashed: CVZN ap fp r0 r2 r3 r4 r5 sp
// Preserved:
fn00009C8A_entry:
// DataOut: fp r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009C8A:
	word32 r3_113
	*r3Out = DPB(r3, 0x01, 0)
	branch (Mem0[Mem0[r7 + 1511:word32] + 20:word32] & 0x00000008) != 0x00000000 l00009CB8
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009CB1:
	branch Mem0[r7 + 12:word32] != 0x00000000 l00009CB8
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:DPB(r3, 0x01, 0) r2:<invalid>

l00009CB6:
	*r3Out = DPB(r3, 0x00, 0)
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:DPB(r3, 0x01, 0) r2:<invalid>

l00009CB8:
	word32 r5_103
	int32 v14_17 = (int32) (int8) r3_113
	Mem18[r6 + 352:int32] = v14_17
	branch v14_17 != 0x00000000 l00009CC4
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CBF:
	branch Mem18[r7 + 8:word32] != 0x00000000 l00009CC8
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CC8:
	word32 r4_101
	branch Mem18[r7 + 8:word32] == 0x00000001 l00009CD4
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CD4:
	*r3Out = 0x00000000
	branch (uint32) Mem18[Mem18[r7 + 1511:word32] + 0x00000014:ui1] != 0x00000000 l00009CE7
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CE5:
	*r3Out = 0x00000001
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:0x00000000 r2:<invalid>

l00009CE7:
	r4_101 = r3_113
// DataOut: fp r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CCE:
	r4_101 = 0x00000001
// DataOut: fp r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CEA:
	r5_103 = r4_101
// DataOut: fp r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r4:<invalid>

l00009CC4:
	r5_103 = 0x00000000
// DataOut: fp r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CED:
	Mem31[r6 + 356:word32] = r5_103
	Mem33[r6 + 360:byte] = 0x05
	branch Mem33[r7 + 12:word32] == 0x00000000 l00009CFF
// DataOut: fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l00009CFF:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l00009CFC:
// DataOut: fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l00009FFD:
	Mem39[r6 + 0x00010170:word32] = r6 + 361
	Mem41[r6 + 0x0001016C:word32] = 0x00000000
	Mem43[r6 + 0x00010179:word32] = r6 + 361
	Mem45[r6 + 0x0001017D:word32] = 0x00000000
	Mem47[r6 + 0x00010175:word32] = r6 + 0x00010181
	Mem49[r6 + 0x00010185:word32] = r6 + 0x00008169
	Mem51[r6 + 0x00010189:word32] = 0x00000000
	Mem53[r6 + 0x00010181:word32] = r6 + 0x00010175
	Mem55[r6 + 0x00010190:word32] = r6 + 0x00010175
	branch Mem55[r6 + 352:word32] == 0x00000000 l0000A060
// DataOut: fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l0000A060:
// DataOut: fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l0000A053:
	Mem75[r6 + 0x00010174:byte] = 0x00
// DataOut: fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l0000A065:
	Mem62[r6 + 0x00010194:word32] = r3_113
	word32 fp_70
	*fpOut = Mem62[fp + 0x0000000C:word32]
	return 0x00000000
// DataOut: fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

fn00009C8A_exit:
// DataOut: fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r5:<invalid> r0:0x00000000 fp:<invalid> ap:<invalid> r4:<invalid>



void fn0000A07A(word32 r6, word32 r7, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r6 r7 r8
// LiveOut:
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn0000A07A_entry:
// DataOut: fp r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A07A:
	Mem6[r6 + 352:word32] = Mem0[r7 + 12:word32]
	Mem10[r6 + 360:byte] = Mem6[Mem6[r6 + 308:word32] + 31:byte]
	branch Mem10[r7 + 12:word32] != 0x00000000 l0000A0AD
// DataOut: fp r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A0AD:
	word32 r2_15 = (uint32) Mem10[r6 + 360:byte]
	branch r2_15 != 0x00000002 l0000A0BA
// DataOut: fp r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>
// LocalsOut: fp(32)

l0000A0BA:
	branch r2_15 != 0x00000005 l0000A0C2
// DataOut: fp r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>
// LocalsOut: fp(32)

l0000A0C2:
	branch r2_15 != 0x00000006 l0000A0CA
// DataOut: fp r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>
// LocalsOut: fp(32)

l0000A0CA:
	branch r2_15 != 0x00000004 l0000A0D2
// DataOut: fp r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>
// LocalsOut: fp(32)

l0000A0D2:
	word32 sp_135
	byte ZN_136
	bool C_137
	bool V_138
	word32 r7_139
	word32 r6_140
	word32 r2_141
	bool Z_142
	byte CZN_143
	bool N_144
	word32 r0_145
	word32 fp_146
	word32 ap_147
	byte VZN_148
	word32 r8_149
	word32 r3_150
	call Mem10[0x000192D0:word32] + 2 (retsize: 4; depth: 536)
		uses: ap,C_132,CZN_117,dwLoc0208_121,dwLoc020C_124,dwLoc0210_127,dwLoc0214_130,dwLoc0218,dwLoc021C,dwLoc0220,dwLoc0224,fp,N,r0,r2_15,r3,r6,r7,r8,sp_128,V_133,VZN,Z_118,ZN_131
		defs: ap_147,C_137,CZN_143,fp_146,N_144,r0_145,r2_141,r3_150,r6_140,r7_139,r8_149,sp_135,V_138,VZN_148,Z_142,ZN_136
	word32 r2_158 = Mem10[r7_139 + 0x0000C839:word32]
	byte ZN_163
	bool C_164
	bool V_165
	word32 r7_166
	word32 r2_168
	bool Z_169
	byte CZN_170
	bool N_171
	word32 r0_172
	word32 fp_173
	word32 ap_174
	byte VZN_175
	word32 r8_176
	word32 r3_177
	word32 r6_167
	word32 sp_162
	call r2_158 + 2 (retsize: 4; depth: 548)
		uses: ap_147,C_160,CZN_143,dwLoc0208_121,dwLoc020C_124,dwLoc0210_127,dwLoc0214_130,dwLoc0218_152,dwLoc021C_155,dwLoc0220_157,dwLoc0224,fp_146,N_144,r0_145,r2_158,r3_150,r6_140,r7_139,r8_149,sp_156,V_161,VZN_148,Z_142,ZN_159
		defs: ap_174,C_164,CZN_170,fp_173,N_171,r0_172,r2_168,r3_177,r6_167,r7_166,r8_176,sp_162,V_165,VZN_175,Z_169,ZN_163
	branch Mem10[r6_167 + 320:word32] == 0x00000000 l0000A10C
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>
// LocalsOut: fp(32)

l0000A101:
	byte ZN_412
	bool C_413
	bool V_414
	word32 r7_415
	word32 r2_417
	bool Z_418
	byte CZN_419
	bool N_420
	word32 r0_421
	word32 fp_422
	word32 ap_423
	byte VZN_424
	word32 r8_425
	word32 r3_426
	call Mem10[0x000192B0:word32] + 2 (retsize: 4; depth: 552)
		uses: ap_174,C_409,CZN_170,dwLoc0208_121,dwLoc020C_124,dwLoc0210_127,dwLoc0214_130,dwLoc0218_152,dwLoc021C_155,dwLoc0220_157,dwLoc0224_407,fp_173,N_171,r0_172,r2_168,r3_177,r6_167,r7_166,r8_176,sp_405,V_410,VZN_175,Z_179,ZN_408
		defs: ap_423,C_413,CZN_419,fp_422,N_420,r0_421,r2_417,r3_426,r6_416,r7_415,r8_425,sp_411,V_414,VZN_424,Z_418,ZN_412
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFDE0 r2:<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A10C:
	branch Mem10[r6_167 + 328:word32] == 0x00000000 l0000A11D
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A112:
	word32 sp_383 = sp_162 - 0x00000004
	Mem385[sp_383:word32] = Mem10[r6_167 + 328:word32]
	byte ZN_390
	bool C_391
	bool V_392
	word32 r7_393
	word32 r2_395
	bool Z_396
	byte CZN_397
	bool N_398
	word32 r0_399
	word32 fp_400
	word32 ap_401
	byte VZN_402
	word32 r8_403
	word32 r3_404
	call Mem385[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_186,C_387,CZN_190,dwLoc0208_121,dwLoc020C_124,dwLoc0210_127,dwLoc0214_130,dwLoc0218_152,dwLoc021C_155,dwLoc0220_157,dwLoc0224_182,fp_187,N_189,r0_188,r2_191,r3_183,r6_192,r7_193,r8_184,sp_383,V_388,VZN_185,Z_196,ZN_386
		defs: ap_401,C_391,CZN_397,fp_400,N_398,r0_399,r2_395,r3_404,r6_394,r7_393,r8_403,sp_389,V_392,VZN_402,Z_396,ZN_390
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A11D:
	branch Mem10[r6_167 + 324:word32] == 0x00000000 l0000A12E
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A123:
	word32 sp_361 = sp_162 - 0x00000004
	Mem363[sp_361:word32] = Mem10[r6_167 + 324:word32]
	byte ZN_368
	bool C_369
	bool V_370
	word32 r7_371
	word32 r2_373
	bool Z_374
	byte CZN_375
	bool N_376
	word32 r0_377
	word32 fp_378
	word32 ap_379
	byte VZN_380
	word32 r8_381
	word32 r3_382
	call Mem363[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_202,C_365,CZN_206,dwLoc0208_121,dwLoc020C_124,dwLoc0210_127,dwLoc0214_130,dwLoc0218_152,dwLoc021C_155,dwLoc0220_157,dwLoc0224_182,fp_203,N_205,r0_204,r2_207,r3_199,r6_208,r7_209,r8_200,sp_361,V_366,VZN_201,Z_212,ZN_364
		defs: ap_379,C_369,CZN_375,fp_378,N_376,r0_377,r2_373,r3_382,r6_372,r7_371,r8_381,sp_367,V_370,VZN_380,Z_374,ZN_368
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A12E:
	branch Mem10[r6_167 + 316:word32] == 0x00000000 l0000A13F
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A134:
	word32 sp_339 = sp_162 - 0x00000004
	Mem341[sp_339:word32] = Mem10[r6_167 + 316:word32]
	byte ZN_346
	bool C_347
	bool V_348
	word32 r7_349
	word32 r2_351
	bool Z_352
	byte CZN_353
	bool N_354
	word32 r0_355
	word32 fp_356
	word32 ap_357
	byte VZN_358
	word32 r8_359
	word32 r3_360
	call Mem341[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_218,C_343,CZN_222,dwLoc0208_121,dwLoc020C_124,dwLoc0210_127,dwLoc0214_130,dwLoc0218_152,dwLoc021C_155,dwLoc0220_157,dwLoc0224_182,fp_219,N_221,r0_220,r2_223,r3_215,r6_224,r7_225,r8_216,sp_339,V_344,VZN_217,Z_228,ZN_342
		defs: ap_357,C_347,CZN_353,fp_356,N_354,r0_355,r2_351,r3_360,r6_350,r7_349,r8_359,sp_345,V_348,VZN_358,Z_352,ZN_346
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A13F:
	branch Mem10[r6_167 + 340:word32] == 0x00000000 l0000A161
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A145:
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A148:
	word32 r2_310 = Mem10[r6_167 + 340:word32]
	word32 sp_312 = sp_162 - 0x00000004
	Mem313[sp_312:word32] = r2_310
	byte ZN_318
	bool C_319
	bool V_320
	word32 r7_321
	word32 r2_323
	bool Z_324
	byte CZN_325
	bool N_326
	word32 r0_327
	word32 fp_328
	word32 ap_329
	byte VZN_330
	word32 r8_331
	word32 r3_332
	call Mem313[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_234,C_315,CZN_238,dwLoc0208_121,dwLoc020C_124,dwLoc0210_127,dwLoc0214_130,dwLoc0218_152,dwLoc021C_155,dwLoc0220_157,dwLoc0224_182,fp_235,N_237,r0_236,r2_310,r3_311,r6_308,r7_241,r8_232,sp_312,V_316,VZN_233,Z_244,ZN_314
		defs: ap_329,C_319,CZN_325,fp_328,N_326,r0_327,r2_323,r3_332,r6_322,r7_321,r8_331,sp_317,V_320,VZN_330,Z_324,ZN_318
	Mem334[r6_167 + 340:word32] = r3_332
	branch r3_332 != 0x00000000 l0000A148
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A161:
	word32 r3_258 = Mem10[r6_167 + 308:word32]
	branch r3_258 == 0x00000000 l0000A179
// DataOut: fp r3 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A168:
	branch r3_258 == r6_167 l0000A179
// DataOut: fp r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A170:
	word32 sp_284 = sp_162 - 0x00000004
	Mem285[sp_284:word32] = r3_258
	word32 sp_289
	byte ZN_290
	bool C_291
	bool V_292
	word32 r7_293
	word32 r6_294
	word32 r2_295
	bool Z_296
	byte CZN_297
	bool N_298
	word32 r0_299
	word32 fp_300
	word32 ap_301
	byte VZN_302
	word32 r8_303
	word32 r3_304
	call Mem285[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_249,C_287,CZN_281,dwLoc0208_121,dwLoc020C_124,dwLoc0210_127,dwLoc0214_130,dwLoc0218_152,dwLoc021C_155,dwLoc0220_157,dwLoc0224_182,fp_250,N_252,r0_251,r2_280,r3_258,r6_255,r7_256,r8_247,sp_284,V_288,VZN_248,Z_282,ZN_286
		defs: ap_301,C_291,CZN_297,fp_300,N_298,r0_299,r2_295,r3_304,r6_294,r7_293,r8_303,sp_289,V_292,VZN_302,Z_296,ZN_290
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:r6 r3:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A179:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A0CF:
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A0C7:
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A0BF:
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A0B7:
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A4F9:
	Mem45[r6 + 0x00010170:word32] = r6 + 361
	Mem47[r6 + 0x0001016C:word32] = 0x00000000
	Mem49[r6 + 0x00010179:word32] = r6 + 361
	Mem51[r6 + 0x0001017D:word32] = 0x00000000
	Mem53[r6 + 0x00010175:word32] = r6 + 0x00010181
	Mem55[r6 + 0x00010185:word32] = r6 + 0x00008169
	Mem57[r6 + 0x00010189:word32] = 0x00000000
	Mem59[r6 + 0x00010181:word32] = r6 + 0x00010175
	Mem61[r6 + 0x00010190:word32] = r6 + 0x00010175
	branch Mem61[r6 + 352:word32] == 0x00000000 l0000A598
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A598:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A54F:
	word32 r0_66 = (uint32) Mem61[r6 + 360:byte]
	branch r0_66 > 0x00000006 l0000A560
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A560:
	vax_addp4(0x0000, 0x11, 0x0028, 0x17)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid> r0:<invalid>

l0000A554_1:
	word32 sp_85
	byte ZN_86
	bool C_87
	bool V_88
	word32 r7_89
	word32 r6_90
	word32 r2_91
	bool Z_92
	byte CZN_93
	bool N_94
	word32 r0_95
	word32 fp_96
	word32 ap_97
	byte VZN_98
	word32 r8_99
	word32 r3_100
	call 0x0000A558 + (r0_66 - 0x00000002) * 0x00000002 (retsize: 4; depth: 520)
		uses: ap,C_68,CZN_43,dwLoc0208,dwLoc020C,dwLoc0210,dwLoc0214,dwLoc0218,dwLoc021C,dwLoc0220,dwLoc0224,fp,N,r0_66,r2_15,r3,r6,r7,r8,sp_2,V_69,VZN,Z_63,ZN_67
		defs: ap_97,C_87,CZN_93,fp_96,N_94,r0_95,r2_91,r3_100,r6_90,r7_89,r8_99,sp_85,V_88,VZN_98,Z_92,ZN_86
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid> r0:<invalid>

fn0000A07A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A0AA:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A17D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>



void fn0000A5B2(word32 r5, word32 r6, word32 r7, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r5 r6 r7 r8
// LiveOut:
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn0000A5B2_entry:
// DataOut: fp r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A5B2:
	branch Mem0[r7 + 12:word32] != 0x00000000 l0000A5D2
// DataOut: fp r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A5D2:
	word32 r3_13 = (uint32) (Mem0[r6 + 0x000102F4:byte] & ~0xF0)
	branch r3_13 == 0x00000002 l0000A61F
// DataOut: fp r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000A5E3:
	branch r3_13 == 0x00000005 l0000A61F
// DataOut: fp r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l0000A5E8:
	branch r3_13 == 0x00000006 l0000A61F
// DataOut: fp r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l0000A5ED:
	branch r3_13 == 0x00000004 l0000A61F
// DataOut: fp r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l0000A61F:
	Mem45[r6 + 0x00010170:word32] = r6 + 361
	Mem47[r6 + 0x0001016C:word32] = 0x00000000
	Mem49[r6 + 0x00010179:word32] = r6 + 361
	Mem51[r6 + 0x0001017D:word32] = 0x00000000
	Mem53[r6 + 0x00010175:word32] = r6 + 0x00010181
	Mem55[r6 + 0x00010185:word32] = r6 + 0x00008169
	Mem57[r6 + 0x00010189:word32] = 0x00000000
	Mem59[r6 + 0x00010181:word32] = r6 + 0x00010175
	Mem61[r6 + 0x00010190:word32] = r6 + 0x00010175
	branch r3_13 > 0x00000006 l0000A67E
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid>

l0000A67E:
	vax_subp4(0x0000, 0x11, 0x002A, Mem61[Mem61[r5 + 5968:word32]:ptr32])
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid>

l0000A672_1:
	word32 sp_81
	byte CVZN_82
	byte ZN_83
	bool C_84
	bool V_85
	word32 r7_86
	bool Z_87
	word32 r6_88
	word32 r2_89
	word32 r3_90
	byte CZN_91
	word32 r8_92
	word32 r0_93
	word32 fp_94
	word32 ap_95
	bool N_96
	word32 r5_97
	byte VZN_98
	call 0x0000A676 + (r3_13 - 0x00000002) * 0x00000002 (retsize: 4; depth: 8)
		uses: ap,C_64,CVZN,CZN_42,dwLoc08,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,fp,N,r0_62,r2_12,r3_13,r5,r6,r7,r8,sp_2,V_65,VZN,Z_43,ZN_63
		defs: ap_95,C_84,CVZN_82,CZN_91,fp_94,N_96,r0_93,r2_89,r3_90,r5_97,r6_88,r7_86,r8_92,sp_81,V_85,VZN_98,Z_87,ZN_83
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid>

l0000A5F2:
	word32 sp_125
	byte CVZN_126
	byte ZN_127
	bool C_128
	bool V_129
	word32 r7_130
	bool Z_131
	word32 r6_132
	word32 r2_133
	word32 r3_134
	byte CZN_135
	word32 r8_136
	word32 r0_137
	word32 fp_138
	word32 ap_139
	bool N_140
	word32 r5_141
	byte VZN_142
	call Mem0[0x000192D0:word32] + 2 (retsize: 4; depth: 24)
		uses: ap,C_122,CVZN,CZN_107,dwLoc08_111,dwLoc0C_114,dwLoc10_117,dwLoc14_120,dwLoc18,dwLoc1C,dwLoc20,fp,N,r0,r2_12,r3_13,r5,r6,r7,r8,sp_118,V_123,VZN,Z_108,ZN_121
		defs: ap_139,C_128,CVZN_126,CZN_135,fp_138,N_140,r0_137,r2_133,r3_134,r5_141,r6_132,r7_130,r8_136,sp_125,V_129,VZN_142,Z_131,ZN_127
	word32 r2_150 = Mem0[r7_130 + 0x0000C839:word32]
	word32 sp_154
	byte CVZN_155
	byte ZN_156
	bool C_157
	bool V_158
	word32 r7_159
	bool Z_160
	word32 r6_161
	word32 r2_162
	word32 r3_163
	byte CZN_164
	word32 r8_165
	word32 r0_166
	word32 fp_167
	word32 ap_168
	bool N_169
	word32 r5_170
	byte VZN_171
	call r2_150 + 2 (retsize: 4; depth: 36)
		uses: ap_139,C_152,CVZN_126,CZN_135,dwLoc08_111,dwLoc0C_114,dwLoc10_117,dwLoc14_120,dwLoc18_144,dwLoc1C_147,dwLoc20_149,fp_138,N_140,r0_137,r2_150,r3_134,r5_141,r6_132,r7_130,r8_136,sp_148,V_153,VZN_142,Z_131,ZN_151
		defs: ap_168,C_157,CVZN_155,CZN_164,fp_167,N_169,r0_166,r2_162,r3_163,r5_170,r6_161,r7_159,r8_165,sp_154,V_158,VZN_171,Z_160,ZN_156
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid>

fn0000A5B2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -32(fp):r7 -28(fp):r7 + 1515 -24(fp):r0 -20(fp):r7 + 1515 -16(fp):r8 + 556 -12(fp):r7 + 0x0000C701 -8(fp):0x00000001

l0000A5CF:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000A6C4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004



void fn0000A8D6(word32 r0, word32 r6, word32 r7, word32 r9, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r0 r6 r7 r9
// LiveOut:
// Trashed: CVZN r0 r10 r2 r3 r8 sp
// Preserved:
fn0000A8D6_entry:
// DataOut: fp r0 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A8D6:
	word32 sp_190 = fp + -112
	branch Mem0[r9 + 348:byte] == 0x00 l0000A906
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A906:
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 r10:<invalid> r8:<invalid>

l0000A910:
	word32 sp_99 = sp_190 - 0x00000004
	Mem100[sp_99:word32] = 0x00000001
	Mem103[sp_99 - 0x00000004:word32] = r7 + 0x0000C701
	Mem106[sp_99 - 0x00000008:word32] = r6 + 718
	Mem109[sp_99 - 0x0000000C:word32] = r7 + 1515
	word32 sp_114
	byte ZN_115
	bool C_116
	bool V_117
	word32 r10_118
	word32 r8_119
	word32 r9_120
	bool Z_121
	word32 r3_122
	word32 r0_123
	word32 r7_124
	word32 r6_125
	word32 r2_126
	word32 fp_127
	byte VZN_128
	byte CZN_129
	call Mem109[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: C_111,CZN,fp,r0,r10_4,r2,r3_91,r6_96,r7_97,r8_5,r9,sp_107,V_112,VZN,Z_8,ZN_110
		defs: C_116,CZN_129,fp_127,r0_123,r10_118,r2_126,r3_122,r6_125,r7_124,r8_119,r9_120,sp_114,V_117,VZN_128,Z_121,ZN_115
	Mem131[sp_114 - 0x00000004:word32] = r0_123
	Mem134[sp_114 - 0x00000008:word32] = r7_124 + 1515
	Mem136[sp_114 - 0x0000000C:word32] = r7_124
	word32 r2_137 = Mem136[r7_124 + 0x0000C839:word32]
	word32 sp_141
	byte ZN_142
	bool C_143
	bool V_144
	word32 r10_145
	word32 r8_146
	word32 r9_147
	bool Z_148
	word32 r3_149
	word32 r0_150
	word32 r7_151
	word32 r6_152
	word32 r2_153
	word32 fp_154
	byte VZN_155
	byte CZN_156
	call r2_137 + 2 (retsize: 4; depth: 4)
		uses: C_139,CZN_129,fp_127,r0_123,r10_118,r2_137,r3_122,r6_125,r7_124,r8_119,r9_120,sp_135,V_140,VZN_128,Z_121,ZN_138
		defs: C_143,CZN_156,fp_154,r0_150,r10_145,r2_153,r3_149,r6_152,r7_151,r8_146,r9_147,sp_141,V_144,VZN_155,Z_148,ZN_142
	Mem159[sp_141 - 0x00000004:word32] = Mem136[r8_146:word32]
	word32 sp_163
	byte ZN_164
	bool C_165
	bool V_166
	word32 r10_167
	word32 r8_168
	word32 r9_169
	bool Z_170
	word32 r3_171
	word32 r0_172
	word32 r7_173
	word32 r6_174
	word32 r2_175
	word32 fp_176
	byte VZN_177
	byte CZN_178
	call Mem159[0x00019294:word32] + 2 (retsize: 4; depth: 4)
		uses: C_161,CZN_156,fp_154,r0_150,r10_145,r2_153,r3_149,r6_152,r7_151,r8_146,r9_147,sp_157,V_162,VZN_155,Z_148,ZN_160
		defs: C_165,CZN_178,fp_176,r0_172,r10_167,r2_175,r3_171,r6_174,r7_173,r8_168,r9_169,sp_163,V_166,VZN_177,Z_170,ZN_164
	Mem181[sp_163 - 0x00000004:word32] = Mem159[r8_168:word32]
	Mem183[sp_163 - 0x00000008:word32] = 0x00000009
	Mem186[sp_163 - 0x0000000C:word32] = fp_176 + -14
	byte ZN_191
	bool C_192
	bool V_193
	word32 r8_195
	word32 r9_196
	bool Z_197
	word32 r3_198
	word32 r0_199
	word32 r7_200
	word32 r6_201
	word32 r2_202
	byte VZN_204
	byte CZN_205
	word32 r10_194
	call Mem186[0x00019290:word32] + 2 (retsize: 4; depth: 4)
		uses: C_188,CZN_178,fp_176,r0_172,r10_167,r2_175,r3_171,r6_174,r7_173,r8_168,r9_169,sp_184,V_189,VZN_177,Z_170,ZN_187
		defs: C_192,CZN_205,fp_203,r0_199,r10_194,r2_202,r3_198,r6_201,r7_200,r8_195,r9_196,sp_190,V_193,VZN_204,Z_197,ZN_191
	branch r0_199 != 0x00000000 l0000A998
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A954:
	branch (Mem186[r10_194 + (int32) (Mem186[fp + -14:byte] & ~0x80):byte] & ~0xFC) != 0x00 l0000A998
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A965:
	Mem268[sp_190 - 0x00000004:int32] = (int32) Mem186[fp + -14:int8]
	byte ZN_272
	bool C_273
	bool V_274
	word32 r8_276
	word32 r9_277
	bool Z_278
	word32 r3_279
	word32 r0_280
	word32 r7_281
	word32 r6_282
	word32 r2_283
	byte VZN_285
	byte CZN_286
	call r3_198 + 2 (retsize: 4; depth: 4)
		uses: C_270,CZN_205,fp_203,r0_199,r10_194,r2_261,r3_198,r6_201,r7_200,r8_195,r9_196,sp_266,V_265,VZN_269,Z_263,ZN_262
		defs: C_273,CZN_286,fp_284,r0_280,r10_275,r2_283,r3_279,r6_282,r7_281,r8_276,r9_277,sp_271,V_274,VZN_285,Z_278,ZN_272
	branch r0_280 == 0x0000006F l0000A998
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A975:
	Mem292[sp_190 - 0x00000004:int32] = (int32) Mem268[fp + -14:int8]
	byte ZN_296
	bool C_297
	bool V_298
	word32 r8_300
	word32 r9_301
	bool Z_302
	word32 r3_303
	word32 r0_304
	word32 r7_305
	word32 r6_306
	word32 r2_307
	byte VZN_309
	byte CZN_310
	call r3_279 + 2 (retsize: 4; depth: 4)
		uses: C_294,CZN_287,fp_284,r0_280,r10_275,r2_283,r3_279,r6_282,r7_281,r8_276,r9_277,sp_290,V_289,VZN_293,Z_288,ZN_272
		defs: C_297,CZN_310,fp_308,r0_304,r10_299,r2_307,r3_303,r6_306,r7_305,r8_300,r9_301,sp_295,V_298,VZN_309,Z_302,ZN_296
	branch r0_304 == 0x00000076 l0000A998
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A985:
	Mem316[sp_190 - 0x00000004:int32] = (int32) Mem292[fp + -14:int8]
	byte ZN_320
	bool C_321
	bool V_322
	word32 r8_324
	word32 r9_325
	bool Z_326
	word32 r3_327
	word32 r0_328
	word32 r2_331
	byte VZN_333
	byte CZN_334
	call r3_303 + 2 (retsize: 4; depth: 4)
		uses: C_318,CZN_311,fp_308,r0_304,r10_299,r2_307,r3_303,r6_306,r7_305,r8_300,r9_301,sp_314,V_313,VZN_317,Z_312,ZN_296
		defs: C_321,CZN_334,fp_332,r0_328,r10_323,r2_331,r3_327,r6_330,r7_329,r8_324,r9_325,sp_319,V_322,VZN_333,Z_326,ZN_320
	branch r0_328 == 0x0000006E l0000A998
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A998:
	word32 r2_226 = (int32) (Mem186[fp + -14:byte] & ~0x80)
	branch (Mem186[r10_194 + r2_226 * 4:word32] & 0x00000001) == 0x00000000 l0000A9C2
// DataOut: fp r0 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A9A6:
	word32 sp_229 = sp_190 - 0x00000004
	Mem231[sp_229:int32] = (int32) Mem186[fp + -14:int8]
	word32 sp_234
	byte ZN_235
	bool C_236
	bool V_237
	word32 r10_238
	word32 r8_239
	word32 r9_240
	bool Z_241
	word32 r3_242
	word32 r0_243
	word32 r7_244
	word32 r6_245
	word32 r2_246
	byte VZN_248
	byte CZN_249
	call Mem231[0x00019298:word32] + 2 (retsize: 4; depth: 4)
		uses: C_233,CZN_210,fp_211,r0_215,r10_220,r2_226,r3_216,r6_213,r7_214,r8_219,r9_218,sp_229,V_221,VZN_232,Z_217,ZN_222
		defs: C_236,CZN_249,fp_247,r0_243,r10_238,r2_246,r3_242,r6_245,r7_244,r8_239,r9_240,sp_234,V_237,VZN_248,Z_241,ZN_235
	Mem251[fp + -14:int8] = (int8) r0_243
	Mem253[r9_240 + 348:byte] = (byte) r0_243
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A995:
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A903:
// DataOut: fp r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 r10:<invalid> r8:<invalid>

l0000A9BC:
	Mem81[fp + -14:byte] = Mem0[r9 + 348:byte]
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 r10:<invalid> r8:<invalid>

l0000A9C2:
	word32 r0_24 = (int32) Mem0[fp + -14:int8]
	branch r0_24 > 0x00000076 l0000A9DE
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A9DE:
	byte VZN_62 = vax_subp4(0x0000, 0x31, Mem0[r0_24:word16], 0x00)
	word32 sp_64
	byte ZN_65
	bool C_66
	bool V_67
	word32 r10_68
	word32 r8_69
	word32 r9_70
	bool Z_71
	word32 r3_72
	word32 r0_73
	word32 r7_74
	word32 r6_75
	word32 r2_76
	word32 fp_77
	byte VZN_78
	byte CZN_79
	call fn40009A48 (retsize: 4; depth: 4)
		uses: C_63,CZN_11,fp_12,r0_61,r10_20,r2_13,r3_16,r6_14,r7_15,r8_19,r9_18,sp_23,V_21,VZN_62,Z_17,ZN_22
		defs: C_66,CZN_79,fp_77,r0_73,r10_68,r2_76,r3_72,r6_75,r7_74,r8_69,r9_70,sp_64,V_67,VZN_78,Z_71,ZN_65
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A9C6_1:
	word32 sp_44
	byte ZN_45
	bool C_46
	bool V_47
	word32 r10_48
	word32 r8_49
	word32 r9_50
	bool Z_51
	word32 r3_52
	word32 r0_53
	word32 r7_54
	word32 r6_55
	word32 r2_56
	word32 fp_57
	byte VZN_58
	byte CZN_59
	call 0x0000A9CE + (r0_24 - 0x0000006E) * 0x00000002 (retsize: 4; depth: 4)
		uses: C_26,CZN_11,fp_12,r0_24,r10_20,r2_13,r3_16,r6_14,r7_15,r8_19,r9_18,sp_23,V_21,VZN_25,Z_17,ZN_22
		defs: C_46,CZN_59,fp_57,r0_53,r10_48,r2_56,r3_52,r6_55,r7_54,r8_49,r9_50,sp_44,V_47,VZN_58,Z_51,ZN_45
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

fn0000A8D6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001



word32 fn0000AA6A(word32 r0, word32 r8, word32 r10, word32 r11, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r10 r11 r8
// LiveOut: ap fp r0 r3 r6 r7
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r9 sp
// Preserved:
fn0000AA6A_entry:
	*r7Out = r7
	*r6Out = r6
	*r3Out = r3
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000AA6A:
	word32 v8_5 = Mem0[r10 + 0x0000C627:word32]
	Mem10[r8 + 308:word32] = 0x00000000
	Mem13[r8 + 316:word64] = 0x0000000000000000
	Mem15[r8 + 324:word64] = 0x0000000000000000
	Mem17[r8 + 340:word64] = 0x0000000000000000
	word32 sp_193 = fp - 0x00000018
	branch v8_5 != 0x00000000 l0000AAA5
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000AAA5:
	branch (uint32) Mem17[r10 + 0x0000C656:word16] > 0x00000000 l0000AAB2
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 -20(fp):0x00000000 -16(fp):<invalid>

l0000AAB2:
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid>

l0000AABC:
	Mem197[sp_193 + 16:word32] = Mem17[sp_193 + 8:word32]
	branch Mem197[Mem197[sp_193 + 16:word32]:word16] == Mem197[r11 + 831:word16] l0000AACC
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AACC:
	Mem400[sp_193 + 4:word32] = 0x00000001
	word32 r3_401 = Mem400[sp_193 + 16:word32]
	*r3Out = r3_401
	word32 r4_403 = Mem400[r3_401 + 4:word32]
	branch r4_403 != Mem400[r11 + 834:word32] l0000AB00
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB00:
	branch r4_403 != Mem400[r11 + 839:word32] l0000AB4C
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB4C:
	branch r4_403 != Mem400[r11 + 844:word32] l0000AB98
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB98:
	branch r4_403 != Mem400[r11 + 849:word32] l0000ABC0
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ABC0:
	branch r4_403 != Mem400[r11 + 854:word32] l0000ABE8
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ABE8:
	branch r4_403 != Mem400[r11 + 859:word32] l0000AC10
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC10:
	branch r4_403 != Mem400[r11 + 864:word32] l0000AC38
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC38:
	branch r4_403 != Mem400[r11 + 869:word32] l0000AC42
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC42:
	word32 sp_648 = sp_193 - 0x00000004
	Mem649[sp_648:word32] = 0x00000001
	Mem651[sp_648 - 0x00000004:word32] = r3_401 + 4
	Mem654[sp_648 - 0x00000008:word32] = r11 + 874
	Mem657[sp_648 - 0x0000000C:word32] = r10 + 1515
	word32 sp_661
	byte CVZN_662
	byte ZN_663
	bool C_664
	bool V_665
	word32 r10_666
	bool Z_667
	bool N_668
	word32 r8_669
	word32 r0_670
	word32 fp_671
	word32 ap_672
	word32 r11_673
	byte CZN_674
	word32 r2_675
	word32 r3_676
	word32 r6_677
	byte VZN_678
	word32 r9_679
	word32 r7_680
	word32 r5_681
	word32 r4_682
	call fn00000003 (retsize: 4; depth: 4)
		uses: ap_195,C_659,CVZN_186,CZN_645,dwLoc0C_74,dwLoc10_6,dwLoc14_8,dwLoc18_173,fp_194,N_191,r0_190,r10_185,r11_183,r2_188,r3_401,r4_403,r5_402,r6_182,r7_179,r8_184,r9_180,sp_655,V_660,VZN_181,Z_646,ZN_658
		defs: ap_672,C_664,CVZN_662,CZN_674,fp_671,N_668,r0_670,r10_666,r11_673,r2_675,r3_676,r4_682,r5_681,r6_677,r7_680,r8_669,r9_679,sp_661,V_665,VZN_678,Z_667,ZN_663
	Mem684[sp_661 - 0x00000004:word32] = r0_670
	Mem687[sp_661 - 0x00000008:word32] = r10_666 + 1515
	Mem689[sp_661 - 0x0000000C:word32] = r10_666
	word32 r2_690 = Mem689[r10_666 + 0x0000C839:word32]
	byte CVZN_695
	byte ZN_696
	bool C_697
	bool V_698
	bool Z_700
	bool N_701
	byte CZN_707
	word32 r2_708
	word32 r3_709
	word32 r6_710
	byte VZN_711
	word32 r9_712
	word32 r7_713
	word32 r5_714
	word32 r4_715
	call r2_690 + 2 (retsize: 4; depth: 4)
		uses: ap_672,C_692,CVZN_662,CZN_674,dwLoc0C_74,dwLoc10_6,dwLoc14_8,dwLoc18_173,fp_671,N_668,r0_670,r10_666,r11_673,r2_690,r3_676,r4_682,r5_681,r6_677,r7_680,r8_669,r9_679,sp_688,V_693,VZN_678,Z_667,ZN_691
		defs: ap_705,C_697,CVZN_695,CZN_707,fp_704,N_701,r0_703,r10_699,r11_706,r2_708,r3_709,r4_715,r5_714,r6_710,r7_713,r8_702,r9_712,sp_694,V_698,VZN_711,Z_700,ZN_696
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC3F:
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC17:
	word32 sp_621 = sp_193 - 0x00000004
	Mem623[sp_621:uint32] = (uint32) Mem400[Mem400[0x0001936C:word32]:byte]
	Mem626[sp_621 - 0x00000004:word32] = Mem623[0x000192F4:word32]
	Mem628[sp_621 - 0x00000008:word32] = 0x00000000
	Mem630[sp_621 - 0x0000000C:word32] = r3_401
	word32 r3_634
	word32 r6_635
	r0 = fn0000AEF2(ap, fp, out r3_634, out r6_635, out ap, out fp, out sp_193)
	Mem641[r8 + 328:word32] = r0
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ABEF:
	word32 sp_594 = sp_193 - 0x00000004
	Mem596[sp_594:uint32] = (uint32) Mem400[Mem400[0x00019368:word32]:byte]
	Mem599[sp_594 - 0x00000004:word32] = Mem596[0x000192F0:word32]
	Mem601[sp_594 - 0x00000008:word32] = 0x00000000
	Mem603[sp_594 - 0x0000000C:word32] = r3_401
	word32 r3_607
	word32 r6_608
	r0 = fn0000AEF2(ap, fp, out r3_607, out r6_608, out ap, out fp, out sp_193)
	Mem614[r8 + 324:word32] = r0
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ABC7:
	word32 sp_567 = sp_193 - 0x00000004
	Mem569[sp_567:uint32] = (uint32) Mem400[Mem400[0x00019364:word32]:byte]
	Mem572[sp_567 - 0x00000004:word32] = Mem569[0x00019300:word32]
	Mem574[sp_567 - 0x00000008:word32] = 0x00000000
	Mem576[sp_567 - 0x0000000C:word32] = r3_401
	word32 r3_580
	word32 r6_581
	r0 = fn0000AEF2(ap, fp, out r3_580, out r6_581, out ap, out fp, out sp_193)
	Mem587[r8 + 320:word32] = r0
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB9F:
	word32 sp_540 = sp_193 - 0x00000004
	Mem542[sp_540:uint32] = (uint32) Mem400[Mem400[0x00019360:word32]:byte]
	Mem545[sp_540 - 0x00000004:word32] = Mem542[0x000192FC:word32]
	Mem547[sp_540 - 0x00000008:word32] = 0x00000000
	Mem549[sp_540 - 0x0000000C:word32] = r3_401
	word32 r3_553
	word32 r6_554
	r0 = fn0000AEF2(ap, fp, out r3_553, out r6_554, out ap, out fp, out sp_193)
	Mem560[r8 + 316:word32] = r0
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB53:
	word32 sp_487 = sp_193 - 0x00000004
	Mem489[sp_487:uint32] = (uint32) Mem400[Mem400[0x0001935C:word32]:byte]
	Mem492[sp_487 - 0x00000004:word32] = Mem489[0x000192F8:word32]
	Mem494[sp_487 - 0x00000008:word32] = 0x00000000
	Mem496[sp_487 - 0x0000000C:word32] = r3_401
	word32 r3_500
	word32 r6_501
	r0 = fn0000AEF2(ap, fp, out r3_500, out r6_501, out ap, out fp, out sp_193)
	Mem507[r8 + 332:word32] = r0
	branch Mem507[r8 + 340:word32] != 0x00000000 l0000AB7B
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB74:
	Mem533[r8 + 340:word32] = Mem507[r8 + 332:word32]
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB7B:
	word32 r2_512 = Mem507[r8 + 344:word32]
	branch r2_512 == 0x00000000 l0000AB88
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB82:
	Mem528[r2_512 + 4:word32] = Mem507[r8 + 332:word32]
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB88:
	word32 r2_518 = Mem507[r8 + 332:word32]
	Mem520[r8 + 344:word32] = r2_518
	Mem522[r2_518 + 4:word32] = 0x00000000
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB07:
	word32 sp_434 = sp_193 - 0x00000004
	Mem436[sp_434:uint32] = (uint32) Mem400[Mem400[0x00019358:word32]:byte]
	Mem439[sp_434 - 0x00000004:word32] = Mem436[0x00019304:word32]
	Mem441[sp_434 - 0x00000008:word32] = 0x00000000
	Mem443[sp_434 - 0x0000000C:word32] = r3_401
	word32 r3_447
	word32 r6_448
	r0 = fn0000AEF2(ap, fp, out r3_447, out r6_448, out ap, out fp, out sp_193)
	Mem454[r8 + 336:word32] = r0
	branch Mem454[r8 + 340:word32] != 0x00000000 l0000AB2F
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB28:
	Mem480[r8 + 340:word32] = Mem454[r8 + 336:word32]
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB2F:
	word32 r2_459 = Mem454[r8 + 344:word32]
	branch r2_459 == 0x00000000 l0000AB3C
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB36:
	Mem475[r2_459 + 4:word32] = Mem454[r8 + 336:word32]
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB3C:
	word32 r2_465 = Mem454[r8 + 336:word32]
	Mem467[r8 + 344:word32] = r2_465
	Mem469[r2_465 + 4:word32] = 0x00000000
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AAE2:
	word32 sp_407 = sp_193 - 0x00000004
	Mem409[sp_407:uint32] = (uint32) Mem400[Mem400[0x00019354:word32]:byte]
	Mem412[sp_407 - 0x00000004:word32] = Mem409[0x0001930C:word32]
	Mem414[sp_407 - 0x00000008:word32] = 0x00000000
	Mem416[sp_407 - 0x0000000C:word32] = r3_401
	word32 r3_420
	word32 r6_421
	r0 = fn0000AEF2(ap, fp, out r3_420, out r6_421, out ap, out fp, out sp_193)
	Mem427[r8 + 308:word32] = r0
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AAC9:
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC68:
	branch (uint32) Mem197[Mem197[sp_193 + 16:word32]:word16] == 0x0000000C l0000AC74
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC74:
	Mem234[sp_193 + 4:word32] = 0x00000002
	word32 r3_235 = Mem234[sp_193 + 16:word32]
	word32 r2_236 = (uint32) Mem234[r3_235 + 2:word16]
	Mem240[r8 + 0x000102EC:word32] = 0x00000000
	word32 sp_241 = sp_193 - 0x00000004
	Mem242[sp_241:word32] = r2_236 - 0x00000004
	Mem244[sp_241 - 0x00000004:word32] = r3_235 + 8
	Mem246[sp_241 - 0x00000008:word32] = 0x00000000
	word32 r6_238 = r3_235 + 8
	*r6Out = r6_238
	word32 r2_250
	word32 r3_251
	r0 = fn0000CFBA(r0, r3_235 + 8, r2_236 - 0x00000004, fp, out r2_250, out r3_251, out ap, out fp, out sp_193)
	branch Mem246[r3_251 + 4:word32] == r0 l0000ACC6
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ACA1:
	Mem327[sp_193 - 0x00000004:word32] = 0x00000001
	Mem330[sp_193 - 0x00000008:word32] = r11 + 915
	Mem333[sp_193 - 0x0000000C:word32] = r10 + 1515
	word32 sp_337
	byte CVZN_338
	byte ZN_339
	bool C_340
	bool V_341
	word32 r10_342
	bool Z_343
	bool N_344
	word32 r8_345
	word32 r0_346
	word32 fp_347
	word32 ap_348
	word32 r11_349
	byte CZN_350
	word32 r2_351
	word32 r3_352
	word32 r6_353
	byte VZN_354
	word32 r9_355
	word32 r7_356
	word32 r5_357
	word32 r4_358
	call fn00000003 (retsize: 4; depth: 4)
		uses: ap_252,C_335,CVZN_186,CZN_256,dwLoc0C_74,dwLoc10_6,dwLoc14_8,dwLoc18_173,fp_253,N_191,r0_255,r10_185,r11_183,r2_250,r3_251,r4_177,r5_178,r6_238,r7_179,r8_184,r9_180,sp_331,V_336,VZN_181,Z_257,ZN_334
		defs: ap_348,C_340,CVZN_338,CZN_350,fp_347,N_344,r0_346,r10_342,r11_349,r2_351,r3_352,r4_358,r5_357,r6_353,r7_356,r8_345,r9_355,sp_337,V_341,VZN_354,Z_343,ZN_339
	Mem360[sp_337 - 0x00000004:word32] = r0_346
	Mem363[sp_337 - 0x00000008:word32] = r10_342 + 1515
	Mem365[sp_337 - 0x0000000C:word32] = r10_342
	word32 r2_366 = Mem365[r10_342 + 0x0000C839:word32]
	byte CVZN_371
	byte ZN_372
	bool C_373
	bool V_374
	bool Z_376
	bool N_377
	word32 ap_381
	byte CZN_383
	word32 r2_384
	word32 r3_385
	byte VZN_387
	word32 r9_388
	word32 r7_389
	word32 r5_390
	word32 r4_391
	call r2_366 + 2 (retsize: 4; depth: 4)
		uses: ap_348,C_368,CVZN_338,CZN_350,dwLoc0C_74,dwLoc10_6,dwLoc14_8,dwLoc18_173,fp_347,N_344,r0_346,r10_342,r11_349,r2_366,r3_352,r4_358,r5_357,r6_353,r7_356,r8_345,r9_355,sp_364,V_369,VZN_354,Z_343,ZN_367
		defs: ap_381,C_373,CVZN_371,CZN_383,fp_380,N_377,r0_379,r10_375,r11_382,r2_384,r3_385,r4_391,r5_390,r6_386,r7_389,r8_378,r9_388,sp_370,V_374,VZN_387,Z_376,ZN_372
	Mem394[sp_193 + 4:word32] = 0x00000000
	ap = 0x00000000
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ACC6:
	branch ap > 0x00000004 l0000ACCE
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ACCE:
	word32 r0_299 = (uint32) Mem246[r6_238:word16]
	branch r0_299 > 0x0000001F l0000AD14
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AD14:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ACD8_1:
	word32 sp_304
	byte CVZN_305
	byte ZN_306
	bool C_307
	bool V_308
	word32 r10_309
	bool Z_310
	bool N_311
	word32 r8_312
	word32 r0_313
	word32 fp_314
	word32 ap_315
	word32 r11_316
	byte CZN_317
	word32 r2_318
	word32 r3_319
	word32 r6_320
	byte VZN_321
	word32 r9_322
	word32 r7_323
	word32 r5_324
	word32 r4_325
	call 0x0000ACDC + (r0_299 - 0x00000003) * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_277,C_301,CVZN_268,CZN_278,dwLoc0C_74,dwLoc10_6,dwLoc14_8,dwLoc18_173,fp_276,N_273,r0_299,r10_267,r11_265,r2_270,r3_269,r4_259,r5_260,r6_264,r7_298,r8_266,r9_297,sp_275,V_302,VZN_263,Z_272,ZN_300
		defs: ap_315,C_307,CVZN_305,CZN_317,fp_314,N_311,r0_313,r10_309,r11_316,r2_318,r3_319,r4_325,r5_324,r6_320,r7_323,r8_312,r9_322,sp_304,V_308,VZN_321,Z_310,ZN_306
	return r0_313
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ACCB:
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ADA1:
	Mem284[r8 + 0x0001024C + (Mem246[r8 + 0x000102EC:word32] << 3):word16] = 0x0000
	Mem288[r8 + 0x0001024E + (Mem284[r8 + 0x000102EC:word32] << 3):word16] = 0x0000
	Mem292[r8 + 0x00010250 + (Mem288[r8 + 0x000102EC:word32] << 3):word32] = 0x00000000
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC71:
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ADD7:
	word32 r2_220 = (uint32) Mem197[Mem197[sp_193 + 16:word32] + 2:word16]
	Mem223[sp_193 + 12:word32] = Mem197[sp_193 + 12:word32] - (r2_220 + 0x00000004)
	Mem225[sp_193 + 8:word32] = Mem223[sp_193 + 8:word32] + (r2_220 + 0x00000004)
	branch Mem225[sp_193 + 12:word32] <= 0x00000000 l0000ADF2
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ADEF:
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AAAF:
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid>

l0000ADF2:
	branch Mem17[sp_193 + 4:word32] != 0x00000001 l0000AE5F
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ADF8:
	word32 r2_112 = Mem17[r8 + 308:word32]
	branch r2_112 == 0x00000000 l0000AE5C
// DataOut: fp r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE5C:
	Mem164[sp_193 + 4:word32] = 0x00000000
// DataOut: fp r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ADFF:
	Mem118[r2_112 + 36:word32] = 0x00000000
	word32 r3_119 = Mem118[r8 + 316:word32]
	branch r3_119 == 0x00000000 l0000AE1E
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE09:
	Mem156[r3_119 + 4:word32] = Mem118[Mem118[r8 + 308:word32] + 36:word32]
	Mem159[Mem156[r8 + 308:word32] + 36:word32] = Mem156[r8 + 316:word32]
// DataOut: fp r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE1E:
	word32 r3_125 = Mem118[r8 + 320:word32]
	*r3Out = r3_125
	branch r3_125 == 0x00000000 l0000AE3A
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE25:
	Mem147[r3_125 + 4:word32] = Mem118[Mem118[r8 + 308:word32] + 36:word32]
	Mem150[Mem147[r8 + 308:word32] + 36:word32] = Mem147[r8 + 320:word32]
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE3A:
	branch Mem118[r8 + 340:word32] == 0x00000000 l0000AE5F
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE40:
	word32 r3_135 = Mem118[r8 + 344:word32]
	*r3Out = r3_135
	Mem138[r3_135 + 4:word32] = Mem118[Mem118[r8 + 308:word32] + 36:word32]
	Mem141[Mem138[r8 + 308:word32] + 36:word32] = Mem138[r8 + 340:word32]
// DataOut: fp r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE5F:
	word32 sp_109 = fp - 0x00000004
	word32 fp_110
	*fpOut = Mem17[sp_109 + 0x00000010:word32]
	word32 ap_111
	*apOut = Mem17[sp_109 + 0x0000000C:word32]
	return Mem17[sp_193 + 4:word32]
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AAA2:
	word32 fp_58
	*fpOut = Mem17[fp + 0x0000000C:word32]
	word32 ap_59
	*apOut = Mem17[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 -20(fp):0x00000000 -16(fp):<invalid>

fn0000AA6A_exit:
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn0000AEF2(word32 ap, word32 fp, ptr32 & r3Out, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 r3 r6 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn0000AEF2_entry:
// DataOut: ap fp r10 r11 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000AEF2:
	word32 r2_14
	word32 r1_5 = Mem0[ap + 4:word32]
	word32 r6_7 = (uint32) Mem0[r1_5 + 8:word16] & ~0xFFFFFFF8
	word32 r5_8 = (uint32) Mem0[r1_5 + 2:word16]
	branch r6_7 != 0x00000000 l0000AF18
// DataOut: ap fp r1 r10 r11 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000AF18:
	r2_14 = (uint32) Mem0[r1_5 + 10:word16]
// DataOut: ap fp r10 r11 r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid>
// LocalsOut: fp(32)

l0000AF10:
	r2_14 = r5_8 - 0x0000000C
// DataOut: ap fp r10 r11 r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid>
// LocalsOut: fp(32)

l0000AF1C:
	branch Mem0[ap + 16:word32] != 0x00000000 l0000AF28
// DataOut: ap fp r10 r11 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l0000AF24:
	Mem181[ap + 16:word32] = r2_14
// DataOut: ap fp r10 r11 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF28:
	word32 r0_20 = Mem0[ap + 8:word32]
	branch r0_20 == 0x00000000 l0000AF31
// DataOut: ap fp r0 r10 r11 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF2E:
	Mem176[r0_20:word32] = r2_14
// DataOut: ap fp r10 r11 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF31:
	word32 r0_26 = Mem0[ap + 16:word32]
	branch r0_26 <= r2_14 l0000AF40
// DataOut: ap fp r0 r10 r11 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF40:
// DataOut: ap fp r0 r10 r11 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF3A:
// DataOut: ap fp r0 r10 r11 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF43:
	word32 sp_36
	byte CVZN_37
	word32 ap_38
	word32 r1_39
	byte ZN_40
	bool C_41
	bool V_42
	word32 r0_43
	word32 r5_45
	bool Z_46
	word32 r2_47
	word32 r4_48
	byte CZN_49
	word32 r3_50
	bool N_51
	word32 fp_52
	word32 r6_106
	call Mem0[0x000192B4:word32] + 2 (retsize: 4; depth: 12)
		uses: ap,C_34,CZN_27,dwLoc08_32,r0_26,r1_5,r2_30,r4_15,r5_9,r6_7,sp_31,V_35,Z_22,ZN_33
		defs: ap_38,C_41,CVZN_37,CZN_49,fp_52,N_51,r0_43,r1_39,r2_47,r3_50,r4_48,r5_45,r6_44,sp_36,V_42,Z_46,ZN_40
	word32 r3_53 = r0_43
	*r3Out = r3_53
	branch r0_43 != 0x00000000 l0000AF54
// DataOut: ap fp r10 r11 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF54:
	branch Mem0[ap_38 + 12:word32] == 0x00000000 l0000AF6E
// DataOut: ap fp r10 r11 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000AF59:
	branch r4_48 >= Mem0[ap_38 + 16:word32] l0000AF6E
// DataOut: ap fp r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000AF5F:
	word32 sp_150
	byte CVZN_151
	word32 ap_152
	word32 r1_153
	byte ZN_154
	bool C_155
	bool V_156
	word32 r0_157
	word32 r5_159
	bool Z_160
	word32 r2_161
	word32 r4_162
	byte CZN_163
	word32 r3_164
	bool N_165
	word32 fp_166
	call Mem0[0x0001929C:word32] + 2 (retsize: 4; depth: 24)
		uses: ap_38,C_148,CVZN_37,CZN_136,dwLoc08_32,dwLoc0C_141,dwLoc10_144,dwLoc14_146,fp_52,N_137,r0_43,r1_39,r2_47,r3_53,r4_48,r5_45,r6_44,sp_145,V_149,Z_95,ZN_147
		defs: ap_152,C_155,CVZN_151,CZN_163,fp_166,N_165,r0_157,r1_153,r2_161,r3_164,r4_162,r5_159,r6_158,sp_150,V_156,Z_160,ZN_154
// DataOut: ap fp r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> -8(fp):<invalid>

l0000AF6E:
	branch r6_106 > 0x00000002 l0000AF79
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AF79:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AF71_1:
	word32 sp_119
	byte CVZN_120
	word32 ap_121
	word32 r1_122
	byte ZN_123
	bool C_124
	bool V_125
	word32 r0_126
	word32 r6_127
	word32 r5_128
	bool Z_129
	word32 r2_130
	word32 r4_131
	byte CZN_132
	word32 r3_133
	bool N_134
	word32 fp_135
	call 0x0000AF75 + r6_106 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_113,C_116,CVZN_108,CZN_102,dwLoc08_32,dwLoc0C_98,dwLoc10_99,dwLoc14_100,fp_112,N_110,r0_114,r1_107,r2_104,r3_101,r4_103,r5_105,r6_106,sp_111,V_117,Z_109,ZN_115
		defs: ap_121,C_124,CVZN_120,CZN_132,fp_135,N_134,r0_126,r1_122,r2_130,r3_133,r4_131,r5_128,r6_127,sp_119,V_125,Z_129,ZN_123
	return r0_126
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AF51:
	word32 sp_88
	*spOut = fp_52 - 0x00000004
	word32 fp_89
	*fpOut = Mem0[fp_52 + 0x0000000C:word32]
	word32 ap_90
	*apOut = Mem0[fp_52 + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> -8(fp):<invalid>

fn0000AEF2_exit:
// DataOut: ap fp r0 r3 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



void fn0000AFDA(word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 sp
// Preserved:
fn0000AFDA_entry:
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000AFDA:
	word32 r0_8 = Mem0[ap + 8:word32]
	Mem10[ap + 8:word32] = Mem0[ap + 8:word32] - 0x00000001
	word32 r2_115 = 0x00000000
	word32 r3_117 = 0x00000000
	branch r0_8 != 0x00000000 l0000AFED
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000AFED:
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid>

l0000AFF0:
	branch r2_115 > 0x00000000 l0000B011
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>

l0000AFF4:
	word32 r1_121 = r2_115 + 0x00000008
	branch r1_121 > 0x00000020 l0000B011
// DataOut: ap fp r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>

l0000AFFD:
	word32 r0_125 = Mem10[ap + 12:word32]
	Mem127[ap + 12:word32] = Mem10[ap + 12:word32] + 0x00000001
	r3_117 = r3_117 | __ashift((uint32) Mem127[r0_125:byte], r2_115)
	r2_115 = r1_121
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>

l0000B011:
	branch (r3_117 & 0x00000001) == 0x00000000 l0000B054
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B054:
	word32 r0_110 = Mem10[ap + 4:word32]
	Mem112[ap + 4:word32] = Mem10[ap + 4:word32] + 0x00000001
	Mem114[r0_110:byte] = 0x00
	r2_115 = r2_115 - 0x00000001
	r3_117 = (uint32) SLICE(r3_117, ui31, 1)
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B014:
	word32 r3_104 = (uint32) SLICE(r3_117, ui31, 1)
	word32 r2_105 = r2_115 - 0x00000001
	branch r2_105 >= 0x00000008 l0000B03D
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B020:
	branch r2_105 > 0xFFFFFFE8 l0000B03D
// DataOut: ap fp r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B029:
	word32 r0_99 = Mem10[ap + 12:word32]
	Mem101[ap + 12:word32] = Mem10[ap + 12:word32] + 0x00000001
	r3_104 = r3_104 | __ashift((uint32) Mem101[r0_99:byte], r2_105)
	r2_105 = r2_105 + 0x00000008
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B03D:
	word32 r0_84 = Mem10[ap + 4:word32]
	Mem86[ap + 4:word32] = Mem10[ap + 4:word32] + 0x00000001
	Mem88[r0_84:byte] = (byte) r3_104
	r2_115 = r2_105 - 0x00000008
	r3_117 = (uint32) SLICE(r3_104, ui24, 8)
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B064:
	word32 r0_66 = Mem10[ap + 8:word32]
	Mem68[ap + 8:word32] = Mem10[ap + 8:word32] - 0x00000001
	branch r0_66 != 0x00000000 l0000AFF0
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>

l0000AFEA:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid>

l0000B06F:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>

fn0000AFDA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>



word32 fn0000B072(word32 r0, word32 r2, word32 r6, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r6
// LiveOut: fp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn0000B072_entry:
// DataOut: ap fp r0 r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B072:
	word32 r2_21
	word32 r3_22
	word32 ap_23
	word32 fp_24
	word32 sp_25
	word32 r0_26 = fn0000CFBA(r0, r6, ap, fp, out r2_21, out r3_22, out ap_23, out fp_24, out sp_25)
	Mem28[r2_21 + 0x0000C5EF:word32] = r0_26
	branch Mem28[r2_21 + 68:word32] == 0x00000000 l0000B0A5
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000B0A5:
	Mem56[sp_25 - 0x00000004:word32] = 0x00000000
	Mem59[sp_25 - 0x00000008:word32] = Mem56[ap_23 + 8:word32]
	Mem62[sp_25 - 0x0000000C:word32] = Mem59[ap_23 + 0x00000004:word32]
	word32 sp_67
	byte CVZN_68
	byte ZN_69
	bool C_70
	bool V_71
	word32 ap_72
	word32 r2_73
	word32 r0_74
	bool Z_75
	bool N_76
	word32 fp_77
	word32 r3_78
	word32 r6_79
	call Mem62[r3_22 + 0x00010194:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_23,C_64,CVZN,dwLoc08_7,dwLoc0C_10,dwLoc10_14,fp_24,N,r0_26,r2_21,r3_22,r6,sp_60,V_65,Z_30,ZN_63
		defs: ap_72,C_70,CVZN_68,fp_77,N_76,r0_74,r2_73,r3_78,r6_79,sp_67,V_71,Z_75,ZN_69
	return Mem62[fp_77 + 0x0000000C:word32]
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000B0A2:
	return Mem28[fp_24 + 0x0000000C:word32]
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn0000B072_exit:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



void fn0000B192(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r1 r2 r3 r4
// LiveOut:
// Trashed: CVZN ap fp pc r0 r3 sp
// Preserved:
fn0000B192_entry:
// DataOut: ap fp pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B192:
	word32 sp_143 = fp - 0x00000004
	branch Mem0[r2 + 0x000101F4:word32] == 0x00000000 l0000B1DF
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B1AB:
	byte CVZN_144
	byte ZN_145
	bool C_146
	bool V_147
	bool Z_149
	word32 r4_151
	word32 r3_152
	word32 r0_153
	byte VZN_154
	bool N_155
	word32 r1_157
	word32 fp_158
	call Mem0[pc:word32] + 2 (retsize: 4; depth: 16)
		uses: ap,C_139,CVZN,dwLoc08_135,dwLoc0C_137,dwLoc10,dwLoc14,fp,N,pc_142,r0,r1,r2,r3,r4,sp_136,V_140,VZN,Z_6,ZN_138
		defs: ap_156,C_146,CVZN_144,fp_158,N_155,pc_150,r0_153,r1_157,r2_148,r3_152,r4_151,sp_143,V_147,VZN_154,Z_149,ZN_145
	word32 r3_159 = r3_152 + Mem0[r4_151 + 0x50D07FFE:real32]
	branch (r0_153 & 0x00000001) == 0x00000000 l0000B1C7
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000B1C0:
	r3_159 = (int32) Mem0[r2 + 0x000101FC:int16]
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C pc:pc + 0x00000004 r3:<invalid> -12(fp):0x00000000 -8(fp):r2 + 0x000101FC
// LocalsOut: fp(32)

l0000B1C7:
	branch (r3_159 & 0x00000001) != 0x00000000 l0000B1D9
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C pc:pc + 0x00000004 r3:<invalid> -12(fp):0x00000000 -8(fp):r2 + 0x000101FC
// LocalsOut: fp(32)

l0000B1D9:
	Mem185[r2 + 0x000101F4:word32] = 0x00000000
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C pc:pc + 0x00000004 r3:<invalid> -12(fp):0x00000000 -8(fp):r2 + 0x000101FC

l0000B1DF:
	word32 sp_39 = sp_143 - 0x00000008
	Mem41[sp_39:word64] = 0x0000000000000000
	Mem43[sp_39 - 0x00000004:word32] = 0x00000000
	Mem46[sp_39 - 0x00000008:word32] = Mem43[r2 + 0x000101F8:word32]
	Mem49[sp_39 - 0x0000000C:word32] = Mem46[ap + 8:word32]
	Mem52[sp_39 - 0x00000010:word32] = Mem49[ap + 4:word32]
	Mem55[sp_39 - 0x00000018:word64] = 0x0000000000000000
	Mem58[sp_39 - 0x0000001C:word32] = r2 + 0x000101FC
	Mem60[sp_39 - 0x00000020:word32] = 0x00000030
	Mem63[sp_39 - 0x00000024:word32] = Mem60[r2 + 0x000101F0:word32]
	Mem65[sp_39 - 0x00000028:word32] = 0x00000000
	word32 sp_81
	byte CVZN_82
	byte ZN_83
	bool C_84
	bool V_85
	word32 r2_86
	bool Z_87
	word32 pc_88
	word32 r4_89
	word32 r3_90
	word32 r0_91
	byte VZN_92
	bool N_93
	word32 ap_94
	word32 r1_95
	word32 fp_96
	call Mem65[pc:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_38,C_67,CVZN,dwLoc08_33,dwLoc0C_34,dwLoc10,dwLoc14,fp,N,pc_70,r0,r1,r2_36,r3,r4,sp_64,V_68,VZN,Z_6,ZN_66
		defs: ap_94,C_84,CVZN_82,fp_96,N_93,pc_88,r0_91,r1_95,r2_86,r3_90,r4_89,sp_81,V_85,VZN_92,Z_87,ZN_83
	Mem98[Mem98[r0_91 + 20816:word32]:word32] = Mem65[r0_91 + 20816:word32] | Mem65[Mem65[0x00013206:word32]:word32]
	branch (r0_91 & 0x00000001) != 0x00000000 l0000B21D
// DataOut: ap fp r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x00000004 r3:<invalid> -12(fp):0x00000000 -8(fp):r2 + 0x000101FC

l0000B21D:
	Mem121[r2_86 + 0x000101F4:word32] = 0x00000001
	Mem124[r2_86 + 0x000101F8:word32] = Mem121[r2_86 + 0x000101F8:word32] + (uint32) Mem121[ap_94 + 0x00000009:ui23]
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> r3:<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):0x00000030 -40(fp):r2 + 0x000101FC -36(fp):0x0000000000000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000000 -12(fp):0x0000000000000000 -8(fp):r2 + 0x000101FC

l0000B20E:
	Mem103[sp_81 - 0x00000004:word32] = r1_95
	Mem106[sp_81 - 0x00000008:word32] = r4_89 + 1011
	word32 fp_110
	word32 sp_111
	fn0000C022(r0_91, r2_86, r3_90, r4_89, ap_94, fp_96, out fp_110, out sp_111)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> r3:<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):0x00000030 -40(fp):r2 + 0x000101FC -36(fp):0x0000000000000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000000 -12(fp):0x0000000000000000 -8(fp):r2 + 0x000101FC

l0000B1CA:
	word32 fp_174
	word32 sp_175
	fn0000C022(r0_153, r2, r3_159, r4_151, ap, fp_158, out fp_174, out sp_175)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C pc:pc + 0x00000004 r3:<invalid> -12(fp):0x00000000 -8(fp):r2 + 0x000101FC

fn0000B192_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> -60(fp):r4 + 1011 -56(fp):r1 -52(fp):0x00000000 -48(fp):<invalid> -44(fp):0x00000030 -40(fp):r2 + 0x000101FC -36(fp):0x0000000000000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):0x0000000000000000 -8(fp):r2 + 0x000101FC



void fn0000B86E(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r1 r2 r3 r4
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 sp
// Preserved:
fn0000B86E_entry:
// DataOut: ap fp pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B86E:
	byte CVZN_15
	byte ZN_16
	bool C_17
	bool V_18
	word32 r2_19
	word32 pc_20
	word32 r1_21
	word32 r0_22
	word32 r3_23
	word32 fp_25
	bool Z_26
	bool N_27
	word32 r4_28
	word32 sp_14
	word32 ap_145
	call Mem0[pc:word32] + 2 (retsize: 4; depth: 12)
		uses: C_9,dwLoc08_7,pc_13,r2,sp_3,V_10,ZN_8
		defs: ap_24,C_17,CVZN_15,fp_25,N_27,pc_20,r0_22,r1_21,r2_19,r3_23,r4_28,sp_14,V_18,Z_26,ZN_16
	branch (r0_22 & 0x00000001) != 0x00000000 l0000B8AC
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B890:
	word32 fp_130
	word32 sp_131
	word32 ap_132 = fn0000C022(r0_22, r2_19, r3_23, r4_28, ap_145, fp_25, out fp_130, out sp_131)
	word32 r0_133 = Mem0[r2_19 + 312:word32]
	Mem136[sp_131 - 0x00000004:word32] = Mem0[r0_133 + 12:word32]
	Mem139[sp_131 - 0x00000008:word32] = r3_23 + 1222
	word32 fp_143
	ap_145 = fn0000C022(r0_133, r2_19, r3_23, r4_28, ap_132, fp_130, out fp_143, out sp_14)
// DataOut: ap fp pc r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 pc:pc + 0x00000004 r1:<invalid> -8(fp):<invalid>

l0000B8AC:
	Mem42[Mem0[r2_19 + 312:word32] + 34:word16] = Mem0[ap_145 + 8:word16]
	word32 r0_43 = Mem42[r2_19 + 312:word32]
	Mem45[r0_43 + 40:word32] = Mem42[ap_145 + 4:word32]
	word32 sp_46 = sp_14 - 0x00000004
	Mem48[sp_46:word32] = Mem45[r2_19 + 312:word32]
	word32 sp_54
	byte CVZN_55
	byte ZN_56
	bool C_57
	bool V_58
	word32 r2_59
	word32 pc_60
	word32 r1_61
	word32 r0_62
	word32 r3_63
	word32 ap_64
	word32 fp_65
	bool Z_66
	bool N_67
	word32 r4_68
	call Mem48[pc_20:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_39,C_50,CVZN_15,dwLoc08_7,dwLoc0C_36,dwLoc10_37,fp_25,N_27,pc_53,r0_43,r1_30,r2_19,r3_23,r4_28,sp_46,V_51,Z_26,ZN_49
		defs: ap_64,C_57,CVZN_55,fp_65,N_67,pc_60,r0_62,r1_61,r2_59,r3_63,r4_68,sp_54,V_58,Z_66,ZN_56
	word32 r1_70 = DPB(r1_61, Mem48[r1_61 + 0x50D07FFE:word16], 0)
	branch (r0_62 & 0x00000001) != 0x00000000 l0000B8F1
// DataOut: ap fp r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x00000004 r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -24(fp):r3 + 1222 -20(fp):<invalid> -16(fp):r3 + 1188 -12(fp):<invalid> -8(fp):<invalid>

l0000B8F1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x0000000C r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -24(fp):r3 + 1222 -20(fp):<invalid> -16(fp):r3 + 1188 -12(fp):<invalid> -8(fp):<invalid>

l0000B8D1:
	Mem84[sp_54 - 0x00000004:word32] = r1_70
	Mem87[sp_54 - 0x00000008:word32] = r3_63 + 1223
	word32 fp_91
	word32 sp_92
	word32 ap_93 = fn0000C022(r0_62, r2_59, r3_63, r4_68, ap_64, fp_65, out fp_91, out sp_92)
	word32 r0_94 = Mem87[r2_59 + 312:word32]
	Mem97[sp_92 - 0x00000004:word32] = Mem87[r0_94 + 12:word32]
	Mem100[sp_92 - 0x00000008:word32] = r3_63 + 1258
	word32 fp_104
	word32 sp_105
	fn0000C022(r0_94, r2_59, r3_63, r4_68, ap_93, fp_91, out fp_104, out sp_105)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x0000000C r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -24(fp):r3 + 1222 -20(fp):<invalid> -16(fp):r3 + 1188 -12(fp):<invalid> -8(fp):<invalid>

fn0000B86E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x0000000C r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -24(fp):r3 + 1222 -20(fp):<invalid> -16(fp):r3 + 1188 -12(fp):<invalid> -8(fp):<invalid>



void fn0000B8F6(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r1 r2 r3 r4
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 sp
// Preserved:
fn0000B8F6_entry:
// DataOut: ap fp pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B8F6:
	branch Mem0[r2 + 12:word32] == 0x00000000 l0000B940
// DataOut: ap fp pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B940:
	byte CVZN_138
	byte ZN_139
	bool C_140
	bool V_141
	word32 r2_142
	bool Z_143
	word32 r0_145
	word32 r4_146
	word32 r3_147
	word32 pc_148
	word32 r1_149
	bool N_150
	word32 fp_151
	word32 sp_137
	word32 ap_144
	call Mem0[pc:word32] + 2 (retsize: 4; depth: 12)
		uses: ap,C_129,CVZN,dwLoc08_127,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,fp,N,pc_132,r0,r1,r2,r3,r4,sp_125,V_130,Z_6,ZN_128
		defs: ap_144,C_140,CVZN_138,fp_151,N_150,pc_148,r0_145,r1_149,r2_142,r3_147,r4_146,sp_137,V_141,Z_143,ZN_139
	branch (r0_145 & 0x00000001) != 0x00000000 l0000B96D
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000B951:
	word32 fp_234
	word32 sp_235
	word32 ap_236 = fn0000C022(r0_145, r2_142, r3_147, r4_146, ap_144, fp_151, out fp_234, out sp_235)
	word32 r0_237 = Mem0[r3_147 + 312:word32]
	Mem240[sp_235 - 0x00000004:word32] = Mem0[r0_237 + 12:word32]
	Mem243[sp_235 - 0x00000008:word32] = r4_146 + 1295
	word32 fp_247
	ap_144 = fn0000C022(r0_237, r2_142, r3_147, r4_146, ap_236, fp_234, out fp_247, out sp_137)
// DataOut: ap fp pc r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 pc:pc + 0x00000004 r1:<invalid> -8(fp):<invalid>

l0000B96D:
	Mem163[Mem0[r3_147 + 312:word32] + 34:word16] = Mem0[ap_144 + 8:word16]
	word32 r0_164 = Mem163[r3_147 + 312:word32]
	Mem166[r0_164 + 40:word32] = Mem163[ap_144 + 4:word32]
	word32 sp_167 = sp_137 - 0x00000004
	Mem169[sp_167:word32] = Mem166[r3_147 + 312:word32]
	word32 sp_175
	byte CVZN_176
	byte ZN_177
	bool C_178
	bool V_179
	word32 r2_180
	bool Z_181
	word32 ap_182
	word32 r0_183
	word32 r4_184
	word32 r3_185
	word32 pc_186
	word32 r1_187
	bool N_188
	word32 fp_189
	call Mem169[pc_148:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_160,C_171,CVZN_138,dwLoc08_127,dwLoc0C_157,dwLoc10_158,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,fp_151,N_150,pc_174,r0_164,r1_153,r2_142,r3_147,r4_146,sp_167,V_172,Z_143,ZN_170
		defs: ap_182,C_178,CVZN_176,fp_189,N_188,pc_186,r0_183,r1_187,r2_180,r3_185,r4_184,sp_175,V_179,Z_181,ZN_177
	word32 r1_191 = DPB(r1_187, (byte) r1_187 | Mem169[r1_187 + 0x50D07FFE:byte], 0)
	branch (r0_183 & 0x00000001) != 0x00000000 l0000B9B2
// DataOut: ap fp r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x00000004 r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -24(fp):r4 + 1295 -20(fp):<invalid> -16(fp):r4 + 1261 -12(fp):<invalid> -8(fp):<invalid>

l0000B992:
	Mem196[sp_175 - 0x00000004:word32] = r1_191
	Mem199[sp_175 - 0x00000008:word32] = r4_184 + 1296
	word32 fp_203
	word32 sp_204
	word32 ap_205 = fn0000C022(r0_183, r2_180, r3_185, r4_184, ap_182, fp_189, out fp_203, out sp_204)
	word32 r0_206 = Mem199[r3_185 + 312:word32]
	Mem209[sp_204 - 0x00000004:word32] = Mem199[r0_206 + 12:word32]
	Mem212[sp_204 - 0x00000008:word32] = r4_184 + 1329
	word32 fp_216
	word32 sp_217
	fn0000C022(r0_206, r2_180, r3_185, r4_184, ap_205, fp_203, out fp_216, out sp_217)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x0000000C r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -24(fp):r4 + 1295 -20(fp):<invalid> -16(fp):r4 + 1261 -12(fp):<invalid> -8(fp):<invalid>

l0000B913:
	word32 r0_67 = Mem0[r2 + 0x0000C839:word32]
	word32 sp_82
	byte CVZN_83
	byte ZN_84
	bool C_85
	bool V_86
	word32 r2_87
	bool Z_88
	word32 ap_89
	word32 r0_90
	word32 r4_91
	word32 r3_92
	word32 pc_93
	word32 r1_94
	bool N_95
	word32 fp_96
	call r0_67 + 2 (retsize: 4; depth: 24)
		uses: ap,C_69,CVZN,dwLoc08_57,dwLoc0C_61,dwLoc10_64,dwLoc14_66,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,fp,N,pc,r0_67,r1,r2,r3,r4,sp_65,V_70,Z_6,ZN_68
		defs: ap_89,C_85,CVZN_83,fp_96,N_95,pc_93,r0_90,r1_94,r2_87,r3_92,r4_91,sp_82,V_86,Z_88,ZN_84
	word32 r0_106 = Mem0[r2_87 + 0x0000C839:word32]
	word32 sp_110
	byte CVZN_111
	byte ZN_112
	bool C_113
	bool V_114
	word32 r2_115
	bool Z_116
	word32 ap_117
	word32 r0_118
	word32 r4_119
	word32 r3_120
	word32 pc_121
	word32 r1_122
	bool N_123
	word32 fp_124
	call r0_106 + 2 (retsize: 4; depth: 40)
		uses: ap_89,C_108,CVZN_83,dwLoc08_57,dwLoc0C_61,dwLoc10_64,dwLoc14_66,dwLoc18_98,dwLoc1C_100,dwLoc20_103,dwLoc24_105,fp_96,N_95,pc_93,r0_106,r1_94,r2_87,r3_92,r4_91,sp_104,V_109,Z_88,ZN_107
		defs: ap_117,C_113,CVZN_111,fp_124,N_123,pc_121,r0_118,r1_122,r2_115,r3_120,r4_119,sp_110,V_114,Z_116,ZN_112
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000B9B2:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> pc:pc + 0x0000000C r1:<invalid> fp:<invalid> ap:<invalid> -36(fp):r2 -32(fp):r4 + 1259 -28(fp):0x00000001 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn0000B8F6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> pc:pc + 0x0000000C r1:<invalid> -36(fp):r2 -32(fp):r4 + 1259 -28(fp):0x00000001 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



void fn0000B9BA(word32 r0, word32 r2, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r0 r2
// LiveOut:
// Trashed: CVZN ap fp sp
// Preserved:
fn0000B9BA_entry:
// DataOut: fp r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B9BA:
	word32 sp_14
	byte CVZN_15
	byte ZN_16
	bool C_17
	bool V_18
	bool Z_19
	bool N_20
	word32 ap_21
	word32 r0_22
	word32 fp_23
	word32 r2_24
	call Mem0[ap + 0x00010194:word32] + 2 (retsize: 4; depth: 20)
		uses: ap,C_10,dwLoc08_4,N_9,qwLoc10_7,sp_5,V_11,Z_8
		defs: ap_21,C_17,CVZN_15,fp_23,N_20,r0_22,r2_24,sp_14,V_18,Z_19,ZN_16
	branch r0_22 == 0x00000000 l0000B9DB
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000B9DB:
	branch Mem0[r2_24 + 12:word32] == 0x00000000 l0000B9E1
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):0x0000000000000000 -8(fp):0x00000001

l0000B9E1:
	word32 sp_50
	byte CVZN_51
	byte ZN_52
	bool C_53
	bool V_54
	bool Z_55
	bool N_56
	word32 ap_57
	word32 r0_58
	word32 fp_59
	word32 r2_60
	call Mem0[ap_21 + 0x00010198:word32] + 2 (retsize: 4; depth: 20)
		uses: ap_21,C_45,CVZN_15,dwLoc08_4,fp_23,N_20,qwLoc10_7,r0_22,r2_24,sp_14,V_46,Z_44,ZN_43
		defs: ap_57,C_53,CVZN_51,fp_59,N_56,r0_58,r2_60,sp_50,V_54,Z_55,ZN_52
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):0x0000000000000000 -8(fp):0x00000001

l0000B9E0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):0x0000000000000000 -8(fp):0x00000001

l0000B9DA:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):0x0000000000000000 -8(fp):0x00000001

fn0000B9BA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 fp:<invalid> ap:<invalid> -16(fp):0x0000000000000000 -8(fp):0x00000001



word32 fn0000BBB2(word32 r5, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r5
// LiveOut: ap fp r0 r2 r3 r4 r6 r8 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn0000BBB2_entry:
// DataOut: ap fp r10 r11 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000BBB2:
	word32 r2_5 = Mem0[ap + 4:word32]
	word32 r3_6 = Mem0[r2_5 + 20:word32] + 0xFFFFFFBA
	*r3Out = r3_6
	word32 r0_7 = Mem0[r2_5 + 16:word32]
	word32 r7_9 = Mem0[r2_5 + 8:word32]
	word32 r8_10 = Mem0[r2_5 + 4:word32]
	word32 r6_11 = Mem0[r2_5:word32]
	word32 r4_25 = (r3_6 + 0x00000001) / 0x00000004 - (r3_6 + 0x00000045) / 0x00000064 + (r3_6 + 0x00000171) / 0x00000190 + ((Mem0[r2_5 + 12:word32] - 0x00000001) + r3_6 * 0x0000016D) + (int32) Mem0[(r5 + 0x0001052A) + r0_7 * 2:int16]
	branch r0_7 <= 0x00000001 l0000BC63
// DataOut: fp r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000BC63:
	word32 r4_38 = r4_25 * 0x00015180 + r7_9 * 0x00000E10
	*r4Out = r4_38
	word32 r6_40 = r6_11 + r8_10 * 0x0000003C
	*r6Out = r6_40
	word32 r2_34
	*r2Out = 0
	word32 r8_39
	*r8Out = r8_10 * 0x0000003C
	word32 sp_44
	*spOut = fp - 0x00000004
	word32 fp_45
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_46
	*apOut = Mem0[fp + 0x00000008:word32]
	return r6_40 + r4_38
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:DPB(r9, 0x00, 0)

fn0000BBB2_exit:
// DataOut: ap fp r0 r2 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:DPB(r9, 0x00, 0) fp:<invalid> ap:<invalid>

l0000BC28:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:DPB(r9, 0x00, 0)



word32 fn0000BC8A(word32 r0, word32 r5, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r5
// LiveOut: ap fp r0 r3 r4 r6 r8 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn0000BC8A_entry:
// DataOut: ap fp r0 r10 r11 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000BC8A:
	word32 sp_9
	byte CVZN_10
	byte ZN_11
	bool C_12
	bool V_13
	word32 r0_14
	word32 fp_15
	word32 r1_16
	word32 ap_17
	word32 r2_18
	byte VZN_19
	word32 r4_20
	bool Z_21
	byte CZN_22
	word32 r5_23
	word32 r3_24
	word32 r6_25
	word32 r8_26
	call Mem0[0x000192A0:word32] + 2 (retsize: 4; depth: 16)
		uses: C_6,dwLoc0C_4,sp_3,V_7,ZN_5
		defs: ap_17,C_12,CVZN_10,CZN_22,fp_15,r0_14,r1_16,r2_18,r3_24,r4_20,r5_23,r6_25,r8_26,sp_9,V_13,VZN_19,Z_21,ZN_11
	Mem28[fp_15 + -8:word32] = r0_14
	word32 sp_35
	byte CVZN_36
	byte ZN_37
	bool C_38
	bool V_39
	word32 r0_40
	word32 fp_41
	word32 r1_42
	word32 ap_43
	word32 r2_44
	byte VZN_45
	word32 r4_46
	bool Z_47
	byte CZN_48
	word32 r5_49
	word32 r3_50
	word32 r6_51
	word32 r8_52
	call Mem28[0x000192A4:word32] + 2 (retsize: 4; depth: 20)
		uses: ap_17,C_33,CVZN_10,CZN_22,dwLoc0C_4,dwLoc10_31,fp_15,r0_14,r1_16,r2_18,r3_24,r4_20,r5_23,r6_25,r8_26,sp_29,V_34,VZN_19,Z_21,ZN_32
		defs: ap_43,C_38,CVZN_36,CZN_48,fp_41,r0_40,r1_42,r2_44,r3_50,r4_46,r5_49,r6_51,r8_52,sp_35,V_39,VZN_45,Z_47,ZN_37
	word32 r2_54 = Mem28[ap_43 + 4:word32]
	Mem58[r0_40 + 20:word32] = ((uint32) SLICE(r2_54, ui23, 9) & ~0xFFFFFF80) + 0x00000050
	Mem62[r0_40 + 16:word32] = ((uint32) SLICE(r2_54, ui27, 5) & ~0xFFFFFFF0) - 0x00000001
	Mem64[r0_40 + 12:word32] = Mem62[ap_43 + 4:word32] & ~0xFFFFFFE0
	word32 r2_65 = Mem64[ap_43 + 8:word32]
	Mem68[r0_40 + 8:word32] = (uint32) SLICE(r2_65, ui21, 11) & ~0xFFFFFFE0
	Mem71[r0_40 + 4:word32] = (uint32) SLICE(r2_65, ui27, 5) & ~0xFFFFFFC0
	Mem74[r0_40:word32] = Mem71[ap_43 + 8:word32] << 1 & ~0xFFFFFFC1
	word32 r2_80
	word32 r3_81
	word32 r4_82
	word32 r6_83
	word32 r8_84
	word32 ap_85
	word32 fp_86
	word32 sp_87
	word32 r0_88 = fn0000BBB2(r5_49, ap_43, fp_41, out r2_80, out r3_81, out r4_82, out r6_83, out r8_84, out ap_85, out fp_86, out sp_87)
	Mem92[fp_86 + 0xFFFFFFF8:word32] = r0_88
// DataOut: ap fp r0 r10 r11 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000BD15_thunk_fn0000BD1C:
	word32 r3_96
	word32 r4_97
	word32 r6_98
	word32 r8_99
	word32 ap_100
	word32 fp_101
	word32 sp_102
	return fn0000BD1C(r0_88, r5_49, ap_85, fp_86, out r3_96, out r4_97, out r6_98, out r8_99, out ap_100, out fp_101, out sp_102)
// DataOut: ap fp r0 r10 r11 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r2:0x00000003 r0:<invalid> r4:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -20(fp):r0 -16(fp):fp + -8 -12(fp):0x00000000

fn0000BC8A_exit:
// DataOut: ap fp r0 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r2:<invalid> r0:<invalid> r4:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -20(fp):r0 -16(fp):fp + -8 -12(fp):0x00000000



void fn0000BD08(word32 r5, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r5
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn0000BD08_entry:
// DataOut: ap fp r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000BD08:
	word32 r2_11
	word32 r3_12
	word32 r4_13
	word32 r6_14
	word32 r8_15
	word32 ap_16
	word32 fp_17
	word32 sp_18
	word32 r0_19 = fn0000BBB2(r5, ap, fp, out r2_11, out r3_12, out r4_13, out r6_14, out r8_15, out ap_16, out fp_17, out sp_18)
	Mem23[fp_17 + 0xFFFFFFF8:word32] = r0_19
// DataOut: ap fp r0 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000BD15_thunk_fn0000BD1C:
	word32 r3_27
	word32 r4_28
	word32 r6_29
	word32 r8_30
	word32 ap_31
	word32 fp_32
	word32 sp_33
	fn0000BD1C(r0_19, r5, ap_16, fp_17, out r3_27, out r4_28, out r6_29, out r8_30, out ap_31, out fp_32, out sp_33)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r2:0x00000003 r3:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -4(fp):r1

fn0000BD08_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -4(fp):r1



word32 fn0000BD1C(word32 r0, word32 r5, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r5
// LiveOut: ap fp r0 r3 r4 r6 r8 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn0000BD1C_entry:
	word32 sp_1 = fp
// DataOut: ap fp r0 r10 r11 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000BD1C:
	word32 sp_5 = sp_1 - 0x00000004
	Mem7[sp_5:word32] = fp + -8
	word32 sp_11
	word32 fp_12
	byte ZN_13
	bool C_14
	bool V_15
	word32 r0_16
	word32 r4_17
	byte CVZN_18
	bool Z_19
	word32 r2_20
	word32 ap_21
	byte CZN_22
	word32 r5_23
	word32 r3_24
	word32 r6_25
	word32 r8_26
	call Mem7[0x000192A4:word32] + 2 (retsize: 4; depth: 4)
		uses: C_9,fp_4,sp_5,V_10,ZN_8
		defs: ap_21,C_14,CVZN_18,CZN_22,fp_12,r0_16,r2_20,r3_24,r4_17,r5_23,r6_25,r8_26,sp_11,V_15,Z_19,ZN_13
	Mem28[sp_11 - 0x00000004:word32] = r0_16
	word32 r2_32
	word32 r3_33
	word32 r4_34
	word32 r6_35
	word32 r8_36
	word32 ap_37
	word32 r0_40 = fn0000BBB2(r5_23, ap_21, fp_12, out r2_32, out r3_33, out r4_34, out r6_35, out r8_36, out ap_37, out fp, out sp_1)
	word32 r0_41 = r4_34 - r0_40
	branch r0_41 == 0x00000000 l0000BD3B
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -8(fp):r0 -4(fp):fp + -8

l0000BD33:
	Mem73[fp + -8:word32] = Mem28[fp + -8:word32] + r0_41
	branch r2_32 > 0x00000001 l0000BD1C
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -8(fp):r0 -4(fp):fp + -8

l0000BD3B:
	branch Mem28[ap_37 + 4:word32] <u 0x00007432 l0000BD53
// DataOut: fp r10 r11 r3 r4 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -8(fp):r0 -4(fp):fp + -8

l0000BD45:
	branch Mem28[fp + -8:word32] >=u 0x70000000 l0000BD53
// DataOut: fp r10 r11 r3 r4 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -8(fp):r0 -4(fp):fp + -8

l0000BD4F:
	Mem70[fp + -8:word32] = -0x00000001
// DataOut: fp r10 r11 r3 r4 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -8(fp):r0 -4(fp):fp + -8

l0000BD53:
	word32 sp_56
	*spOut = fp - 0x00000004
	word32 fp_57
	*fpOut = Mem28[fp + 0x0000000C:word32]
	word32 ap_58
	*apOut = Mem28[fp + 0x00000008:word32]
	return Mem28[fp + -8:word32]
// DataOut: ap fp r0 r10 r11 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -8(fp):r0 -4(fp):fp + -8

fn0000BD1C_exit:
// DataOut: ap fp r0 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> -8(fp):r0 -4(fp):fp + -8



void fn0000BDC2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000BDC2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000BDC2_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000BDC2:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word32 fn0000C022(word32 r0, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r3 r4
// LiveOut: ap fp sp
// Trashed: CVZN ap fp r0 sp
// Preserved:
fn0000C022_entry:
// DataOut: ap fp pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C022:
	Mem4[fp + -16:uint16] = 0x00FF
	Mem7[fp + -14:byte] = 0x0E
	Mem9[fp + -13:byte] = 0x01
	Mem12[fp + -12:word32] = r3 + 0x000105C5
	Mem14[fp + -8:word32] = 0x00000000
	word32 sp_31
	byte CVZN_32
	byte ZN_33
	bool C_34
	bool V_35
	word32 fp_36
	word32 r3_37
	bool Z_38
	bool N_39
	word32 ap_40
	word32 r0_41
	word32 r4_42
	word32 r2_43
	call Mem14[0x0001932C:word32] + 2 (retsize: 4; depth: 40)
		uses: ap,C_29,dwLoc1C_20,dwLoc20_23,dwLoc24_27,fp,qwLoc18_17,r3,sp_24,V_30,ZN_28
		defs: ap_40,C_34,CVZN_32,fp_36,N_39,r0_41,r2_43,r3_37,r4_42,sp_31,V_35,Z_38,ZN_33
	branch (r0_41 & 0x00000001) != 0x00000000 l0000C094
// DataOut: ap fp pc r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C094:
	Mem129[r3_37 + 0x000105C5:byte] = 0x00
	word32 sp_147
	byte CVZN_148
	byte ZN_149
	bool C_150
	bool V_151
	word32 fp_152
	word32 r3_153
	bool Z_154
	bool N_155
	word32 ap_156
	word32 r0_157
	word32 r4_158
	word32 r2_159
	call Mem129[0x000192D0:word32] + 2 (retsize: 4; depth: 60)
		uses: ap_40,C_145,CVZN_32,dwLoc1C_20,dwLoc20_23,dwLoc24_27,dwLoc28_131,dwLoc2C_134,dwLoc30_137,dwLoc34_140,dwLoc38_143,dwLoc3C,dwLoc40,dwLoc44,fp_36,N_39,qwLoc18_17,r0_127,r2_43,r3_37,r4_42,sp_141,V_146,Z_38,ZN_144
		defs: ap_156,C_150,CVZN_148,fp_152,N_155,r0_157,r2_159,r3_153,r4_158,sp_147,V_151,Z_154,ZN_149
	word32 r0_167 = Mem129[r2_159 + 0x0000C839:word32]
	word32 sp_171
	byte CVZN_172
	byte ZN_173
	bool C_174
	bool V_175
	word32 fp_176
	word32 r3_177
	bool Z_178
	bool N_179
	word32 ap_180
	word32 r0_181
	word32 r4_182
	word32 r2_183
	call r0_167 + 2 (retsize: 4; depth: 72)
		uses: ap_156,C_169,CVZN_148,dwLoc1C_20,dwLoc20_23,dwLoc24_27,dwLoc28_131,dwLoc2C_134,dwLoc30_137,dwLoc34_140,dwLoc38_143,dwLoc3C_161,dwLoc40_164,dwLoc44_166,fp_152,N_155,qwLoc18_17,r0_167,r2_159,r3_153,r4_158,sp_165,V_170,Z_154,ZN_168
		defs: ap_180,C_174,CVZN_172,fp_176,N_179,r0_181,r2_183,r3_177,r4_182,sp_171,V_175,Z_178,ZN_173
	word32 sp_184
	*spOut = fp_176 - 0x00000004
	word32 fp_185
	*fpOut = Mem129[fp_176 + 0x0000000C:word32]
	return Mem129[fp_176 + 0x00000008:word32]
// DataOut: ap fp pc r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000024 -36(fp):ap + 8 -32(fp):fp + -8 -28(fp):fp + -16 -24(fp):0x0000000000000000

l0000C067:
	word32 sp_87
	byte CVZN_88
	byte ZN_89
	bool C_90
	bool V_91
	word32 fp_92
	word32 r3_93
	bool Z_94
	bool N_95
	word32 ap_96
	word32 r0_97
	word32 r4_98
	word32 r2_99
	call Mem14[0x000192D0:word32] + 2 (retsize: 4; depth: 60)
		uses: ap_40,C_82,CVZN_32,dwLoc1C_20,dwLoc20_23,dwLoc24_27,dwLoc28_68,dwLoc2C_71,dwLoc30_74,dwLoc34_77,dwLoc38_80,dwLoc3C,dwLoc40,dwLoc44,fp_36,N_39,qwLoc18_17,r0_41,r2_43,r3_37,r4_42,sp_78,V_83,Z_38,ZN_81
		defs: ap_96,C_90,CVZN_88,fp_92,N_95,r0_97,r2_99,r3_93,r4_98,sp_87,V_91,Z_94,ZN_89
	word32 r0_107 = Mem14[r2_99 + 0x0000C839:word32]
	word32 sp_111
	byte CVZN_112
	byte ZN_113
	bool C_114
	bool V_115
	word32 fp_116
	word32 r3_117
	bool Z_118
	bool N_119
	word32 ap_120
	word32 r0_121
	word32 r4_122
	word32 r2_123
	call r0_107 + 2 (retsize: 4; depth: 72)
		uses: ap_96,C_109,CVZN_88,dwLoc1C_20,dwLoc20_23,dwLoc24_27,dwLoc28_68,dwLoc2C_71,dwLoc30_74,dwLoc34_77,dwLoc38_80,dwLoc3C_101,dwLoc40_104,dwLoc44_106,fp_92,N_95,qwLoc18_17,r0_107,r2_99,r3_93,r4_98,sp_105,V_110,Z_94,ZN_108
		defs: ap_120,C_114,CVZN_112,fp_116,N_119,r0_121,r2_123,r3_117,r4_122,sp_111,V_115,Z_118,ZN_113
	word32 sp_124
	*spOut = fp_116 - 0x00000004
	word32 fp_125
	*fpOut = Mem14[fp_116 + 0x0000000C:word32]
	return Mem14[fp_116 + 0x00000008:word32]
// DataOut: ap fp pc r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000024 -36(fp):ap + 8 -32(fp):fp + -8 -28(fp):fp + -16 -24(fp):0x0000000000000000

fn0000C022_exit:
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> fp:<invalid> ap:<invalid> -68(fp):r2 -64(fp):r2 + 1515 -60(fp):<invalid> -56(fp):r2 + 1515 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):0x00000001 -36(fp):ap + 8 -32(fp):fp + -8 -28(fp):fp + -16 -24(fp):0x0000000000000000



void fn0000C0CE(word32 r0, word32 r6, word32 ap, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap pc r0 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000C0CE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000C0CE_entry:
// DataOut: ap pc r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C0CE:
	word32 sp_16 = fp - 0x00000004
	branch Mem0[r6 + 0x00010A78:word32] != 0x00000000 l0000C0F7
// DataOut: ap pc r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C0E0:
	byte CVZN_54
	byte ZN_55
	bool C_56
	bool V_57
	bool Z_59
	word32 r0_61
	word32 pc_62
	call Mem0[0x000192D4:word32] + 2 (retsize: 4; depth: 16)
		uses: ap,C_48,CVZN,dwLoc08_43,dwLoc0C_46,pc,r0,r6,sp_44,V_49,Z_6,ZN_47
		defs: ap_60,C_56,CVZN_54,pc_62,r0_61,r6_58,sp_53,V_57,Z_59,ZN_55
	branch r0_61 != 0x00000000 l0000C0F7
// DataOut: ap pc r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000C0F7:
	word32 sp_17 = sp_16 - 0x00000004
	Mem19[sp_17:word32] = Mem0[ap + 4:word32]
	Mem22[sp_17 - 0x00000004:word32] = r6 + 0x000108C5
	word32 sp_26
	byte CVZN_27
	byte ZN_28
	bool C_29
	bool V_30
	word32 r6_31
	bool Z_32
	word32 ap_33
	word32 r0_34
	word32 pc_35
	call Mem22[0x000192BC:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_14,C_24,dwLoc08_12,dwLoc0C_13,r6_15,sp_20,V_25,Z_6,ZN_23
		defs: ap_33,C_29,CVZN_27,pc_35,r0_34,r6_31,sp_26,V_30,Z_32,ZN_28
	Mem37[r6_31 + 0x00010A78:word32] = 0x00000001
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> -12(fp):<invalid> -8(fp):r6 + 0x000108C5

l0000C0F4:
// DataOut: pc r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C -12(fp):<invalid> -8(fp):r6 + 0x000108C5
// LocalsOut: fp(32)

l0000C1CB:
	word32 sp_75
	byte CVZN_76
	byte ZN_77
	bool C_78
	bool V_79
	word32 r6_80
	bool Z_81
	word32 ap_82
	word32 r0_83
	word32 pc_84
	call Mem0[pc_62:word32] + 2 (retsize: 4; depth: 20)
		uses: ap_60,C_71,CVZN_54,dwLoc08_43,dwLoc0C_46,dwLoc10_69,pc_74,r0_61,r6_58,sp_67,V_72,Z_64,ZN_70
		defs: ap_82,C_78,CVZN_76,pc_84,r0_83,r6_80,sp_75,V_79,Z_81,ZN_77
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C -12(fp):<invalid> -8(fp):r6 + 0x000108C5



void fn0000C1FE(word32 r2, word32 r3, word32 r5, word32 r11, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 r2 r3 r5
// LiveOut:
// Trashed: CVZN ap r0 r4 sp
// Preserved:
fn0000C1FE_entry:
// DataOut: pc r11 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C1FE:
	branch Mem0[r2 + 0x00010AA4:word32] == 0xFFFFFFFF l0000C226
// DataOut: pc r11 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C226:
	Mem75[r2 + 0x00010AA4:word32] = 0x00000000
	word32 sp_88
	byte CVZN_89
	byte ZN_90
	bool C_91
	bool V_92
	word32 r3_93
	word32 r4_94
	word32 r2_95
	byte CZN_96
	bool Z_97
	bool N_98
	word32 pc_99
	word32 r11_100
	word32 ap_101
	word32 r0_102
	word32 r5_103
	call Mem75[pc:word32] + 2 (retsize: 4; depth: 16)
		uses: ap,C_82,CVZN,CZN_7,dwLoc08_78,dwLoc0C_80,N,pc_85,r0,r11,r2,r3,r4_5,r5,sp_79,V_83,Z_8,ZN_81
		defs: ap_101,C_91,CVZN_89,CZN_96,N_98,pc_99,r0_102,r11_100,r2_95,r3_93,r4_94,r5_103,sp_88,V_92,Z_97,ZN_90
	Mem105[r11_100 + -3953:word16] = atomic_fetch_add(Mem75[r11_100 + -3953:word16], Mem75[r2_95 + 0x50E97FFE:word16])
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l0000C223:
// DataOut: r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l0000C327:
	word32 ap_10 = Mem0[r3 + 1511:word32]
	word32 r0_11 = Mem0[ap_10 + 12:word32]
	branch r0_11 > 0x00000010 l0000C354
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l0000C354:
	fn0000F457()
	Mem54[Mem54[r5 + 336:word32]:uint16] = 0x0000
	word32 sp_58
	byte CVZN_59
	byte ZN_60
	bool C_61
	bool V_62
	word32 r3_63
	word32 r4_64
	word32 r2_65
	byte CZN_66
	bool Z_67
	bool N_68
	word32 pc_69
	word32 r11_70
	word32 ap_71
	word32 r0_72
	word32 r5_73
	call fn40009A48 (retsize: 4; depth: 8)
		uses: ap_10,C_56,CVZN,CZN_7,N,pc,r0_11,r11,r2,r3,r4_5,r5,sp_2,V_57,Z_8,ZN_55
		defs: ap_71,C_61,CVZN_59,CZN_66,N_68,pc_69,r0_72,r11_70,r2_65,r3_63,r4_64,r5_73,sp_58,V_62,Z_67,ZN_60
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> ap:<invalid> r0:<invalid>
// Terminates process

l0000C330_1:
	word32 sp_37
	byte CVZN_38
	byte ZN_39
	bool C_40
	bool V_41
	word32 r3_42
	word32 r4_43
	word32 r2_44
	byte CZN_45
	bool Z_46
	bool N_47
	word32 pc_48
	word32 r11_49
	word32 ap_50
	word32 r0_51
	word32 r5_52
	call 0x0000C334 + r0_11 * 0x00000002 (retsize: 4; depth: 8)
		uses: ap_10,C_13,CVZN,CZN_7,N,pc,r0_11,r11,r2,r3,r4_5,r5,sp_2,V_14,Z_8,ZN_12
		defs: ap_50,C_40,CVZN_38,CZN_45,N_47,pc_48,r0_51,r11_49,r2_44,r3_42,r4_43,r5_52,sp_37,V_41,Z_46,ZN_39
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> ap:<invalid> r0:<invalid>

fn0000C1FE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> ap:<invalid> r0:<invalid>



word32 fn0000C6FA(word32 r0, word32 r6, word32 r7, word32 r8, word32 ap, word32 fp, word32 pc, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r6 r7 r8
// LiveOut: ap fp r2 sp
// Trashed: CVZN ap fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000C6FA_entry:
// DataOut: ap fp pc r0 r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C6FA:
	word32 r9_6 = Mem0[ap + 8:word32] & ~0xFFFFFFF8
	branch r9_6 == 0x00000000 l0000C729
// DataOut: ap fp pc r0 r10 r2 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C729:
	Mem731[fp + -40:word16] = 0x0000
	Mem733[fp + -38:word16] = 0x0003
	Mem735[fp + -36:word32] = 0x00000000
	Mem737[fp + -32:word16] = 0x0000
	Mem739[fp + -30:word16] = 0x0004
	Mem741[fp + -28:word32] = 0x00000000
	Mem743[fp + -24:word16] = 0x0000
	Mem745[fp + -22:word16] = 0x0005
	Mem747[fp + -20:word64] = 0x0000000000000000
	Mem749[fp + -12:word64] = 0x0000000000000000
	Mem751[r6 + 0x00010CEC:word32] = r6 + 0x00010ABC
	Mem753[r6 + 0x00010CC4:word32] = Mem751[r6 + 0x00010CEC:word32]
	Mem755[r6 + 0x00010CC0:word32] = Mem753[r6 + 0x00010CC4:word32]
	Mem757[r6 + 0x00010CDC:word32] = Mem755[r6 + 0x00010CC0:word32]
	Mem759[r6 + 0x00010CE8:word32] = 0x00000000
	Mem761[r6 + 0x00010CCC:word64] = 0x0000000000000000
	Mem763[fp + -44:word32] = Mem761[ap + 4:word32]
	word32 sp_771
	byte ZN_772
	bool C_773
	bool V_774
	word32 r10_775
	word32 ap_776
	word32 r9_777
	bool Z_778
	word32 fp_779
	bool N_780
	word32 r6_781
	word32 r0_782
	word32 r2_783
	byte CZN_784
	byte CZ_785
	word32 pc_786
	byte VZN_787
	word32 r7_788
	byte CVZN_789
	word32 r3_790
	word32 r8_791
	call Mem763[0x000192C4:word32] + 2 (retsize: 4; depth: 232)
		uses: ap,C_768,CVZN,CZ,CZN,dwLocE4_766,dwLocE8,dwLocEC,dwLocF0,dwLocF4,dwLocF8,fp,N,pc,r0,r10_4,r2,r3,r6,r7,r8,r9_6,sp_764,V_769,VZN,Z_8,ZN_767
		defs: ap_776,C_773,CVZN_789,CZ_785,CZN_784,fp_779,N_780,pc_786,r0_782,r10_775,r2_783,r3_790,r6_781,r7_788,r8_791,r9_777,sp_771,V_774,VZN_787,Z_778,ZN_772
	Mem793[fp_779 + -48:word16] = (word16) r0_782
	word32 r2_794 = (uint32) (word16) r0_782
	branch r2_794 <=u 0x000000FF l0000C7A5
// DataOut: fp pc r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000C7A5:
	word32 sp_819
	byte ZN_820
	bool C_821
	bool V_822
	word32 r10_823
	word32 ap_824
	word32 r9_825
	bool Z_826
	word32 fp_827
	bool N_828
	word32 r6_829
	word32 r0_830
	word32 r2_831
	byte CZN_832
	byte CZ_833
	word32 pc_834
	byte VZN_835
	word32 r7_836
	byte CVZN_837
	word32 r3_838
	word32 r8_839
	call Mem793[pc_786:word32] + 2 (retsize: 4; depth: 244)
		uses: ap_776,C_815,CVZN_789,CZ_796,CZN_795,dwLocE4_766,dwLocE8_807,dwLocEC_810,dwLocF0_813,dwLocF4,dwLocF8,fp_779,N_780,pc_818,r0_782,r10_775,r2_794,r3_790,r6_781,r7_788,r8_791,r9_777,sp_811,V_816,VZN_787,Z_778,ZN_814
		defs: ap_824,C_821,CVZN_837,CZ_833,CZN_832,fp_827,N_828,pc_834,r0_830,r10_823,r2_831,r3_838,r6_829,r7_836,r8_839,r9_825,sp_819,V_822,VZN_835,Z_826,ZN_820
	Mem841[Mem841[r0_830 + 20483:word32]:word32] = __ashift(0x00000004, Mem793[r2_831 + 0x50E87FFE:word32])
	word32 sp_844
	*spOut = fp_827 - 0x00000004
	word32 fp_845
	*fpOut = Mem841[fp_827 + 0x0000000C:word32]
	word32 ap_846
	*apOut = Mem841[fp_827 + 0x00000008:word32]
	return r2_831
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r2:<invalid> -228(fp):<invalid>

l0000C7A1:
	word32 sp_802
	*spOut = fp_779 - 0x00000004
	word32 fp_803
	*fpOut = Mem793[fp_779 + 0x0000000C:word32]
	word32 ap_804
	*apOut = Mem793[fp_779 + 0x00000008:word32]
	return r2_794
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r2:<invalid> -228(fp):<invalid>

l0000C726:
// DataOut: ap fp r0 r10 r2 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000C919:
	branch r9_6 == 0x00000001 l0000C921
// DataOut: ap fp r0 r10 r2 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000C921:
	word32 sp_643
	byte ZN_644
	bool C_645
	bool V_646
	word32 r10_647
	word32 ap_648
	word32 r9_649
	bool Z_650
	word32 fp_651
	bool N_652
	word32 r6_653
	word32 r0_654
	word32 r2_655
	byte CZN_656
	byte CZ_657
	word32 pc_658
	byte VZN_659
	word32 r7_660
	byte CVZN_661
	word32 r3_662
	word32 r8_663
	call Mem0[0x000192C4:word32] + 2 (retsize: 4; depth: 232)
		uses: ap,C_641,CVZN,CZ,CZN_41,dwLocE4_639,dwLocE8,dwLocEC,dwLocF0,dwLocF4,dwLocF8,fp,N,pc,r0,r10_4,r2,r3,r6,r7,r8,r9_6,sp_637,V_642,VZN,Z_42,ZN_640
		defs: ap_648,C_645,CVZN_661,CZ_657,CZN_656,fp_651,N_652,pc_658,r0_654,r10_647,r2_655,r3_662,r6_653,r7_660,r8_663,r9_649,sp_643,V_646,VZN_659,Z_650,ZN_644
	branch r0_654 + Mem0[r6_653 + 0x00010CE8:word32] <=u 0xFFFFFF0E l0000C945
// DataOut: fp r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>

l0000C945:
	branch Mem0[r6_653 + 0x00010CE8:word32] != 0x00000000 l0000C974
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r0:<invalid> -228(fp):r7 + 0x0000C701

l0000C94D:
	Mem719[r6_653 + 0x00010CEC:word32] = r6_653 + 0x00010ABC
	Mem721[r6_653 + 0x00010CC4:word32] = Mem719[r6_653 + 0x00010CEC:word32]
	Mem723[r6_653 + 0x00010CC0:word32] = Mem721[r6_653 + 0x00010CC4:word32]
	Mem725[r6_653 + 0x00010CCC:word64] = 0x0000000000000000
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r0:<invalid> -228(fp):r7 + 0x0000C701

l0000C974:
	Mem682[r6_653 + 0x00010CDC:word32] = Mem0[r6_653 + 0x00010CEC:word32]
	word32 r2_683 = 0x00000000
	branch Mem682[r6_653 + 0x00010CE4:word32] != 0x00000000 l0000C98B
// DataOut: fp r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r0:<invalid> -228(fp):r7 + 0x0000C701

l0000C989:
	r2_683 = 0x00000001
// DataOut: fp r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r0:<invalid> r2:0x00000000 -228(fp):r7 + 0x0000C701

l0000C98B:
	Mem691[r6_653 + 0x00010CE0:word32] = r2_683
	word32 v65_692 = Mem691[r6_653 + 0x00010CD8:word32]
	Mem693[r6_653 + 0x00010CD0:word32] = v65_692
	branch v65_692 == 0x00000000 l0000C9AA
// DataOut: fp r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r0:<invalid> r2:<invalid> -228(fp):r7 + 0x0000C701

l0000C99F:
	r2_683 = Mem693[r6_653 + 0x00010CDC:word32]
	Mem712[r2_683 + -1:byte] = 0x2E
// DataOut: fp r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r0:<invalid> r2:<invalid> -228(fp):r7 + 0x0000C701

l0000C9AA:
	Mem701[Mem701[r6_653 + 0x00010CDC:word32]:byte] = 0x00
	word32 sp_707
	*spOut = fp_651 - 0x00000004
	word32 fp_708
	*fpOut = Mem701[fp_651 + 0x0000000C:word32]
	word32 ap_709
	*apOut = Mem701[fp_651 + 0x00000008:word32]
	return r2_683
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r0:<invalid> r2:<invalid> -228(fp):r7 + 0x0000C701

l0000C941:
	word32 sp_673
	*spOut = fp_651 - 0x00000004
	word32 fp_674
	*fpOut = Mem0[fp_651 + 0x0000000C:word32]
	word32 ap_675
	*apOut = Mem0[fp_651 + 0x00000008:word32]
	return r2_655
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r0:<invalid> -228(fp):r7 + 0x0000C701

l0000C91E:
// DataOut: ap fp r0 r10 r2 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000C9B3:
	branch r9_6 == 0x00000002 l0000C9BB
// DataOut: ap fp r0 r10 r2 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000C9BB:
	word32 sp_475
	byte ZN_476
	bool C_477
	bool V_478
	word32 r10_479
	word32 ap_480
	word32 r9_481
	bool Z_482
	bool N_484
	word32 r0_486
	word32 r2_487
	byte CZN_488
	byte CZ_489
	word32 pc_490
	byte VZN_491
	word32 r7_492
	byte CVZN_493
	word32 r3_494
	word32 r8_495
	word32 r6_485
	word32 fp_483
	call Mem0[0x000192C4:word32] + 2 (retsize: 4; depth: 232)
		uses: ap,C_473,CVZN,CZ,CZN_44,dwLocE4_471,dwLocE8,dwLocEC,dwLocF0,dwLocF4,dwLocF8,fp,N,pc,r0,r10_4,r2,r3,r6,r7,r8,r9_6,sp_469,V_474,VZN,Z_45,ZN_472
		defs: ap_480,C_477,CVZN_493,CZ_489,CZN_488,fp_483,N_484,pc_490,r0_486,r10_479,r2_487,r3_494,r6_485,r7_492,r8_495,r9_481,sp_475,V_478,VZN_491,Z_482,ZN_476
	branch Mem0[r6_485 + 0x00010CE0:word32] == 0x00000000 l0000C9FB
// DataOut: ap fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000C9D0:
	word32 r2_612 = Mem0[r6_485 + 0x00010CDC:word32]
	Mem614[r6_485 + 0x00010CDC:word32] = Mem0[r6_485 + 0x00010CDC:word32] + 0x00000001
	Mem616[r2_612:byte] = 0x5B
	branch r0_486 == 0x00000000 l0000C9F5
// DataOut: ap fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 -228(fp):<invalid>
// LocalsOut: fp(32)

l0000C9E5:
	word32 r2_629 = Mem616[r6_485 + 0x00010CDC:word32]
	Mem631[r6_485 + 0x00010CDC:word32] = Mem616[r6_485 + 0x00010CDC:word32] + 0x00000001
	Mem633[r2_629:byte] = 0x2E
// DataOut: ap fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>
// LocalsOut: fp(32)

l0000C9F5:
	Mem624[r6_485 + 0x00010CE0:word32] = 0x00000000
// DataOut: ap fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>
// LocalsOut: fp(32)

l0000C9FB:
	branch r0_486 != 0x00000001 l0000CA06
// DataOut: ap fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>
// LocalsOut: fp(32)

l0000CA00:
	branch Mem0[Mem0[ap_480 + 4:word32]:byte] == 0x2E l0000CA7C
// DataOut: ap fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>
// LocalsOut: fp(32)

l0000CA06:
	branch r0_486 != 0x00000002 l0000CA3C
// DataOut: ap fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>
// LocalsOut: fp(32)

l0000CA0B:
	word32 r2_589 = Mem0[ap_480 + 4:word32]
	branch Mem0[r2_589:byte] != 0x2E l0000CA3C
// DataOut: ap fp r2 r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>
// LocalsOut: fp(32)

l0000CA14:
	branch Mem0[r2_589 + 1:byte] != 0x2E l0000CA3C
// DataOut: ap fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>
// LocalsOut: fp(32)

l0000CA3C:
	word32 r2_541 = Mem0[r6_485 + 0x00010CDC:word32] - Mem0[r6_485 + 0x00010CBC:word32] + r0_486
	branch r2_541 <= 0x000000FF l0000CA58
// DataOut: ap fp r2 r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>
// LocalsOut: fp(32)

l0000CA58:
	word32 sp_561
	byte ZN_562
	bool C_563
	bool V_564
	word32 r10_565
	word32 ap_566
	word32 r9_567
	bool Z_568
	bool N_570
	word32 r0_572
	word32 r2_573
	byte CZN_574
	byte CZ_575
	word32 pc_576
	byte VZN_577
	word32 r7_578
	byte CVZN_579
	word32 r3_580
	word32 r8_581
	call Mem0[0x000192BC:word32] + 2 (retsize: 4; depth: 240)
		uses: ap_480,C_559,CVZN_493,CZ_489,CZN_542,dwLocE4_471,dwLocE8_554,dwLocEC_557,dwLocF0,dwLocF4,dwLocF8,fp_483,N_502,pc_490,r0_486,r10_479,r2_541,r3_496,r6_485,r7_492,r8_495,r9_481,sp_555,V_560,VZN_491,Z_539,ZN_558
		defs: ap_566,C_563,CVZN_579,CZ_575,CZN_574,fp_569,N_570,pc_576,r0_572,r10_565,r2_573,r3_580,r6_571,r7_578,r8_581,r9_567,sp_561,V_564,VZN_577,Z_568,ZN_562
	Mem583[r6_485 + 0x00010CDC:word32] = Mem0[r6_485 + 0x00010CDC:word32] + r3_580
	Mem585[Mem585[r6_485 + 0x00010CDC:word32]:byte] = 0x2E
	Mem587[r6_485 + 0x00010CDC:word32] = Mem585[r6_485 + 0x00010CDC:word32] + 0x00000001
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>

l0000CA54:
	word32 sp_549
	*spOut = fp_483 - 0x00000004
	word32 fp_550
	*fpOut = Mem0[fp_483 + 0x0000000C:word32]
	word32 ap_551
	*apOut = Mem0[fp_483 + 0x00000008:word32]
	return r2_541
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>

l0000CA1A:
	word32 r2_596 = Mem0[r6_485 + 0x00010CDC:word32]
	Mem598[r6_485 + 0x00010CDC:word32] = Mem0[r6_485 + 0x00010CDC:word32] + 0x00000001
	Mem600[r2_596:byte] = 0x2D
	word32 r2_601 = Mem600[r6_485 + 0x00010CDC:word32]
	Mem603[r6_485 + 0x00010CDC:word32] = Mem600[r6_485 + 0x00010CDC:word32] + 0x00000001
	Mem605[r2_601:byte] = 0x2E
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>

l0000CA7C:
	word32 r2_523 = Mem0[r6_485 + 0x00010CDC:word32]
	Mem525[r6_485 + 0x00010CD0:word32] = r2_523 - Mem0[r6_485 + 0x00010CC4:word32]
	Mem527[r2_523:byte] = 0x00
	word32 sp_533 = fp_483 - 0x00000004
	*spOut = sp_533
	word32 fp_534
	*fpOut = Mem527[sp_533 + 0x00000010:word32]
	word32 ap_535
	*apOut = Mem527[sp_533 + 0x0000000C:word32]
	return r2_523
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid>

l0000C9B8:
// DataOut: ap fp r0 r10 r2 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CA94:
	branch r9_6 == 0x00000003 l0000CA9C
// DataOut: ap fp r0 r10 r2 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CA9C:
	branch (Mem0[ap + 8:word32] & 0x00000008) != 0x00000000 l0000CAA4
// DataOut: ap fp r0 r10 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CAA4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>

l0000CAA1:
// DataOut: ap fp r0 r10 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CB5C:
	word32 ap_153
	word32 sp_152
	Mem141[Mem141[r6 + 0x00010CDC:word32]:byte] = 0x00
	branch Mem141[r6 + 0x00010CD0:word32] == 0x00000000 l0000CBE0
// DataOut: ap fp r0 r10 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CBE0:
	byte ZN_372
	bool C_373
	bool V_374
	word32 r10_375
	word32 r9_377
	bool Z_378
	word32 fp_379
	bool N_380
	word32 r6_381
	word32 r0_382
	word32 r2_383
	byte CZN_384
	byte CZ_385
	word32 pc_386
	byte VZN_387
	word32 r7_388
	byte CVZN_389
	word32 r3_390
	word32 r8_391
	call Mem141[0x000192D4:word32] + 2 (retsize: 4; depth: 236)
		uses: ap,C_369,CVZN,CZ,CZN_47,dwLocE4_364,dwLocE8_367,dwLocEC,dwLocF0,dwLocF4,dwLocF8,fp,N,pc,r0,r10_4,r2,r3,r6,r7,r8,r9_6,sp_365,V_370,VZN,Z_143,ZN_368
		defs: ap_376,C_373,CVZN_389,CZ_385,CZN_384,fp_379,N_380,pc_386,r0_382,r10_375,r2_383,r3_390,r6_381,r7_388,r8_391,r9_377,sp_371,V_374,VZN_387,Z_378,ZN_372
	branch r0_382 == 0x00000000 l0000CC2B
// DataOut: ap fp r0 r10 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CBF5:
	word32 sp_405
	byte ZN_406
	bool C_407
	bool V_408
	word32 r10_409
	word32 ap_410
	word32 r9_411
	bool Z_412
	word32 fp_413
	bool N_414
	word32 r6_415
	word32 r0_416
	word32 r2_417
	byte CZN_418
	byte CZ_419
	word32 pc_420
	byte VZN_421
	word32 r7_422
	byte CVZN_423
	word32 r3_424
	word32 r8_425
	call Mem141[0x000192BC:word32] + 2 (retsize: 4; depth: 244)
		uses: ap_376,C_403,CVZN_389,CZ_385,CZN_384,dwLocE4_364,dwLocE8_367,dwLocEC_398,dwLocF0_401,dwLocF4,dwLocF8,fp_379,N_380,pc_386,r0_382,r10_375,r2_383,r3_390,r6_381,r7_388,r8_391,r9_377,sp_399,V_404,VZN_387,Z_393,ZN_402
		defs: ap_410,C_407,CVZN_423,CZ_419,CZN_418,fp_413,N_414,pc_420,r0_416,r10_409,r2_417,r3_424,r6_415,r7_422,r8_425,r9_411,sp_405,V_408,VZN_421,Z_412,ZN_406
	Mem427[r6_415 + 0x00010CF0:word32] = 0x00000000
	byte ZN_437
	bool C_438
	bool V_439
	word32 r10_440
	word32 r9_442
	bool Z_443
	word32 fp_444
	bool N_445
	word32 r6_446
	word32 r0_447
	word32 r2_448
	byte CZN_449
	byte CZ_450
	word32 pc_451
	byte VZN_452
	word32 r7_453
	byte CVZN_454
	word32 r3_455
	word32 r8_456
	call Mem427[0x00019284:word32] + 2 (retsize: 4; depth: 252)
		uses: ap_410,C_434,CVZN_423,CZ_419,CZN_418,dwLocE4_364,dwLocE8_367,dwLocEC_398,dwLocF0_401,dwLocF4_429,dwLocF8_432,fp_413,N_414,pc_420,r0_416,r10_409,r2_417,r3_424,r6_415,r7_422,r8_425,r9_411,sp_430,V_435,VZN_421,Z_412,ZN_433
		defs: ap_441,C_438,CVZN_454,CZ_450,CZN_449,fp_444,N_445,pc_451,r0_447,r10_440,r2_448,r3_455,r6_446,r7_453,r8_456,r9_442,sp_436,V_439,VZN_452,Z_443,ZN_437
	branch r0_447 == 0x00000000 l0000CC2B
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF18 r10:<invalid> r9:<invalid> -232(fp):r6 + 0x00010BBC -228(fp):r8 + 1705

l0000CC1F:
	branch Mem427[r10_440:word32] == 0x00000011 l0000CC2B
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF08 r10:<invalid> r9:<invalid> -248(fp):r6 + 0x00010BBC -244(fp):0x00000000 -240(fp):r6 + 0x00010BBC -236(fp):r8 + 1717 -232(fp):r6 + 0x00010BBC -228(fp):r8 + 1705

l0000CC24:
	Mem465[r6_446 + 0x00010CF0:word32] = 0x00000001
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF08 r10:<invalid> r9:<invalid> -248(fp):r6 + 0x00010BBC -244(fp):0x00000000 -240(fp):r6 + 0x00010BBC -236(fp):r8 + 1717 -232(fp):r6 + 0x00010BBC -228(fp):r8 + 1705

l0000CB6A:
	Mem263[Mem263[r6 + 0x00010CC4:word32]:byte] = 0x5D
	word32 r6_275
	word32 fp_277
	word32 r0_279 = fn0000E2EA(ap, fp, out r6_275, out ap_153, out fp_277, out sp_152)
	branch r0_279 != 0x00000000 l0000CB9B
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>

l0000CB9B:
	Mem285[r6_275 + 0x00010CF0:word32] = 0x00000000
	Mem287[sp_152 - 0x00000004:word32] = 0x00000000
	Mem290[sp_152 - 0x00000008:word32] = r6_275 + 0x00010ABC
	word32 sp_294
	byte ZN_295
	bool C_296
	bool V_297
	word32 r10_298
	word32 ap_299
	word32 r9_300
	bool Z_301
	word32 fp_302
	bool N_303
	word32 r6_304
	word32 r0_305
	word32 r2_306
	byte CZN_307
	byte CZ_308
	word32 pc_309
	byte VZN_310
	word32 r7_311
	byte CVZN_312
	word32 r3_313
	word32 r8_314
	call Mem290[0x00019284:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_276,C_292,CVZN,CZ,CZN_47,dwLocE4_265,dwLocE8_268,dwLocEC_271,dwLocF0,dwLocF4,dwLocF8,fp_277,N,pc,r0_279,r10_4,r2_261,r3,r6_275,r7,r8,r9_6,sp_288,V_293,VZN,Z_281,ZN_291
		defs: ap_299,C_296,CVZN_312,CZ_308,CZN_307,fp_302,N_303,pc_309,r0_305,r10_298,r2_306,r3_313,r6_304,r7_311,r8_314,r9_300,sp_294,V_297,VZN_310,Z_301,ZN_295
	branch r0_305 == 0x00000000 l0000CBC4
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CBC4:
	Mem358[r6_304 + 0x00010AB8:word32] = 0x00000001
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CBB4:
	branch Mem290[r10_298:word32] == 0x00000011 l0000CBCB
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CBB9:
	Mem353[r6_304 + 0x00010CF0:word32] = 0x00000001
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CBCB:
	Mem321[sp_294 - 0x00000004:word32] = r6_304 + 0x00010ABC
	Mem324[sp_294 - 0x00000008:word32] = r6_304 + 0x00010BBC
	byte ZN_329
	bool C_330
	bool V_331
	word32 r10_332
	word32 r9_334
	bool Z_335
	word32 fp_336
	bool N_337
	word32 r6_338
	word32 r0_339
	word32 r2_340
	byte CZN_341
	byte CZ_342
	word32 pc_343
	byte VZN_344
	word32 r7_345
	byte CVZN_346
	word32 r3_347
	word32 r8_348
	call Mem324[0x000192BC:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_299,C_326,CVZN_312,CZ_308,CZN_307,dwLocE4_265,dwLocE8_268,dwLocEC_271,dwLocF0,dwLocF4,dwLocF8,fp_302,N_303,pc_309,r0_305,r10_298,r2_306,r3_313,r6_304,r7_311,r8_314,r9_300,sp_322,V_327,VZN_310,Z_316,ZN_325
		defs: ap_333,C_330,CVZN_346,CZ_342,CZN_341,fp_336,N_337,pc_343,r0_339,r10_332,r2_340,r3_347,r6_338,r7_345,r8_348,r9_334,sp_328,V_331,VZN_344,Z_335,ZN_329
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CB98:
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CC2B:
	word32 sp_154 = sp_152 - 0x00000004
	Mem156[sp_154:word32] = Mem141[ap_153 + 4:word32]
	word32 sp_160
	byte ZN_161
	bool C_162
	bool V_163
	word32 r10_164
	word32 ap_165
	word32 r9_166
	bool Z_167
	word32 fp_168
	bool N_169
	word32 r6_170
	word32 r0_171
	word32 r2_172
	byte CZN_173
	byte CZ_174
	word32 pc_175
	byte VZN_176
	word32 r7_177
	byte CVZN_178
	word32 r3_179
	word32 r8_180
	call Mem156[0x000192C4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_153,C_158,CVZN,CZ,CZN_47,dwLocE4_150,dwLocE8_151,dwLocEC_149,dwLocF0_146,dwLocF4_147,dwLocF8_148,fp,N,pc,r0,r10_4,r2,r3,r6,r7,r8,r9_6,sp_154,V_159,VZN,Z_143,ZN_157
		defs: ap_165,C_162,CVZN_178,CZ_174,CZN_173,fp_168,N_169,pc_175,r0_171,r10_164,r2_172,r3_179,r6_170,r7_177,r8_180,r9_166,sp_160,V_163,VZN_176,Z_167,ZN_161
	word32 r2_182 = Mem156[r6_170 + 0x00010CDC:word32] - (r6_170 + 0x00010ABC)
	word32 r0_183 = r0_171 + r2_182
	branch r0_183 <=u 0x000000FF l0000CC54
// DataOut: ap fp r0 r2 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -248(fp):r6 + 0x00010BBC -244(fp):0x00000000 -240(fp):r6 + 0x00010BBC -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid>

l0000CC54:
	Mem196[sp_160 - 0x00000004:word32] = Mem156[ap_165 + 4:word32]
	Mem199[sp_160 - 0x00000008:word32] = Mem196[r6_170 + 0x00010CDC:word32]
	word32 sp_203
	byte ZN_204
	bool C_205
	bool V_206
	word32 r10_207
	word32 ap_208
	word32 r9_209
	bool Z_210
	word32 fp_211
	bool N_212
	word32 r6_213
	word32 r0_214
	word32 r2_215
	byte CZN_216
	byte CZ_217
	word32 pc_218
	byte VZN_219
	word32 r7_220
	byte CVZN_221
	word32 r3_222
	word32 r8_223
	call Mem199[0x000192BC:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_165,C_201,CVZN_178,CZ_185,CZN_184,dwLocE4_150,dwLocE8_151,dwLocEC_149,dwLocF0_146,dwLocF4_147,dwLocF8_148,fp_168,N_169,pc_175,r0_183,r10_164,r2_182,r3_179,r6_170,r7_177,r8_180,r9_166,sp_197,V_202,VZN_176,Z_167,ZN_200
		defs: ap_208,C_205,CVZN_221,CZ_217,CZN_216,fp_211,N_212,pc_218,r0_214,r10_207,r2_215,r3_222,r6_213,r7_220,r8_223,r9_209,sp_203,V_206,VZN_219,Z_210,ZN_204
	Mem226[sp_203 - 0x00000004:word32] = Mem199[ap_208 + 4:word32]
	word32 sp_230
	byte ZN_231
	bool C_232
	bool V_233
	word32 r10_234
	word32 ap_235
	word32 r9_236
	bool Z_237
	word32 fp_238
	bool N_239
	word32 r6_240
	word32 r0_241
	word32 r2_242
	byte CZN_243
	byte CZ_244
	word32 pc_245
	byte VZN_246
	word32 r7_247
	byte CVZN_248
	word32 r3_249
	word32 r8_250
	call Mem226[0x000192C4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_208,C_228,CVZN_221,CZ_217,CZN_216,dwLocE4_150,dwLocE8_151,dwLocEC_149,dwLocF0_146,dwLocF4_147,dwLocF8_148,fp_211,N_212,pc_218,r0_214,r10_207,r2_215,r3_222,r6_213,r7_220,r8_223,r9_209,sp_224,V_229,VZN_219,Z_210,ZN_227
		defs: ap_235,C_232,CVZN_248,CZ_244,CZN_243,fp_238,N_239,pc_245,r0_241,r10_234,r2_242,r3_249,r6_240,r7_247,r8_250,r9_236,sp_230,V_233,VZN_246,Z_237,ZN_231
	Mem252[r6_240 + 0x00010CDC:word32] = Mem226[r6_240 + 0x00010CDC:word32] + r0_241
	word32 sp_258
	*spOut = fp_238 - 0x00000004
	word32 fp_259
	*fpOut = Mem252[fp_238 + 0x0000000C:word32]
	word32 ap_260
	*apOut = Mem252[fp_238 + 0x00000008:word32]
	return r2_242
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -248(fp):r6 + 0x00010BBC -244(fp):0x00000000 -240(fp):r6 + 0x00010BBC -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid>

l0000CC50:
	word32 sp_191
	*spOut = fp_168 - 0x00000004
	word32 fp_192
	*fpOut = Mem156[fp_168 + 0x0000000C:word32]
	word32 ap_193
	*apOut = Mem156[fp_168 + 0x00000008:word32]
	return r2_182
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -248(fp):r6 + 0x00010BBC -244(fp):0x00000000 -240(fp):r6 + 0x00010BBC -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid>

l0000CA99:
// DataOut: ap fp r2 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CC78:
	branch r9_6 != 0x00000004 l0000CCA2
// DataOut: ap fp r2 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CCA2:
	branch r9_6 != 0x00000005 l0000CCAA
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>

l0000CCAA:
	word32 sp_137
	*spOut = fp - 0x00000004
	word32 fp_138
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_139
	*apOut = Mem0[fp + 0x00000008:word32]
	return r2
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>

l0000CCA7:
	word32 sp_130
	*spOut = fp - 0x00000004
	word32 fp_131
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_132
	*apOut = Mem0[fp + 0x00000008:word32]
	return r2
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>

l0000CC7D:
	branch Mem0[r6 + 0x00010CF0:word32] == 0x00000000 l0000CC89
// DataOut: ap fp r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CC89:
	Mem82[Mem82[r6 + 0x00010CDC:word32]:byte] = 0x00
	word32 sp_93
	byte ZN_94
	bool C_95
	bool V_96
	word32 r10_97
	word32 ap_98
	word32 r9_99
	bool Z_100
	word32 fp_101
	bool N_102
	word32 r6_103
	word32 r0_104
	word32 r2_105
	byte CZN_106
	byte CZ_107
	word32 pc_108
	byte VZN_109
	word32 r7_110
	byte CVZN_111
	word32 r3_112
	word32 r8_113
	call Mem82[0x000192BC:word32] + 2 (retsize: 4; depth: 236)
		uses: ap,C_90,CVZN,CZ,CZN_50,dwLocE4_85,dwLocE8_88,dwLocEC,dwLocF0,dwLocF4,dwLocF8,fp,N,pc,r0,r10_4,r2,r3,r6,r7,r8,r9_6,sp_86,V_91,VZN,Z_55,ZN_89
		defs: ap_98,C_95,CVZN_111,CZ_107,CZN_106,fp_101,N_102,pc_108,r0_104,r10_97,r2_105,r3_112,r6_103,r7_110,r8_113,r9_99,sp_93,V_96,VZN_109,Z_100,ZN_94
	word32 sp_119
	*spOut = fp_101 - 0x00000004
	word32 fp_120
	*fpOut = Mem82[fp_101 + 0x0000000C:word32]
	word32 ap_121
	*apOut = Mem82[fp_101 + 0x00000008:word32]
	return r2_105
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>

l0000CC85:
	word32 sp_63
	*spOut = fp - 0x00000004
	word32 fp_64
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_65
	*apOut = Mem0[fp + 0x00000008:word32]
	return r2
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>

fn0000C6FA_exit:
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> pc:pc + 0x00000004 r3:<invalid> r8:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -248(fp):r6 + 0x00010BBC -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid>



word32 fn0000CE52(word32 ap, word32 fp, ptr32 & r3Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: fp r0 r3
// Trashed: CVZN ap fp r0 r1 r2 r3 sp
// Preserved:
fn0000CE52_entry:
// DataOut: ap fp pc r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000CE52:
	word32 r0_5 = Mem0[ap + 4:word32]
	branch r0_5 != 0x00000001 l0000CE64
// DataOut: ap fp pc r0 r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000CE64:
	branch r0_5 == 0x00000002 l0000CE85
// DataOut: ap fp pc r0 r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE69:
	branch r0_5 < 0x00000009 l0000CE73
// DataOut: ap fp pc r0 r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE6E:
	branch r0_5 <= 0x0000000B l0000CE85
// DataOut: ap fp pc r0 r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE73:
	branch r0_5 < 0x00000050 l0000CE8C
// DataOut: ap fp pc r0 r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE7C:
	branch r0_5 > 0x00000052 l0000CE8C
// DataOut: ap fp pc r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE8C:
// DataOut: ap fp pc r0 r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE85:
// DataOut: ap fp pc r0 r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE8F:
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE5E:
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE92:
	branch Mem0[ap + 4:word32] != 0x00000000 l0000CEA0
// DataOut: ap fp pc r0 r1 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l0000CEA0:
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r3:<invalid> r1:<invalid>
// LocalsOut: fp(32)

l0000CE9A:
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r3:<invalid> r1:<invalid>
// LocalsOut: fp(32)

l0000CEB0:
	word32 sp_24
	byte CVZN_25
	word32 ap_26
	word32 r0_27
	byte ZN_28
	bool C_29
	bool V_30
	byte CZN_31
	bool Z_32
	word32 r3_33
	bool N_34
	word32 r1_35
	byte VZN_36
	word32 r2_37
	word32 fp_38
	call Mem0[0x0001928C:word32] + 2 (retsize: 4; depth: 12)
		uses: ap,C_22,CZN_11,dwLoc08_20,N_9,r0_12,r1_13,r2_18,r3_10,sp_19,V_23,Z_15,ZN_21
		defs: ap_26,C_29,CVZN_25,CZN_31,fp_38,N_34,r0_27,r1_35,r2_37,r3_33,sp_24,V_30,VZN_36,Z_32,ZN_28
	word32 fp_40
	*fpOut = Mem0[fp_38 + 0x0000000C:word32]
	return r0_27
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid>

fn0000CE52_exit:
// DataOut: fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -8(fp):<invalid>



void fn0000CEBE(word32 r0, word32 r2, word32 r3, word32 fp, word32 pc, word32 dwArg7FD6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp pc r0 r2 r3
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 sp
// Preserved:
// Stack args: Stack +7FD6(32)
fn0000CEBE_entry:
// DataOut: fp pc r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +7FD6(32)

l0000CEBE:
	branch Mem0[r2 + 0x00010CF4:word32] >= 0x00000000 l0000CF36
// DataOut: fp pc r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +7FD6(32)

l0000CED0:
	word32 sp_56
	byte CVZN_57
	byte ZN_58
	bool C_59
	bool V_60
	word32 r2_61
	bool N_62
	bool Z_63
	word32 fp_64
	word32 pc_65
	word32 r0_66
	byte VZN_67
	word32 ap_68
	word32 r3_69
	byte CZN_70
	word32 r1_71
	call Mem0[pc:word32] + 2 (retsize: 4; depth: 44)
		uses: ap,C_50,CVZN,CZN,dwLoc24_45,dwLoc28_48,fp,N_6,pc_53,qwLoc20_42,r0,r1,r2,r3,sp_46,V_51,VZN,Z,ZN_49
		defs: ap_68,C_59,CVZN_57,CZN_70,fp_64,N_62,pc_65,r0_66,r1_71,r2_61,r3_69,sp_56,V_60,VZN_67,Z_63,ZN_58
	Mem74[Mem74[r0_66 + 21328:word32]:real32] = Mem0[dwArg7FD6:real32]
	branch (r0_66 & 0x00000001) == 0x00000000 l0000CF13
// DataOut: fp pc r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018
// LocalsOut: fp(32)

l0000CF13:
	word32 r1_123
	branch (r3_69 & 0x00000001) == 0x00000000 l0000CF2C
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF16:
	branch ((int32) Mem74[fp_64 + -14:int16] & 0x00000001) == 0x00000000 l0000CF2C
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF1D:
	word32 r0_142 = (uint32) Mem74[fp_64 + -15:byte]
	branch r0_142 <u 0x00000005 l0000CF2C
// DataOut: fp r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 r0:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF2C:
	r1_123 = 0x00000018
// DataOut: fp r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 r0:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF26:
	r1_123 = r0_142
// DataOut: fp r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 r0:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF2F:
	Mem128[r2_61 + 0x00010CF4:word32] = r1_123
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 r0:<invalid> r1:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF36:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x00000004 r0:<invalid> r1:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

fn0000CEBE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> fp:<invalid> ap:<invalid> pc:pc + 0x00000004 r1:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CEE8:
	word32 sp_107
	byte CVZN_108
	byte ZN_109
	bool C_110
	bool V_111
	word32 r2_112
	bool N_113
	bool Z_114
	word32 fp_115
	word32 pc_116
	word32 r0_117
	byte VZN_118
	word32 ap_119
	word32 r3_120
	byte CZN_121
	word32 r1_122
	call Mem74[pc_65:word32] + 2 (retsize: 4; depth: 92)
		uses: ap_68,C_103,CVZN_57,CZN_70,dwLoc24_45,dwLoc28_48,dwLoc3C_85,dwLoc40_88,dwLoc4C_94,dwLoc50_96,dwLoc54_99,dwLoc58_101,fp_64,N_62,pc_106,qwLoc20_42,qwLoc30_80,qwLoc38_83,qwLoc48_91,r0_66,r1_71,r2_61,r3_69,sp_100,V_104,VZN_67,Z_63,ZN_102
		defs: ap_119,C_110,CVZN_108,CZN_121,fp_115,N_113,pc_116,r0_117,r1_122,r2_112,r3_120,sp_107,V_111,VZN_118,Z_114,ZN_109
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000



void fn0000CF42(word32 r2, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000CF42_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000CF42_entry:
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000CF42:
	word32 sp_24
	byte CVZN_25
	byte ZN_26
	bool C_27
	bool V_28
	word32 r2_29
	word32 fp_30
	byte CZN_31
	bool N_32
	word32 r4_33
	call Mem0[0x000192D0:word32] + 2 (retsize: 4; depth: 68)
		uses: C_21,dwLoc30_6,dwLoc34_9,dwLoc38_12,dwLoc3C_15,dwLoc40_19,fp,r2,sp_16,V_22,ZN_20
		defs: C_27,CVZN_25,CZN_31,fp_30,N_32,r2_29,r4_33,sp_24,V_28,ZN_26
	branch Mem0[r2_29 + 1748:byte] < 0x36 l0000CF80
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000CF80:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000044 -68(fp):fp + -44 -64(fp):fp + -44 -60(fp):r2 + 1767 -56(fp):r2 + 1783 -52(fp):r2 + 1791 -48(fp):r2 + 1796
// LocalsOut: fp(32)

l0000CF77:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000044 -68(fp):fp + -44 -64(fp):fp + -44 -60(fp):r2 + 1767 -56(fp):r2 + 1783 -52(fp):r2 + 1791 -48(fp):r2 + 1796
// LocalsOut: fp(32)

l0000CF85:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000044 r4:<invalid> -68(fp):fp + -44 -64(fp):fp + -44 -60(fp):r2 + 1767 -56(fp):r2 + 1783 -52(fp):r2 + 1791 -48(fp):r2 + 1796



word32 fn0000CFBA(word32 r0, word32 r6, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r6
// LiveOut: ap fp r0 r2 r3 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn0000CFBA_entry:
// DataOut: ap fp r0 r10 r11 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000CFBA:
	word32 r3_5
	*r3Out = Mem0[ap + 4:word32]
	word32 r2_6 = Mem0[ap + 8:word32]
	*r2Out = r2_6
	branch r2_6 != 0x00000000 l0000CFCA
// DataOut: fp r0 r10 r11 r2 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000CFCA:
	word32 r3_49
	word32 r4_50
	word32 r5_51
	word32 ap_52
	word32 fp_53
	word32 sp_54
	word32 r2_149
	word32 r0_55 = fn0000D39E(r0, r6, fp, out r2_149, out r3_49, out r4_50, out r5_51, out ap_52, out fp_53, out sp_54)
	word32 r3_154 = r3_49 ^ 0xFFFFFFFF
	*r3Out = r3_154
	branch Mem0[ap_52 + 12:word32] >=u 0x00000008 l0000CFE4
// DataOut: ap fp r0 r10 r11 r2 r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid>

l0000CFE4:
	word32 r2_100 = r2_149 + 0x00000001
	word32 r3_105 = (uint32) SLICE(r3_154, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_149:byte] ^ r3_154) & ~0xFFFFFF00) * 4:word32]
	word32 r3_112 = (uint32) SLICE(r3_105, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_100:byte] ^ r3_105) & ~0xFFFFFF00) * 4:word32]
	word32 r3_119 = (uint32) SLICE(r3_112, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_100 + 0x00000001:byte] ^ r3_112) & ~0xFFFFFF00) * 4:word32]
	word32 r3_126 = (uint32) SLICE(r3_119, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_100 + 0x00000002:byte] ^ r3_119) & ~0xFFFFFF00) * 4:word32]
	word32 r3_133 = (uint32) SLICE(r3_126, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_100 + 0x00000003:byte] ^ r3_126) & ~0xFFFFFF00) * 4:word32]
	word32 r3_140 = (uint32) SLICE(r3_133, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_100 + 0x00000004:byte] ^ r3_133) & ~0xFFFFFF00) * 4:word32]
	word32 r3_147 = (uint32) SLICE(r3_140, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_100 + 0x00000005:byte] ^ r3_140) & ~0xFFFFFF00) * 4:word32]
	r3_154 = (uint32) SLICE(r3_147, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_100 + 0x00000006:byte] ^ r3_147) & ~0xFFFFFF00) * 4:word32]
	*r3Out = r3_154
	Mem156[ap_52 + 12:word32] = Mem0[ap_52 + 12:word32] - 0x00000008
	r2_149 = r2_100 + 0x00000007
	*r2Out = r2_149
	branch Mem156[ap_52 + 12:word32] <u 0x00000008 l0000D0A7
// DataOut: ap fp r0 r10 r11 r2 r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>

l0000D0A4:
// DataOut: ap fp r0 r10 r11 r2 r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>

l0000CFE1:
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r1:<invalid>

l0000D0A7:
	branch Mem0[ap_52 + 12:word32] == 0x00000000 l0000D0C8
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>

l0000D0AC:
	r3_154 = (uint32) SLICE(r3_154, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_149:byte] ^ r3_154) & ~0xFFFFFF00) * 4:word32]
	*r3Out = r3_154
	word32 v28_93 = Mem0[ap_52 + 12:word32] - 0x00000001
	Mem94[ap_52 + 12:word32] = v28_93
	r2_149 = r2_149 + 0x00000001
	*r2Out = r2_149
	branch v28_93 != 0x00000000 l0000D0AC
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>

l0000D0C8:
	word32 sp_80
	*spOut = fp_53 - 0x00000004
	word32 fp_81
	*fpOut = Mem0[fp_53 + 0x0000000C:word32]
	word32 ap_82
	*apOut = Mem0[fp_53 + 0x00000008:word32]
	return r3_154 ^ 0xFFFFFFFF
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>

l0000CFC7:
	word32 sp_38
	*spOut = fp - 0x00000004
	word32 fp_39
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_40
	*apOut = Mem0[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid>

fn0000CFBA_exit:
// DataOut: ap fp r0 r2 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r4:<invalid> r1:<invalid>



void fn0000D0D6(word32 r0, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
fn0000D0D6_entry:
// DataOut: ap fp r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D0D6:
	byte CVZN_13
	word32 r4_14
	byte ZN_15
	bool C_16
	bool V_17
	word32 ap_18
	word32 r0_19
	word32 r5_20
	bool Z_21
	word32 r2_22
	byte VZN_23
	word32 fp_24
	word32 r3_25
	word32 r6_26
	bool N_27
	word32 r1_28
	word32 r7_29
	word32 r8_30
	word32 sp_12
	call Mem0[0x000192CC:word32] + 2 (retsize: 4; depth: 12)
		uses: ap,C_10,dwLoc08_8,r4_4,sp_5,V_11,ZN_9
		defs: ap_18,C_16,CVZN_13,fp_24,N_27,r0_19,r1_28,r2_22,r3_25,r4_14,r5_20,r6_26,r7_29,r8_30,sp_12,V_17,VZN_23,Z_21,ZN_15
	word32 r5_31 = r0_19
	branch r0_19 == 0x00000000 l0000D10B
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D0EF:
	branch (Mem0[r4_14 + (int32) (Mem0[r0_19:byte] & ~0x80) * 4:word32] & 0x00000008) == 0x00000000 l0000D10B
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r4:<invalid> r5:r0 -8(fp):<invalid>
// LocalsOut: fp(32)

l0000D0FC:
	r5_31 = r5_31 + 0x00000001
	branch (Mem0[r4_14 + (int32) (Mem0[r5_31:byte] & ~0x80) * 4:word32] & 0x00000008) != 0x00000000 l0000D0FC
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000D10B:
	branch r5_31 == 0x00000000 l0000D113
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000D10F:
	branch Mem0[r5_31:byte] != 0x00 l0000D13F
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000D113:
	byte CVZN_446
	word32 r4_447
	byte ZN_448
	bool C_449
	bool V_450
	word32 ap_451
	word32 r0_452
	word32 r5_453
	bool Z_454
	word32 r2_455
	byte VZN_456
	word32 fp_457
	word32 r3_458
	word32 r6_459
	bool N_460
	word32 r1_461
	word32 r7_462
	word32 r8_463
	call Mem0[0x000192CC:word32] + 2 (retsize: 4; depth: 16)
		uses: ap_18,C_443,CVZN_13,dwLoc08_8,dwLoc0C_441,fp_24,N_27,r0_39,r1_28,r2_37,r3_25,r4_14,r5_38,r6_26,r7_29,r8_30,sp_439,V_444,VZN_36,Z_41,ZN_442
		defs: ap_451,C_449,CVZN_446,fp_457,N_460,r0_452,r1_461,r2_455,r3_458,r4_447,r5_453,r6_459,r7_462,r8_463,sp_445,V_450,VZN_456,Z_454,ZN_448
	r5_31 = r0_452
	branch r0_452 == 0x00000000 l0000D13F
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -8(fp):<invalid>

l0000D122:
	branch (Mem0[r4_447 + (int32) (Mem0[r0_452:byte] & ~0x80) * 4:word32] & 0x00000008) == 0x00000000 l0000D13F
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D12F:
// DataOut: ap fp r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D130:
	r5_31 = r5_31 + 0x00000001
	branch (Mem0[r4_447 + (int32) (Mem0[r5_31:byte] & ~0x80) * 4:word32] & 0x00000008) != 0x00000000 l0000D130
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D13F:
	branch r5_31 == 0x00000000 l0000D147
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D143:
	branch Mem0[r5_31:byte] != 0x00 l0000D148
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D148:
	word32 sp_94 = sp_12 - 0x00000004
	Mem95[sp_94:word32] = r5_31
	word32 sp_99
	byte CVZN_100
	word32 r4_101
	byte ZN_102
	bool C_103
	bool V_104
	word32 ap_105
	word32 r0_106
	word32 r5_107
	bool Z_108
	word32 r2_109
	byte VZN_110
	word32 fp_111
	word32 r3_112
	word32 r6_113
	bool N_114
	word32 r1_115
	word32 r7_116
	word32 r8_117
	call Mem95[0x000192C4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_59,C_97,CVZN_56,dwLoc08_8,dwLoc0C_44,fp_58,N_48,r0_54,r1_47,r2_52,r3_50,r4_55,r5_53,r6_49,r7_46,r8_45,sp_94,V_98,VZN_51,Z_91,ZN_96
		defs: ap_105,C_103,CVZN_100,fp_111,N_114,r0_106,r1_115,r2_109,r3_112,r4_101,r5_107,r6_113,r7_116,r8_117,sp_99,V_104,VZN_110,Z_108,ZN_102
	Mem120[sp_99 - 0x00000004:word32] = r0_106 + 0x00000001
	word32 sp_124
	byte CVZN_125
	word32 r4_126
	byte ZN_127
	bool C_128
	bool V_129
	word32 ap_130
	word32 r0_131
	word32 r5_132
	bool Z_133
	word32 r2_134
	byte VZN_135
	word32 fp_136
	word32 r3_137
	word32 r6_138
	bool N_139
	word32 r1_140
	word32 r7_141
	word32 r8_142
	call Mem120[0x000192B4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_105,C_122,CVZN_100,dwLoc08_8,dwLoc0C_44,fp_111,N_114,r0_118,r1_115,r2_109,r3_112,r4_101,r5_107,r6_113,r7_116,r8_117,sp_119,V_123,VZN_110,Z_108,ZN_121
		defs: ap_130,C_128,CVZN_125,fp_136,N_139,r0_131,r1_140,r2_134,r3_137,r4_126,r5_132,r6_138,r7_141,r8_142,sp_124,V_129,VZN_135,Z_133,ZN_127
	branch r0_131 != 0x00000000 l0000D177
// DataOut: ap fp r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D177:
	Mem149[sp_124 - 0x00000004:word32] = r5_132
	Mem151[sp_124 - 0x00000008:word32] = r0_131
	word32 sp_155
	byte CVZN_156
	word32 r4_157
	byte ZN_158
	bool C_159
	bool V_160
	word32 ap_161
	word32 r0_162
	word32 r5_163
	bool Z_164
	word32 r2_165
	byte VZN_166
	word32 fp_167
	word32 r3_168
	word32 r6_169
	bool N_170
	word32 r7_172
	word32 r8_173
	word32 r1_171
	call Mem151[0x000192BC:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_130,C_153,CVZN_125,dwLoc08_8,dwLoc0C_44,fp_136,N_139,r0_131,r1_140,r2_134,r3_143,r4_126,r5_132,r6_138,r7_141,r8_142,sp_150,V_154,VZN_135,Z_145,ZN_152
		defs: ap_161,C_159,CVZN_156,fp_167,N_170,r0_162,r1_171,r2_165,r3_168,r4_157,r5_163,r6_169,r7_172,r8_173,sp_155,V_160,VZN_166,Z_164,ZN_158
	word32 r2_174 = r3_168
	word32 r6_175 = 0x00000000
// DataOut: ap fp r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D188:
	r6_175 = r6_175 + 0x00000001
	byte v24_186 = Mem151[r2_174:byte]
	branch v24_186 == 0x00 l0000D1AF
// DataOut: ap fp r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D18F:
	branch (Mem151[r4_157 + (int32) (v24_186 & ~0x80) * 4:word32] & 0x00000008) != 0x00000000 l0000D1AF
// DataOut: ap fp r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D19B:
// DataOut: ap fp r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D19C:
	r2_174 = r2_174 + 0x00000001
	byte v26_428 = Mem151[r2_174:byte]
	branch v26_428 == 0x00 l0000D1AF
// DataOut: ap fp r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1A3:
	branch (Mem151[r4_157 + (int32) (v26_428 & ~0x80) * 4:word32] & 0x00000008) == 0x00000000 l0000D19C
// DataOut: ap fp r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1AF:
	byte v29_195 = Mem151[r2_174:byte]
	r1_171 = DPB(r1_171, v29_195, 0)
	branch v29_195 == 0x00 l0000D1D8
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1B4:
	branch (Mem151[r4_157 + (int32) (v29_195 & ~0x80) * 4:word32] & 0x00000008) == 0x00000000 l0000D1D8
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1C1:
// DataOut: ap fp r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1C4:
	r2_174 = r2_174 + 0x00000001
	byte v31_408 = Mem151[r2_174:byte]
	r1_171 = DPB(r1_171, v31_408, 0)
	branch v31_408 == 0x00 l0000D1D8
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1CB:
	branch (Mem151[r4_157 + (int32) (v31_408 & ~0x80) * 4:word32] & 0x00000008) != 0x00000000 l0000D1C4
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1D8:
	branch (byte) r1_171 != 0x00 l0000D188
// DataOut: ap fp r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1DC:
	Mem214[sp_155 - 0x00000004:word32] = r6_175 + Mem151[Mem151[ap_161 + 4:word32]:word32] + 0x00000001 << 2
	word32 sp_217
	byte CVZN_218
	word32 r4_219
	byte ZN_220
	bool C_221
	bool V_222
	word32 ap_223
	word32 r0_224
	word32 r5_225
	bool Z_226
	word32 r2_227
	byte VZN_228
	word32 fp_229
	word32 r6_231
	bool N_232
	word32 r1_233
	word32 r7_234
	word32 r8_235
	word32 r3_230
	call Mem214[0x000192B4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_161,C_216,CVZN_156,dwLoc08_8,dwLoc0C_44,fp_167,N_177,r0_204,r1_201,r2_211,r3_168,r4_157,r5_163,r6_185,r7_209,r8_173,sp_212,V_208,VZN_215,Z_206,ZN_205
		defs: ap_223,C_221,CVZN_218,fp_229,N_232,r0_224,r1_233,r2_227,r3_230,r4_219,r5_225,r6_231,r7_234,r8_235,sp_217,V_222,VZN_228,Z_226,ZN_220
	branch r0_224 != 0x00000000 l0000D215
// DataOut: ap fp r3 r4 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D215:
	word32 r5_268 = Mem214[ap_223 + 8:word32]
	word32 r2_269 = Mem214[r5_268:word32]
	Mem271[r5_268:word32] = Mem214[r5_268:word32] + 0x00000004
	Mem273[r0_224:word32] = Mem271[r2_269:word32]
	word32 r6_267 = r0_224 + 0x00000004
// DataOut: ap fp r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D22C:
	Mem284[r6_267:word32] = r3_230
	r6_267 = r6_267 + 0x00000004
	word32 r0_286 = (int32) Mem284[r3_230:int8]
	branch r0_286 == 0x00000000 l0000D258
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D234:
	branch (Mem284[r4_219 + (r0_286 & ~0xFFFFFF80) * 4:word32] & 0x00000008) != 0x00000000 l0000D258
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D241:
// DataOut: ap fp r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D244:
	r3_230 = r3_230 + 0x00000001
	r0_286 = (int32) Mem284[r3_230:int8]
	branch r0_286 == 0x00000000 l0000D258
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D24B:
	branch (Mem284[r4_219 + (r0_286 & ~0xFFFFFF80) * 4:word32] & 0x00000008) == 0x00000000 l0000D244
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D258:
	branch r0_286 == 0x00000000 l0000D25E
// DataOut: ap fp r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D25C:
	Mem369[r3_230:byte] = 0x00
	r3_230 = r3_230 + 0x00000001
// DataOut: ap fp r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D25E:
	word32 r0_301 = (int32) Mem284[r3_230:int8]
	branch r0_301 == 0x00000000 l0000D284
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D263:
	branch (Mem284[r4_219 + (r0_301 & ~0xFFFFFF80) * 4:word32] & 0x00000008) == 0x00000000 l0000D284
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D270:
	r3_230 = r3_230 + 0x00000001
	r0_301 = (int32) Mem284[r3_230:int8]
	branch r0_301 == 0x00000000 l0000D284
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D277:
	branch (Mem284[r4_219 + (r0_301 & ~0xFFFFFF80) * 4:word32] & 0x00000008) != 0x00000000 l0000D270
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D284:
	branch r0_301 != 0x00000000 l0000D22C
// DataOut: ap fp r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D288:
	word32 r7_314 = r7_234 + Mem284[Mem284[ap_223 + 4:word32]:word32]
	word32 v40_315 = Mem284[ap_223 + 4:word32] - 0x00000001
	Mem316[Mem316[ap_223 + 4:word32]:word32] = v40_315
	branch v40_315 == 0x00000000 l0000D2AA
// DataOut: ap fp r0 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D295:
	word32 r3_336 = Mem316[ap_223 + 0x00000008:word32]
// DataOut: ap fp r0 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:ap + 4 r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D29C:
	word32 r2_341 = Mem316[r3_336:word32]
	Mem343[r3_336:word32] = Mem316[r3_336:word32] + 0x00000004
	Mem345[r6_267:word32] = Mem343[r2_341:word32]
	word32 v43_347 = Mem345[ap_223 + 4:word32] - 0x00000001
	Mem348[Mem348[ap_223 + 4:word32]:word32] = v43_347
	r6_267 = r6_267 + 0x00000004
	branch v43_347 != 0x00000000 l0000D29C
// DataOut: ap fp r0 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:ap + 4 r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D2AA:
	Mem325[r6_267:word32] = 0x00000000
	Mem327[Mem327[ap_223 + 8:word32]:word32] = r0_224
	Mem329[Mem329[ap_223 + 0x00000004:word32]:word32] = r7_314
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:ap + 4 r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1F6:
	Mem242[sp_217 - 0x00000004:word32] = r3_230
	word32 sp_246
	byte CVZN_247
	word32 r4_248
	byte ZN_249
	bool C_250
	bool V_251
	word32 ap_252
	word32 r0_253
	word32 r5_254
	bool Z_255
	word32 r2_256
	byte VZN_257
	word32 fp_258
	word32 r3_259
	word32 r6_260
	bool N_261
	word32 r1_262
	word32 r7_263
	word32 r8_264
	call Mem242[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_223,C_244,CVZN_218,dwLoc08_8,dwLoc0C_44,fp_229,N_232,r0_224,r1_233,r2_227,r3_230,r4_219,r5_225,r6_236,r7_234,r8_235,sp_241,V_245,VZN_228,Z_238,ZN_243
		defs: ap_252,C_250,CVZN_247,fp_258,N_261,r0_253,r1_262,r2_256,r3_259,r4_248,r5_254,r6_260,r7_263,r8_264,sp_246,V_251,VZN_257,Z_255,ZN_249
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D161:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D147:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn0000D0D6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r5:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn0000D39E(word32 r0, word32 r6, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r0 r6
// LiveOut: ap fp r0 r2 r3 r4 r5 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn0000D39E_entry:
	*r5Out = r5
	*r2Out = r2
	*r3Out = r3
	*r4Out = r4
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D39E:
	branch Mem0[r6:word32] != 0x00000000 l0000D3FD
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D3AC:
	word32 sp_51
	byte CVZN_52
	byte ZN_53
	bool C_54
	bool V_55
	bool Z_57
	word32 r0_58
	word32 r5_59
	word32 r4_60
	bool N_61
	word32 r3_62
	word32 r2_63
	word32 r1_64
	word32 ap_65
	call Mem0[0x000192B4:word32] + 2 (retsize: 4; depth: 12)
		uses: ap,C_47,CVZN,dwLoc08_45,fp,N,r0,r1,r2,r3,r4,r5,r6,sp_43,V_48,Z_6,ZN_46
		defs: ap_65,C_54,CVZN_52,fp_66,N_61,r0_58,r1_64,r2_63,r3_62,r4_60,r5_59,r6_56,sp_51,V_55,Z_57,ZN_53
	word32 r5_67
	*r5Out = r0_58
	branch r0_58 == 0x00000000 l0000D3FD
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D3BD:
	word32 r4_72 = 0x00000000
	word32 r3_73 = r0_58
// DataOut: fp pc r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r5:r0 -8(fp):0x00000400

l0000D3C4:
	word32 r2_106 = r4_72
	*r2Out = r2_106
	word32 r1_107 = 0x00000008
	branch 0x00000008 == 0x00000000 l0000D3EC
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3CC:
	word32 r0_115
	branch (r2_106 & 0x00000001) == 0x00000000 l0000D3E0
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3E0:
	r0_115 = (uint32) SLICE(r2_106, ui31, 1)
// DataOut: fp pc r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3CF:
	r0_115 = (uint32) SLICE(r2_106, ui31, 1) ^ 0xEDB88320
// DataOut: fp pc r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3E5:
	r2_106 = r0_115
	*r2Out = r2_106
	r1_107 = r1_107 - 0x00000001
	branch r1_107 != 0x00000000 l0000D3CC
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3EC:
	Mem97[r3_73:word32] = r2_106
	r3_73 = r3_73 + 0x00000004
	*r3Out = r3_73
	r4_72 = r4_72 + 0x00000001
	*r4Out = r4_72
	branch r4_72 <= 0x000000FF l0000D3C4
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3FA:
	Mem102[r6:word32] = r0_58
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3FD:
	word32 sp_33 = fp - 0x00000004
	*spOut = sp_33
	word32 fp_34
	*fpOut = Mem0[sp_33 + 0x00000010:word32]
	word32 ap_35
	*apOut = Mem0[sp_33 + 0x0000000C:word32]
	return Mem0[r6:word32]
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

fn0000D39E_exit:
// DataOut: ap fp r0 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r5:r0 r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -8(fp):0x00000400



word32 fn0000D406(word32 ap, word32 fp, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: fp sp
// Trashed: CVZN ap fp sp
// Preserved:
fn0000D406_entry:
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D406:
	branch Mem0[ap:word32] == 0x00000000 l0000D41F
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D414:
	word32 sp_31
	byte CVZN_32
	byte ZN_33
	bool C_34
	bool V_35
	word32 ap_36
	bool Z_37
	bool N_38
	call Mem0[0x000192B0:word32] + 2 (retsize: 4; depth: 12)
		uses: ap,C_29,CVZN,dwLoc08_27,fp,N,sp_25,V_30,Z_6,ZN_28
		defs: ap_36,C_34,CVZN_32,fp_39,N_38,sp_31,V_35,Z_37,ZN_33
	Mem41[ap_36:word32] = 0x00000000
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D41F:
	word32 sp_21 = fp - 0x00000004
	*spOut = sp_21
	return Mem0[sp_21 + 0x00000010:word32]
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> -8(fp):<invalid>

fn0000D406_exit:
// DataOut: fp sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 fp:<invalid> ap:<invalid> -8(fp):<invalid>



void fn0000D422(word32 r2, word32 r3, word32 r4, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r2 r3 r4
// LiveOut:
// Trashed: CVZN ap fp r0 sp
// Preserved:
fn0000D422_entry:
// DataOut: fp r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D422:
	word32 sp_15
	byte CVZN_16
	byte ZN_17
	bool C_18
	bool V_19
	word32 r2_20
	word32 r4_21
	word32 r3_22
	word32 r0_23
	word32 fp_24
	word32 ap_25
	call Mem0[0x0001927C:word32] + 2 (retsize: 4; depth: 20)
		uses: C_12,dwLoc08_5,dwLoc0C_7,dwLoc10_10,r2,sp_8,V_13,ZN_11
		defs: ap_25,C_18,CVZN_16,fp_24,r0_23,r2_20,r3_22,r4_21,sp_15,V_19,ZN_17
	Mem27[r2_20 + 36:word32] = -0x00000001
	Mem29[r2_20 + 0x0000C60F:word32] = r4_21 + 2
	Mem31[r2_20 + 144:word32] = r3_22
	Mem33[r2_20 + 148:word32] = r3_22 + 4
	Mem35[r2_20 + 1511:word32] = r2_20 + 167
	Mem37[r2_20 + 0x0000C6E5:word32] = 0x00000001
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000D422_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:r2 fp:<invalid> ap:<invalid> -16(fp):r2 -12(fp):0x00000000 -8(fp):0x0000C851



void fn0000D4A2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000D4A2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000D4A2_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D4A2:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0000D50E(word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut:
// Trashed: CVZN ap fp sp
// Preserved:
fn0000D50E_entry:
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D50E:
	branch Mem0[ap + 0x0000C5FB:word32] <= 0x00000000 l0000D529
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000D520:
	Mem54[ap + 132:word32] = Mem0[ap + 132:word32] + Mem0[ap + 0x0000C5FB:word32]
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D529:
	branch Mem0[ap + 0x0000C849:word32] <= 0x00000000 l0000D554
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D554:
	branch Mem0[ap + 0x0000C5FB:word32] >= 0x00000000 l0000D562
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D55C:
	Mem48[ap + 0x0000C5FB:word32] = 0x00000000
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D562:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D531:
	Mem22[ap + 0x0000C5FB:word32] = Mem0[ap + 132:word32] + Mem0[ap + 0x0000C849:word32]
	Mem24[ap + 0x0000C5F7:word32] = Mem22[ap + 0x0000C84D:word32] - Mem22[ap + 132:word32]
	Mem26[ap + 0x0000C849:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

fn0000D50E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 fp:<invalid> ap:<invalid>



void fn0000D566(word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut:
// Trashed: CVZN ap fp sp
// Preserved:
fn0000D566_entry:
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D566:
	branch Mem0[ap + 0x0000C5FB:word32] <= Mem0[ap + 132:word32] l0000D5AC
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000D5AC:
	Mem43[ap + 0x0000C849:word32] = 0x00000000
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D57B:
	branch Mem0[ap + 132:word32] >= 0x00000000 l0000D585
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D581:
	Mem37[ap + 132:word32] = 0x00000000
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D585:
	Mem28[ap + 0x0000C84D:word32] = Mem0[ap + 132:word32] + Mem0[ap + 0x0000C5F7:word32]
	Mem30[ap + 0x0000C849:word32] = Mem28[ap + 0x0000C5FB:word32] - Mem28[ap + 132:word32]
	Mem32[ap + 0x0000C5FB:word32] = Mem30[ap + 132:word32]
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D5B2:
	Mem14[ap + 132:word32] = Mem0[ap + 132:word32] - Mem0[ap + 0x0000C5FB:word32]
	return
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

fn0000D566_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 fp:<invalid> ap:<invalid>



word32 fn0000D5BE(word32 r0, word32 r4, word32 r6, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r5Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r4 r6
// LiveOut: ap fp r0 r2 r3 r5 r7 sp
// Trashed: CVZN ap fp r0 r2 r3 r5 r7 sp
// Preserved:
fn0000D5BE_entry:
	*r3Out = r3
	*r5Out = r5
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D5BE:
	word32 r2_135 = Mem0[ap + 8:word32]
	*r2Out = r2_135
	word32 sp_112 = fp - 0x00000004
	word32 r7_119
	*r7Out = r2_135
	branch r2_135 != 0x00000000 l0000D5DD
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000D5DD:
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r7:<invalid>

l0000D5E0:
	branch Mem0[r4 + 0x0000C5FB:word32] > 0x00000000 l0000D64F
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D5E8:
	word32 sp_146 = sp_112 - 0x00000004
	Mem148[sp_146:uint32] = 0x00002000
	Mem151[sp_146 - 0x00000004:word32] = Mem148[r4 + 0x0000C5F3:word32]
	Mem154[sp_146 - 0x00000008:word32] = Mem151[r4 + 0x0000C617:word32]
	byte CVZN_159
	byte ZN_160
	bool C_161
	bool V_162
	word32 r7_165
	bool Z_166
	word32 r0_167
	word32 fp_169
	bool N_170
	word32 r6_171
	byte CZN_172
	word32 r5_173
	word32 r3_174
	call Mem154[0x00019270:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_78,C_156,CVZN_74,CZN_67,fp_77,N_73,r0_75,r2_71,r3_65,r4_69,r5_66,r6_68,r7_70,sp_152,V_157,Z_72,ZN_155
		defs: ap_163,C_161,CVZN_159,CZN_172,fp_169,N_170,r0_167,r2_164,r3_174,r4_168,r5_173,r6_171,r7_165,sp_158,V_162,Z_166,ZN_160
	Mem176[r4 + 0x0000C5FB:word32] = r0_167
	branch r0_167 != 0x00000000 l0000D60E
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D60E:
	branch Mem176[r4 + 0x0000C5FB:word32] >= 0x00000000 l0000D639
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D639:
	Mem253[r4 + 0x0000C61F:word32] = Mem176[r4 + 0x0000C61F:word32] + 0x00002000
	Mem255[r4 + 0x0000C5F7:word32] = Mem253[r4 + 0x0000C5F3:word32]
// DataOut: ap fp pc r10 r11 r2 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D64F:
	word32 r5_138
	word32 r0_95 = Mem0[r4 + 0x0000C5FB:word32]
	branch r2_135 >=u r0_95 l0000D660
// DataOut: ap fp pc r0 r10 r11 r2 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D660:
	r5_138 = r0_95
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D65B:
	r5_138 = r2_135
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D663:
	word32 sp_101 = sp_112 - 0x00000004
	Mem102[sp_101:word32] = r5_138
	Mem105[sp_101 - 0x00000004:word32] = Mem102[r4 + 0x0000C5F7:word32]
	Mem108[sp_101 - 0x00000008:word32] = Mem105[ap + 4:word32]
	byte CVZN_113
	byte ZN_114
	bool C_115
	bool V_116
	word32 r2_118
	bool Z_120
	word32 r0_121
	bool N_124
	word32 r6_125
	byte CZN_126
	word32 r5_127
	word32 r3_128
	call Mem108[0x0001929C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_94,C_110,CVZN_90,CZN_96,fp_93,N_89,r0_95,r2_87,r3_100,r4_85,r5_99,r6_84,r7_86,sp_106,V_111,Z_88,ZN_109
		defs: ap_117,C_115,CVZN_113,CZN_126,fp_123,N_124,r0_121,r2_118,r3_128,r4_122,r5_127,r6_125,r7_119,sp_112,V_116,Z_120,ZN_114
	Mem130[ap + 4:word32] = Mem108[ap + 4:word32] + r3_128
	Mem132[r4 + 0x0000C5F7:word32] = Mem130[r4 + 0x0000C5F7:word32] + r3_128
	Mem134[r4 + 0x0000C5FB:word32] = Mem132[r4 + 0x0000C5FB:word32] - r3_128
	r2_135 = r2_118 - r3_128
	*r2Out = r2_135
	branch r2_135 == 0x00000000 l0000D692
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D68F:
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D616:
	Mem192[sp_112 - 0x00000004:uint32] = 0x00000401
	Mem195[sp_112 - 0x00000008:word32] = r6_171 + 36
	word32 sp_199
	byte CVZN_200
	byte ZN_201
	bool C_202
	bool V_203
	word32 ap_204
	word32 r2_205
	word32 r7_206
	bool Z_207
	word32 r0_208
	word32 r4_209
	word32 fp_210
	bool N_211
	word32 r6_212
	byte CZN_213
	word32 r5_214
	word32 r3_215
	call Mem195[0x000192C4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_163,C_197,CVZN_159,CZN_172,fp_169,N_187,r0_167,r2_164,r3_174,r4_168,r5_173,r6_171,r7_165,sp_193,V_198,Z_178,ZN_196
		defs: ap_204,C_202,CVZN_200,CZN_213,fp_210,N_211,r0_208,r2_205,r3_215,r4_209,r5_214,r6_212,r7_206,sp_199,V_203,Z_207,ZN_201
	Mem217[sp_199 - 0x00000004:word32] = r0_208
	Mem220[sp_199 - 0x00000008:word32] = r6_212 + 36
	Mem222[sp_199 - 0x0000000C:word32] = r4_209
	word32 r0_223 = Mem222[r4_209 + 0x0000C839:word32]
	word32 sp_227
	byte CVZN_228
	byte ZN_229
	bool C_230
	bool V_231
	word32 ap_232
	word32 r2_233
	word32 r7_234
	bool Z_235
	word32 r0_236
	word32 r4_237
	word32 fp_238
	bool N_239
	word32 r6_240
	byte CZN_241
	word32 r5_242
	word32 r3_243
	call r0_223 + 2 (retsize: 4; depth: 4)
		uses: ap_204,C_225,CVZN_200,CZN_213,fp_210,N_211,r0_223,r2_205,r3_215,r4_209,r5_214,r6_212,r7_206,sp_221,V_226,Z_207,ZN_224
		defs: ap_232,C_230,CVZN_228,CZN_241,fp_238,N_239,r0_236,r2_233,r3_243,r4_237,r5_242,r6_240,r7_234,sp_227,V_231,Z_235,ZN_229
	word32 sp_249
	*spOut = fp_238 - 0x00000004
	word32 fp_250
	*fpOut = Mem222[fp_238 + 0x0000000C:word32]
	word32 ap_251
	*apOut = Mem222[fp_238 + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D609:
	word32 sp_183
	*spOut = fp_169 - 0x00000004
	word32 fp_184
	*fpOut = Mem176[fp_169 + 0x0000000C:word32]
	word32 ap_185
	*apOut = Mem176[fp_169 + 0x00000008:word32]
	return r7_165 - r2_135
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D5DA:
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r7:<invalid>

l0000D692:
	word32 sp_50 = fp - 0x00000004
	*spOut = sp_50
	word32 fp_51
	*fpOut = Mem0[sp_50 + 0x00000010:word32]
	word32 ap_52
	*apOut = Mem0[sp_50 + 0x0000000C:word32]
	return r7_119
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn0000D5BE_exit:
// DataOut: ap fp r0 r2 r3 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn0000D69A(word32 r0, word32 r4, word32 r6, word32 ap, word32 fp, word32 pc, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r5Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r4 r6
// LiveOut: ap fp r0 r2 r3 r5 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r5 sp
// Preserved:
fn0000D69A_entry:
	*r3Out = r3
	*r5Out = r5
	*r2Out = r2
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D69A:
	branch Mem0[r4 + 0x0000C6C5:word32] == 0x00000000 l0000D6B7
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D6B7:
	branch Mem0[r4 + 132:word32] > 0x00000000 l0000D6CB
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000D6CB:
	branch Mem0[r4 + 0x0000C5FB:word32] <= 0x00000000 l0000D6D6
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000D6D6:
	word32 sp_179
	byte CVZN_180
	byte ZN_181
	bool C_182
	bool V_183
	bool Z_185
	word32 ap_188
	bool N_189
	word32 r2_190
	word32 r3_191
	word32 r5_192
	word32 r6_193
	byte CZN_194
	word32 pc_195
	call Mem0[0x00019270:word32] + 2 (retsize: 4; depth: 20)
		uses: ap,C_177,CVZN,CZN,dwLoc08_169,dwLoc0C_172,dwLoc10_175,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,fp,N,pc,r0,r2,r3,r4,r5,r6,sp_173,V_178,Z_6,ZN_176
		defs: ap_188,C_182,CVZN_180,CZN_194,fp_187,N_189,pc_195,r0_186,r2_190,r3_191,r4_184,r5_192,r6_193,sp_179,V_183,Z_185,ZN_181
	Mem197[r4 + 0x0000C5FB:word32] = r0
	branch r0 != 0x00000000 l0000D701
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000D701:
	branch Mem197[r4 + 0x0000C5FB:word32] >= 0x00000000 l0000D73B
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000
// LocalsOut: fp(32)

l0000D709:
	word32 sp_285
	byte CVZN_286
	byte ZN_287
	bool C_288
	bool V_289
	word32 r4_290
	bool Z_291
	word32 r0_292
	word32 fp_293
	word32 ap_294
	bool N_295
	word32 r2_296
	word32 r3_297
	word32 r5_298
	word32 r6_299
	byte CZN_300
	word32 pc_301
	call Mem197[0x000192C4:word32] + 2 (retsize: 4; depth: 28)
		uses: ap_188,C_283,CVZN_180,CZN_194,dwLoc08_169,dwLoc0C_172,dwLoc10_175,dwLoc14_278,dwLoc18_281,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,fp_187,N_210,pc_195,r0_186,r2_190,r3_191,r4_184,r5_192,r6_193,sp_279,V_284,Z_199,ZN_282
		defs: ap_294,C_288,CVZN_286,CZN_300,fp_293,N_295,pc_301,r0_292,r2_296,r3_297,r4_290,r5_298,r6_299,sp_285,V_289,Z_291,ZN_287
	word32 r2_309 = Mem197[r4_290 + 0x0000C839:word32]
	word32 sp_313
	byte CVZN_314
	byte ZN_315
	bool C_316
	bool V_317
	bool Z_319
	word32 r0_320
	word32 fp_321
	word32 ap_322
	bool N_323
	word32 r2_324
	word32 r3_325
	word32 r5_326
	word32 r6_327
	byte CZN_328
	word32 pc_329
	call r2_309 + 2 (retsize: 4; depth: 40)
		uses: ap_294,C_311,CVZN_286,CZN_300,dwLoc08_169,dwLoc0C_172,dwLoc10_175,dwLoc14_278,dwLoc18_281,dwLoc1C_303,dwLoc20_306,dwLoc24_308,dwLoc28,dwLoc2C,fp_293,N_295,pc_301,r0_292,r2_309,r3_297,r4_290,r5_298,r6_299,sp_307,V_312,Z_291,ZN_310
		defs: ap_322,C_316,CVZN_314,CZN_328,fp_321,N_323,pc_329,r0_320,r2_324,r3_325,r4_318,r5_326,r6_327,sp_313,V_317,Z_319,ZN_315
	fn000124FE(r0_320, r2_324, ap_322, pc_329)
	word32 r3_340
	r0 = fn0000CE52(ap_322, fp_321, out r3_340, out fp)
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000
// Terminates process

l0000D73B:
	Mem235[r4 + 0x0000C61F:word32] = Mem197[r4 + 0x0000C61F:word32] + 0x00002000
	Mem237[r4 + 0x0000C5F7:word32] = Mem235[r4 + 0x0000C5F3:word32]
	branch Mem237[r4 + 0x0000C5FB:word32] <= Mem237[r4 + 132:word32] l0000D790
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D790:
	Mem271[r4 + 0x0000C849:word32] = 0x00000000
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D75C:
	branch Mem237[r4 + 132:word32] >= 0x00000000 l0000D766
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D762:
	Mem265[r4 + 132:word32] = 0x00000000
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D766:
	Mem256[r4 + 0x0000C84D:word32] = Mem237[r4 + 132:word32] + Mem237[r4 + 0x0000C5F7:word32]
	Mem258[r4 + 0x0000C849:word32] = Mem256[r4 + 0x0000C5FB:word32] - Mem256[r4 + 132:word32]
	Mem260[r4 + 0x0000C5FB:word32] = Mem258[r4 + 132:word32]
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D796:
	Mem247[r4 + 132:word32] = Mem237[r4 + 132:word32] - Mem237[r4 + 0x0000C5FB:word32]
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D6F7:
	Mem203[r4 + 0x0000C5FB:word32] = 0x00000000
	word32 sp_206
	*spOut = fp - 0x00000004
	word32 fp_207
	*fpOut = Mem203[fp + 0x0000000C:word32]
	word32 ap_208
	*apOut = Mem203[fp + 0x00000008:word32]
	return -0x00000001
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D6D3:
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D79F:
	branch (Mem0[Mem0[r4 + 1511:word32] + 20:word32] & 0x00000001) == 0x00000000 l0000D7EA
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D7A9:
	word32 r2_123 = Mem0[r4 + 0x0000C5FB:word32]
	word32 r3_124 = Mem0[r4 + 0x0000C5F7:word32]
	*r3Out = r3_124
	word32 r5_126 = r2_123 - 0x00000001
	*r5Out = r5_126
	branch r2_123 == 0x00000000 l0000D7EA
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D7C2:
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D7C4:
	word32 r2_138 = (uint32) Mem0[r3_124:byte]
	word32 fp_142
	word32 sp_143
	word32 r0_144 = fn00011ED6(r0, fp, out fp_142, out sp_143)
	Mem147[r3_124:byte] = (byte) r2_138 ^ (byte) r0_144
	Mem150[sp_143 - 0x00000004:uint32] = (uint32) Mem147[r3_124:byte]
	word32 r3_154
	r0 = fn00011F06(r2_138, r0_144, fp_142, out r3_154, out fp)
	r3_124 = r3_154 + 0x00000001
	*r3Out = r3_124
	r5_126 = r5_343 - 0x00000001
	*r5Out = r5_126
	word32 r5_343 = r5_126
	branch r5_343 != 0x00000000 l0000D7C4
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D7EA:
	Mem112[r4 + 0x0000C5FB:word32] = Mem0[r4 + 0x0000C5FB:word32] - 0x00000001
	word32 r2_113 = Mem112[r4 + 0x0000C5F7:word32]
	*r2Out = r2_113
	Mem115[r4 + 0x0000C5F7:word32] = Mem112[r4 + 0x0000C5F7:word32] + 0x00000001
	word32 sp_120 = fp - 0x00000004
	*spOut = sp_120
	word32 fp_121
	*fpOut = Mem115[sp_120 + 0x00000010:word32]
	word32 ap_122
	*apOut = Mem115[sp_120 + 0x0000000C:word32]
	return (uint32) Mem115[r2_113:byte]
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D6BD:
	Mem69[r4 + 132:word32] = Mem0[r4 + 132:word32] - 0x00000001
	Mem71[r4 + 0x0000C5FB:word32] = 0x00000000
	word32 sp_74
	*spOut = fp - 0x00000004
	word32 fp_75
	*fpOut = Mem71[fp + 0x0000000C:word32]
	word32 ap_76
	*apOut = Mem71[fp + 0x00000008:word32]
	return -0x00000001
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D6B3:
	word32 sp_45
	*spOut = fp - 0x00000004
	word32 fp_46
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_47
	*apOut = Mem0[fp + 0x00000008:word32]
	return -0x00000001
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

fn0000D69A_exit:
// DataOut: ap fp r0 r2 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r1:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000



word32 fn0000DC76(word32 ap, word32 fp, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 r11 sp
// Trashed: CVZN ap fp r0 r11 sp
// Preserved:
fn0000DC76_entry:
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000DC76:
	word32 r11_4 = Mem0[0x0001934C:word32]
	*r11Out = r11_4
	branch Mem0[ap + 4:word32] != 0x00000000 l0000DC9F
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000DC9F:
	word32 r0_37 = Mem0[ap + 8:word32]
	branch r0_37 > 0x00000005 l0000DCB1
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): N
// SymbolicIn: sp:fp - 0x0000000C r11:<invalid> -12(fp):0x00000000

l0000DCB1:
	branch r0_37 < 0x00000000 l0000DCB3
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r11:<invalid> r0:<invalid> -12(fp):0x00000000

l0000DCB3:
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r11:<invalid> r0:<invalid> -12(fp):0x00000000

l0000E253:
	word32 sp_60
	*spOut = fp - 0x00000004
	word32 fp_61
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_62
	*apOut = Mem0[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r11:<invalid> r0:<invalid> -12(fp):0x00000000

l0000DCA3_1:
	word32 sp_45
	byte CVZN_46
	byte ZN_47
	bool C_48
	bool V_49
	word32 r11_50
	bool Z_51
	bool N_52
	word32 ap_53
	word32 r0_54
	word32 fp_55
	call 0x0000DCA7 + r0_37 * 0x00000002 (retsize: 4; depth: 16)
		uses: ap,C_41,CVZN_43,dwLoc0C_6,fp,N_40,r0_37,r11_4,sp_2,V_42,Z_39,ZN_38
		defs: ap_53,C_48,CVZN_46,fp_55,N_52,r0_54,r11_50,sp_45,V_49,Z_51,ZN_47
	return r0_54
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r11:<invalid> r0:<invalid> -12(fp):0x00000000

l0000DC9C:
	word32 sp_33
	*spOut = fp - 0x00000004
	word32 fp_34
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_35
	*apOut = Mem0[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r11:<invalid> -12(fp):0x00000000

fn0000DC76_exit:
// DataOut: ap fp r0 r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -12(fp):0x00000000



word32 fn0000E25A(word32 ap, word32 fp, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 sp
// Trashed: CVZN ap fp r0 r1 r2 sp
// Preserved:
fn0000E25A_entry:
// DataOut: ap fp r3 r4 r5 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000E25A:
	word32 r2_5 = Mem0[ap + 4:word32]
	word32 sp_16
	*spOut = fp - 0x00000004
	word32 fp_17
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_18
	*apOut = Mem0[fp + 0x00000008:word32]
	return (uint32) ((word16) ((uint32) Mem0[r2_5 + 1:byte] << 8) | (word16) ((uint32) Mem0[r2_5:byte]))
// DataOut: ap fp r0 r3 r4 r5 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000E25A_exit:
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid>



word32 fn0000E276(word32 ap, word32 fp, ptr32 & r2Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 r2 sp
// Trashed: CVZN ap fp r0 r1 r2 sp
// Preserved:
fn0000E276_entry:
// DataOut: ap fp pc r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000E276:
	word32 r1_5 = Mem0[ap + 4:word32]
	word32 r2_13 = ((uint32) Mem0[r1_5 + 3:byte] << 24) + ((uint32) Mem0[r1_5 + 2:byte] << 16) + ((uint32) Mem0[r1_5 + 1:byte] << 8)
	*r2Out = r2_13
	word32 sp_18
	*spOut = fp - 0x00000004
	word32 fp_19
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_20
	*apOut = Mem0[fp + 0x00000008:word32]
	return (uint32) Mem0[r1_5:byte] + r2_13
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000E276_exit:
// DataOut: ap fp r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid>



word32 fn0000E2A6(word32 r7, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r7
// LiveOut: ap fp r0 r2 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn0000E2A6_entry:
// DataOut: ap fp r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000E2A6:
	word32 r0_19 = Mem0[ap + 8:word32]
	word32 r1_15 = Mem0[ap + 4:word32]
// DataOut: ap fp r0 r1 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000E2B8:
	byte v12_22 = Mem0[r0_19:byte]
	r0_19 = r0_19 + 0x00000001
	r2 = DPB(r2, v12_22, 0)
	*r2Out = r2
	r1_15 = r1_15 + 0x00000001
	word32 r4_26 = (uint32) v12_22
	branch (r4_26 & 0x00000080) == 0x00000000 l0000E2D8
// DataOut: ap fp r0 r1 r2 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid>

l0000E2D8:
	r5 = DPB(r5, v12_22, 0)
// DataOut: ap fp r0 r1 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid>

l0000E2C7:
	r5 = DPB(r5, Mem0[r7 + (r4_26 & ~0xFFFFFF80):byte], 0)
// DataOut: ap fp r0 r1 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid>

l0000E2DB:
	Mem33[r1_15:byte] = (byte) r5
	branch r4_26 != 0x00000000 l0000E2B8
// DataOut: ap fp r0 r1 r2 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid>

l0000E2E2:
	word32 sp_43
	*spOut = fp - 0x00000004
	word32 fp_44
	*fpOut = Mem33[fp + 0x0000000C:word32]
	word32 ap_45
	*apOut = Mem33[fp + 0x00000008:word32]
	return Mem33[ap + 4:word32]
// DataOut: ap fp r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid>

fn0000E2A6_exit:
// DataOut: ap fp r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> ap:<invalid>



word32 fn0000E2EA(word32 ap, word32 fp, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 r6 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000E2EA_entry:
	*r6Out = r6
// DataOut: ap fp r10 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000E2EA:
	word32 sp_110 = fp - 0x00000004
	word32 r8_102 = Mem0[0x0001934C:word32]
	word32 r2_101 = Mem0[ap + 4:word32]
	word32 r3_100 = Mem0[ap + 8:word32]
	word32 r4_125 = Mem0[ap + 12:word32]
	branch r4_125 != 0x00000000 l0000E305
// DataOut: fp r10 r2 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000E305:
	word32 r9_124 = Mem0[0x00019298:word32]
// DataOut: fp r10 r2 r3 r4 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid>

l0000E30C:
	word32 r1_105
	byte v15_90 = Mem0[r2_101:byte]
	word32 r6_92 = (int32) v15_90
	word32 r0_93 = r6_92 & ~0xFFFFFF80
	branch (Mem0[r8_102 + r0_93 * 4:word32] & 0x00000001) == 0x00000000 l0000E32C
// DataOut: fp r0 r10 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E32C:
	r1_105 = r6_92
// DataOut: fp r1 r10 r2 r3 r4 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E31F:
	word32 sp_339 = sp_110 - 0x00000004
	Mem341[sp_339:int32] = (int32) v15_90
	byte CVZN_345
	byte ZN_347
	bool C_348
	bool V_349
	word32 ap_350
	bool Z_354
	word32 r5_356
	word32 r6_357
	byte VZN_358
	word32 r0_359
	word32 r1_360
	bool N_361
	byte CZN_364
	call r9_124 + 2 (retsize: 4; depth: 4)
		uses: ap_89,C_343,CVZN_83,CZN_81,fp_88,N_86,r0_93,r1_82,r2_78,r3_77,r4_76,r5_91,r6_92,r7_74,r8_79,r9_75,sp_339,V_96,VZN_342,Z_85,ZN_94
		defs: ap_350,C_348,CVZN_345,CZN_364,fp_362,N_361,r0_359,r1_360,r2_351,r3_352,r4_353,r5_356,r6_357,r7_363,r8_346,r9_355,sp_344,V_349,VZN_358,Z_354,ZN_347
	r1_105 = r0_359
// DataOut: fp r1 r10 r2 r3 r4 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E32F:
	word32 r1_131
	byte v25_115 = Mem0[r3_100:byte]
	word32 r6_117 = (int32) v25_115
	*r6Out = r6_117
	r7 = DPB(r7, (int8) r1_105, 0)
	word32 r0_118 = r6_117 & ~0xFFFFFF80
	branch (Mem0[r8_102 + r0_118 * 4:word32] & 0x00000001) == 0x00000000 l0000E350
// DataOut: fp r0 r10 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E350:
	r1_131 = r6_117
// DataOut: fp r1 r10 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E345:
	word32 sp_305 = sp_110 - 0x00000004
	Mem307[sp_305:int32] = (int32) v25_115
	byte CVZN_311
	byte ZN_313
	bool C_314
	bool V_315
	word32 ap_316
	bool Z_320
	word32 r5_322
	word32 r6_323
	byte VZN_324
	word32 r0_325
	word32 r1_326
	bool N_327
	byte CZN_330
	call r9_124 + 2 (retsize: 4; depth: 4)
		uses: ap_112,C_309,CVZN_106,CZN_104,fp_111,N_109,r0_118,r1_105,r2_101,r3_100,r4_99,r5_116,r6_117,r7_114,r8_102,r9_98,sp_305,V_121,VZN_308,Z_108,ZN_119
		defs: ap_316,C_314,CVZN_311,CZN_330,fp_328,N_327,r0_325,r1_326,r2_317,r3_318,r4_319,r5_322,r6_323,r7_329,r8_312,r9_321,sp_310,V_315,VZN_324,Z_320,ZN_313
	r1_131 = r0_325
// DataOut: fp r1 r10 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E353:
	branch (byte) r7 == (int8) r1_131 l0000E3BF
// DataOut: fp r10 r2 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3BF:
	branch Mem0[r2_101:byte] != 0x00 l0000E3C6
// DataOut: fp r10 r2 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3C6:
	r4_125 = r4_125 - 0x00000001
	r2_101 = r2_101 + 0x00000001
	r3_100 = r3_100 + 0x00000001
	branch r4_125 == 0x00000000 l0000E3D3
// DataOut: fp r10 r2 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3D0:
// DataOut: fp r10 r2 r3 r4 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3C3:
	word32 sp_295 = fp - 0x00000004
	*spOut = sp_295
	word32 fp_296
	*fpOut = Mem0[sp_295 + 0x00000010:word32]
	word32 ap_297
	*apOut = Mem0[sp_295 + 0x0000000C:word32]
	return 0x00000000
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E35B:
	word32 r1_160
	byte v29_145 = Mem0[r2_101:byte]
	word32 r6_147 = (int32) v29_145
	word32 r0_148 = r6_147 & ~0xFFFFFF80
	branch (Mem0[r8_102 + r0_148 * 4:word32] & 0x00000001) == 0x00000000 l0000E380
// DataOut: fp r0 r10 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E380:
	r1_160 = r6_147
// DataOut: fp r1 r10 r3 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E36E:
	word32 sp_252 = sp_110 - 0x00000004
	Mem254[sp_252:int32] = (int32) v29_145
	byte CVZN_258
	byte ZN_260
	bool C_261
	bool V_262
	word32 ap_263
	word32 r2_264
	word32 r4_266
	bool Z_267
	word32 r9_268
	word32 r5_269
	word32 r6_270
	byte VZN_271
	word32 r0_272
	word32 r1_273
	bool N_274
	byte CZN_277
	call Mem254[0x00019298:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_139,C_256,CVZN_132,CZN_142,fp_138,N_135,r0_148,r1_131,r2_127,r3_126,r4_125,r5_146,r6_147,r7_122,r8_128,r9_124,sp_252,V_151,VZN_255,Z_143,ZN_149
		defs: ap_263,C_261,CVZN_258,CZN_277,fp_275,N_274,r0_272,r1_273,r2_264,r3_265,r4_266,r5_269,r6_270,r7_276,r8_259,r9_268,sp_257,V_262,VZN_271,Z_267,ZN_260
	r1_160 = r0_272
// DataOut: fp r1 r10 r3 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E383:
	word32 r5_184
	byte v32_170 = Mem0[r3_100:byte]
	word32 r6_172 = (int32) v32_170
	*r6Out = r6_172
	word32 r7_169 = DPB(r7, (int8) r1_160, 0)
	word32 r0_173 = r6_172 & ~0xFFFFFF80
	branch (Mem0[r8_102 + r0_173 * 4:word32] & 0x00000001) == 0x00000000 l0000E3A8
// DataOut: fp r0 r10 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3A8:
	r5_184 = r6_172
// DataOut: fp r10 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E399:
	word32 sp_218 = sp_110 - 0x00000004
	Mem220[sp_218:int32] = (int32) v32_170
	word32 sp_223
	byte CVZN_224
	word32 r8_225
	byte ZN_226
	bool C_227
	bool V_228
	word32 ap_229
	word32 r2_230
	word32 r3_231
	word32 r4_232
	bool Z_233
	word32 r9_234
	word32 r5_235
	word32 r6_236
	byte VZN_237
	word32 r0_238
	bool N_240
	byte CZN_243
	call Mem220[0x00019298:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_167,C_222,CVZN_161,CZN_159,fp_166,N_164,r0_173,r1_160,r2_156,r3_155,r4_154,r5_171,r6_172,r7_169,r8_157,r9_153,sp_218,V_176,VZN_221,Z_163,ZN_174
		defs: ap_229,C_227,CVZN_224,CZN_243,fp_241,N_240,r0_238,r1_239,r2_230,r3_231,r4_232,r5_235,r6_236,r7_242,r8_225,r9_234,sp_223,V_228,VZN_237,Z_233,ZN_226
	r5_184 = r0_238
// DataOut: fp r10 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3AB:
	word32 r1_201
	branch (byte) r7_169 >= (int8) r5_184 l0000E3B8
// DataOut: fp r10 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3B8:
	r1_201 = DPB(r1_160, 0x01, 0)
// DataOut: fp r1 r10 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3B3:
	r1_201 = DPB(r1_160, -0x01, 0)
// DataOut: fp r1 r10 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3BB:
	word32 sp_207 = fp - 0x00000004
	*spOut = sp_207
	word32 fp_208
	*fpOut = Mem0[sp_207 + 0x00000010:word32]
	word32 ap_209
	*apOut = Mem0[sp_207 + 0x0000000C:word32]
	return (int32) (int8) r1_201
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E302:
// DataOut: fp r10 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid>

l0000E3D3:
	word32 sp_57 = fp - 0x00000004
	*spOut = sp_57
	word32 fp_58
	*fpOut = Mem0[sp_57 + 0x00000010:word32]
	word32 ap_59
	*apOut = Mem0[sp_57 + 0x0000000C:word32]
	return 0x00000000
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

fn0000E2EA_exit:
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>



void fn0000F457()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000F457_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000F457_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000F457:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0000F816(word32 r0, word32 r3, word32 r5, word32 r6, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r3 r5 r6 r8
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r9 sp
// Preserved:
fn0000F816_entry:
// DataOut: ap fp r0 r3 r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000F816:
	Mem10[r3 + 0x0000C5FF:word64] = 0x0000000000000000
	Mem13[r3 + 0x0000C607:word32] = 0x00000000
	Mem15[r3 + 0x0000C6D9:word32] = 0x00000001
	Mem17[r3 + 0x0000C5EF:word32] = 0x00000000
	branch Mem17[r3 + 68:word32] == 0x00000000 l0000F8AC
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000F8AC:
	branch Mem17[r3 + 12:word32] == 0x00000000 l0000F8CB
// DataOut: ap fp r0 r10 r11 r3 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:r5 + 69 r11:r5 + 78 r10:0x00000000 -8(fp):r5 + 87

l0000F8CB:
	branch fn00009B0A(r0, r8, 0x00000000, r5 + 78, ap, fp, out r3, out ap, out fp) == 0x00000000 l0000F8DA
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:r5 + 69 r11:r5 + 78 r10:0x00000000 -8(fp):r5 + 87

l0000F8D6:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 fp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -8(fp):r5 + 87

l0000F8B1:
	Mem193[r3 + 0x0000C6ED:word32] = Mem17[Mem17[0x00019374:word32]:word32]
	branch fn00009B0A(r0, r8, 0x00000000, r5 + 78, ap, fp, out r3, out ap, out fp) == 0x00000000 l0000F8DA
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:r5 + 69 r11:r5 + 78 r10:0x00000000 -8(fp):r5 + 87

l0000F8C7:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 fp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -8(fp):r5 + 87

l0000F85A:
	branch Mem17[r3 + 64:word32] != 0x00000000 l0000F8DA
// DataOut: ap fp r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:r5 + 69 r11:r5 + 78 r10:0x00000000 -8(fp):r5 + 87
// LocalsOut: fp(32)

l0000F85F:
	word32 r2_121
	word32 r3_122
	word32 ap_123
	word32 fp_124
	word32 sp_125
	word32 r0_126 = fn00010892(ap, fp, out r2_121, out r3_122, out ap_123, out fp_124, out sp_125)
	Mem128[sp_125 - 0x00000004:word32] = r0_126
	Mem131[sp_125 - 0x00000008:word32] = r5 + 96
	Mem134[sp_125 - 0x0000000C:word32] = r6 + 387
	Mem137[sp_125 - 0x00000010:word32] = r3_122 + 1515
	word32 sp_141
	byte CVZN_142
	byte ZN_143
	bool C_144
	bool V_145
	word32 r5_146
	word32 r9_147
	word32 r11_148
	word32 r10_149
	bool Z_150
	bool N_151
	word32 r3_152
	word32 r2_153
	word32 r0_154
	word32 r6_155
	word32 ap_156
	word32 fp_157
	word32 r8_158
	call Mem137[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_123,C_139,CVZN,dwLoc08_7,dwLoc0C_104,dwLoc10_107,dwLoc14_110,dwLoc18_114,dwLoc1C_117,fp_124,N,r0_126,r10_8,r11_5,r2_121,r3_122,r5,r6,r8,r9_4,sp_135,V_140,Z_88,ZN_138
		defs: ap_156,C_144,CVZN_142,fp_157,N_151,r0_154,r10_149,r11_148,r2_153,r3_152,r5_146,r6_155,r8_158,r9_147,sp_141,V_145,Z_150,ZN_143
	Mem160[sp_141 - 0x00000004:word32] = r0_154
	Mem163[sp_141 - 0x00000008:word32] = r3_152 + 1515
	Mem165[sp_141 - 0x0000000C:word32] = r3_152
	word32 ap_166 = Mem165[r3_152 + 0x0000C839:word32]
	word32 sp_170
	byte CVZN_171
	byte ZN_172
	bool C_173
	bool V_174
	word32 r5_175
	word32 r9_176
	word32 r11_177
	word32 r10_178
	bool Z_179
	bool N_180
	word32 r2_182
	word32 r0_183
	word32 r6_184
	word32 r8_187
	call ap_166 + 2 (retsize: 4; depth: 4)
		uses: ap_166,C_168,CVZN_142,dwLoc08_7,dwLoc0C_104,dwLoc10_107,dwLoc14_110,dwLoc18_114,dwLoc1C_117,fp_157,N_151,r0_154,r10_149,r11_148,r2_153,r3_152,r5_146,r6_155,r8_158,r9_147,sp_164,V_169,Z_150,ZN_167
		defs: ap_185,C_173,CVZN_171,fp_186,N_180,r0_183,r10_178,r11_177,r2_182,r3_181,r5_175,r6_184,r8_187,r9_176,sp_170,V_174,Z_179,ZN_172
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:r5 + 69 r11:r5 + 78 r10:0x00000000 -8(fp):r5 + 87

l0000F8DA:
	fn0000D566(ap, fp)
	word32 r0_64 = (uint32) Mem17[r3 + 0x0000C642:word16]
	branch r0_64 > 0x00000008 l0000F8FC
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 r2:<invalid> ap:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -56(fp):r3 -52(fp):r3 + 1515 -48(fp):r0 -44(fp):r3 + 1515 -40(fp):r6 + 387 -36(fp):r5 + 96 -32(fp):r0 -28(fp):r3 + 0x0000C701 -24(fp):r3 + 0x000045EB -20(fp):r5 + 101 -16(fp):r5 + 102 -12(fp):0x00000000 -8(fp):r5 + 87

l0000F8FC:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 r2:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -56(fp):r3 -52(fp):r3 + 1515 -48(fp):r0 -44(fp):r3 + 1515 -40(fp):r6 + 387 -36(fp):r5 + 96 -32(fp):r0 -28(fp):r3 + 0x0000C701 -24(fp):r3 + 0x000045EB -20(fp):r5 + 101 -16(fp):r5 + 102 -12(fp):0x00000000 -8(fp):r5 + 87

l0000F8E8_1:
	word32 sp_69
	byte CVZN_70
	byte ZN_71
	bool C_72
	bool V_73
	word32 r5_74
	word32 r9_75
	word32 r11_76
	word32 r10_77
	bool Z_78
	bool N_79
	word32 r3_80
	word32 r2_81
	word32 r0_82
	word32 r6_83
	word32 ap_84
	word32 fp_85
	word32 r8_86
	call 0x0000F8EC + r0_64 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_52,C_66,CVZN_62,dwLoc08_7,dwLoc0C_45,dwLoc10_46,dwLoc14_47,dwLoc18_48,dwLoc1C_49,fp_51,N_56,r0_64,r10_58,r11_59,r2_54,r3_55,r5_61,r6_53,r8_50,r9_60,sp_63,V_67,Z_57,ZN_65
		defs: ap_84,C_72,CVZN_70,fp_85,N_79,r0_82,r10_77,r11_76,r2_81,r3_80,r5_74,r6_83,r8_86,r9_75,sp_69,V_73,Z_78,ZN_71
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 r2:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -56(fp):r3 -52(fp):r3 + 1515 -48(fp):r0 -44(fp):r3 + 1515 -40(fp):r6 + 387 -36(fp):r5 + 96 -32(fp):r0 -28(fp):r3 + 0x0000C701 -24(fp):r3 + 0x000045EB -20(fp):r5 + 101 -16(fp):r5 + 102 -12(fp):0x00000000 -8(fp):r5 + 87

fn0000F816_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 r2:<invalid> ap:<invalid> r0:<invalid> fp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -56(fp):r3 -52(fp):r3 + 1515 -48(fp):r0 -44(fp):r3 + 1515 -40(fp):r6 + 387 -36(fp):r5 + 96 -32(fp):r0 -28(fp):r3 + 0x0000C701 -24(fp):r3 + 0x000045EB -20(fp):r5 + 101 -16(fp):r5 + 102 -12(fp):0x00000000 -8(fp):r5 + 87



void fn000100C2(word32 r0, word32 r2, word32 r5, word32 r7, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r5 r7
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn000100C2_entry:
// DataOut: ap fp r0 r2 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000100C2:
	word32 sp_165 = fp - 0x00000008
	branch Mem0[ap + 8:word32] >=u 0x00000004 l000100ED
// DataOut: ap fp r0 r2 r5 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000100ED:
// DataOut: ap fp r0 r2 r5 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:ap + 8

l000100F4:
	word32 sp_167 = sp_165 - 0x00000004
	Mem169[sp_167:word32] = Mem0[ap + 4:word32]
	word32 sp_174
	byte CVZN_175
	byte ZN_176
	bool C_177
	bool V_178
	word32 ap_179
	word32 r9_180
	byte CZN_181
	word32 r11_182
	word32 r0_183
	word32 r8_184
	byte CZ_185
	word32 r2_186
	bool Z_187
	word32 r7_188
	word32 r3_189
	word32 r5_190
	word32 fp_191
	bool N_192
	word32 r1_193
	word32 r4_194
	word32 r6_195
	byte VZN_196
	call r11 + 2 (retsize: 4; depth: 4)
		uses: ap_166,C_171,CVZN,CZ,CZN_6,fp,N,r0,r1,r11,r2,r3,r4,r5,r6,r7,r8,r9_4,sp_167,V_172,VZN,Z,ZN_170
		defs: ap_179,C_177,CVZN_175,CZ_185,CZN_181,fp_191,N_192,r0_183,r1_193,r11_182,r2_186,r3_189,r4_194,r5_190,r6_195,r7_188,r8_184,r9_180,sp_174,V_178,VZN_196,Z_187,ZN_176
	Mem198[sp_174 + 2:word16] = (word16) r0_183
	Mem201[sp_174 - 0x00000004:word32] = Mem198[ap_179 + 4:word32] + 0x00000002
	byte CVZN_204
	byte ZN_205
	bool C_206
	bool V_207
	byte CZN_210
	word32 r11_211
	word32 r0_212
	word32 r8_213
	byte CZ_214
	bool Z_216
	word32 r3_218
	bool N_221
	word32 r1_222
	word32 r4_223
	word32 r6_224
	byte VZN_225
	word32 r5_219
	word32 r9_209
	word32 fp_220
	call r11_182 + 2 (retsize: 4; depth: 4)
		uses: ap_179,C_177,CVZN_202,CZ_185,CZN_181,fp_191,N_192,r0_183,r1_193,r11_182,r2_186,r3_189,r4_194,r5_190,r6_195,r7_188,r8_184,r9_180,sp_199,V_178,VZN_196,Z_187,ZN_176
		defs: ap_208,C_206,CVZN_204,CZ_214,CZN_210,fp_220,N_221,r0_212,r1_222,r11_211,r2_215,r3_218,r4_223,r5_219,r6_224,r7_217,r8_213,r9_209,sp_203,V_207,VZN_225,Z_216,ZN_205
	word32 r8_226 = (uint32) (word16) r0_212
	word32 r0_227 = Mem201[r9_209:word32] - 0x00000004
	byte CZN_228 = cond(r8_226 - r0_227)
	branch r8_226 <=u r0_227 l00010184
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010184:
	word32 r1_406 = (uint32) Mem201[sp_165 + 2:word16]
	branch r1_406 >= 0x00000007 l00010190
// DataOut: ap fp r0 r1 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010190:
	byte CZ_441 = DPB(CZN_228, false, 0)
	branch r1_406 > 0x0000000C l000101A1
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101A1:
	branch CZ_441 l000101A7
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101A7:
	word32 sp_957
	byte CVZN_958
	byte ZN_959
	bool C_960
	bool V_961
	word32 ap_962
	word32 r9_963
	byte CZN_964
	word32 r11_965
	word32 r0_966
	word32 r8_967
	byte CZ_968
	word32 r2_969
	bool Z_970
	word32 r7_971
	word32 r3_972
	word32 r5_973
	word32 fp_974
	bool N_975
	word32 r1_976
	word32 r4_977
	word32 r6_978
	byte VZN_979
	call fn4000E3D8 (retsize: 4; depth: 4)
		uses: ap_208,C_439,CVZN_443,CZ_441,CZN_440,fp_220,N_438,r0_435,r1_406,r11_211,r2_215,r3_218,r4_223,r5_219,r6_224,r7_217,r8_226,r9_209,sp_203,V_442,VZN_444,Z_437,ZN_436
		defs: ap_962,C_960,CVZN_958,CZ_968,CZN_964,fp_974,N_975,r0_966,r1_976,r11_965,r2_969,r3_972,r4_977,r5_973,r6_978,r7_971,r8_967,r9_963,sp_957,V_961,VZN_979,Z_970,ZN_959
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101A3:
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101B0:
	branch r1_406 > 0x00004341 l000101BC
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101BC:
	branch r1_406 >= 0x00004453 l000101C8
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101C8:
	branch r1_406 != 0x00004453 l000101CD
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101CD:
	branch r1_406 >= 0x00004704 l000101D9
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101D9:
	branch r1_406 > 0x0000470F l000101F7
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101F7:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101D9_1:
	word32 sp_934
	byte CVZN_935
	byte ZN_936
	bool C_937
	bool V_938
	word32 ap_939
	word32 r9_940
	byte CZN_941
	word32 r11_942
	word32 r0_943
	word32 r8_944
	byte CZ_945
	word32 r2_946
	bool Z_947
	word32 r7_948
	word32 r3_949
	word32 r5_950
	word32 fp_951
	bool N_952
	word32 r1_953
	word32 r4_954
	word32 r6_955
	byte VZN_956
	call 0x000101E1 + (r1_406 - 0x00004704) * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_208,C_473,CVZN_479,CZ_477,CZN_930,fp_220,N_931,r0_435,r1_406,r11_211,r2_215,r3_218,r4_223,r5_219,r6_224,r7_217,r8_226,r9_209,sp_203,V_932,VZN_480,Z_475,ZN_474
		defs: ap_939,C_937,CVZN_935,CZ_945,CZN_941,fp_951,N_952,r0_943,r1_953,r11_942,r2_946,r3_949,r4_954,r5_950,r6_955,r7_948,r8_944,r9_940,sp_934,V_938,VZN_956,Z_947,ZN_936
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101D6:
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101CA:
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103A9:
	word32 r4_484
	branch r8_226 >=u 0x00000005 l000103B4
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103B4:
	word32 r3_890
	word32 r1_884 = Mem201[ap + 4:word32]
	branch (uint32) Mem201[r1_884 + 8:byte] == 0x00000000 l000103C8
// DataOut: ap fp r0 r1 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103C8:
	Mem908[sp_165 - 0x00000004:word32] = 0x00000000
	Mem910[sp_165 - 0x00000008:word32] = 0x00000005
	Mem912[sp_165 - 0x0000000C:word32] = r8_226
	Mem914[sp_165 - 0x00000010:word32] = r1_884
	r3_890 = fn000105F2(ap, fp_220, out r2, out r7, out r8_226, out r9_209, out ap, out fp_220, out sp_165)
// DataOut: ap fp r0 r2 r3 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103BE:
	r3_890 = 0x00004001
// DataOut: ap fp r0 r2 r3 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103D8:
	r4_484 = r3_890
// DataOut: ap fp r0 r2 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103AE:
	r4_484 = 0x0000004F
// DataOut: ap fp r0 r2 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103DB:
	word32 r6_495 = r4_484
	branch r4_484 != 0x00000000 l000103E3
// DataOut: ap fp r0 r2 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103E3:
	branch Mem201[r2 + 64:word32] == 0x00000000 l00010427
// DataOut: ap fp r2 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103E8:
	word32 sp_794 = sp_165 - 0x00000004
	Mem795[sp_794:word32] = 0x00000001
	Mem799[sp_794 - 0x00000004:word32] = r2 + 0x000045EB
	Mem802[sp_794 - 0x00000008:word32] = r2 + 0x0000C701
	word32 r2_806
	word32 r3_807
	word32 ap_808
	word32 fp_809
	word32 sp_810
	word32 r0_811 = fn00010892(ap, fp_220, out r2_806, out r3_807, out ap_808, out fp_809, out sp_810)
	Mem813[sp_810 - 0x00000004:word32] = r0_811
	Mem816[sp_810 - 0x00000008:word32] = r7 + 215
	Mem819[sp_810 - 0x0000000C:word32] = r2_806 + 1515
	word32 sp_823
	byte CVZN_824
	byte ZN_825
	bool C_826
	bool V_827
	word32 ap_828
	word32 r9_829
	byte CZN_830
	word32 r11_831
	word32 r0_832
	word32 r8_833
	byte CZ_834
	word32 r2_835
	bool Z_836
	word32 r7_837
	word32 r3_838
	word32 r5_839
	word32 fp_840
	bool N_841
	word32 r1_842
	word32 r4_843
	word32 r6_844
	byte VZN_845
	call Mem819[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_808,C_821,CVZN_479,CZ_477,CZN_481,fp_809,N_476,r0_811,r1_485,r11_211,r2_806,r3_807,r4_484,r5_219,r6_495,r7_487,r8_489,r9_490,sp_817,V_822,VZN_480,Z_501,ZN_820
		defs: ap_828,C_826,CVZN_824,CZ_834,CZN_830,fp_840,N_841,r0_832,r1_842,r11_831,r2_835,r3_838,r4_843,r5_839,r6_844,r7_837,r8_833,r9_829,sp_823,V_827,VZN_845,Z_836,ZN_825
	Mem847[sp_823 - 0x00000004:word32] = r0_832
	Mem850[sp_823 - 0x00000008:word32] = r2_835 + 1515
	Mem852[sp_823 - 0x0000000C:word32] = r2_835
	word32 r0_853 = Mem852[r2_835 + 0x0000C839:word32]
	byte CVZN_858
	byte ZN_859
	bool C_860
	bool V_861
	word32 ap_862
	word32 r9_863
	byte CZN_864
	word32 r11_865
	word32 r0_866
	word32 r8_867
	byte CZ_868
	bool Z_870
	word32 r7_871
	word32 r3_872
	word32 fp_874
	bool N_875
	word32 r1_876
	word32 r4_877
	byte VZN_879
	call r0_853 + 2 (retsize: 4; depth: 4)
		uses: ap_828,C_855,CVZN_824,CZ_834,CZN_830,fp_840,N_841,r0_853,r1_842,r11_831,r2_835,r3_838,r4_843,r5_839,r6_844,r7_837,r8_833,r9_829,sp_851,V_856,VZN_845,Z_836,ZN_854
		defs: ap_862,C_860,CVZN_858,CZ_868,CZN_864,fp_874,N_875,r0_866,r1_876,r11_865,r2_869,r3_872,r4_877,r5_873,r6_878,r7_871,r8_867,r9_863,sp_857,V_861,VZN_879,Z_870,ZN_859
// DataOut: fp r2 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010427:
	branch r6_495 >= 0x00000002 l0001042F
// DataOut: fp r2 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l0001042F:
	word32 v48_770 = r6_495 - 0x00000002
	branch v48_770 > 0x00000005 l00010440
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010440:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010432_1:
	word32 sp_771
	byte CVZN_772
	byte ZN_773
	bool C_774
	bool V_775
	word32 ap_776
	word32 r9_777
	byte CZN_778
	word32 r11_779
	word32 r0_780
	word32 r8_781
	byte CZ_782
	word32 r2_783
	bool Z_784
	word32 r7_785
	word32 r3_786
	word32 r5_787
	word32 fp_788
	bool N_789
	word32 r1_790
	word32 r4_791
	word32 r6_792
	byte VZN_793
	call 0x00010436 + v48_770 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_523,C_768,CVZN_517,CZ_512,CZN_524,fp_522,N_525,r0_766,r1_507,r11_514,r2_511,r3_509,r4_506,r5_508,r6_505,r7_510,r8_513,r9_515,sp_521,V_769,VZN_504,Z_519,ZN_767
		defs: ap_776,C_774,CVZN_772,CZ_782,CZN_778,fp_788,N_789,r0_780,r1_790,r11_779,r2_783,r3_786,r4_791,r5_787,r6_792,r7_785,r8_781,r9_777,sp_771,V_775,VZN_793,Z_784,ZN_773
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l0001042C:
// DataOut: fp r2 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010520:
	word32 r0_527 = r6_495 & ~0xFFFFFF00
	branch r0_527 == 0x00000002 l00010554
// DataOut: fp r0 r2 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010554:
	word32 r0_623 = r6_495 >> 8
	word32 r3_624 = (uint32) (word16) r0_623
	branch r3_624 != 0x00000008 l00010588
// DataOut: fp r0 r2 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010588:
	word32 sp_696 = sp_165 - 0x00000004
	Mem697[sp_696:word32] = 0x00000001
	Mem699[sp_696 - 0x00000004:word32] = r3_624
	Mem702[sp_696 - 0x00000008:word32] = r5_219 + 1655
	Mem705[sp_696 - 0x0000000C:word32] = r2 + 1515
	word32 sp_709
	byte CVZN_710
	byte ZN_711
	bool C_712
	bool V_713
	word32 ap_714
	word32 r9_715
	byte CZN_716
	word32 r11_717
	word32 r0_718
	word32 r8_719
	byte CZ_720
	word32 r2_721
	bool Z_722
	word32 r7_723
	word32 r3_724
	word32 r5_725
	word32 fp_726
	bool N_727
	word32 r1_728
	word32 r4_729
	word32 r6_730
	byte VZN_731
	call Mem705[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_523,C_707,CVZN_517,CZ_512,CZN_625,fp_522,N_525,r0_623,r1_507,r11_514,r2_511,r3_624,r4_506,r5_508,r6_505,r7_510,r8_513,r9_515,sp_703,V_708,VZN_504,Z_626,ZN_706
		defs: ap_714,C_712,CVZN_710,CZ_720,CZN_716,fp_726,N_727,r0_718,r1_728,r11_717,r2_721,r3_724,r4_729,r5_725,r6_730,r7_723,r8_719,r9_715,sp_709,V_713,VZN_731,Z_722,ZN_711
	Mem733[sp_709 - 0x00000004:word32] = r0_718
	Mem736[sp_709 - 0x00000008:word32] = r2_721 + 1515
	Mem738[sp_709 - 0x0000000C:word32] = r2_721
	word32 r0_739 = Mem738[r2_721 + 0x0000C839:word32]
	word32 sp_743
	byte CVZN_744
	byte ZN_745
	bool C_746
	bool V_747
	word32 ap_748
	word32 r9_749
	byte CZN_750
	word32 r11_751
	word32 r0_752
	word32 r8_753
	byte CZ_754
	word32 r2_755
	bool Z_756
	word32 r7_757
	word32 r3_758
	word32 r5_759
	word32 fp_760
	bool N_761
	word32 r1_762
	word32 r4_763
	word32 r6_764
	byte VZN_765
	call r0_739 + 2 (retsize: 4; depth: 4)
		uses: ap_714,C_741,CVZN_710,CZ_720,CZN_716,fp_726,N_727,r0_739,r1_728,r11_717,r2_721,r3_724,r4_729,r5_725,r6_730,r7_723,r8_719,r9_715,sp_737,V_742,VZN_731,Z_722,ZN_740
		defs: ap_748,C_746,CVZN_744,CZ_754,CZN_750,fp_760,N_761,r0_752,r1_762,r11_751,r2_755,r3_758,r4_763,r5_759,r6_764,r7_757,r8_753,r9_749,sp_743,V_747,VZN_765,Z_756,ZN_745
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010561:
	word32 sp_628 = sp_165 - 0x00000004
	Mem629[sp_628:word32] = 0x00000001
	Mem632[sp_628 - 0x00000004:word32] = r5_219 + 1621
	Mem635[sp_628 - 0x00000008:word32] = r2 + 1515
	word32 sp_639
	byte CVZN_640
	byte ZN_641
	bool C_642
	bool V_643
	word32 ap_644
	word32 r9_645
	byte CZN_646
	word32 r11_647
	word32 r0_648
	word32 r8_649
	byte CZ_650
	word32 r2_651
	bool Z_652
	word32 r7_653
	word32 r3_654
	word32 r5_655
	word32 fp_656
	bool N_657
	word32 r1_658
	word32 r4_659
	word32 r6_660
	byte VZN_661
	call Mem635[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_523,C_637,CVZN_517,CZ_512,CZN_625,fp_522,N_525,r0_623,r1_507,r11_514,r2_511,r3_624,r4_506,r5_508,r6_505,r7_510,r8_513,r9_515,sp_633,V_638,VZN_504,Z_626,ZN_636
		defs: ap_644,C_642,CVZN_640,CZ_650,CZN_646,fp_656,N_657,r0_648,r1_658,r11_647,r2_651,r3_654,r4_659,r5_655,r6_660,r7_653,r8_649,r9_645,sp_639,V_643,VZN_661,Z_652,ZN_641
	Mem663[sp_639 - 0x00000004:word32] = r0_648
	Mem666[sp_639 - 0x00000008:word32] = r2_651 + 1515
	Mem668[sp_639 - 0x0000000C:word32] = r2_651
	word32 r0_669 = Mem668[r2_651 + 0x0000C839:word32]
	word32 sp_673
	byte CVZN_674
	byte ZN_675
	bool C_676
	bool V_677
	word32 ap_678
	word32 r9_679
	byte CZN_680
	word32 r11_681
	word32 r0_682
	word32 r8_683
	byte CZ_684
	word32 r2_685
	bool Z_686
	word32 r7_687
	word32 r3_688
	word32 r5_689
	word32 fp_690
	bool N_691
	word32 r1_692
	word32 r4_693
	word32 r6_694
	byte VZN_695
	call r0_669 + 2 (retsize: 4; depth: 4)
		uses: ap_644,C_671,CVZN_640,CZ_650,CZN_646,fp_656,N_657,r0_669,r1_658,r11_647,r2_651,r3_654,r4_659,r5_655,r6_660,r7_653,r8_649,r9_645,sp_667,V_672,VZN_661,Z_652,ZN_670
		defs: ap_678,C_676,CVZN_674,CZ_684,CZN_680,fp_690,N_691,r0_682,r1_692,r11_681,r2_685,r3_688,r4_693,r5_689,r6_694,r7_687,r8_683,r9_679,sp_673,V_677,VZN_695,Z_686,ZN_675
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l0001052D:
	word32 sp_555 = sp_165 - 0x00000004
	Mem556[sp_555:word32] = 0x00000001
	Mem559[sp_555 - 0x00000004:word32] = r5_219 + 1733
	Mem562[sp_555 - 0x00000008:word32] = r2 + 1515
	word32 sp_566
	byte CVZN_567
	byte ZN_568
	bool C_569
	bool V_570
	word32 ap_571
	word32 r9_572
	byte CZN_573
	word32 r11_574
	word32 r0_575
	word32 r8_576
	byte CZ_577
	word32 r2_578
	bool Z_579
	word32 r7_580
	word32 r3_581
	word32 r5_582
	word32 fp_583
	bool N_584
	word32 r1_585
	word32 r4_586
	word32 r6_587
	byte VZN_588
	call Mem562[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_523,C_564,CVZN_517,CZ_512,CZN_528,fp_522,N_525,r0_527,r1_507,r11_514,r2_511,r3_509,r4_506,r5_508,r6_505,r7_510,r8_513,r9_515,sp_560,V_565,VZN_504,Z_529,ZN_563
		defs: ap_571,C_569,CVZN_567,CZ_577,CZN_573,fp_583,N_584,r0_575,r1_585,r11_574,r2_578,r3_581,r4_586,r5_582,r6_587,r7_580,r8_576,r9_572,sp_566,V_570,VZN_588,Z_579,ZN_568
	Mem590[sp_566 - 0x00000004:word32] = r0_575
	Mem593[sp_566 - 0x00000008:word32] = r2_578 + 1515
	Mem595[sp_566 - 0x0000000C:word32] = r2_578
	word32 r0_596 = Mem595[r2_578 + 0x0000C839:word32]
	word32 sp_600
	byte CVZN_601
	byte ZN_602
	bool C_603
	bool V_604
	word32 ap_605
	word32 r9_606
	byte CZN_607
	word32 r11_608
	word32 r0_609
	word32 r8_610
	byte CZ_611
	word32 r2_612
	bool Z_613
	word32 r7_614
	word32 r3_615
	word32 r5_616
	word32 fp_617
	bool N_618
	word32 r1_619
	word32 r4_620
	word32 r6_621
	byte VZN_622
	call r0_596 + 2 (retsize: 4; depth: 4)
		uses: ap_571,C_598,CVZN_567,CZ_577,CZN_573,fp_583,N_584,r0_596,r1_585,r11_574,r2_578,r3_581,r4_586,r5_582,r6_587,r7_580,r8_576,r9_572,sp_594,V_599,VZN_588,Z_579,ZN_597
		defs: ap_605,C_603,CVZN_601,CZ_611,CZN_607,fp_617,N_618,r0_609,r1_619,r11_608,r2_612,r3_615,r4_620,r5_616,r6_621,r7_614,r8_610,r9_606,sp_600,V_604,VZN_622,Z_613,ZN_602
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000105AD:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103E0:
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101C5:
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101B9:
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010193_1:
	word32 sp_446
	byte CVZN_447
	byte ZN_448
	bool C_449
	bool V_450
	word32 ap_451
	word32 r9_452
	byte CZN_453
	word32 r11_454
	word32 r0_455
	word32 r8_456
	byte CZ_457
	word32 r2_458
	bool Z_459
	word32 r7_460
	word32 r3_461
	word32 r5_462
	word32 fp_463
	bool N_464
	word32 r1_465
	word32 r4_466
	word32 r6_467
	byte VZN_468
	call 0x00010197 + (r1_406 - 0x00000007) * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_208,C_439,CVZN_443,CZ_441,CZN_440,fp_220,N_438,r0_435,r1_406,r11_211,r2_215,r3_218,r4_223,r5_219,r6_224,r7_217,r8_226,r9_209,sp_203,V_442,VZN_444,Z_437,ZN_436
		defs: ap_451,C_449,CVZN_447,CZ_457,CZN_453,fp_463,N_464,r0_455,r1_465,r11_454,r2_458,r3_461,r4_466,r5_462,r6_467,r7_460,r8_456,r9_452,sp_446,V_450,VZN_468,Z_459,ZN_448
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l0001018D:
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000105B1:
	word32 r1_427 = r8_226 + 0x00000004
	Mem429[r9_209:word32] = Mem201[r9_209:word32] - r1_427
	Mem431[ap + 4:word32] = Mem429[ap + 4:word32] + r1_427
	branch Mem431[r9_209:word32] <u 0x00000004 l000105C4
// DataOut: ap fp r0 r2 r5 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000105C1:
// DataOut: ap fp r0 r2 r5 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010112:
	branch Mem201[r2 + 64:word32] == 0x00000000 l00010156
// DataOut: ap fp r0 r2 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010117:
	Mem321[sp_165 - 0x00000004:word32] = 0x00000001
	Mem325[sp_165 - 0x00000008:word32] = r2 + 0x000045EB
	Mem328[sp_165 - 0x0000000C:word32] = r2 + 0x0000C701
	word32 r2_332
	word32 r3_333
	word32 ap_334
	word32 fp_335
	word32 sp_336
	word32 r0_337 = fn00010892(ap, fp_220, out r2_332, out r3_333, out ap_334, out fp_335, out sp_336)
	Mem339[sp_336 - 0x00000004:word32] = r0_337
	Mem342[sp_336 - 0x00000008:word32] = r7 + 199
	Mem345[sp_336 - 0x0000000C:word32] = r2_332 + 1515
	word32 sp_349
	byte CVZN_350
	byte ZN_351
	bool C_352
	bool V_353
	word32 ap_354
	word32 r9_355
	byte CZN_356
	word32 r11_357
	word32 r0_358
	word32 r8_359
	byte CZ_360
	word32 r2_361
	bool Z_362
	word32 r7_363
	word32 r3_364
	word32 r5_365
	word32 fp_366
	bool N_367
	word32 r1_368
	word32 r4_369
	word32 r6_370
	byte VZN_371
	call Mem345[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_334,C_347,CVZN_204,CZ_229,CZN_228,fp_335,N_221,r0_337,r1_222,r11_211,r2_332,r3_333,r4_223,r5_219,r6_224,r7_217,r8_226,r9_209,sp_343,V_348,VZN_225,Z_232,ZN_346
		defs: ap_354,C_352,CVZN_350,CZ_360,CZN_356,fp_366,N_367,r0_358,r1_368,r11_357,r2_361,r3_364,r4_369,r5_365,r6_370,r7_363,r8_359,r9_355,sp_349,V_353,VZN_371,Z_362,ZN_351
	Mem373[sp_349 - 0x00000004:word32] = r0_358
	Mem376[sp_349 - 0x00000008:word32] = r2_361 + 1515
	Mem378[sp_349 - 0x0000000C:word32] = r2_361
	word32 r0_379 = Mem378[r2_361 + 0x0000C839:word32]
	byte CVZN_384
	byte ZN_385
	bool C_386
	bool V_387
	word32 r9_389
	byte CZN_390
	word32 r11_391
	word32 r0_392
	byte CZ_394
	bool Z_396
	word32 r7_397
	word32 r3_398
	word32 fp_400
	bool N_401
	word32 r1_402
	word32 r4_403
	word32 r6_404
	byte VZN_405
	call r0_379 + 2 (retsize: 4; depth: 4)
		uses: ap_354,C_381,CVZN_350,CZ_360,CZN_356,fp_366,N_367,r0_379,r1_368,r11_357,r2_361,r3_364,r4_369,r5_365,r6_370,r7_363,r8_359,r9_355,sp_377,V_382,VZN_371,Z_362,ZN_380
		defs: ap_388,C_386,CVZN_384,CZ_394,CZN_390,fp_400,N_401,r0_392,r1_402,r11_391,r2_395,r3_398,r4_403,r5_399,r6_404,r7_397,r8_393,r9_389,sp_383,V_387,VZN_405,Z_396,ZN_385
// DataOut: ap fp r0 r2 r5 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010156:
	word32 sp_240 = sp_165 - 0x00000004
	Mem241[sp_240:word32] = 0x00000001
	Mem244[sp_240 - 0x00000004:word32] = Mem241[ap + 8:word32] - 0x00000004
	Mem246[sp_240 - 0x00000008:word32] = r8_226
	Mem249[sp_240 - 0x0000000C:word32] = r5_219 + 1459
	Mem252[sp_240 - 0x00000010:word32] = r2 + 1515
	word32 sp_256
	byte CVZN_257
	byte ZN_258
	bool C_259
	bool V_260
	word32 ap_261
	word32 r9_262
	byte CZN_263
	word32 r11_264
	word32 r0_265
	word32 r8_266
	byte CZ_267
	word32 r2_268
	bool Z_269
	word32 r7_270
	word32 r3_271
	word32 r5_272
	word32 fp_273
	bool N_274
	word32 r1_275
	word32 r4_276
	word32 r6_277
	byte VZN_278
	call Mem252[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_239,C_254,CVZN_204,CZ_229,CZN_228,fp_220,N_221,r0_227,r1_222,r11_211,r2_236,r3_218,r4_223,r5_235,r6_224,r7_217,r8_237,r9_209,sp_250,V_255,VZN_225,Z_232,ZN_253
		defs: ap_261,C_259,CVZN_257,CZ_267,CZN_263,fp_273,N_274,r0_265,r1_275,r11_264,r2_268,r3_271,r4_276,r5_272,r6_277,r7_270,r8_266,r9_262,sp_256,V_260,VZN_278,Z_269,ZN_258
	Mem280[sp_256 - 0x00000004:word32] = r0_265
	Mem283[sp_256 - 0x00000008:word32] = r2_268 + 1515
	Mem285[sp_256 - 0x0000000C:word32] = r2_268
	word32 r0_286 = Mem285[r2_268 + 0x0000C839:word32]
	word32 sp_290
	byte CVZN_291
	byte ZN_292
	bool C_293
	bool V_294
	word32 ap_295
	word32 r9_296
	byte CZN_297
	word32 r11_298
	word32 r0_299
	word32 r8_300
	byte CZ_301
	word32 r2_302
	bool Z_303
	word32 r7_304
	word32 r3_305
	word32 r5_306
	word32 fp_307
	bool N_308
	word32 r1_309
	word32 r4_310
	word32 r6_311
	byte VZN_312
	call r0_286 + 2 (retsize: 4; depth: 4)
		uses: ap_261,C_288,CVZN_257,CZ_267,CZN_263,fp_273,N_274,r0_286,r1_275,r11_264,r2_268,r3_271,r4_276,r5_272,r6_277,r7_270,r8_266,r9_262,sp_284,V_289,VZN_278,Z_269,ZN_287
		defs: ap_295,C_293,CVZN_291,CZ_301,CZN_297,fp_307,N_308,r0_299,r1_309,r11_298,r2_302,r3_305,r4_310,r5_306,r6_311,r7_304,r8_300,r9_296,sp_290,V_294,VZN_312,Z_303,ZN_292
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000100EA:
// DataOut: fp r0 r2 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:ap + 8

l000105C4:
	branch Mem0[r2 + 64:word32] != 0x00000000 l000105EC
// DataOut: fp r0 r2 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000105C9:
	word32 sp_79 = sp_165 - 0x00000004
	Mem80[sp_79:word32] = 0x00000000
	Mem83[sp_79 - 0x00000004:word32] = r7 + 224
	Mem86[sp_79 - 0x00000008:word32] = r2 + 1515
	word32 sp_90
	byte CVZN_91
	byte ZN_92
	bool C_93
	bool V_94
	word32 ap_95
	word32 r9_96
	byte CZN_97
	word32 r11_98
	word32 r0_99
	word32 r8_100
	byte CZ_101
	word32 r2_102
	bool Z_103
	word32 r7_104
	word32 r3_105
	word32 r5_106
	word32 fp_107
	bool N_108
	word32 r1_109
	word32 r4_110
	word32 r6_111
	byte VZN_112
	call Mem86[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_50,C_88,CVZN_45,CZ_40,CZN_43,fp_49,N_47,r0_46,r1_35,r11_42,r2_39,r3_37,r4_34,r5_36,r6_33,r7_38,r8_41,r9_44,sp_84,V_89,VZN_32,Z_52,ZN_87
		defs: ap_95,C_93,CVZN_91,CZ_101,CZN_97,fp_107,N_108,r0_99,r1_109,r11_98,r2_102,r3_105,r4_110,r5_106,r6_111,r7_104,r8_100,r9_96,sp_90,V_94,VZN_112,Z_103,ZN_92
	Mem114[sp_90 - 0x00000004:word32] = r0_99
	Mem117[sp_90 - 0x00000008:word32] = r2_102 + 1515
	Mem119[sp_90 - 0x0000000C:word32] = r2_102
	word32 r3_120 = Mem119[r2_102 + 0x0000C839:word32]
	word32 sp_124
	byte CVZN_125
	byte ZN_126
	bool C_127
	bool V_128
	word32 ap_129
	word32 r9_130
	byte CZN_131
	word32 r11_132
	word32 r0_133
	word32 r8_134
	byte CZ_135
	word32 r2_136
	bool Z_137
	word32 r7_138
	word32 r3_139
	word32 r5_140
	word32 fp_141
	bool N_142
	word32 r1_143
	word32 r4_144
	word32 r6_145
	byte VZN_146
	call r3_120 + 2 (retsize: 4; depth: 4)
		uses: ap_95,C_122,CVZN_91,CZ_101,CZN_97,fp_107,N_108,r0_99,r1_109,r11_98,r2_102,r3_120,r4_110,r5_106,r6_111,r7_104,r8_100,r9_96,sp_118,V_123,VZN_112,Z_103,ZN_121
		defs: ap_129,C_127,CVZN_125,CZ_135,CZN_131,fp_141,N_142,r0_133,r1_143,r11_132,r2_136,r3_139,r4_144,r5_140,r6_145,r7_138,r8_134,r9_130,sp_124,V_128,VZN_146,Z_137,ZN_126
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000105EC:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

fn000100C2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r2:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0



word32 fn000105F2(word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 r2 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r10 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn000105F2_entry:
	*r2Out = r2
	*r9Out = r9
	*r8Out = r8
	*r7Out = r7
// DataOut: ap fp r2 r5 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000105F2:
	branch Mem0[ap + 8:word32] <u 0x00000004 l00010617
// DataOut: ap fp r2 r5 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000105FB:
	word32 r2_63
	word32 ap_64
	word32 sp_66
	word32 r0_67 = fn0000E276(ap, fp, out r2_63, out ap_64, out fp, out sp_66)
	branch r0_67 == 0x00000000 l0001061C
// DataOut: ap fp r0 r2 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0001060C:
	branch Mem0[ap_64 + 8:word32] >u Mem0[ap_64 + 12:word32] + 0x00000006 l0001061C
// DataOut: ap fp r0 r2 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> -8(fp):<invalid>

l0001061C:
	Mem74[sp_66 - 0x00000004:word32] = r0_67
	word32 sp_78
	byte CVZN_79
	word32 ap_80
	byte CZN_81
	bool V_82
	bool C_83
	word32 r0_84
	word32 r4_85
	byte ZN_86
	bool Z_87
	byte CZ_88
	word32 fp_89
	word32 r3_90
	word32 r2_91
	word32 r7_92
	word32 r8_93
	word32 r9_94
	call Mem74[0x000192B4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_64,C_76,CVZN_62,CZ,CZN_5,dwLoc08_61,fp_65,r0_67,r2_63,r3,r4_68,r7,r8,r9,sp_73,V_77,Z_70,ZN_75
		defs: ap_80,C_83,CVZN_79,CZ_88,CZN_81,fp_89,r0_84,r2_91,r3_90,r4_85,r7_92,r8_93,r9_94,sp_78,V_82,Z_87,ZN_86
	branch r0_84 != 0x00000000 l0001062E
// DataOut: ap fp r2 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> -8(fp):<invalid>

l0001062E:
	Mem109[sp_78 - 0x00000004:word32] = Mem74[ap_80 + 8:word32] - Mem74[ap_80 + 12:word32]
	Mem113[sp_78 - 0x00000008:word32] = Mem109[ap_80 + 12:word32] + 0x00000004 + Mem109[ap_80 + 4:word32]
	Mem115[sp_78 - 0x0000000C:word32] = r4_85
	Mem117[sp_78 - 0x00000010:word32] = r0_84
	word32 r4_122
	word32 r7_123
	word32 r8_124
	word32 r9_125
	word32 ap_126
	word32 fp_127
	word32 r3_121
	word32 sp_128
	word32 r0_129 = fn00010676(r2_91, r4_85, ap_80, fp_89, out r3_121, out r4_122, out r7_123, out r8_124, out r9_125, out ap_126, out fp_127, out sp_128)
	branch r0_129 != 0x00000000 l00010664
// DataOut: ap fp r2 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> -8(fp):<invalid>

l0001064E:
	word32 r0_166 = Mem117[ap_126 + 16:word32]
	branch r0_166 == 0x00000000 l00010664
// DataOut: ap fp r0 r2 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r7:<invalid> r10:<invalid> -8(fp):<invalid>

l00010654:
	Mem172[sp_128 - 0x00000004:word32] = r4_122
	Mem174[sp_128 - 0x00000008:word32] = r3_121
	Mem177[sp_128 - 0x0000000C:word32] = Mem174[ap_126 + 8:word32]
	Mem180[sp_128 - 0x00000010:word32] = Mem177[ap_126 + 4:word32]
	byte CVZN_185
	word32 ap_186
	byte CZN_187
	bool V_188
	bool C_189
	word32 r0_190
	word32 r4_191
	byte ZN_192
	bool Z_193
	byte CZ_194
	word32 fp_195
	word32 r2_197
	word32 r7_198
	word32 r8_199
	word32 r9_200
	call r0_166 + 2 (retsize: 4; depth: 4)
		uses: ap_126,C_182,CVZN_79,CZ_88,CZN_81,dwLoc08_61,fp_127,r0_166,r2_130,r3_121,r4_122,r7_123,r8_124,r9_125,sp_178,V_183,Z_168,ZN_181
		defs: ap_186,C_189,CVZN_185,CZ_194,CZN_187,fp_195,r0_190,r2_197,r3_196,r4_191,r7_198,r8_199,r9_200,sp_184,V_188,Z_193,ZN_192
// DataOut: fp r2 r3 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r7:<invalid> r10:<invalid> -8(fp):<invalid>

l00010664:
	word32 sp_137 = sp_128 - 0x00000004
	Mem138[sp_137:word32] = r3_121
	word32 sp_142
	byte CVZN_143
	word32 ap_144
	byte CZN_145
	bool V_146
	bool C_147
	word32 r0_148
	word32 r4_149
	byte ZN_150
	bool Z_151
	byte CZ_152
	word32 fp_153
	word32 r3_154
	word32 r2_155
	word32 r7_156
	word32 r8_157
	word32 r9_158
	call Mem138[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_126,C_140,CVZN_79,CZ_88,CZN_81,dwLoc08_61,fp_127,r0_129,r2_130,r3_135,r4_122,r7_123,r8_124,r9_125,sp_137,V_141,Z_132,ZN_139
		defs: ap_144,C_147,CVZN_143,CZ_152,CZN_145,fp_153,r0_148,r2_155,r3_154,r4_149,r7_156,r8_157,r9_158,sp_142,V_146,Z_151,ZN_150
	word32 sp_163
	*spOut = fp_153 - 0x00000004
	word32 fp_164
	*fpOut = Mem138[fp_153 + 0x0000000C:word32]
	word32 ap_165
	*apOut = Mem138[fp_153 + 0x00000008:word32]
	return r2_155
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r7:<invalid> r10:<invalid> -8(fp):<invalid>

l0001062A:
	word32 sp_104
	*spOut = fp_89 - 0x00000004
	word32 fp_105
	*fpOut = Mem74[fp_89 + 0x0000000C:word32]
	word32 ap_106
	*apOut = Mem74[fp_89 + 0x00000008:word32]
	return 0x00000007
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> -8(fp):<invalid>

l00010617:
	word32 sp_52 = fp - 0x00000004
	*spOut = sp_52
	word32 fp_53
	*fpOut = Mem0[sp_52 + 0x00000010:word32]
	word32 ap_54
	*apOut = Mem0[sp_52 + 0x0000000C:word32]
	return 0x0000004F
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> -8(fp):<invalid>

fn000105F2_exit:
// DataOut: ap fp r0 r2 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r7:<invalid> r10:<invalid> -8(fp):<invalid>



word32 fn00010676(word32 r2, word32 r4, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2 r4
// LiveOut: ap fp r0 r3 r4 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r10 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn00010676_entry:
// DataOut: ap fp r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010676:
	word32 r3_9 = Mem0[ap + 12:word32]
	word32 ap_16
	word32 fp_17
	word32 sp_18
	word16 v17_20 = (word16) fn0000E25A(ap, fp, out ap_16, out fp_17, out sp_18)
	Mem25[sp_18 - 0x00000004:word32] = r3_9 + 0x00000002
	word32 r2_27
	word32 ap_28
	word32 fp_29
	word32 sp_30
	fn0000E276(ap_16, fp_17, out r2_27, out ap_28, out fp_29, out sp_30)
	Mem34[r2_27 + 0x0000C5F7:word32] = r3_9 + 0x00000006
	Mem36[r2_27 + 132:word32] = Mem34[ap_28 + 16:word32] - 0x00000006
	Mem38[r2_27 + 0x0000C5FB:word32] = Mem36[r2_27 + 132:word32]
	Mem40[r2_27 + 0x0000C6C5:word32] = 0x00000001
	Mem42[r2_27 + 0x0000C6C9:word32] = Mem40[ap_28 + 4:word32]
	Mem44[r2_27 + 0x0000C6CD:word32] = Mem42[ap_28 + 8:word32]
	word32 r0_45 = (uint32) v17_20
	branch r0_45 > 0x00000008 l000106FB
// DataOut: ap fp r0 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000106FB:
	Mem98[Mem98[r4:word32]:real32] = 0.5F + 36.0F
	__halt()
	word32 sp_103
	byte CVZN_104
	byte ZN_105
	bool C_106
	bool V_107
	word32 r2_108
	word32 r8_109
	word32 r9_110
	word32 r6_111
	bool Z_112
	bool N_113
	word32 ap_114
	word32 r3_115
	word32 r0_116
	word32 r7_117
	word32 r10_118
	word32 r4_119
	word32 fp_120
	call fn4000E3D8 (retsize: 4; depth: 4)
		uses: ap_28,C_101,CVZN_26,dwLoc08_11,fp_29,N,r0_45,r10_32,r2_27,r3_9,r4_99,r6_7,r7_22,r8_5,r9_6,sp_30,V_102,Z,ZN_100
		defs: ap_114,C_106,CVZN_104,fp_120,N_113,r0_116,r10_118,r2_108,r3_115,r4_119,r6_111,r7_117,r8_109,r9_110,sp_103,V_107,Z_112,ZN_105
	return r0_116
// DataOut: ap fp r0 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r3:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l000106E7_1:
	word32 sp_79
	byte CVZN_80
	byte ZN_81
	bool C_82
	bool V_83
	word32 r2_84
	word32 r8_85
	word32 r9_86
	word32 r6_87
	bool Z_88
	bool N_89
	word32 ap_90
	word32 r3_91
	word32 r0_92
	word32 r7_93
	word32 r10_94
	word32 r4_95
	word32 fp_96
	call 0x000106EB + r0_45 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_28,C_47,CVZN_26,dwLoc08_11,fp_29,N,r0_45,r10_32,r2_27,r3_9,r4,r6_7,r7_22,r8_5,r9_6,sp_30,V_48,Z,ZN_46
		defs: ap_90,C_82,CVZN_80,fp_96,N_89,r0_92,r10_94,r2_84,r3_91,r4_95,r6_87,r7_93,r8_85,r9_86,sp_79,V_83,Z_88,ZN_81
	return r0_92
// DataOut: ap fp r0 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r3:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn00010676_exit:
// DataOut: ap fp r0 r3 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r3:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r4:r4 + 0x00000004 r2:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn0001084A(word32 r2, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2
// LiveOut: fp
// Trashed: CVZN ap fp r0 r3 sp
// Preserved:
fn0001084A_entry:
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001084A:
	branch Mem0[ap + 8:word32] <=u Mem0[r2 + 0x0000C6CD:word32] l00010862
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010862:
	word32 sp_54
	byte CVZN_55
	byte ZN_56
	bool C_57
	bool V_58
	word32 ap_59
	word32 r2_60
	byte CZN_61
	byte CZ_62
	word32 r0_63
	word32 fp_64
	word32 r3_65
	bool Z_66
	bool N_67
	call Mem0[0x0001929C:word32] + 2 (retsize: 4; depth: 20)
		uses: ap,C_51,CVZN,CZ_7,CZN_6,dwLoc08_43,dwLoc0C_46,dwLoc10_49,fp,N,r0,r2,r3_41,sp_47,V_52,Z,ZN_50
		defs: ap_59,C_57,CVZN_55,CZ_62,CZN_61,fp_64,N_67,r0_63,r2_60,r3_65,sp_54,V_58,Z_66,ZN_56
	Mem69[r2_60 + 0x0000C6C9:word32] = Mem0[r2_60 + 0x0000C6C9:word32] + r3_65
	Mem71[r2_60 + 0x0000C6CD:word32] = Mem69[r2_60 + 0x0000C6CD:word32] - r3_65
	Mem73[r2_60 + 0x0000C6FD:word32] = Mem71[r2_60 + 0x0000C6FD:word32] + r3_65
	return Mem73[fp_64 + 0x0000000C:word32]
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0001085E:
	return Mem0[fp + 0x0000000C:word32]
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

fn0001084A_exit:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn00010892(word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 r2 r3 sp
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn00010892_entry:
// DataOut: ap fp r10 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010892:
	word32 r3_37 = Mem0[ap + 4:word32]
	*r3Out = r3_37
	word32 r2_15 = Mem0[ap + 8:word32]
	*r2Out = r2_15
	branch Mem0[r3_37:byte] == 0x00 l000108C7
// DataOut: ap fp r10 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000108A1:
// DataOut: ap fp r10 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid>

l000108A4:
	branch (uint32) Mem0[r3_37:byte] >=u 0x00000020 l000108C0
// DataOut: ap fp r10 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid>

l000108C0:
	Mem69[r2_15:byte] = Mem0[r3_37:byte]
	*r3Out = r3_37 + 0x00000001
	*r2Out = r2_15 + 0x00000001
// DataOut: ap fp r10 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid>

l000108AC:
	Mem55[r2_15:byte] = 0x5E
	word32 r2_56 = r2_15 + 0x00000001
	Mem62[r2_56:int8] = (int8) ((uint32) Mem55[r3_37:byte] + 0x00000040)
	*r3Out = r3_37 + 0x00000001
	*r2Out = r2_56 + 0x00000001
// DataOut: ap fp r10 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid>

l000108C3:
	branch Mem0[r3_37:byte] != 0x00 l000108A4
// DataOut: ap fp r10 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid>

l000108C7:
	Mem19[r2_15:byte] = 0x00
	word32 sp_25
	*spOut = fp - 0x00000004
	word32 fp_26
	*fpOut = Mem19[fp + 0x0000000C:word32]
	word32 ap_27
	*apOut = Mem19[fp + 0x00000008:word32]
	return Mem19[ap + 8:word32]
// DataOut: ap fp r0 r10 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid>

fn00010892_exit:
// DataOut: ap fp r0 r2 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>



void fn000108D2(word32 r0, word32 r2, word32 r5, word32 r10, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp pc r0 r10 r2 r5
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000108D2_entry:
// DataOut: fp pc r0 r10 r2 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000108D2:
	word32 sp_14
	byte CVZN_15
	byte ZN_16
	bool C_17
	bool V_18
	word32 r11_19
	bool Z_20
	bool N_21
	word32 r3_22
	word32 r0_23
	word32 r2_24
	word32 r10_25
	word32 ap_26
	word32 fp_27
	word32 r5_28
	word32 r4_29
	word32 r6_30
	word32 r7_31
	word32 r8_32
	word32 r9_33
	byte CZN_34
	word32 pc_35
	call Mem0[0x000192B4:word32] + 2 (retsize: 4; depth: 16)
		uses: C_11,dwLoc08_6,dwLoc0C_9,r11_3,r3_4,sp_7,V_12,ZN_10
		defs: ap_26,C_17,CVZN_15,CZN_34,fp_27,N_21,pc_35,r0_23,r10_25,r11_19,r2_24,r3_22,r4_29,r5_28,r6_30,r7_31,r8_32,r9_33,sp_14,V_18,Z_20,ZN_16
	Mem37[r2_24 + 0x0000C5F3:word32] = r0_23
	word32 sp_44
	byte CVZN_45
	byte ZN_46
	bool C_47
	bool V_48
	word32 r11_49
	bool Z_50
	bool N_51
	word32 r3_52
	word32 r0_53
	word32 r2_54
	word32 r10_55
	word32 ap_56
	word32 fp_57
	word32 r5_58
	word32 r4_59
	word32 r6_60
	word32 r7_61
	word32 r8_62
	word32 r9_63
	byte CZN_64
	word32 pc_65
	call Mem37[0x000192B4:word32] + 2 (retsize: 4; depth: 20)
		uses: ap_26,C_42,CVZN_15,CZN_34,dwLoc08_6,dwLoc0C_9,dwLoc10_40,fp_27,N_21,pc_35,r0_23,r10_25,r11_19,r2_24,r3_22,r4_29,r5_28,r6_30,r7_31,r8_32,r9_33,sp_38,V_43,Z_20,ZN_41
		defs: ap_56,C_47,CVZN_45,CZN_64,fp_57,N_51,pc_65,r0_53,r10_55,r11_49,r2_54,r3_52,r4_59,r5_58,r6_60,r7_61,r8_62,r9_63,sp_44,V_48,Z_50,ZN_46
	Mem67[r2_54 + 0x0000C6F1:word32] = r0_53
	Mem69[r2_54 + 0x0000C6F5:word32] = r0_53
	branch Mem69[r2_54 + 0x0000C5F3:word32] == 0x00000000 l0001092D
// DataOut: fp pc r0 r10 r11 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010925:
	branch Mem69[r2_54 + 0x0000C6F1:word32] != 0x00000000 l00010955
// DataOut: fp pc r0 r10 r11 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r11:0x00000000 r3:0x00000000 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// LocalsOut: fp(32)

l00010955:
	Mem187[r2_54 + 0x0000C62B:word32] = Mem69[r2_54 + 0x0000C5F3:word32] + 0x00002000
	Mem189[r2_54 + 0x0000C62F:byte] = 0x50
	Mem191[r2_54 + 0x0000C639:byte] = 0x50
	Mem193[r2_54 + 0x0000C634:byte] = 0x50
	Mem195[r2_54 + 0x0000C630:byte] = 0x4B
	Mem197[r2_54 + 0x0000C63A:byte] = 0x4B
	Mem199[r2_54 + 0x0000C635:byte] = 0x4B
	word32 r4_206 = Mem199[0x000192BC:word32]
	word32 sp_211
	byte CVZN_212
	byte ZN_213
	bool C_214
	bool V_215
	word32 r11_216
	bool Z_217
	bool N_218
	word32 r3_219
	word32 r0_220
	word32 r2_221
	word32 r10_222
	word32 ap_223
	word32 fp_224
	word32 r5_225
	word32 r4_226
	word32 r6_227
	word32 r7_228
	word32 r8_229
	word32 r9_230
	byte CZN_231
	word32 pc_232
	call r4_206 + 2 (retsize: 4; depth: 28)
		uses: ap_202,C_208,CVZN_45,CZN_64,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,fp_57,N_51,pc_65,r0_53,r10_55,r11_49,r2_54,r3_52,r4_206,r5_58,r6_60,r7_61,r8_62,r9_63,sp_203,V_209,Z_183,ZN_207
		defs: ap_223,C_214,CVZN_212,CZN_231,fp_224,N_218,pc_232,r0_220,r10_222,r11_216,r2_221,r3_219,r4_226,r5_225,r6_227,r7_228,r8_229,r9_230,sp_211,V_215,Z_217,ZN_213
	word32 sp_241
	byte CVZN_242
	byte ZN_243
	bool C_244
	bool V_245
	word32 r11_246
	bool Z_247
	bool N_248
	word32 r3_249
	word32 r0_250
	word32 r2_251
	word32 r10_252
	word32 ap_253
	word32 fp_254
	word32 r5_255
	word32 r4_256
	word32 r6_257
	word32 r7_258
	word32 r8_259
	word32 r9_260
	byte CZN_261
	word32 pc_262
	call r4_226 + 2 (retsize: 4; depth: 36)
		uses: ap_236,C_214,CVZN_240,CZN_231,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24,dwLoc28,dwLoc2C,fp_224,N_218,pc_232,r0_220,r10_222,r11_216,r2_221,r3_219,r4_226,r5_225,r6_227,r7_228,r8_229,r9_230,sp_237,V_215,Z_217,ZN_213
		defs: ap_253,C_244,CVZN_242,CZN_261,fp_254,N_248,pc_262,r0_250,r10_252,r11_246,r2_251,r3_249,r4_256,r5_255,r6_257,r7_258,r8_259,r9_260,sp_241,V_245,Z_247,ZN_243
	word32 sp_271
	byte CVZN_272
	byte ZN_273
	bool C_274
	bool V_275
	bool Z_277
	bool N_278
	word32 r0_280
	word32 r4_286
	word32 r6_287
	word32 r7_288
	word32 r8_289
	word32 r9_290
	byte CZN_291
	word32 r11_1617
	word32 r5_1081
	word32 pc_1005
	word32 r10_1078
	word32 r2_1077
	word32 r3_1075
	word32 fp_1430
	word32 ap_1586
	call r4_256 + 2 (retsize: 4; depth: 44)
		uses: ap_266,C_244,CVZN_270,CZN_261,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C,fp_254,N_248,pc_262,r0_250,r10_252,r11_246,r2_251,r3_249,r4_256,r5_255,r6_257,r7_258,r8_259,r9_260,sp_267,V_245,Z_247,ZN_243
		defs: ap_283,C_274,CVZN_272,CZN_291,fp_284,N_278,pc_292,r0_280,r10_282,r11_276,r2_281,r3_279,r4_286,r5_285,r6_287,r7_288,r8_289,r9_290,sp_271,V_275,Z_277,ZN_273
	fn0000C0CE(r0_280, 0x00000000, ap_1586, pc_1005)
	Mem306[r2_1077 + 0x0000C613:word32] = r0_280
	word32 r6_1000 = 0x00000000
	word32 r7_1001 = 0x00000000
	word32 r8_1002 = 0x00000000
	word32 r4_1082 = 0x00000000
	word32 r9_1003 = 0x00000000
	word32 sp_1417 = fp - 0x0000002C
	branch r0_280 != 0x00000000 l000109EF
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r11:0x00000000 r3:0x00000000 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l000109EF:
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l000109F0:
	branch Mem306[r2_1077 + 64:word32] != 0x00000000 l00010A32
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l000109FC:
	branch r3_1075 == 0x00000009 l00010A32
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A01:
	branch r3_1075 == 0x0000004C l00010A32
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A0A:
	branch Mem306[r2_1077 + 72:word32] == 0x00000000 l00010A13
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A0F:
	branch Mem306[r2_1077:word32] == 0x00000000 l00010A32
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A13:
	ap_1586 = r7_1001 + r8_1002 + r6_1000 + r4_1082
	branch ap_1586 <= 0x00000000 l00010A32
// DataOut: ap fp pc r10 r2 r3 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A1F:
	word32 sp_1699 = sp_1417 - 0x00000004
	Mem1700[sp_1699:word32] = 0x00000000
	Mem1702[sp_1699 - 0x00000004:word32] = 0x00000001
	Mem1705[sp_1699 - 0x00000008:word32] = r5_1081 + 9
	Mem1707[sp_1699 - 0x0000000C:word32] = r2_1077
	word32 ap_1708 = Mem1707[r2_1077 + 0x0000C839:word32]
	byte CVZN_1713
	byte ZN_1714
	bool C_1715
	bool V_1716
	word32 r11_1717
	bool Z_1718
	bool N_1719
	word32 r0_1721
	word32 r5_1726
	word32 r4_1727
	word32 r8_1730
	byte CZN_1732
	call ap_1708 + 2 (retsize: 4; depth: 4)
		uses: ap_1708,C_1710,CVZN_1697,CZN_1684,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_1585,N_1581,pc_1570,r0_1583,r10_1578,r11_1587,r2_1579,r3_1580,r4_1576,r5_1577,r6_1575,r7_1574,r8_1573,r9_1572,sp_1706,V_1711,Z_1691,ZN_1709
		defs: ap_1724,C_1715,CVZN_1713,CZN_1732,fp_1725,N_1719,pc_1733,r0_1721,r10_1723,r11_1717,r2_1722,r3_1720,r4_1727,r5_1726,r6_1728,r7_1729,r8_1730,r9_1731,sp_1712,V_1716,Z_1718,ZN_1714
// DataOut: ap fp pc r10 r2 r3 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> ap:r7 + r8 + r6 + r4 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A32:
	Mem1605[sp_1417 - 0x00000004:word32] = 0x00000000
	word32 r3_1610
	word32 sp_1620
	word32 r0_1621 = fn00010E6A(r2_1077, r3_1075, r6_1000, r7_1001, r9_1003, ap_1586, fp_1430, out r2_1077, out r3_1610, out r4_1082, out r5_1081, out r6_1000, out r7_1001, out r8_1002, out r9_1003, out r11_1617, out ap_1586, out fp_1430, out sp_1620)
	r3_1075 = r0_1621
	branch r0_1621 != 0x00000001 l00010A48
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> ap:<invalid> sp:sp - 0x0000003C -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A48:
	branch r0_1621 != 0x0000004C l00010A58
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A58:
	branch r0_1621 != 0x00000009 l00010A64
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A64:
	branch r0_1621 == 0x00000000 l00010A6C
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A6C:
	r8_1002 = r8_1002 + 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A68:
	r7_1001 = r7_1001 + 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A5D:
	r4_1082 = r4_1082 + 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A51:
	r9_1003 = r9_1003 + 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A41:
	r6_1000 = r6_1000 + 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A6E:
	branch r0_1621 == 0x0000004C l00010A7F
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r6:<invalid> r9:<invalid> r4:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r2:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A77:
	branch r0_1621 <= Mem1605[sp_1620:word32] l00010A7F
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r6:<invalid> r9:<invalid> r4:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r2:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A7C:
	Mem1655[sp_1620:word32] = r0_1621
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r6:<invalid> r9:<invalid> r4:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r2:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A7F:
	Mem1641[sp_1620 - 0x00000004:word32] = Mem1605[r2_1077 + 0x0000C60F:word32]
	fn0000C0CE(r0_1621, r6_1000, ap_1586, pc_1005)
	Mem1646[r2_1077 + 0x0000C613:word32] = r0_1621
	sp_1417 = sp_1620 - 0x00000004
	branch r0_1621 == 0x00000000 l00010A98
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r6:<invalid> r9:<invalid> r4:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r2:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l00010A95:
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l000109EC:
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A98:
	word32 ap_1334 = r6_1000 + r8_1002 + r7_1001
	branch ap_1334 == 0x00000000 l00010AA4
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AA4:
	ap_1334 = r4_1082 + r9_1003
	branch ap_1334 == 0x00000001 l00010AB0
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r6 + r8 + r7 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AB0:
	branch r11_1617 != 0x00000000 l00010AB7
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AB7:
	branch Mem306[sp_1417:word32] != 0x00000009 l00010AC2
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AC0:
	Mem1564[sp_1417:word32] = 0x00000000
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 r4:0x00000000 r9:0x00000000 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AC2:
	Mem1350[sp_1417 - 0x00000004:word32] = Mem306[r2_1077 + 0x0000C60F:word32]
	word32 ap_1354
	word32 fp_1355
	word32 sp_1356
	word32 r0_1357 = fn00018F22(ap_1334, fp_1430, out ap_1354, out fp_1355, out sp_1356)
	branch r0_1357 == 0x00000000 l00010B18
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 r4:0x00000000 r9:0x00000000 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B18:
	Mem1447[sp_1356 - 0x00000004:word32] = r11_1617
	word32 sp_1451
	byte CVZN_1452
	byte ZN_1453
	bool C_1454
	bool V_1455
	word32 r11_1456
	bool Z_1457
	bool N_1458
	word32 r3_1459
	word32 r0_1460
	word32 r2_1461
	word32 r10_1462
	word32 ap_1463
	word32 fp_1464
	word32 r5_1465
	word32 r4_1466
	word32 r6_1467
	word32 r7_1468
	word32 r8_1469
	word32 r9_1470
	byte CZN_1471
	word32 pc_1472
	call Mem1447[0x000192C4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1354,C_1449,CVZN_333,CZN_1344,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_1355,N_1347,pc_312,r0_1357,r10_320,r11_324,r2_321,r3_322,r4_1342,r5_319,r6_317,r7_316,r8_315,r9_1343,sp_1446,V_1450,Z_1359,ZN_1448
		defs: ap_1463,C_1454,CVZN_1452,CZN_1471,fp_1464,N_1458,pc_1472,r0_1460,r10_1462,r11_1456,r2_1461,r3_1459,r4_1466,r5_1465,r6_1467,r7_1468,r8_1469,r9_1470,sp_1451,V_1455,Z_1457,ZN_1453
	Mem1475[r2_1461 + 0x0000C613:word32] = r11_1456
	Mem1478[sp_1451 - 0x00000004:word32] = r5_1465 + 11
	word32 r0_1473 = r0_1460 + r11_1456
	Mem1480[sp_1451 - 0x00000008:word32] = r0_1473
	word32 sp_1484
	byte CVZN_1485
	byte ZN_1486
	bool C_1487
	bool V_1488
	word32 r11_1489
	bool Z_1490
	bool N_1491
	word32 r3_1492
	word32 r0_1493
	word32 r2_1494
	word32 ap_1496
	word32 fp_1497
	word32 r5_1498
	word32 r4_1499
	word32 r6_1500
	word32 r7_1501
	word32 r8_1502
	word32 r9_1503
	byte CZN_1504
	call Mem1480[0x000192BC:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1463,C_1482,CVZN_1452,CZN_1471,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_1464,N_1458,pc_1472,r0_1473,r10_1462,r11_1456,r2_1461,r3_1459,r4_1466,r5_1465,r6_1467,r7_1468,r8_1469,r9_1470,sp_1479,V_1483,Z_1457,ZN_1481
		defs: ap_1496,C_1487,CVZN_1485,CZN_1504,fp_1497,N_1491,pc_1505,r0_1493,r10_1495,r11_1489,r2_1494,r3_1492,r4_1499,r5_1498,r6_1500,r7_1501,r8_1502,r9_1503,sp_1484,V_1488,Z_1490,ZN_1486
	Mem1507[sp_1484 - 0x00000004:word32] = 0x00000001
	word32 r11_1519
	word32 r0_1523 = fn00010E6A(r2_1494, r3_1492, r6_1500, r7_1501, r9_1503, ap_1496, fp_1497, out r2_1077, out r3_1075, out r4_1082, out r5_1081, out r6_1000, out r7_1001, out r8_1002, out r9_1003, out r11_1519, out ap_1334, out fp_1430, out sp_1417)
	branch r0_1523 != 0x00000001 l00010B48
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:0x00000000 r9:0x00000000 sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B48:
	branch r0_1523 != 0x0000004C l00010B58
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B58:
	branch r0_1523 == 0x00000009 l00010B6A
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B5D:
	branch r0_1523 == 0x00000000 l00010B68
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B68:
	r8_1002 = r8_1002 + 0x00000001
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B61:
	r7_1001 = r7_1001 + 0x00000001
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B51:
	r9_1003 = r9_1003 + 0x00000001
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B43:
	r6_1000 = r6_1000 + 0x00000001
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B6A:
	branch r0_1523 <= Mem1507[sp_1417:word32] l00010B72
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B6F:
	Mem1539[sp_1417:word32] = r0_1523
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AD3:
	Mem1364[sp_1356 - 0x00000004:uint32] = 0x00000401
	Mem1367[sp_1356 - 0x00000008:word32] = Mem1364[r2_1077 + 0x0000C60F:word32]
	branch Mem1367[r2_1077:word32] == 0x00000000 l00010AEC
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:0x00000000 r9:0x00000000 sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AEC:
	r3_1075 = r10_1078 + 456
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:0x00000000 r9:0x00000000 sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AE2:
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:0x00000000 r9:0x00000000 sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AF1:
	Mem1374[sp_1356 - 0x0000000C:word32] = r3_1075
	Mem1377[sp_1356 - 0x00000010:word32] = r10_1078 + 277
	Mem1380[sp_1356 - 0x00000014:word32] = r2_1077 + 1515
	word32 sp_1384
	byte CVZN_1385
	byte ZN_1386
	bool C_1387
	bool V_1388
	word32 r11_1389
	bool Z_1390
	bool N_1391
	word32 r3_1392
	word32 r0_1393
	word32 r2_1394
	word32 r10_1395
	word32 ap_1396
	word32 fp_1397
	word32 r5_1398
	word32 r4_1399
	word32 r6_1400
	word32 r7_1401
	word32 r8_1402
	word32 r9_1403
	byte CZN_1404
	word32 pc_1405
	call Mem1380[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1354,C_1382,CVZN_333,CZN_1344,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_1355,N_1347,pc_312,r0_1357,r10_320,r11_324,r2_321,r3_1372,r4_1342,r5_319,r6_317,r7_316,r8_315,r9_1343,sp_1378,V_1383,Z_1369,ZN_1381
		defs: ap_1396,C_1387,CVZN_1385,CZN_1404,fp_1397,N_1391,pc_1405,r0_1393,r10_1395,r11_1389,r2_1394,r3_1392,r4_1399,r5_1398,r6_1400,r7_1401,r8_1402,r9_1403,sp_1384,V_1388,Z_1390,ZN_1386
	Mem1407[sp_1384 - 0x00000004:word32] = r0_1393
	Mem1410[sp_1384 - 0x00000008:word32] = r2_1394 + 1515
	Mem1412[sp_1384 - 0x0000000C:word32] = r2_1394
	word32 ap_1413 = Mem1412[r2_1394 + 0x0000C839:word32]
	byte CVZN_1418
	byte ZN_1419
	bool C_1420
	bool V_1421
	word32 r11_1422
	bool Z_1423
	bool N_1424
	word32 r0_1426
	byte CZN_1437
	call ap_1413 + 2 (retsize: 4; depth: 4)
		uses: ap_1413,C_1415,CVZN_1385,CZN_1404,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_1397,N_1391,pc_1405,r0_1393,r10_1395,r11_1389,r2_1394,r3_1392,r4_1399,r5_1398,r6_1400,r7_1401,r8_1402,r9_1403,sp_1411,V_1416,Z_1390,ZN_1414
		defs: ap_1429,C_1420,CVZN_1418,CZN_1437,fp_1430,N_1424,pc_1438,r0_1426,r10_1428,r11_1422,r2_1427,r3_1425,r4_1432,r5_1431,r6_1433,r7_1434,r8_1435,r9_1436,sp_1417,V_1421,Z_1423,ZN_1419
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:0x00000000 r9:0x00000000 sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:r10 + 456 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AB4:
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AAD:
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AA1:
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r6 + r8 + r7 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B72:
	Mem355[sp_1417 - 0x00000004:word32] = Mem306[r2_1077 + 0x0000C60F:word32]
	word32 ap_359
	word32 sp_1067
	word32 fp_1080
	word32 r0_362 = fn00018F22(ap_1334, fp_1430, out ap_359, out fp_1080, out sp_1067)
	branch r0_362 != 0x00000000 l00010B86
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B86:
	branch Mem355[r2_1077 + 64:word32] < 0x00000003 l00010B8F
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B8F:
	branch Mem355[r2_1077 + 72:word32] == 0x00000000 l00010BA0
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B94:
	branch Mem355[r2_1077 + 64:word32] == 0x00000000 l00010BA0
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B99:
	branch Mem355[r2_1077:word32] != 0x00000000 l00010BA0
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BA0:
	branch r4_1082 + r7_1001 + r6_1000 > 0x00000000 l00010BAE
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BA9:
	branch r8_1002 == 0x00000001 l00010BD8
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BAE:
	branch Mem355[r2_1077 + 72:word32] == 0x00000000 l00010BB7
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BB3:
	branch Mem355[r2_1077:word32] == 0x00000000 l00010BD8
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BB7:
	branch Mem355[r2_1077 + 68:word32] == 0x00000000 l00010BC2
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BBC:
	branch Mem355[r2_1077 + 64:word32] > 0x00000001 l00010BD8
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BC2:
	Mem1282[sp_1067 - 0x00000004:uint32] = 0x00000401
	Mem1284[sp_1067 - 0x00000008:word32] = 0x00000001
	Mem1287[sp_1067 - 0x0000000C:word32] = r5_1081 + 16
	Mem1289[sp_1067 - 0x00000010:word32] = r2_1077
	word32 ap_1290 = Mem1289[r2_1077 + 0x0000C839:word32]
	byte CVZN_1295
	byte ZN_1296
	bool C_1297
	bool V_1298
	word32 r11_1299
	bool Z_1300
	bool N_1301
	word32 r0_1303
	word32 ap_1306
	byte CZN_1314
	call ap_1290 + 2 (retsize: 4; depth: 4)
		uses: ap_1290,C_1292,CVZN_589,CZN_1271,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_360,N_578,pc_336,r0_362,r10_344,r11_348,r2_345,r3_346,r4_342,r5_343,r6_341,r7_340,r8_339,r9_338,sp_1288,V_1293,Z_1277,ZN_1291
		defs: ap_1306,C_1297,CVZN_1295,CZN_1314,fp_1307,N_1301,pc_1315,r0_1303,r10_1305,r11_1299,r2_1304,r3_1302,r4_1309,r5_1308,r6_1310,r7_1311,r8_1312,r9_1313,sp_1294,V_1298,Z_1300,ZN_1296
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BD8:
	branch r8_1002 > 0x00000001 l00010BEB
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): Z
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BDD:
	branch r8_1002 != 0x00000001 l00010C24
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BDF:
	branch r4_1082 + r9_1003 + r7_1001 + r6_1000 <= 0x00000000 l00010C24
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BEB:
	word32 r3_1189
	word32 sp_1183 = sp_1067 - 0x00000004
	Mem1185[sp_1183:uint32] = 0x00000401
	branch r8_1002 != 0x00000001 l00010BFC
// DataOut: fp pc r0 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BFC:
	r3_1189 = r5_1081 + 18
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BF5:
	r3_1189 = r5_1081 + 25
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C00:
	Mem1191[sp_1183 - 0x00000004:word32] = r3_1189
	Mem1193[sp_1183 - 0x00000008:word32] = r8_1002
	Mem1196[sp_1183 - 0x0000000C:word32] = r10_1078 + 39
	Mem1199[sp_1183 - 0x00000010:word32] = r2_1077 + 1515
	word32 sp_1203
	byte CVZN_1204
	byte ZN_1205
	bool C_1206
	bool V_1207
	word32 r11_1208
	bool Z_1209
	bool N_1210
	word32 r3_1211
	word32 r0_1212
	word32 r2_1213
	word32 r10_1214
	word32 ap_1215
	word32 fp_1216
	word32 r5_1217
	word32 r4_1218
	word32 r6_1219
	word32 r7_1220
	word32 r8_1221
	word32 r9_1222
	byte CZN_1223
	word32 pc_1224
	call Mem1199[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1182,C_1201,CVZN_1180,CZN_1186,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_605,N_611,pc_591,r0_603,r10_598,r11_601,r2_599,r3_1189,r4_596,r5_597,r6_595,r7_594,r8_593,r9_592,sp_1197,V_1202,Z_1187,ZN_1200
		defs: ap_1215,C_1206,CVZN_1204,CZN_1223,fp_1216,N_1210,pc_1224,r0_1212,r10_1214,r11_1208,r2_1213,r3_1211,r4_1218,r5_1217,r6_1219,r7_1220,r8_1221,r9_1222,sp_1203,V_1207,Z_1209,ZN_1205
	Mem1226[sp_1203 - 0x00000004:word32] = r0_1212
	Mem1229[sp_1203 - 0x00000008:word32] = r2_1213 + 1515
	Mem1231[sp_1203 - 0x0000000C:word32] = r2_1213
	word32 ap_1232 = Mem1231[r2_1213 + 0x0000C839:word32]
	byte CVZN_1237
	byte ZN_1238
	bool C_1239
	bool V_1240
	word32 r11_1241
	bool Z_1242
	bool N_1243
	word32 r0_1245
	word32 ap_1248
	byte CZN_1256
	call ap_1232 + 2 (retsize: 4; depth: 4)
		uses: ap_1232,C_1234,CVZN_1204,CZN_1223,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_1216,N_1210,pc_1224,r0_1212,r10_1214,r11_1208,r2_1213,r3_1211,r4_1218,r5_1217,r6_1219,r7_1220,r8_1221,r9_1222,sp_1230,V_1235,Z_1209,ZN_1233
		defs: ap_1248,C_1239,CVZN_1237,CZN_1256,fp_1249,N_1243,pc_1257,r0_1245,r10_1247,r11_1241,r2_1246,r3_1244,r4_1251,r5_1250,r6_1252,r7_1253,r8_1254,r9_1255,sp_1236,V_1240,Z_1242,ZN_1238
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C24:
	branch r6_1000 <= 0x00000000 l00010C60
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C28:
	word32 r3_1103
	word32 sp_1097 = sp_1067 - 0x00000004
	Mem1099[sp_1097:uint32] = 0x00000401
	branch r6_1000 != 0x00000001 l00010C38
// DataOut: fp pc r0 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C38:
	r3_1103 = r5_1081 + 30
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C32:
	r3_1103 = r5_1081 + 32
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C3C:
	Mem1105[sp_1097 - 0x00000004:word32] = r3_1103
	Mem1107[sp_1097 - 0x00000008:word32] = r6_1000
	Mem1110[sp_1097 - 0x0000000C:word32] = r10_1078 + 77
	Mem1113[sp_1097 - 0x00000010:word32] = r2_1077 + 1515
	word32 sp_1117
	byte CVZN_1118
	byte ZN_1119
	bool C_1120
	bool V_1121
	word32 r11_1122
	bool Z_1123
	bool N_1124
	word32 r3_1125
	word32 r0_1126
	word32 r2_1127
	word32 r10_1128
	word32 ap_1129
	word32 fp_1130
	word32 r5_1131
	word32 r4_1132
	word32 r6_1133
	word32 r7_1134
	word32 r8_1135
	word32 r9_1136
	byte CZN_1137
	word32 pc_1138
	call Mem1113[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_632,C_1115,CVZN_628,CZN_1100,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_631,N_625,pc_614,r0_629,r10_622,r11_627,r2_623,r3_1103,r4_620,r5_621,r6_619,r7_618,r8_617,r9_616,sp_1111,V_1116,Z_1101,ZN_1114
		defs: ap_1129,C_1120,CVZN_1118,CZN_1137,fp_1130,N_1124,pc_1138,r0_1126,r10_1128,r11_1122,r2_1127,r3_1125,r4_1132,r5_1131,r6_1133,r7_1134,r8_1135,r9_1136,sp_1117,V_1121,Z_1123,ZN_1119
	Mem1140[sp_1117 - 0x00000004:word32] = r0_1126
	Mem1143[sp_1117 - 0x00000008:word32] = r2_1127 + 1515
	Mem1145[sp_1117 - 0x0000000C:word32] = r2_1127
	word32 ap_1146 = Mem1145[r2_1127 + 0x0000C839:word32]
	byte CVZN_1151
	byte ZN_1152
	bool C_1153
	bool V_1154
	word32 r11_1155
	bool Z_1156
	bool N_1157
	word32 r0_1159
	word32 ap_1162
	byte CZN_1170
	call ap_1146 + 2 (retsize: 4; depth: 4)
		uses: ap_1146,C_1148,CVZN_1118,CZN_1137,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_1130,N_1124,pc_1138,r0_1126,r10_1128,r11_1122,r2_1127,r3_1125,r4_1132,r5_1131,r6_1133,r7_1134,r8_1135,r9_1136,sp_1144,V_1149,Z_1123,ZN_1147
		defs: ap_1162,C_1153,CVZN_1151,CZN_1170,fp_1163,N_1157,pc_1171,r0_1159,r10_1161,r11_1155,r2_1160,r3_1158,r4_1165,r5_1164,r6_1166,r7_1167,r8_1168,r9_1169,sp_1150,V_1154,Z_1156,ZN_1152
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C60:
	branch r7_1001 <= 0x00000000 l00010C9C
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C64:
	word32 r3_1020
	word32 sp_1014 = sp_1067 - 0x00000004
	Mem1016[sp_1014:uint32] = 0x00000401
	branch r7_1001 != 0x00000001 l00010C74
// DataOut: fp pc r0 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C74:
	r3_1020 = r5_1081 + 33
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C6E:
	r3_1020 = r5_1081 + 35
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C78:
	Mem1022[sp_1014 - 0x00000004:word32] = r3_1020
	Mem1024[sp_1014 - 0x00000008:word32] = r7_1001
	Mem1027[sp_1014 - 0x0000000C:word32] = r10_1078 + 125
	Mem1030[sp_1014 - 0x00000010:word32] = r2_1077 + 1515
	word32 sp_1034
	byte CVZN_1035
	byte ZN_1036
	bool C_1037
	bool V_1038
	word32 r11_1039
	bool Z_1040
	bool N_1041
	word32 r3_1042
	word32 r0_1043
	word32 r2_1044
	word32 r10_1045
	word32 ap_1046
	word32 fp_1047
	word32 r5_1048
	word32 r4_1049
	word32 r6_1050
	word32 r7_1051
	word32 r8_1052
	word32 r9_1053
	byte CZN_1054
	word32 pc_1055
	call Mem1030[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_654,C_1032,CVZN_650,CZN_1017,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_653,N_647,pc_636,r0_651,r10_644,r11_649,r2_645,r3_1020,r4_642,r5_643,r6_641,r7_640,r8_639,r9_638,sp_1028,V_1033,Z_1018,ZN_1031
		defs: ap_1046,C_1037,CVZN_1035,CZN_1054,fp_1047,N_1041,pc_1055,r0_1043,r10_1045,r11_1039,r2_1044,r3_1042,r4_1049,r5_1048,r6_1050,r7_1051,r8_1052,r9_1053,sp_1034,V_1038,Z_1040,ZN_1036
	Mem1057[sp_1034 - 0x00000004:word32] = r0_1043
	Mem1060[sp_1034 - 0x00000008:word32] = r2_1044 + 1515
	Mem1062[sp_1034 - 0x0000000C:word32] = r2_1044
	word32 ap_1063 = Mem1062[r2_1044 + 0x0000C839:word32]
	byte CVZN_1068
	byte ZN_1069
	bool C_1070
	bool V_1071
	word32 r11_1072
	bool Z_1073
	bool N_1074
	word32 r0_1076
	word32 ap_1079
	byte CZN_1087
	call ap_1063 + 2 (retsize: 4; depth: 4)
		uses: ap_1063,C_1065,CVZN_1035,CZN_1054,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_1047,N_1041,pc_1055,r0_1043,r10_1045,r11_1039,r2_1044,r3_1042,r4_1049,r5_1048,r6_1050,r7_1051,r8_1052,r9_1053,sp_1061,V_1066,Z_1040,ZN_1064
		defs: ap_1079,C_1070,CVZN_1068,CZN_1087,fp_1080,N_1074,pc_1088,r0_1076,r10_1078,r11_1072,r2_1077,r3_1075,r4_1082,r5_1081,r6_1083,r7_1084,r8_1085,r9_1086,sp_1067,V_1071,Z_1073,ZN_1069
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C9C:
	branch r4_1082 <= 0x00000000 l00010CD9
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010CA0:
	word32 r3_1006
	word32 sp_931 = sp_1067 - 0x00000004
	Mem933[sp_931:uint32] = 0x00000401
	branch r4_1082 != 0x00000001 l00010CB0
// DataOut: fp pc r0 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010CB0:
	r3_1006 = r5_1081 + 36
// DataOut: fp pc r0 r10 r2 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010CAA:
	r3_1006 = r5_1081 + 38
// DataOut: fp pc r0 r10 r2 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010CB4:
	Mem939[sp_931 - 0x00000004:word32] = r3_1006
	Mem941[sp_931 - 0x00000008:word32] = r4_1082
	Mem944[sp_931 - 0x0000000C:word32] = r10_1078 + 157
	Mem947[sp_931 - 0x00000010:word32] = r2_1077 + 1515
	word32 sp_951
	byte CVZN_952
	byte ZN_953
	bool C_954
	bool V_955
	word32 r11_956
	bool Z_957
	bool N_958
	word32 r3_959
	word32 r0_960
	word32 r2_961
	word32 r10_962
	word32 ap_963
	word32 fp_964
	word32 r5_965
	word32 r4_966
	word32 r6_967
	word32 r7_968
	word32 r8_969
	word32 r9_970
	byte CZN_971
	word32 pc_972
	call Mem947[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_676,C_949,CVZN_672,CZN_934,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_675,N_669,pc_658,r0_673,r10_666,r11_671,r2_667,r3_937,r4_664,r5_665,r6_663,r7_662,r8_661,r9_660,sp_945,V_950,Z_935,ZN_948
		defs: ap_963,C_954,CVZN_952,CZN_971,fp_964,N_958,pc_972,r0_960,r10_962,r11_956,r2_961,r3_959,r4_966,r5_965,r6_967,r7_968,r8_969,r9_970,sp_951,V_955,Z_957,ZN_953
	Mem974[sp_951 - 0x00000004:word32] = r0_960
	Mem977[sp_951 - 0x00000008:word32] = r2_961 + 1515
	Mem979[sp_951 - 0x0000000C:word32] = r2_961
	word32 ap_980 = Mem979[r2_961 + 0x0000C839:word32]
	byte CVZN_985
	byte ZN_986
	bool C_987
	bool V_988
	word32 r11_989
	bool Z_990
	bool N_991
	word32 r0_993
	word32 ap_996
	word32 r5_998
	word32 r4_999
	byte CZN_1004
	call ap_980 + 2 (retsize: 4; depth: 4)
		uses: ap_980,C_982,CVZN_952,CZN_971,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_964,N_958,pc_972,r0_960,r10_962,r11_956,r2_961,r3_959,r4_966,r5_965,r6_967,r7_968,r8_969,r9_970,sp_978,V_983,Z_957,ZN_981
		defs: ap_996,C_987,CVZN_985,CZN_1004,fp_997,N_991,pc_1005,r0_993,r10_995,r11_989,r2_994,r3_992,r4_999,r5_998,r6_1000,r7_1001,r8_1002,r9_1003,sp_984,V_988,Z_990,ZN_986
// DataOut: fp pc r0 r10 r2 r3 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010CD9:
	branch r9_1003 != 0x00000001 l00010D08
// DataOut: fp pc r0 r10 r2 r3 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D08:
	branch r9_1003 <= 0x00000000 l00010D34
// DataOut: fp pc r0 r10 r2 r3 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D0C:
	word32 sp_862 = sp_1067 - 0x00000004
	Mem864[sp_862:uint32] = 0x00000401
	Mem866[sp_862 - 0x00000004:word32] = r9_1003
	Mem869[sp_862 - 0x00000008:word32] = r10_1078 + 224
	Mem872[sp_862 - 0x0000000C:word32] = r2_1077 + 1515
	word32 sp_876
	byte CVZN_877
	byte ZN_878
	bool C_879
	bool V_880
	word32 r11_881
	bool Z_882
	bool N_883
	word32 r3_884
	word32 r0_885
	word32 r2_886
	word32 r10_887
	word32 ap_888
	word32 fp_889
	word32 r5_890
	word32 r4_891
	word32 r6_892
	word32 r7_893
	word32 r8_894
	word32 r9_895
	byte CZN_896
	word32 pc_897
	call Mem872[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_698,C_874,CVZN_692,CZN_699,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_697,N_690,pc_680,r0_693,r10_687,r11_691,r2_688,r3_689,r4_685,r5_686,r6_684,r7_683,r8_682,r9_681,sp_870,V_875,Z_700,ZN_873
		defs: ap_888,C_879,CVZN_877,CZN_896,fp_889,N_883,pc_897,r0_885,r10_887,r11_881,r2_886,r3_884,r4_891,r5_890,r6_892,r7_893,r8_894,r9_895,sp_876,V_880,Z_882,ZN_878
	Mem899[sp_876 - 0x00000004:word32] = r0_885
	Mem902[sp_876 - 0x00000008:word32] = r2_886 + 1515
	Mem904[sp_876 - 0x0000000C:word32] = r2_886
	word32 ap_905 = Mem904[r2_886 + 0x0000C839:word32]
	byte CVZN_910
	byte ZN_911
	bool C_912
	bool V_913
	word32 r11_914
	bool Z_915
	bool N_916
	word32 r0_918
	word32 ap_921
	word32 r5_923
	word32 r4_924
	word32 r9_928
	byte CZN_929
	call ap_905 + 2 (retsize: 4; depth: 4)
		uses: ap_905,C_907,CVZN_877,CZN_896,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_889,N_883,pc_897,r0_885,r10_887,r11_881,r2_886,r3_884,r4_891,r5_890,r6_892,r7_893,r8_894,r9_895,sp_903,V_908,Z_882,ZN_906
		defs: ap_921,C_912,CVZN_910,CZN_929,fp_922,N_916,pc_930,r0_918,r10_920,r11_914,r2_919,r3_917,r4_924,r5_923,r6_925,r7_926,r8_927,r9_928,sp_909,V_913,Z_915,ZN_911
// DataOut: fp pc r0 r10 r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010CDE:
	word32 sp_792 = sp_1067 - 0x00000004
	Mem794[sp_792:uint32] = 0x00000401
	Mem797[sp_792 - 0x00000004:word32] = r10_1078 + 194
	Mem800[sp_792 - 0x00000008:word32] = r2_1077 + 1515
	word32 sp_804
	byte CVZN_805
	byte ZN_806
	bool C_807
	bool V_808
	word32 r11_809
	bool Z_810
	bool N_811
	word32 r3_812
	word32 r0_813
	word32 r2_814
	word32 r10_815
	word32 ap_816
	word32 fp_817
	word32 r5_818
	word32 r4_819
	word32 r6_820
	word32 r7_821
	word32 r8_822
	word32 r9_823
	byte CZN_824
	word32 pc_825
	call Mem800[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_698,C_802,CVZN_692,CZN_699,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_697,N_690,pc_680,r0_693,r10_687,r11_691,r2_688,r3_689,r4_685,r5_686,r6_684,r7_683,r8_682,r9_681,sp_798,V_803,Z_700,ZN_801
		defs: ap_816,C_807,CVZN_805,CZN_824,fp_817,N_811,pc_825,r0_813,r10_815,r11_809,r2_814,r3_812,r4_819,r5_818,r6_820,r7_821,r8_822,r9_823,sp_804,V_808,Z_810,ZN_806
	Mem827[sp_804 - 0x00000004:word32] = r0_813
	Mem830[sp_804 - 0x00000008:word32] = r2_814 + 1515
	Mem832[sp_804 - 0x0000000C:word32] = r2_814
	word32 ap_833 = Mem832[r2_814 + 0x0000C839:word32]
	byte CVZN_838
	byte ZN_839
	bool C_840
	bool V_841
	word32 r11_842
	bool Z_843
	bool N_844
	word32 r0_846
	word32 ap_849
	word32 r5_851
	word32 r4_852
	word32 r9_856
	byte CZN_857
	call ap_833 + 2 (retsize: 4; depth: 4)
		uses: ap_833,C_835,CVZN_805,CZN_824,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_817,N_811,pc_825,r0_813,r10_815,r11_809,r2_814,r3_812,r4_819,r5_818,r6_820,r7_821,r8_822,r9_823,sp_831,V_836,Z_810,ZN_834
		defs: ap_849,C_840,CVZN_838,CZN_857,fp_850,N_844,pc_858,r0_846,r10_848,r11_842,r2_847,r3_845,r4_852,r5_851,r6_853,r7_854,r8_855,r9_856,sp_837,V_841,Z_843,ZN_839
// DataOut: fp pc r0 r10 r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D34:
	word32 ap_722 = r7_1001 + r8_1002 + r6_1000
	branch ap_722 != 0x00000000 l00010D63
// DataOut: fp pc r0 r10 r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D3D:
	word32 sp_725 = sp_1067 - 0x00000004
	Mem727[sp_725:uint32] = 0x00000401
	Mem730[sp_725 - 0x00000004:word32] = r10_1078 + 257
	Mem733[sp_725 - 0x00000008:word32] = r2_1077 + 1515
	word32 sp_737
	byte CVZN_738
	byte ZN_739
	bool C_740
	bool V_741
	word32 r11_742
	bool Z_743
	bool N_744
	word32 r3_745
	word32 r0_746
	word32 r2_747
	word32 r10_748
	word32 ap_749
	word32 fp_750
	word32 r5_751
	word32 r4_752
	word32 r6_753
	word32 r7_754
	word32 r8_755
	word32 r9_756
	byte CZN_757
	word32 pc_758
	call Mem733[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_722,C_735,CVZN_723,CZN_703,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_720,N_713,pc_702,r0_715,r10_710,r11_714,r2_711,r3_712,r4_708,r5_709,r6_707,r7_706,r8_705,r9_704,sp_731,V_736,Z_724,ZN_734
		defs: ap_749,C_740,CVZN_738,CZN_757,fp_750,N_744,pc_758,r0_746,r10_748,r11_742,r2_747,r3_745,r4_752,r5_751,r6_753,r7_754,r8_755,r9_756,sp_737,V_741,Z_743,ZN_739
	Mem760[sp_737 - 0x00000004:word32] = r0_746
	Mem763[sp_737 - 0x00000008:word32] = r2_747 + 1515
	Mem765[sp_737 - 0x0000000C:word32] = r2_747
	word32 ap_766 = Mem765[r2_747 + 0x0000C839:word32]
	word32 sp_770
	byte CVZN_771
	byte ZN_772
	bool C_773
	bool V_774
	word32 r11_775
	bool Z_776
	bool N_777
	word32 r0_779
	word32 r2_780
	word32 r10_781
	word32 ap_782
	word32 r5_784
	word32 r4_785
	word32 r9_789
	byte CZN_790
	call ap_766 + 2 (retsize: 4; depth: 4)
		uses: ap_766,C_768,CVZN_738,CZN_757,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_750,N_744,pc_758,r0_746,r10_748,r11_742,r2_747,r3_745,r4_752,r5_751,r6_753,r7_754,r8_755,r9_756,sp_764,V_769,Z_743,ZN_767
		defs: ap_782,C_773,CVZN_771,CZN_790,fp_783,N_777,pc_791,r0_779,r10_781,r11_775,r2_780,r3_778,r4_785,r5_784,r6_786,r7_787,r8_788,r9_789,sp_770,V_774,Z_776,ZN_772
// DataOut: fp pc r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B9D:
// DataOut: fp pc r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B8C:
// DataOut: fp pc r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B83:
// DataOut: fp pc r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D63:
	word32 ap_381
	word32 fp_382
	word32 sp_383
	word32 r0_384 = fn0001872A(r3_1075, fp_1080, out ap_381, out fp_382, out sp_383)
	Mem386[sp_383 - 0x00000004:word32] = 0x00000005
	Mem388[sp_383 - 0x00000008:word32] = 0x00000000
	word32 ap_392
	word32 fp_393
	word32 sp_394
	word32 r2_395 = fn0000C6FA(r0_384, r6_1000, r7_1001, r8_1002, ap_381, fp_382, pc_1005, out ap_392, out fp_393, out sp_394)
	branch Mem388[r2_395 + 0x0000C5EB:word32] == 0x00000000 l00010D8A
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D7D:
	fn0000D406(ap_392, fp_393, out sp_394)
	Mem572[r2_395 + 0x0000C5EB:word32] = 0x00000000
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D8A:
	branch Mem388[r2_395 + 0x0000C815:word32] == 0x00000000 l00010DA5
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D92:
	word32 sp_535 = sp_394 - 0x00000004
	Mem537[sp_535:word32] = Mem388[r2_395 + 0x0000C815:word32]
	byte CVZN_542
	byte ZN_543
	bool C_544
	bool V_545
	word32 r11_546
	bool Z_547
	bool N_548
	word32 r3_549
	word32 r0_550
	word32 r10_552
	word32 ap_553
	word32 fp_554
	word32 r5_555
	word32 r4_556
	word32 r6_557
	word32 r7_558
	word32 r8_559
	word32 r9_560
	byte CZN_561
	word32 pc_562
	call Mem537[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_392,C_539,CVZN_379,CZN_368,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_402,N_400,pc_367,r0_384,r10_375,r11_378,r2_395,r3_376,r4_373,r5_374,r6_372,r7_371,r8_370,r9_369,sp_535,V_540,Z_404,ZN_538
		defs: ap_553,C_544,CVZN_542,CZN_561,fp_554,N_548,pc_562,r0_550,r10_552,r11_546,r2_551,r3_549,r4_556,r5_555,r6_557,r7_558,r8_559,r9_560,sp_541,V_545,Z_547,ZN_543
	Mem564[r2_395 + 0x0000C815:word32] = 0x00000000
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010DA5:
	branch Mem388[r2_395 + 0x0000C6F1:word32] == 0x00000000 l00010DBA
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010DAD:
	word32 sp_507 = sp_394 - 0x00000004
	Mem509[sp_507:word32] = Mem388[r2_395 + 0x0000C6F1:word32]
	byte CVZN_514
	byte ZN_515
	bool C_516
	bool V_517
	word32 r11_518
	bool Z_519
	bool N_520
	word32 r3_521
	word32 r0_522
	word32 r10_524
	word32 ap_525
	word32 fp_526
	word32 r5_527
	word32 r4_528
	word32 r6_529
	word32 r7_530
	word32 r8_531
	word32 r9_532
	byte CZN_533
	word32 pc_534
	call Mem509[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_424,C_511,CVZN_420,CZN_408,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_423,N_418,pc_407,r0_421,r10_415,r11_419,r2_416,r3_417,r4_413,r5_414,r6_412,r7_411,r8_410,r9_409,sp_507,V_512,Z_426,ZN_510
		defs: ap_525,C_516,CVZN_514,CZN_533,fp_526,N_520,pc_534,r0_522,r10_524,r11_518,r2_523,r3_521,r4_528,r5_527,r6_529,r7_530,r8_531,r9_532,sp_513,V_517,Z_519,ZN_515
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010DBA:
	branch Mem388[r2_395 + 0x0000C5F3:word32] == 0x00000000 l00010DCF
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010DC2:
	word32 sp_479 = sp_394 - 0x00000004
	Mem481[sp_479:word32] = Mem388[r2_395 + 0x0000C5F3:word32]
	word32 sp_485
	byte CVZN_486
	byte ZN_487
	bool C_488
	bool V_489
	word32 r11_490
	bool Z_491
	bool N_492
	word32 r3_493
	word32 r0_494
	word32 r10_496
	word32 ap_497
	word32 fp_498
	word32 r5_499
	word32 r4_500
	word32 r6_501
	word32 r7_502
	word32 r8_503
	word32 r9_504
	byte CZN_505
	word32 pc_506
	call Mem481[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_446,C_483,CVZN_442,CZN_430,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_201,dwLoc18_205,dwLoc1C_235,dwLoc20_239,dwLoc24_265,dwLoc28_269,dwLoc2C_301,fp_445,N_440,pc_429,r0_443,r10_437,r11_441,r2_438,r3_439,r4_435,r5_436,r6_434,r7_433,r8_432,r9_431,sp_479,V_484,Z_448,ZN_482
		defs: ap_497,C_488,CVZN_486,CZN_505,fp_498,N_492,pc_506,r0_494,r10_496,r11_490,r2_495,r3_493,r4_500,r5_499,r6_501,r7_502,r8_503,r9_504,sp_485,V_489,Z_491,ZN_487
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010DCF:
	Mem469[r2_395 + 0x0000C6F1:word32] = 0x00000000
	Mem471[r2_395 + 0x0000C5F3:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l0001092D:
	word32 sp_119
	byte CVZN_120
	byte ZN_121
	bool C_122
	bool V_123
	word32 r11_124
	bool Z_125
	bool N_126
	word32 r3_127
	word32 r0_128
	word32 r2_129
	word32 r10_130
	word32 ap_131
	word32 fp_132
	word32 r5_133
	word32 r4_134
	word32 r6_135
	word32 r7_136
	word32 r8_137
	word32 r9_138
	byte CZN_139
	word32 pc_140
	call Mem69[0x000192D0:word32] + 2 (retsize: 4; depth: 32)
		uses: ap_56,C_113,CVZN_45,CZN_64,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_106,dwLoc18_108,dwLoc1C_111,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,fp_57,N_51,pc_65,r0_53,r10_55,r11_49,r2_54,r3_52,r4_59,r5_58,r6_60,r7_61,r8_62,r9_63,sp_109,V_114,Z_71,ZN_112
		defs: ap_131,C_122,CVZN_120,CZN_139,fp_132,N_126,pc_140,r0_128,r10_130,r11_124,r2_129,r3_127,r4_134,r5_133,r6_135,r7_136,r8_137,r9_138,sp_119,V_123,Z_125,ZN_121
	word32 ap_148 = Mem69[r2_129 + 0x0000C839:word32]
	word32 sp_152
	byte CVZN_153
	byte ZN_154
	bool C_155
	bool V_156
	word32 r11_157
	bool Z_158
	bool N_159
	word32 r3_160
	word32 r0_161
	word32 r2_162
	word32 r10_163
	word32 ap_164
	word32 fp_165
	word32 r5_166
	word32 r4_167
	word32 r6_168
	word32 r7_169
	word32 r8_170
	word32 r9_171
	byte CZN_172
	word32 pc_173
	call ap_148 + 2 (retsize: 4; depth: 44)
		uses: ap_148,C_150,CVZN_120,CZN_139,dwLoc08_6,dwLoc0C_9,dwLoc10_40,dwLoc14_106,dwLoc18_108,dwLoc1C_111,dwLoc20_142,dwLoc24_145,dwLoc28_147,dwLoc2C,fp_132,N_126,pc_140,r0_128,r10_130,r11_124,r2_129,r3_127,r4_134,r5_133,r6_135,r7_136,r8_137,r9_138,sp_146,V_151,Z_125,ZN_149
		defs: ap_164,C_155,CVZN_153,CZN_172,fp_165,N_159,pc_173,r0_161,r10_163,r11_157,r2_162,r3_160,r4_167,r5_166,r6_168,r7_169,r8_170,r9_171,sp_152,V_156,Z_158,ZN_154
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r11:0x00000000 r3:0x00000000 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

fn000108D2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r3:<invalid> ap:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000



word32 fn00010E6A(word32 r2, word32 r3, word32 r6, word32 r7, word32 r9, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2 r3 r6 r7 r9
// LiveOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00010E6A_entry:
	*r2Out = r2
	*r11Out = r11
	*r9Out = r9
	*r6Out = r6
	*r4Out = r4
	*r7Out = r7
	*r3Out = r3
// DataOut: ap fp pc r10 r11 r2 r3 r4 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010E6A:
	word32 r8_3 = 0x00000000
	*r8Out = r8_3
	word32 r5_104 = 0x00000000
	*r5Out = r5_104
	word32 fp_110
	word32 ap_15
	word32 sp_1058
	word32 r0_18 = fn00018F22(ap, fp, out ap_15, out fp_110, out sp_1058)
	branch r0_18 != 0x00000000 l00010EDF
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00010EA5:
	Mem335[sp_1058 - 0x00000004:word32] = r2 + 0x0000C694
	Mem338[sp_1058 - 0x00000008:word32] = Mem335[r2 + 0x0000C613:word32]
	byte CVZN_343
	byte ZN_344
	bool C_345
	bool V_346
	bool Z_348
	bool N_349
	word32 r0_352
	byte CZN_354
	byte VZN_357
	word32 r4_360
	byte CZ_363
	word32 r11_364
	word32 r9_1844
	word32 r8_1829
	call Mem338[0x000192A8:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_15,C_340,CVZN,CZ,CZN,dwLoc10_9,fp_16,N,r0_18,r1,r11,r2,r3,r4,r5_4,r6,r7,r8_3,r9,sp_336,V_341,VZN,Z_20,ZN_339
		defs: ap_355,C_345,CVZN_343,CZ_363,CZN_354,fp_356,N_349,r0_352,r1_353,r11_364,r2_351,r3_358,r4_360,r5_350,r6_361,r7_359,r8_347,r9_362,sp_342,V_346,VZN_357,Z_348,ZN_344
	branch r0_352 != 0x00000000 l00010EDF
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:0x00000000 r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> -16(fp):<invalid>

l00010EBC:
	word32 r0_1834 = (uint32) Mem338[r2 + 0x0000C69E:word16] & ~0xFFFF0FFF
	r1 = 0x00000000
	branch r0_1834 != 0x00004000 l00010ED7
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:0x00000000 r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010ED5:
	r1 = 0x00000001
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:0x00000000 r0:<invalid> r1:0x00000000 fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010ED7:
	r5_104 = r1
	*r5Out = r5_104
	branch r1 != 0x00000000 l00010EDF
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:0x00000000 r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010EDF:
	branch Mem0[ap_15 + 4:word32] != 0x00000000 l00010EE7
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010EE7:
	branch Mem0[r2 + 0x0000C6E9:word32] == 0x00000000 l00010F50
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F50:
	word32 sp_244 = sp_1058 - 0x00000004
	Mem246[sp_244:uint32] = 0x00000401
	Mem249[sp_244 - 0x00000004:word32] = Mem246[r2 + 0x0000C613:word32]
	Mem252[sp_244 - 0x00000008:word32] = Mem249[r2 + 0x0000C60F:word32]
	branch Mem252[r2:word32] == 0x00000000 l00010F70
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F70:
	r3 = r6 + 456
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F65:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F75:
	Mem259[sp_244 - 0x0000000C:word32] = r3
	Mem262[sp_244 - 0x00000010:word32] = r6 + 421
	Mem265[sp_244 - 0x00000014:word32] = r2 + 1515
	word32 sp_269
	byte CVZN_270
	byte ZN_271
	bool C_272
	bool V_273
	word32 r8_274
	bool Z_275
	bool N_276
	word32 r5_277
	word32 r2_278
	word32 r0_279
	word32 r1_280
	byte CZN_281
	word32 ap_282
	word32 fp_283
	byte VZN_284
	word32 r3_285
	word32 r7_286
	word32 r4_287
	word32 r6_288
	word32 r9_289
	byte CZ_290
	word32 r11_291
	call Mem265[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_88,C_267,CVZN_84,CZ_71,CZN_78,dwLoc10_9,fp_87,N_82,r0_85,r1_79,r11_70,r2_80,r3_257,r4_74,r5_81,r6_73,r7_75,r8_83,r9_72,sp_263,V_268,VZN_77,Z_254,ZN_266
		defs: ap_282,C_272,CVZN_270,CZ_290,CZN_281,fp_283,N_276,r0_279,r1_280,r11_291,r2_278,r3_285,r4_287,r5_277,r6_288,r7_286,r8_274,r9_289,sp_269,V_273,VZN_284,Z_275,ZN_271
	Mem293[sp_269 - 0x00000004:word32] = r0_279
	Mem296[sp_269 - 0x00000008:word32] = r2_278 + 1515
	Mem298[sp_269 - 0x0000000C:word32] = r2_278
	word32 r0_299 = Mem298[r2_278 + 0x0000C839:word32]
	word32 sp_303
	byte CVZN_304
	byte ZN_305
	bool C_306
	bool V_307
	word32 r8_308
	bool Z_309
	bool N_310
	word32 r2_312
	word32 r0_313
	byte CZN_315
	word32 ap_316
	byte VZN_318
	word32 r3_319
	word32 r7_320
	word32 r4_321
	word32 r6_322
	word32 r9_323
	byte CZ_324
	word32 r11_325
	call r0_299 + 2 (retsize: 4; depth: 4)
		uses: ap_282,C_301,CVZN_270,CZ_290,CZN_281,dwLoc10_9,fp_283,N_276,r0_299,r1_280,r11_291,r2_278,r3_285,r4_287,r5_277,r6_288,r7_286,r8_274,r9_289,sp_297,V_302,VZN_284,Z_275,ZN_300
		defs: ap_316,C_306,CVZN_304,CZ_324,CZN_315,fp_317,N_310,r0_313,r1_314,r11_325,r2_312,r3_319,r4_321,r5_311,r6_322,r7_320,r8_308,r9_323,sp_303,V_307,VZN_318,Z_309,ZN_305
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:r6 + 456 r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010EEF:
	word32 r4_150
	word32 sp_139 = sp_1058 - 0x00000004
	Mem141[sp_139:uint32] = 0x00000401
	Mem144[sp_139 - 0x00000004:word32] = Mem141[r2 + 0x0000C613:word32]
	word32 r3_145 = Mem144[r2:word32]
	branch r3_145 == 0x00000000 l00010F08
// DataOut: fp pc r0 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F08:
	r4_150 = r7 + 39
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010EFF:
	r4_150 = r7 + 40
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F0C:
	Mem152[sp_139 - 0x00000008:word32] = r4_150
	Mem155[sp_139 - 0x0000000C:word32] = Mem152[r2 + 0x0000C60F:word32]
	branch r3_145 == 0x00000000 l00010F24
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F24:
	r3_145 = r6 + 456
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F18:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F29:
	Mem162[sp_139 - 0x00000010:word32] = r3_145
	Mem165[sp_139 - 0x00000014:word32] = r6 + 340
	Mem168[sp_139 - 0x00000018:word32] = r2 + 1515
	word32 sp_172
	byte CVZN_173
	byte ZN_174
	bool C_175
	bool V_176
	word32 r8_177
	bool Z_178
	bool N_179
	word32 r5_180
	word32 r2_181
	word32 r0_182
	word32 r1_183
	byte CZN_184
	word32 ap_185
	word32 fp_186
	byte VZN_187
	word32 r3_188
	word32 r7_189
	word32 r4_190
	word32 r6_191
	word32 r9_192
	byte CZ_193
	word32 r11_194
	call Mem168[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_88,C_170,CVZN_84,CZ_71,CZN_78,dwLoc10_9,fp_87,N_82,r0_85,r1_79,r11_70,r2_80,r3_160,r4_150,r5_81,r6_73,r7_75,r8_83,r9_72,sp_166,V_171,VZN_77,Z_157,ZN_169
		defs: ap_185,C_175,CVZN_173,CZ_193,CZN_184,fp_186,N_179,r0_182,r1_183,r11_194,r2_181,r3_188,r4_190,r5_180,r6_191,r7_189,r8_177,r9_192,sp_172,V_176,VZN_187,Z_178,ZN_174
	Mem196[sp_172 - 0x00000004:word32] = r0_182
	Mem199[sp_172 - 0x00000008:word32] = r2_181 + 1515
	Mem201[sp_172 - 0x0000000C:word32] = r2_181
	word32 r0_202 = Mem201[r2_181 + 0x0000C839:word32]
	word32 sp_206
	byte CVZN_207
	byte ZN_208
	bool C_209
	bool V_210
	word32 r8_211
	bool Z_212
	bool N_213
	word32 r2_215
	word32 r0_216
	byte CZN_218
	word32 ap_219
	byte VZN_221
	word32 r3_222
	word32 r7_223
	word32 r4_224
	word32 r6_225
	word32 r9_226
	byte CZ_227
	word32 r11_228
	call r0_202 + 2 (retsize: 4; depth: 4)
		uses: ap_185,C_204,CVZN_173,CZ_193,CZN_184,dwLoc10_9,fp_186,N_179,r0_202,r1_183,r11_194,r2_181,r3_188,r4_190,r5_180,r6_191,r7_189,r8_177,r9_192,sp_200,V_205,VZN_187,Z_178,ZN_203
		defs: ap_219,C_209,CVZN_207,CZ_227,CZN_218,fp_220,N_213,r0_216,r1_217,r11_228,r2_215,r3_222,r4_224,r5_214,r6_225,r7_223,r8_211,r9_226,sp_206,V_210,VZN_221,Z_212,ZN_208
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010EE4:
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F98:
	word32 r1_116
	branch r5_104 == 0x00000000 l00010FA4
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r4:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FA4:
	r1_116 = DPB(r1, 0x09, 0)
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r4:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F9C:
	r1_116 = DPB(r1, 0x4C, 0)
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r4:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FA7:
	word32 sp_122 = fp_110 - 0x00000004
	*spOut = sp_122
	word32 fp_123
	*fpOut = Mem0[sp_122 + 0x00000010:word32]
	word32 ap_124
	*apOut = Mem0[sp_122 + 0x0000000C:word32]
	return (int32) (int8) r1_116
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r4:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010EDC:
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FAB:
	Mem383[r2 + 0x0000C61B:word32] = Mem338[r2 + 0x0000C6AE:word32]
	fn00009A52()
	branch r0_1834 == 0x00000000 l00010FC5
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FC5:
	fn0000D4A2()
	branch r0_1834 == 0x00000000 l00010FD4
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>
// Terminates process

l00010FD4:
	branch Mem383[r2 + 0x0000C5EB:word32] != 0x00000000 l00010FF0
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FDC:
	word32 r4_1849
	word32 r5_1850
	r0_1834 = fn0000D39E(r0_1834, r6, fp_110, out r2, out r3, out r4_1849, out r5_1850, out ap_15, out fp_110, out sp_1058)
	Mem1856[r2 + 0x0000C5EB:word32] = r0_1834
	branch r0_1834 != 0x00000000 l00010FF0
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FF0:
	Mem422[r2 + 0x0000C61F:word32] = 0x00000000
	Mem424[r2 + 0x0000C5F7:word32] = Mem422[r2 + 0x0000C5F3:word32]
	branch Mem424[r2:word32] != 0x00000000 l00011037
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011005:
	branch Mem424[r2 + 64:word32] != 0x00000000 l00011037
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001100A:
	branch Mem424[r2 + 72:word32] != 0x00000000 l00011037
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001100F:
	word32 sp_1776 = sp_1058 - 0x00000004
	Mem1777[sp_1776:word32] = 0x00000000
	Mem1780[sp_1776 - 0x00000004:word32] = Mem1777[r2 + 0x0000C613:word32]
	Mem1783[sp_1776 - 0x00000008:word32] = r7 + 43
	Mem1786[sp_1776 - 0x0000000C:word32] = r2 + 1515
	word32 sp_1790
	byte CVZN_1791
	byte ZN_1792
	bool C_1793
	bool V_1794
	word32 r8_1795
	bool Z_1796
	bool N_1797
	word32 r5_1798
	word32 r2_1799
	word32 r0_1800
	word32 r1_1801
	byte CZN_1802
	word32 ap_1803
	word32 fp_1804
	byte VZN_1805
	word32 r3_1806
	word32 r7_1807
	word32 r4_1808
	word32 r6_1809
	word32 r9_1810
	byte CZ_1811
	word32 r11_1812
	call Mem1786[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_420,C_1788,CVZN_376,CZ_363,CZN_372,dwLoc10_9,fp_419,N_349,r0_417,r1_375,r11_364,r2_415,r3_414,r4_413,r5_416,r6_361,r7_359,r8_347,r9_362,sp_1784,V_1789,VZN_357,Z_1773,ZN_1787
		defs: ap_1803,C_1793,CVZN_1791,CZ_1811,CZN_1802,fp_1804,N_1797,r0_1800,r1_1801,r11_1812,r2_1799,r3_1806,r4_1808,r5_1798,r6_1809,r7_1807,r8_1795,r9_1810,sp_1790,V_1794,VZN_1805,Z_1796,ZN_1792
	Mem1814[sp_1790 - 0x00000004:word32] = r0_1800
	Mem1817[sp_1790 - 0x00000008:word32] = r2_1799 + 1515
	Mem1819[sp_1790 - 0x0000000C:word32] = r2_1799
	word32 r0_1820 = Mem1819[r2_1799 + 0x0000C839:word32]
	byte CVZN_1825
	byte ZN_1826
	bool C_1827
	bool V_1828
	bool Z_1830
	bool N_1831
	word32 r5_1832
	word32 r1_1835
	byte CZN_1836
	byte VZN_1839
	word32 r4_1842
	byte CZ_1845
	word32 r11_1846
	call r0_1820 + 2 (retsize: 4; depth: 4)
		uses: ap_1803,C_1822,CVZN_1791,CZ_1811,CZN_1802,dwLoc10_9,fp_1804,N_1797,r0_1820,r1_1801,r11_1812,r2_1799,r3_1806,r4_1808,r5_1798,r6_1809,r7_1807,r8_1795,r9_1810,sp_1818,V_1823,VZN_1805,Z_1796,ZN_1821
		defs: ap_1837,C_1827,CVZN_1825,CZ_1845,CZN_1836,fp_1838,N_1831,r0_1834,r1_1835,r11_1846,r2_1833,r3_1840,r4_1842,r5_1832,r6_1843,r7_1841,r8_1829,r9_1844,sp_1824,V_1828,VZN_1839,Z_1830,ZN_1826
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011037:
	word32 r8_1434
	word32 r3_1579
	word32 r7_1075
	word32 r6_1077
	word32 ap_1760
	word32 fp_1761
	word32 r9_1764
	r9_1764 = r9_1844
	r6_1077 = r6
	r7_1075 = r7
	r3_1579 = r3
	r8_1434 = r8_1829
	fp_1761 = fp_110
	ap_1760 = ap_15
	branch Mem424[r2:word32] == 0x00000000 l00011060
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001103B:
	Mem1737[sp_1058 - 0x00000004:word32] = Mem424[r2 + 0x0000C61B:word32]
	word32 r3_1742
	word32 r4_1743
	word32 r5_1744
	word32 r7_1745
	word32 ap_1746
	word32 fp_1747
	word32 r0_1749 = fn000117AA(r0_1834, r2, r6, r8_1829, r9_1844, ap_15, fp_110, out r2, out r3_1742, out r4_1743, out r5_1744, out r7_1745, out ap_1746, out fp_1747, out sp_1058)
	branch r0_1749 == 0x00000000 l0001104E
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001104E:
	word32 r11_1759
	word32 r0_1763 = fn00012A2A(r0_1749, r2, r4_1743, r5_1744, ap_1746, fp_1747, out r3_1579, out r6_1077, out r7_1075, out r8_1434, out r11_1759, out ap_1760, out fp_1761, out sp_1058)
	r9_1764 = r0_1763
	branch r0_1763 <= 0x00000001 l00011060
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011060:
	branch Mem424[r2:word32] == 0x00000000 l00011067
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011067:
	word32 r3_1572
	word32 r0_1568 = Mem424[r2 + 0x0000C61B:word32]
	branch r0_1568 >= 0x000101D0 l0001107C
// DataOut: ap fp pc r0 r10 r11 r2 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001107C:
	r3_1572 = 0x000101D0
// DataOut: ap fp pc r0 r10 r11 r2 r3 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011077:
	r3_1572 = r0_1568
// DataOut: ap fp pc r0 r10 r11 r2 r3 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011083:
	Mem1574[sp_1058 - 0x00000004:word32] = r3_1572
	word32 r4_1580
	word32 r5_1581
	word32 ap_1583
	word32 fp_1584
	branch fn000117AA(r0_1568, r2, r6_1077, r8_1434, r9_1764, ap_1760, fp_1761, out r2, out r3_1579, out r4_1580, out r5_1581, out r7_1075, out ap_1583, out fp_1584, out sp_1058) != 0x00000000 l000110EF
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001108F:
	word32 r4_1592 = 0x00000000
	branch Mem1574[r2 + 0x0000C692:word16] == 0x0000 l000110E7
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011099:
	branch Mem1574[r2 + 92:word32] > 0x00000000 l000110AA
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:0x00000000 r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001109E:
	branch Mem1574[r2 + 92:word32] != 0x00000000 l000110E7
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:0x00000000 r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110A0:
	branch Mem1574[r2 + 72:word32] != 0x00000000 l000110E7
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:0x00000000 r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110A5:
	branch Mem1574[r2 + 64:word32] != 0x00000000 l000110E7
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:0x00000000 r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110AA:
	Mem1630[sp_1058 - 0x00000004:word32] = 0x00000001
	Mem1633[sp_1058 - 0x00000008:uint32] = (uint32) Mem1630[r2 + 0x0000C692:word16]
	word32 r11_1637
	word32 ap_1638
	word32 fp_1639
	word32 r0_1641 = fn0000DC76(ap_1583, fp_1584, out r11_1637, out ap_1638, out fp_1639, out sp_1058)
	branch r0_1641 == 0x00000000 l000110E7
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:0x00000000 r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110BE:
	Mem1648[sp_1058 - 0x00000004:uint32] = 0x00000401
	Mem1651[sp_1058 - 0x00000008:word32] = r6_1077 + 1864
	Mem1654[sp_1058 - 0x0000000C:word32] = r2 + 1515
	word32 sp_1658
	byte CVZN_1659
	byte ZN_1660
	bool C_1661
	bool V_1662
	word32 r8_1663
	bool Z_1664
	bool N_1665
	word32 r5_1666
	word32 r2_1667
	word32 r0_1668
	word32 r1_1669
	byte CZN_1670
	word32 ap_1671
	word32 fp_1672
	byte VZN_1673
	word32 r3_1674
	word32 r7_1675
	word32 r4_1676
	word32 r6_1677
	word32 r9_1678
	byte CZ_1679
	word32 r11_1680
	call Mem1654[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1638,C_1656,CVZN_1627,CZ_1625,CZN_1624,dwLoc10_9,fp_1639,N_1622,r0_1641,r1_438,r11_1637,r2_1578,r3_1579,r4_1592,r5_1581,r6_505,r7_1582,r8_512,r9_1587,sp_1652,V_1657,VZN_1628,Z_1643,ZN_1655
		defs: ap_1671,C_1661,CVZN_1659,CZ_1679,CZN_1670,fp_1672,N_1665,r0_1668,r1_1669,r11_1680,r2_1667,r3_1674,r4_1676,r5_1666,r6_1677,r7_1675,r8_1663,r9_1678,sp_1658,V_1662,VZN_1673,Z_1664,ZN_1660
	Mem1682[sp_1658 - 0x00000004:word32] = r0_1668
	Mem1685[sp_1658 - 0x00000008:word32] = r2_1667 + 1515
	Mem1687[sp_1658 - 0x0000000C:word32] = r2_1667
	word32 r0_1688 = Mem1687[r2_1667 + 0x0000C839:word32]
	byte CVZN_1693
	byte ZN_1694
	bool C_1695
	bool V_1696
	bool Z_1698
	bool N_1699
	word32 r5_1700
	word32 r0_1702
	word32 r1_1703
	byte CZN_1704
	word32 ap_1705
	word32 fp_1706
	byte VZN_1707
	word32 r4_1710
	word32 r9_1712
	byte CZ_1713
	word32 r11_1714
	call r0_1688 + 2 (retsize: 4; depth: 4)
		uses: ap_1671,C_1690,CVZN_1659,CZ_1679,CZN_1670,dwLoc10_9,fp_1672,N_1665,r0_1688,r1_1669,r11_1680,r2_1667,r3_1674,r4_1676,r5_1666,r6_1677,r7_1675,r8_1663,r9_1678,sp_1686,V_1691,VZN_1673,Z_1664,ZN_1689
		defs: ap_1705,C_1695,CVZN_1693,CZ_1713,CZN_1704,fp_1706,N_1699,r0_1702,r1_1703,r11_1714,r2_1701,r3_1708,r4_1710,r5_1700,r6_1711,r7_1709,r8_1697,r9_1712,sp_1692,V_1696,VZN_1707,Z_1698,ZN_1694
	r4_1592 = 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:0x00000000 r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110E7:
	branch r4_1592 <= 0x00000001 l00011110
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011064:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011110:
	branch Mem424[r2 + 92:word32] <= 0x00000000 l0001112A
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011115:
	branch Mem424[r2:word32] != 0x00000000 l0001112A
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001112A:
	word32 r3_1526 = DPB(r3_1579, 0x00, 0)
	branch Mem424[r2:word32] != 0x00000000 l0001113B
// DataOut: fp pc r0 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011130:
	branch (uint32) Mem424[r2 + 0x0000C682:word16] == 0x00000000 l0001113B
// DataOut: fp pc r0 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011139:
	r3_1526 = DPB(r3_1579, 0x01, 0)
// DataOut: fp pc r0 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001113B:
	word32 r4_1428 = (int32) (int8) r3_1526
	branch Mem424[r2:word32] != 0x00000000 l00011145
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011145:
	branch Mem424[r2 + 0x0000C682:word16] != Mem424[r2 + 0x0000C684:word16] l00011155
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011155:
	branch Mem424[r2 + 0x0000C682:word16] <=u Mem424[r2 + 0x0000C684:word16] l0001119C
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001119C:
	word32 sp_1438 = sp_1058 - 0x00000004
	Mem1440[sp_1438:uint32] = 0x00000401
	Mem1443[sp_1438 - 0x00000004:uint32] = (uint32) Mem1440[r2 + 0x0000C684:word16]
	Mem1446[sp_1438 - 0x00000008:uint32] = (uint32) Mem1443[r2 + 0x0000C682:word16]
	Mem1449[sp_1438 - 0x0000000C:word32] = Mem1446[r2 + 0x0000C613:word32]
	Mem1452[sp_1438 - 0x00000010:word32] = r6_1077 + 662
	Mem1455[sp_1438 - 0x00000014:word32] = r2 + 1515
	word32 sp_1459
	byte CVZN_1460
	byte ZN_1461
	bool C_1462
	bool V_1463
	word32 r8_1464
	bool Z_1465
	bool N_1466
	word32 r5_1467
	word32 r2_1468
	word32 r0_1469
	word32 r1_1470
	byte CZN_1471
	word32 ap_1472
	word32 fp_1473
	byte VZN_1474
	word32 r3_1475
	word32 r7_1476
	word32 r4_1477
	word32 r6_1478
	word32 r9_1479
	byte CZ_1480
	word32 r11_1481
	call Mem1455[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_540,C_1457,CVZN_1353,CZ_1351,CZN_1346,dwLoc10_9,fp_539,N_1350,r0_552,r1_530,r11_521,r2_531,r3_550,r4_553,r5_532,r6_524,r7_526,r8_534,r9_523,sp_1453,V_1458,VZN_1354,Z_1349,ZN_1456
		defs: ap_1472,C_1462,CVZN_1460,CZ_1480,CZN_1471,fp_1473,N_1466,r0_1469,r1_1470,r11_1481,r2_1468,r3_1475,r4_1477,r5_1467,r6_1478,r7_1476,r8_1464,r9_1479,sp_1459,V_1463,VZN_1474,Z_1465,ZN_1461
	Mem1483[sp_1459 - 0x00000004:word32] = r0_1469
	Mem1486[sp_1459 - 0x00000008:word32] = r2_1468 + 1515
	Mem1488[sp_1459 - 0x0000000C:word32] = r2_1468
	word32 r0_1489 = Mem1488[r2_1468 + 0x0000C839:word32]
	byte CVZN_1494
	byte ZN_1495
	bool C_1496
	bool V_1497
	bool Z_1499
	bool N_1500
	word32 r5_1501
	word32 r0_1503
	word32 r1_1504
	byte CZN_1505
	word32 ap_1506
	word32 fp_1507
	byte VZN_1508
	word32 r3_1509
	word32 r9_1513
	byte CZ_1514
	word32 r11_1515
	call r0_1489 + 2 (retsize: 4; depth: 4)
		uses: ap_1472,C_1491,CVZN_1460,CZ_1480,CZN_1471,dwLoc10_9,fp_1473,N_1466,r0_1489,r1_1470,r11_1481,r2_1468,r3_1475,r4_1477,r5_1467,r6_1478,r7_1476,r8_1464,r9_1479,sp_1487,V_1492,VZN_1474,Z_1465,ZN_1490
		defs: ap_1506,C_1496,CVZN_1494,CZ_1514,CZN_1505,fp_1507,N_1500,r0_1503,r1_1504,r11_1515,r2_1502,r3_1509,r4_1511,r5_1501,r6_1512,r7_1510,r8_1498,r9_1513,sp_1493,V_1497,VZN_1508,Z_1499,ZN_1495
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011157:
	word32 sp_1355 = sp_1058 - 0x00000004
	Mem1357[sp_1355:uint32] = 0x00000401
	Mem1360[sp_1355 - 0x00000004:uint32] = (uint32) Mem1357[r2 + 0x0000C684:word16]
	Mem1363[sp_1355 - 0x00000008:uint32] = (uint32) Mem1360[r2 + 0x0000C682:word16]
	Mem1366[sp_1355 - 0x0000000C:word32] = Mem1363[r2 + 0x0000C613:word32]
	Mem1369[sp_1355 - 0x00000010:word32] = r6_1077 + 515
	Mem1372[sp_1355 - 0x00000014:word32] = r2 + 1515
	word32 sp_1376
	byte CVZN_1377
	byte ZN_1378
	bool C_1379
	bool V_1380
	word32 r8_1381
	bool Z_1382
	bool N_1383
	word32 r5_1384
	word32 r2_1385
	word32 r0_1386
	word32 r1_1387
	byte CZN_1388
	word32 ap_1389
	word32 fp_1390
	byte VZN_1391
	word32 r3_1392
	word32 r7_1393
	word32 r4_1394
	word32 r6_1395
	word32 r9_1396
	byte CZ_1397
	word32 r11_1398
	call Mem1372[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_540,C_1374,CVZN_1353,CZ_1351,CZN_1346,dwLoc10_9,fp_539,N_1350,r0_552,r1_530,r11_521,r2_531,r3_550,r4_553,r5_532,r6_524,r7_526,r8_534,r9_523,sp_1370,V_1375,VZN_1354,Z_1349,ZN_1373
		defs: ap_1389,C_1379,CVZN_1377,CZ_1397,CZN_1388,fp_1390,N_1383,r0_1386,r1_1387,r11_1398,r2_1385,r3_1392,r4_1394,r5_1384,r6_1395,r7_1393,r8_1381,r9_1396,sp_1376,V_1380,VZN_1391,Z_1382,ZN_1378
	Mem1400[sp_1376 - 0x00000004:word32] = r0_1386
	Mem1403[sp_1376 - 0x00000008:word32] = r2_1385 + 1515
	Mem1405[sp_1376 - 0x0000000C:word32] = r2_1385
	word32 r0_1406 = Mem1405[r2_1385 + 0x0000C839:word32]
	byte CVZN_1411
	byte ZN_1412
	bool C_1413
	bool V_1414
	word32 r8_1415
	bool Z_1416
	bool N_1417
	word32 r5_1418
	word32 r0_1420
	word32 r1_1421
	byte CZN_1422
	word32 ap_1423
	word32 fp_1424
	byte VZN_1425
	word32 r3_1426
	word32 r9_1430
	byte CZ_1431
	word32 r11_1432
	call r0_1406 + 2 (retsize: 4; depth: 4)
		uses: ap_1389,C_1408,CVZN_1377,CZ_1397,CZN_1388,dwLoc10_9,fp_1390,N_1383,r0_1406,r1_1387,r11_1398,r2_1385,r3_1392,r4_1394,r5_1384,r6_1395,r7_1393,r8_1381,r9_1396,sp_1404,V_1409,VZN_1391,Z_1382,ZN_1407
		defs: ap_1423,C_1413,CVZN_1411,CZ_1431,CZN_1422,fp_1424,N_1417,r0_1420,r1_1421,r11_1432,r2_1419,r3_1426,r4_1428,r5_1418,r6_1429,r7_1427,r8_1415,r9_1430,sp_1410,V_1414,VZN_1425,Z_1416,ZN_1412
	r8_1434 = 0x00000001
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011152:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011142:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000111D9:
	branch r8_1434 == 0x00000000 l000111E0
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000111E0:
	branch r4_1428 == 0x00000000 l00011213
// DataOut: fp pc r0 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000111E4:
	word32 sp_1270 = sp_1058 - 0x00000004
	Mem1272[sp_1270:uint32] = 0x00000401
	Mem1275[sp_1270 - 0x00000004:word32] = Mem1272[r2 + 0x0000C613:word32]
	Mem1278[sp_1270 - 0x00000008:word32] = r6_1077 + 844
	Mem1281[sp_1270 - 0x0000000C:word32] = r2 + 1515
	word32 sp_1285
	byte CVZN_1286
	byte ZN_1287
	bool C_1288
	bool V_1289
	word32 r8_1290
	bool Z_1291
	bool N_1292
	word32 r5_1293
	word32 r2_1294
	word32 r0_1295
	word32 r1_1296
	byte CZN_1297
	word32 ap_1298
	word32 fp_1299
	byte VZN_1300
	word32 r3_1301
	word32 r7_1302
	word32 r4_1303
	word32 r6_1304
	word32 r9_1305
	byte CZ_1306
	word32 r11_1307
	call Mem1281[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_576,C_1283,CVZN_572,CZ_559,CZN_566,dwLoc10_9,fp_575,N_570,r0_573,r1_567,r11_558,r2_568,r3_564,r4_562,r5_569,r6_561,r7_563,r8_571,r9_560,sp_1279,V_1284,VZN_565,Z_739,ZN_1282
		defs: ap_1298,C_1288,CVZN_1286,CZ_1306,CZN_1297,fp_1299,N_1292,r0_1295,r1_1296,r11_1307,r2_1294,r3_1301,r4_1303,r5_1293,r6_1304,r7_1302,r8_1290,r9_1305,sp_1285,V_1289,VZN_1300,Z_1291,ZN_1287
	Mem1309[sp_1285 - 0x00000004:word32] = r0_1295
	Mem1312[sp_1285 - 0x00000008:word32] = r2_1294 + 1515
	Mem1314[sp_1285 - 0x0000000C:word32] = r2_1294
	word32 r0_1315 = Mem1314[r2_1294 + 0x0000C839:word32]
	byte CVZN_1320
	byte ZN_1321
	bool C_1322
	bool V_1323
	word32 r8_1324
	bool Z_1325
	bool N_1326
	word32 r5_1327
	word32 r0_1329
	word32 r1_1330
	byte CZN_1331
	word32 ap_1332
	word32 fp_1333
	byte VZN_1334
	word32 r3_1335
	word32 r4_1337
	word32 r9_1339
	byte CZ_1340
	word32 r11_1341
	call r0_1315 + 2 (retsize: 4; depth: 4)
		uses: ap_1298,C_1317,CVZN_1286,CZ_1306,CZN_1297,dwLoc10_9,fp_1299,N_1292,r0_1315,r1_1296,r11_1307,r2_1294,r3_1301,r4_1303,r5_1293,r6_1304,r7_1302,r8_1290,r9_1305,sp_1313,V_1318,VZN_1300,Z_1291,ZN_1316
		defs: ap_1332,C_1322,CVZN_1320,CZ_1340,CZN_1331,fp_1333,N_1326,r0_1329,r1_1330,r11_1341,r2_1328,r3_1335,r4_1337,r5_1327,r6_1338,r7_1336,r8_1324,r9_1339,sp_1319,V_1323,VZN_1334,Z_1325,ZN_1321
// DataOut: fp pc r0 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011213:
	Mem761[r2 + 0x0000C623:word32] = Mem424[r2 + 124:word32] - Mem424[r2 + 128:word32]
	word32 r4_762 = Mem761[r2 + 0x0000C623:word32]
	branch r4_762 >= 0x00000000 l0001125C
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001125C:
	branch r4_762 > 0x00000000 l00011263
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011263:
	branch Mem761[r2 + 0x0000C68E:word32] != 0x00000000 l000112B8
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001126B:
	branch Mem761[r2 + 0x0000C68A:word32] == 0x00000000 l000112B8
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000112B8:
	word32 r3_1100
	word32 sp_1094 = sp_1058 - 0x00000004
	Mem1096[sp_1094:uint32] = 0x00000401
	branch r4_762 != 0x00000001 l000112C8
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000112C8:
	r3_1100 = r7_1075 + 57
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000112C2:
	r3_1100 = r7_1075 + 59
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000112CC:
	Mem1102[sp_1094 - 0x00000004:word32] = r3_1100
	Mem1104[sp_1094 - 0x00000008:word32] = r4_762
	Mem1107[sp_1094 - 0x0000000C:word32] = Mem1104[r2 + 0x0000C613:word32]
	Mem1110[sp_1094 - 0x00000010:word32] = r6_1077 + 1102
	Mem1113[sp_1094 - 0x00000014:word32] = r2 + 1515
	word32 sp_1117
	byte CVZN_1118
	byte ZN_1119
	bool C_1120
	bool V_1121
	word32 r8_1122
	bool Z_1123
	bool N_1124
	word32 r5_1125
	word32 r2_1126
	word32 r0_1127
	word32 r1_1128
	byte CZN_1129
	word32 ap_1130
	word32 fp_1131
	byte VZN_1132
	word32 r3_1133
	word32 r7_1134
	word32 r4_1135
	word32 r6_1136
	word32 r9_1137
	byte CZ_1138
	word32 r11_1139
	call Mem1113[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_759,C_1115,CVZN_754,CZ_743,CZN_1097,dwLoc10_9,fp_758,N_764,r0_756,r1_750,r11_742,r2_751,r3_1100,r4_762,r5_752,r6_745,r7_746,r8_753,r9_744,sp_1111,V_1116,VZN_748,Z_1098,ZN_1114
		defs: ap_1130,C_1120,CVZN_1118,CZ_1138,CZN_1129,fp_1131,N_1124,r0_1127,r1_1128,r11_1139,r2_1126,r3_1133,r4_1135,r5_1125,r6_1136,r7_1134,r8_1122,r9_1137,sp_1117,V_1121,VZN_1132,Z_1123,ZN_1119
	Mem1141[sp_1117 - 0x00000004:word32] = r0_1127
	Mem1144[sp_1117 - 0x00000008:word32] = r2_1126 + 1515
	Mem1146[sp_1117 - 0x0000000C:word32] = r2_1126
	word32 r0_1147 = Mem1146[r2_1126 + 0x0000C839:word32]
	byte CVZN_1152
	byte ZN_1153
	bool C_1154
	bool V_1155
	word32 r8_1156
	bool Z_1157
	bool N_1158
	word32 r5_1159
	word32 r0_1161
	word32 r1_1162
	byte CZN_1163
	word32 ap_1164
	word32 fp_1165
	byte VZN_1166
	word32 r3_1167
	word32 r4_1169
	word32 r9_1171
	byte CZ_1172
	word32 r11_1173
	call r0_1147 + 2 (retsize: 4; depth: 4)
		uses: ap_1130,C_1149,CVZN_1118,CZ_1138,CZN_1129,dwLoc10_9,fp_1131,N_1124,r0_1147,r1_1128,r11_1139,r2_1126,r3_1133,r4_1135,r5_1125,r6_1136,r7_1134,r8_1122,r9_1137,sp_1145,V_1150,VZN_1132,Z_1123,ZN_1148
		defs: ap_1164,C_1154,CVZN_1152,CZ_1172,CZN_1163,fp_1165,N_1158,r0_1161,r1_1162,r11_1173,r2_1160,r3_1167,r4_1169,r5_1159,r6_1170,r7_1168,r8_1156,r9_1171,sp_1151,V_1155,VZN_1166,Z_1157,ZN_1153
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011273:
	word32 sp_1190 = sp_1058 - 0x00000004
	Mem1192[sp_1190:uint32] = 0x00000401
	Mem1195[sp_1190 - 0x00000004:word32] = Mem1192[r2 + 0x0000C613:word32]
	Mem1198[sp_1190 - 0x00000008:word32] = r6_1077 + 1275
	Mem1201[sp_1190 - 0x0000000C:word32] = r2 + 1515
	word32 sp_1205
	byte CVZN_1206
	byte ZN_1207
	bool C_1208
	bool V_1209
	word32 r8_1210
	bool Z_1211
	bool N_1212
	word32 r5_1213
	word32 r2_1214
	word32 r0_1215
	word32 r1_1216
	byte CZN_1217
	word32 ap_1218
	word32 fp_1219
	byte VZN_1220
	word32 r3_1221
	word32 r7_1222
	word32 r4_1223
	word32 r6_1224
	word32 r9_1225
	byte CZ_1226
	word32 r11_1227
	call Mem1201[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_759,C_1203,CVZN_754,CZ_743,CZN_749,dwLoc10_9,fp_758,N_764,r0_756,r1_750,r11_742,r2_751,r3_747,r4_762,r5_752,r6_745,r7_746,r8_753,r9_744,sp_1199,V_1204,VZN_748,Z_1187,ZN_1202
		defs: ap_1218,C_1208,CVZN_1206,CZ_1226,CZN_1217,fp_1219,N_1212,r0_1215,r1_1216,r11_1227,r2_1214,r3_1221,r4_1223,r5_1213,r6_1224,r7_1222,r8_1210,r9_1225,sp_1205,V_1209,VZN_1220,Z_1211,ZN_1207
	Mem1229[sp_1205 - 0x00000004:word32] = r0_1215
	Mem1232[sp_1205 - 0x00000008:word32] = r2_1214 + 1515
	Mem1234[sp_1205 - 0x0000000C:word32] = r2_1214
	word32 r0_1235 = Mem1234[r2_1214 + 0x0000C839:word32]
	byte CVZN_1240
	byte ZN_1241
	bool C_1242
	bool V_1243
	word32 r8_1244
	bool Z_1245
	bool N_1246
	word32 r5_1247
	word32 r0_1249
	word32 r1_1250
	byte CZN_1251
	word32 ap_1252
	word32 fp_1253
	byte VZN_1254
	word32 r3_1255
	word32 r4_1257
	word32 r9_1259
	byte CZ_1260
	word32 r11_1261
	call r0_1235 + 2 (retsize: 4; depth: 4)
		uses: ap_1218,C_1237,CVZN_1206,CZ_1226,CZN_1217,dwLoc10_9,fp_1219,N_1212,r0_1235,r1_1216,r11_1227,r2_1214,r3_1221,r4_1223,r5_1213,r6_1224,r7_1222,r8_1210,r9_1225,sp_1233,V_1238,VZN_1220,Z_1211,ZN_1236
		defs: ap_1252,C_1242,CVZN_1240,CZ_1260,CZN_1251,fp_1253,N_1246,r0_1249,r1_1250,r11_1261,r2_1248,r3_1255,r4_1257,r5_1247,r6_1258,r7_1256,r8_1244,r9_1259,sp_1239,V_1243,VZN_1254,Z_1245,ZN_1241
	Mem1263[r2 + 0x0000C68E:word32] = Mem1234[r2 + 0x0000C623:word32]
	Mem1265[r2 + 0x0000C623:word32] = 0x00000000
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011260:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011227:
	word32 sp_1006 = sp_1058 - 0x00000004
	Mem1008[sp_1006:uint32] = 0x00000401
	Mem1011[sp_1006 - 0x00000004:word32] = -r4_762
	Mem1014[sp_1006 - 0x00000008:word32] = Mem1011[r2 + 0x0000C613:word32]
	Mem1017[sp_1006 - 0x0000000C:word32] = r6_1077 + 1199
	Mem1020[sp_1006 - 0x00000010:word32] = r2 + 1515
	word32 sp_1024
	byte CVZN_1025
	byte ZN_1026
	bool C_1027
	bool V_1028
	word32 r8_1029
	bool Z_1030
	bool N_1031
	word32 r5_1032
	word32 r2_1033
	word32 r0_1034
	word32 r1_1035
	byte CZN_1036
	word32 ap_1037
	word32 fp_1038
	byte VZN_1039
	word32 r3_1040
	word32 r7_1041
	word32 r4_1042
	word32 r6_1043
	word32 r9_1044
	byte CZ_1045
	word32 r11_1046
	call Mem1020[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_759,C_1022,CVZN_754,CZ_743,CZN_749,dwLoc10_9,fp_758,N_764,r0_756,r1_750,r11_742,r2_751,r3_747,r4_762,r5_752,r6_745,r7_746,r8_753,r9_744,sp_1018,V_1023,VZN_748,Z_755,ZN_1021
		defs: ap_1037,C_1027,CVZN_1025,CZ_1045,CZN_1036,fp_1038,N_1031,r0_1034,r1_1035,r11_1046,r2_1033,r3_1040,r4_1042,r5_1032,r6_1043,r7_1041,r8_1029,r9_1044,sp_1024,V_1028,VZN_1039,Z_1030,ZN_1026
	Mem1048[sp_1024 - 0x00000004:word32] = r0_1034
	Mem1051[sp_1024 - 0x00000008:word32] = r2_1033 + 1515
	Mem1053[sp_1024 - 0x0000000C:word32] = r2_1033
	word32 r0_1054 = Mem1053[r2_1033 + 0x0000C839:word32]
	byte CVZN_1059
	byte ZN_1060
	bool C_1061
	bool V_1062
	word32 r8_1063
	bool Z_1064
	bool N_1065
	word32 r5_1066
	word32 r0_1068
	word32 r1_1069
	byte CZN_1070
	word32 ap_1071
	word32 fp_1072
	byte VZN_1073
	word32 r3_1074
	word32 r4_1076
	word32 r9_1078
	byte CZ_1079
	word32 r11_1080
	call r0_1054 + 2 (retsize: 4; depth: 4)
		uses: ap_1037,C_1056,CVZN_1025,CZ_1045,CZN_1036,dwLoc10_9,fp_1038,N_1031,r0_1054,r1_1035,r11_1046,r2_1033,r3_1040,r4_1042,r5_1032,r6_1043,r7_1041,r8_1029,r9_1044,sp_1052,V_1057,VZN_1039,Z_1030,ZN_1055
		defs: ap_1071,C_1061,CVZN_1059,CZ_1079,CZN_1070,fp_1072,N_1065,r0_1068,r1_1069,r11_1080,r2_1067,r3_1074,r4_1076,r5_1066,r6_1077,r7_1075,r8_1063,r9_1078,sp_1058,V_1062,VZN_1073,Z_1064,ZN_1060
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000112FA:
	branch Mem761[r2 + 128:word32] == 0x00000000 l00011303
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011303:
	branch Mem761[r2 + 0x0000C68A:word32] == 0x00000000 l0001130E
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001130E:
	word32 sp_805
	word32 r2_804
	branch Mem761[r2:word32] == 0x00000000 l00011348
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011348:
	word32 sp_934 = sp_1058 - 0x00000004
	Mem936[sp_934:uint32] = 0x00000401
	Mem939[sp_934 - 0x00000004:word32] = Mem936[r2 + 0x0000C613:word32]
	Mem942[sp_934 - 0x00000008:word32] = r6_1077 + 1352
	Mem945[sp_934 - 0x0000000C:word32] = r2 + 1515
	word32 sp_949
	byte CVZN_950
	byte ZN_951
	bool C_952
	bool V_953
	word32 r8_954
	bool Z_955
	bool N_956
	word32 r5_957
	word32 r2_958
	word32 r0_959
	word32 r1_960
	byte CZN_961
	word32 ap_962
	word32 fp_963
	byte VZN_964
	word32 r3_965
	word32 r7_966
	word32 r4_967
	word32 r6_968
	word32 r9_969
	byte CZ_970
	word32 r11_971
	call Mem945[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_785,C_947,CVZN_781,CZ_768,CZN_775,dwLoc10_9,fp_784,N_779,r0_782,r1_776,r11_767,r2_777,r3_773,r4_771,r5_778,r6_770,r7_772,r8_780,r9_769,sp_943,V_948,VZN_774,Z_801,ZN_946
		defs: ap_962,C_952,CVZN_950,CZ_970,CZN_961,fp_963,N_956,r0_959,r1_960,r11_971,r2_958,r3_965,r4_967,r5_957,r6_968,r7_966,r8_954,r9_969,sp_949,V_953,VZN_964,Z_955,ZN_951
	Mem973[sp_949 - 0x00000004:word32] = r0_959
	Mem976[sp_949 - 0x00000008:word32] = r2_958 + 1515
	Mem978[sp_949 - 0x0000000C:word32] = r2_958
	word32 r0_979 = Mem978[r2_958 + 0x0000C839:word32]
	byte CVZN_984
	byte ZN_985
	bool C_986
	bool V_987
	word32 r8_988
	bool Z_989
	bool N_990
	word32 r5_991
	word32 r0_993
	word32 r1_994
	byte CZN_995
	word32 ap_996
	word32 fp_997
	byte VZN_998
	word32 r3_999
	word32 r7_1000
	word32 r4_1001
	word32 r6_1002
	word32 r9_1003
	byte CZ_1004
	word32 r11_1005
	call r0_979 + 2 (retsize: 4; depth: 4)
		uses: ap_962,C_981,CVZN_950,CZ_970,CZN_961,dwLoc10_9,fp_963,N_956,r0_979,r1_960,r11_971,r2_958,r3_965,r4_967,r5_957,r6_968,r7_966,r8_954,r9_969,sp_977,V_982,VZN_964,Z_955,ZN_980
		defs: ap_996,C_986,CVZN_984,CZ_1004,CZN_995,fp_997,N_990,r0_993,r1_994,r11_1005,r2_992,r3_999,r4_1001,r5_991,r6_1002,r7_1000,r8_988,r9_1003,sp_983,V_987,VZN_998,Z_989,ZN_985
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011312:
	word32 r3_857
	word32 sp_852 = sp_1058 - 0x00000004
	Mem853[sp_852:word32] = 0x00000000
	branch Mem853[r2 + 36:word32] <= 0x00000009 l00011320
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011320:
	r3_857 = r7_1075 + 78
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001131A:
	r3_857 = r7_1075 + 79
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011324:
	Mem859[sp_852 - 0x00000004:word32] = r3_857
	Mem862[sp_852 - 0x00000008:word32] = r7_1075 + 60
	Mem865[sp_852 - 0x0000000C:word32] = r2 + 1515
	word32 sp_869
	byte CVZN_870
	byte ZN_871
	bool C_872
	bool V_873
	word32 r8_874
	bool Z_875
	bool N_876
	word32 r5_877
	word32 r2_878
	word32 r0_879
	word32 r1_880
	byte CZN_881
	word32 ap_882
	word32 fp_883
	byte VZN_884
	word32 r3_885
	word32 r7_886
	word32 r4_887
	word32 r6_888
	word32 r9_889
	byte CZ_890
	word32 r11_891
	call Mem865[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_785,C_867,CVZN_781,CZ_768,CZN_854,dwLoc10_9,fp_784,N_779,r0_782,r1_776,r11_767,r2_777,r3_857,r4_771,r5_778,r6_770,r7_772,r8_780,r9_769,sp_863,V_868,VZN_774,Z_801,ZN_866
		defs: ap_882,C_872,CVZN_870,CZ_890,CZN_881,fp_883,N_876,r0_879,r1_880,r11_891,r2_878,r3_885,r4_887,r5_877,r6_888,r7_886,r8_874,r9_889,sp_869,V_873,VZN_884,Z_875,ZN_871
	Mem893[sp_869 - 0x00000004:word32] = r0_879
	Mem896[sp_869 - 0x00000008:word32] = r2_878 + 1515
	Mem898[sp_869 - 0x0000000C:word32] = r2_878
	word32 r0_899 = Mem898[r2_878 + 0x0000C839:word32]
	byte CVZN_904
	byte ZN_905
	bool C_906
	bool V_907
	word32 r8_908
	bool Z_909
	bool N_910
	word32 r5_911
	word32 r0_913
	word32 r1_914
	byte CZN_915
	word32 ap_916
	word32 fp_917
	byte VZN_918
	word32 r3_919
	word32 r7_920
	word32 r4_921
	word32 r6_922
	word32 r9_923
	byte CZ_924
	word32 r11_925
	call r0_899 + 2 (retsize: 4; depth: 4)
		uses: ap_882,C_901,CVZN_870,CZ_890,CZN_881,dwLoc10_9,fp_883,N_876,r0_899,r1_880,r11_891,r2_878,r3_885,r4_887,r5_877,r6_888,r7_886,r8_874,r9_889,sp_897,V_902,VZN_884,Z_875,ZN_900
		defs: ap_916,C_906,CVZN_904,CZ_924,CZN_915,fp_917,N_910,r0_913,r1_914,r11_925,r2_912,r3_919,r4_921,r5_911,r6_922,r7_920,r8_908,r9_923,sp_903,V_907,VZN_918,Z_909,ZN_905
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011374:
	word32 sp_806 = sp_805 - 0x00000004
	Mem808[sp_806:word32] = Mem761[r2_804 + 0x0000C617:word32]
	word32 sp_812
	byte CVZN_813
	byte ZN_814
	bool C_815
	bool V_816
	word32 r8_817
	bool Z_818
	bool N_819
	word32 r5_820
	word32 r2_821
	word32 r0_822
	word32 r1_823
	byte CZN_824
	word32 ap_825
	word32 fp_826
	byte VZN_827
	word32 r3_828
	word32 r7_829
	word32 r4_830
	word32 r6_831
	word32 r9_832
	byte CZ_833
	word32 r11_834
	call Mem808[0x0001925C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_785,C_810,CVZN_781,CZ_768,CZN_775,dwLoc10_9,fp_784,N_779,r0_782,r1_776,r11_767,r2_804,r3_773,r4_771,r5_778,r6_770,r7_772,r8_780,r9_769,sp_806,V_811,VZN_774,Z_801,ZN_809
		defs: ap_825,C_815,CVZN_813,CZ_833,CZN_824,fp_826,N_819,r0_822,r1_823,r11_834,r2_821,r3_828,r4_830,r5_820,r6_831,r7_829,r8_817,r9_832,sp_812,V_816,VZN_827,Z_818,ZN_814
	branch r9_832 <= 0x00000001 l0001138C
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001138C:
	word32 sp_849
	*spOut = fp_826 - 0x00000004
	word32 fp_850
	*fpOut = Mem808[fp_826 + 0x0000000C:word32]
	word32 ap_851
	*apOut = Mem808[fp_826 + 0x00000008:word32]
	return 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011386:
	word32 sp_842
	*spOut = fp_826 - 0x00000004
	word32 fp_843
	*fpOut = Mem808[fp_826 + 0x0000000C:word32]
	word32 ap_844
	*apOut = Mem808[fp_826 + 0x00000008:word32]
	return r9_832
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001130B:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011300:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011390:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000111DD:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011742:
	word32 sp_581 = sp_1058 - 0x00000004
	Mem583[sp_581:word32] = Mem424[r2 + 0x0000C617:word32]
	word32 sp_587
	byte CVZN_588
	byte ZN_589
	bool C_590
	bool V_591
	word32 r8_592
	bool Z_593
	bool N_594
	word32 r5_595
	word32 r2_596
	word32 r0_597
	word32 r1_598
	byte CZN_599
	word32 ap_600
	byte VZN_602
	word32 r3_603
	word32 r7_604
	word32 r4_605
	word32 r6_606
	byte CZ_608
	word32 r11_609
	word32 r9_607
	word32 fp_601
	call Mem583[0x0001925C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_576,C_585,CVZN_572,CZ_559,CZN_566,dwLoc10_9,fp_575,N_570,r0_573,r1_567,r11_558,r2_568,r3_564,r4_562,r5_569,r6_561,r7_563,r8_571,r9_560,sp_581,V_586,VZN_565,Z_578,ZN_584
		defs: ap_600,C_590,CVZN_588,CZ_608,CZN_599,fp_601,N_594,r0_597,r1_598,r11_609,r2_596,r3_603,r4_605,r5_595,r6_606,r7_604,r8_592,r9_607,sp_587,V_591,VZN_602,Z_593,ZN_589
	branch Mem583[r2_596 + 72:word32] == 0x00000000 l000117A3
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011754:
	branch Mem583[r2_596:word32] != 0x00000000 l000117A3
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011758:
	branch Mem583[fp_601 + -12:word32] == 0x00000000 l000117A3
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001175D:
	Mem648[sp_587 - 0x00000004:word32] = Mem583[fp_601 + -8:word32]
	Mem651[sp_587 - 0x00000008:word32] = Mem648[r2_596 + 0x0000C613:word32]
	fn0000BDC2()
	branch r0_597 == 0x00000000 l000117A3
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>
// Terminates process

l00011771:
	Mem661[sp_587 - 0x0000000C:uint32] = 0x00000201
	Mem664[sp_587 - 0x00000010:word32] = Mem661[r2_596 + 0x0000C613:word32]
	Mem667[sp_587 - 0x00000014:word32] = r7_604 + 85
	Mem670[sp_587 - 0x00000018:word32] = r2_596 + 1515
	word32 sp_674
	byte CVZN_675
	byte ZN_676
	bool C_677
	bool V_678
	word32 r8_679
	bool Z_680
	bool N_681
	word32 r5_682
	word32 r2_683
	word32 r0_684
	word32 r1_685
	byte CZN_686
	word32 ap_687
	word32 fp_688
	byte VZN_689
	word32 r3_690
	word32 r7_691
	word32 r4_692
	word32 r6_693
	word32 r9_694
	byte CZ_695
	word32 r11_696
	call Mem670[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_600,C_672,CVZN_588,CZ_608,CZN_599,dwLoc10_9,fp_601,N_594,r0_597,r1_598,r11_609,r2_596,r3_603,r4_605,r5_595,r6_606,r7_604,r8_592,r9_607,sp_668,V_673,VZN_602,Z_656,ZN_671
		defs: ap_687,C_677,CVZN_675,CZ_695,CZN_686,fp_688,N_681,r0_684,r1_685,r11_696,r2_683,r3_690,r4_692,r5_682,r6_693,r7_691,r8_679,r9_694,sp_674,V_678,VZN_689,Z_680,ZN_676
	Mem698[sp_674 - 0x00000004:word32] = r0_684
	Mem701[sp_674 - 0x00000008:word32] = r2_683 + 1515
	Mem703[sp_674 - 0x0000000C:word32] = r2_683
	word32 r0_704 = Mem703[r2_683 + 0x0000C839:word32]
	word32 sp_708
	byte CVZN_709
	byte ZN_710
	bool C_711
	bool V_712
	word32 r8_713
	bool Z_714
	bool N_715
	word32 r5_716
	word32 r2_717
	word32 r0_718
	word32 r1_719
	byte CZN_720
	word32 ap_721
	byte VZN_723
	word32 r3_724
	word32 r7_725
	word32 r4_726
	word32 r6_727
	byte CZ_729
	word32 r11_730
	call r0_704 + 2 (retsize: 4; depth: 4)
		uses: ap_687,C_706,CVZN_675,CZ_695,CZN_686,dwLoc10_9,fp_688,N_681,r0_704,r1_685,r11_696,r2_683,r3_690,r4_692,r5_682,r6_693,r7_691,r8_679,r9_694,sp_702,V_707,VZN_689,Z_680,ZN_705
		defs: ap_721,C_711,CVZN_709,CZ_729,CZN_720,fp_722,N_715,r0_718,r1_719,r11_730,r2_717,r3_724,r4_726,r5_716,r6_727,r7_725,r8_713,r9_728,sp_708,V_712,VZN_723,Z_714,ZN_710
	branch r9_607 > 0x00000000 l000117A3
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000117A0:
	*r9Out = 0x00000001
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x000001FC r0:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000117A3:
	word32 sp_635 = fp_601 - 0x00000004
	*spOut = sp_635
	word32 fp_636
	*fpOut = Mem583[sp_635 + 0x00000010:word32]
	word32 ap_637
	*apOut = Mem583[sp_635 + 0x0000000C:word32]
	return r9_607
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011119:
	word32 sp_1532 = sp_1058 - 0x00000004
	Mem1534[sp_1532:word32] = Mem424[r2 + 0x0000C617:word32]
	word32 sp_1538
	byte CVZN_1539
	byte ZN_1540
	bool C_1541
	bool V_1542
	word32 r8_1543
	bool Z_1544
	bool N_1545
	word32 r5_1546
	word32 r2_1547
	word32 r0_1548
	word32 r1_1549
	byte CZN_1550
	word32 ap_1551
	word32 fp_1552
	byte VZN_1553
	word32 r3_1554
	word32 r7_1555
	word32 r4_1556
	word32 r6_1557
	word32 r9_1558
	byte CZ_1559
	word32 r11_1560
	call Mem1534[0x0001925C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_540,C_1536,CVZN_535,CZ_522,CZN_529,dwLoc10_9,fp_539,N_533,r0_537,r1_530,r11_521,r2_531,r3_527,r4_525,r5_532,r6_524,r7_526,r8_534,r9_523,sp_1532,V_1537,VZN_528,Z_1529,ZN_1535
		defs: ap_1551,C_1541,CVZN_1539,CZ_1559,CZN_1550,fp_1552,N_1545,r0_1548,r1_1549,r11_1560,r2_1547,r3_1554,r4_1556,r5_1546,r6_1557,r7_1555,r8_1543,r9_1558,sp_1538,V_1542,VZN_1553,Z_1544,ZN_1540
	word32 sp_1565
	*spOut = fp_1552 - 0x00000004
	word32 fp_1566
	*fpOut = Mem1534[fp_1552 + 0x0000000C:word32]
	word32 ap_1567
	*apOut = Mem1534[fp_1552 + 0x00000008:word32]
	return r9_1558
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001105D:
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001104B:
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110EF:
	word32 sp_454 = sp_1058 - 0x00000004
	Mem456[sp_454:word32] = Mem424[r2 + 0x0000C617:word32]
	word32 sp_460
	byte CVZN_461
	byte ZN_462
	bool C_463
	bool V_464
	word32 r8_465
	bool Z_466
	bool N_467
	word32 r5_468
	word32 r2_469
	word32 r0_470
	word32 r1_471
	byte CZN_472
	word32 ap_473
	word32 fp_474
	byte VZN_475
	word32 r3_476
	word32 r7_477
	word32 r4_478
	word32 r6_479
	word32 r9_480
	byte CZ_481
	word32 r11_482
	call Mem456[0x0001925C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_447,C_458,CVZN_443,CZ_430,CZN_437,dwLoc10_9,fp_446,N_441,r0_444,r1_438,r11_429,r2_452,r3_435,r4_433,r5_440,r6_432,r7_434,r8_442,r9_431,sp_454,V_459,VZN_436,Z_449,ZN_457
		defs: ap_473,C_463,CVZN_461,CZ_481,CZN_472,fp_474,N_467,r0_470,r1_471,r11_482,r2_469,r3_476,r4_478,r5_468,r6_479,r7_477,r8_465,r9_480,sp_460,V_464,VZN_475,Z_466,ZN_462
	branch Mem456[ap_473 + 4:word32] == 0x00000000 l00011105
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011105:
	Mem495[r2_469 + 0x0000C6E9:word32] = 0x00000001
	word32 sp_500
	*spOut = fp_474 - 0x00000004
	word32 fp_501
	*fpOut = Mem495[fp_474 + 0x0000000C:word32]
	word32 ap_502
	*apOut = Mem495[fp_474 + 0x00000008:word32]
	return 0x00000009
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011101:
	word32 sp_491
	*spOut = fp_474 - 0x00000004
	word32 fp_492
	*fpOut = Mem456[fp_474 + 0x0000000C:word32]
	word32 ap_493
	*apOut = Mem456[fp_474 + 0x00000008:word32]
	return r9_480
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FEC:
	word32 sp_1865
	*spOut = fp_110 - 0x00000004
	word32 fp_1866
	*fpOut = Mem1856[fp_110 + 0x0000000C:word32]
	word32 ap_1867
	*apOut = Mem1856[fp_110 + 0x00000008:word32]
	return 0x00000004
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FD0:
	word32 sp_406
	*spOut = fp_110 - 0x00000004
	word32 fp_407
	*fpOut = Mem383[fp_110 + 0x0000000C:word32]
	word32 ap_408
	*apOut = Mem383[fp_110 + 0x00000008:word32]
	return 0x00000009
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FC1:
	word32 sp_395
	*spOut = fp_110 - 0x00000004
	word32 fp_396
	*fpOut = Mem383[fp_110 + 0x0000000C:word32]
	word32 ap_397
	*apOut = Mem383[fp_110 + 0x00000008:word32]
	return 0x00000002
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

fn00010E6A_exit:
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>



word32 fn000117AA(word32 r0, word32 r2, word32 r6, word32 r8, word32 r9, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r6 r8 r9
// LiveOut: ap fp r0 r2 r3 r4 r5 r7 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r7 sp
// Preserved:
fn000117AA_entry:
// DataOut: ap fp pc r0 r10 r11 r2 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000117AA:
	word32 r5_6 = Mem0[r2 + 0x0000C61B:word32]
	branch r5_6 <= 0x00002000 l000117D7
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000117D7:
	word32 sp_19
	byte CVZN_20
	byte ZN_21
	bool C_22
	bool V_23
	word32 r4_24
	bool Z_25
	bool N_26
	word32 r2_27
	word32 r5_28
	byte CZN_29
	word32 r0_30
	word32 r8_31
	word32 r3_32
	word32 fp_33
	word32 ap_34
	word32 r9_35
	word32 r6_36
	word32 r7_37
	call Mem0[0x0001926C:word32] + 2 (retsize: 4; depth: 44)
		uses: C_17,CZN_7,dwLoc28_15,qwLoc24_12,r2,r4_3,r5_6,sp_13,V_18,ZN_16
		defs: ap_34,C_22,CVZN_20,CZN_29,fp_33,N_26,r0_30,r2_27,r3_32,r4_24,r5_28,r6_36,r7_37,r8_31,r9_35,sp_19,V_23,Z_25,ZN_21
	byte CVZN_51
	byte ZN_52
	bool C_53
	bool V_54
	bool Z_56
	bool N_57
	word32 r5_59
	byte CZN_60
	word32 r3_63
	word32 r7_68
	word32 r6_474
	word32 r9_124
	word32 r8_476
	word32 r2_125
	word32 r4_480
	word32 r0_488
	word32 sp_126
	word32 fp_485
	word32 ap_486
	call Mem0[0x00019270:word32] + 2 (retsize: 4; depth: 56)
		uses: ap_34,C_48,CVZN_20,CZN_29,dwLoc28_15,dwLoc2C_40,dwLoc30_43,dwLoc34_46,fp_33,N_26,qwLoc24_12,r0_30,r2_27,r3_32,r4_24,r5_28,r6_36,r7_37,r8_31,r9_35,sp_44,V_49,Z_25,ZN_47
		defs: ap_65,C_53,CVZN_51,CZN_60,fp_64,N_57,r0_61,r2_58,r3_63,r4_55,r5_59,r6_67,r7_68,r8_62,r9_66,sp_50,V_54,Z_56,ZN_52
	Mem70[r2_125 + 0x0000C5FB:word32] = r0_488
	branch Mem70[r2_125 + 0x0000C5FB:word32] == Mem70[r2_125 + 0x0000C61B:word32] l00011816
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r4:0x00000000 r5:<invalid>

l00011816:
	Mem466[r2_125 + 0x0000C5F7:word32] = Mem70[r2_125 + 0x0000C61B:word32] + Mem70[r2_125 + 0x0000C5F3:word32] - 0x00000016
	branch Mem466[r2_125 + 0x0000C5F7:word32] >=u Mem466[r2_125 + 0x0000C5F3:word32] l0001183A
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000034 r4:0x00000000 r5:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l0001183A:
// DataOut: ap fp pc r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000034 r4:0x00000000 r5:<invalid> r3:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l0001183C:
	word32 r3_487 = Mem466[r2_125 + 0x0000C5F7:word32]
	r0_488 = (uint32) Mem466[r3_487:byte]
	branch r0_488 != 0x00000050 l00011880
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:0x00000000 r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l0001184F:
	word32 sp_513 = sp_126 - 0x00000004
	Mem514[sp_513:word32] = 0x00000004
	Mem517[sp_513 - 0x00000004:word32] = r2_125 + 0x0000C639
	Mem519[sp_513 - 0x00000008:word32] = r3_487
	byte CVZN_524
	byte ZN_525
	bool C_526
	bool V_527
	bool Z_529
	bool N_530
	word32 r5_532
	byte CZN_533
	word32 r3_536
	word32 r7_541
	call Mem519[0x000192D8:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_486,C_521,CVZN_481,CZN_489,dwLoc28_15,dwLoc2C_40,dwLoc30_43,dwLoc34_46,fp_485,N_479,qwLoc24_12,r0_488,r2_478,r3_487,r4_480,r5_477,r6_474,r7_473,r8_476,r9_475,sp_518,V_522,Z_490,ZN_520
		defs: ap_538,C_526,CVZN_524,CZN_533,fp_537,N_530,r0_534,r2_531,r3_536,r4_528,r5_532,r6_540,r7_541,r8_535,r9_539,sp_523,V_527,Z_529,ZN_525
	branch r0_488 != 0x00000000 l00011880
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:0x00000000 r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011880:
	Mem509[r2_125 + 0x0000C5F7:word32] = Mem466[r2_125 + 0x0000C5F7:word32] - 0x00000001
	branch Mem509[r2_125 + 0x0000C5F7:word32] >=u Mem509[r2_125 + 0x0000C5F3:word32] l0001183C
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:0x00000000 r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011893:
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:0x00000000 r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011864:
	r0_488 = Mem519[r2_125 + 0x0000C5F7:word32] - Mem519[r2_125 + 0x0000C5F3:word32]
	Mem548[r2_125 + 0x0000C5FB:word32] = Mem519[r2_125 + 0x0000C5FB:word32] - r0_488
	*r4Out = 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:0x00000000 r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011837:
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000034 r4:0x00000000 r5:<invalid> r3:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011813:
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000034 r4:0x00000000 r5:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011A92:
	branch r4_480 != 0x00000000 l00011AF4
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011AF4:
	Mem265[r2_125 + 124:word32] = Mem70[r2_125 + 0x0000C5F7:word32] - Mem70[r2_125 + 0x0000C5F3:word32] + Mem70[r2_125 + 0x0000C61F:word32]
	word32 sp_266 = sp_126 - 0x00000004
	Mem267[sp_266:word32] = 0x00000016
	Mem270[sp_266 - 0x00000004:word32] = fp_485 + -26
	word32 r2_274
	word32 r3_275
	word32 r5_276
	word32 r7_277
	word32 ap_278
	word32 fp_279
	word32 sp_280
	word32 r0_281 = fn0000D5BE(r0_488, r4_480, r6_474, ap_486, fp_485, out r2_274, out r3_275, out r5_276, out r7_277, out ap_278, out fp_279, out sp_280)
	branch r0_281 != 0x00000000 l00011B1D
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011B1D:
	Mem295[sp_280 - 0x00000004:word32] = fp_279 + -22
	word32 sp_299
	byte CVZN_300
	byte ZN_301
	bool C_302
	bool V_303
	word32 r4_304
	bool Z_305
	bool N_306
	word32 r2_307
	word32 r5_308
	byte CZN_309
	word32 r0_310
	word32 r8_311
	word32 r3_312
	word32 fp_313
	word32 ap_314
	word32 r9_315
	word32 r6_316
	word32 r7_317
	call fn00000002 (retsize: 4; depth: 4)
		uses: ap_278,C_297,CVZN_84,CZN_79,dwLoc28_15,dwLoc2C_40,dwLoc30_43,dwLoc34_46,fp_279,N_82,qwLoc24_12,r0_281,r2_274,r3_275,r4_83,r5_276,r6_75,r7_277,r8_78,r9_76,sp_293,V_298,Z_283,ZN_296
		defs: ap_314,C_302,CVZN_300,CZN_309,fp_313,N_306,r0_310,r2_307,r3_312,r4_304,r5_308,r6_316,r7_317,r8_311,r9_315,sp_299,V_303,Z_305,ZN_301
	Mem319[r2_307 + 0x0000C682:word16] = (word16) r0_310
	Mem322[sp_299 - 0x00000004:word32] = fp_313 + -20
	word32 sp_326
	byte CVZN_327
	byte ZN_328
	bool C_329
	bool V_330
	word32 r4_331
	bool Z_332
	bool N_333
	word32 r2_334
	word32 r5_335
	byte CZN_336
	word32 r0_337
	word32 r8_338
	word32 r3_339
	word32 fp_340
	word32 ap_341
	word32 r9_342
	word32 r6_343
	word32 r7_344
	call fn00000002 (retsize: 4; depth: 4)
		uses: ap_314,C_324,CVZN_300,CZN_309,dwLoc28_15,dwLoc2C_40,dwLoc30_43,dwLoc34_46,fp_313,N_306,qwLoc24_12,r0_310,r2_307,r3_312,r4_304,r5_308,r6_316,r7_317,r8_311,r9_315,sp_320,V_325,Z_305,ZN_323
		defs: ap_341,C_329,CVZN_327,CZN_336,fp_340,N_333,r0_337,r2_334,r3_339,r4_331,r5_335,r6_343,r7_344,r8_338,r9_342,sp_326,V_330,Z_332,ZN_328
	Mem346[r2_334 + 0x0000C684:word16] = (word16) r0_337
	Mem349[sp_326 - 0x00000004:word32] = fp_340 + -18
	word32 sp_353
	byte CVZN_354
	byte ZN_355
	bool C_356
	bool V_357
	word32 r4_358
	bool Z_359
	bool N_360
	word32 r2_361
	word32 r5_362
	byte CZN_363
	word32 r0_364
	word32 r8_365
	word32 r3_366
	word32 fp_367
	word32 ap_368
	word32 r9_369
	word32 r6_370
	word32 r7_371
	call fn00000002 (retsize: 4; depth: 4)
		uses: ap_341,C_351,CVZN_327,CZN_336,dwLoc28_15,dwLoc2C_40,dwLoc30_43,dwLoc34_46,fp_340,N_333,qwLoc24_12,r0_337,r2_334,r3_339,r4_331,r5_335,r6_343,r7_344,r8_338,r9_342,sp_347,V_352,Z_332,ZN_350
		defs: ap_368,C_356,CVZN_354,CZN_363,fp_367,N_360,r0_364,r2_361,r3_366,r4_358,r5_362,r6_370,r7_371,r8_365,r9_369,sp_353,V_357,Z_359,ZN_355
	Mem373[r2_361 + 0x0000C686:word16] = (word16) r0_364
	Mem376[sp_353 - 0x00000004:word32] = fp_367 + -16
	word32 sp_380
	byte CVZN_381
	byte ZN_382
	bool C_383
	bool V_384
	word32 r4_385
	bool Z_386
	bool N_387
	word32 r2_388
	word32 r5_389
	byte CZN_390
	word32 r0_391
	word32 r8_392
	word32 r3_393
	word32 fp_394
	word32 ap_395
	word32 r9_396
	word32 r6_397
	word32 r7_398
	call fn00000002 (retsize: 4; depth: 4)
		uses: ap_368,C_378,CVZN_354,CZN_363,dwLoc28_15,dwLoc2C_40,dwLoc30_43,dwLoc34_46,fp_367,N_360,qwLoc24_12,r0_364,r2_361,r3_366,r4_358,r5_362,r6_370,r7_371,r8_365,r9_369,sp_374,V_379,Z_359,ZN_377
		defs: ap_395,C_383,CVZN_381,CZN_390,fp_394,N_387,r0_391,r2_388,r3_393,r4_385,r5_389,r6_397,r7_398,r8_392,r9_396,sp_380,V_384,Z_386,ZN_382
	Mem400[r2_388 + 0x0000C688:word16] = (word16) r0_391
	Mem403[sp_380 - 0x00000004:word32] = fp_394 + -14
	word32 r2_407
	word32 ap_408
	word32 fp_409
	word32 sp_410
	word32 r0_411 = fn0000E276(ap_395, fp_394, out r2_407, out ap_408, out fp_409, out sp_410)
	Mem413[r2_407 + 0x0000C68A:word32] = r0_411
	Mem416[sp_410 - 0x00000004:word32] = fp_409 + -10
	word32 r2_420
	word32 ap_421
	word32 fp_422
	word32 sp_423
	word32 r0_424 = fn0000E276(ap_408, fp_409, out r2_420, out ap_421, out fp_422, out sp_423)
	Mem426[r2_420 + 0x0000C68E:word32] = r0_424
	Mem429[sp_423 - 0x00000004:word32] = fp_422 + -6
	word32 sp_433
	byte CVZN_434
	byte ZN_435
	bool C_436
	bool V_437
	word32 r4_438
	bool Z_439
	bool N_440
	word32 r2_441
	word32 r5_442
	byte CZN_443
	word32 r0_444
	word32 r8_445
	word32 r3_446
	word32 fp_447
	word32 ap_448
	word32 r9_449
	word32 r6_450
	word32 r7_451
	call fn00000002 (retsize: 4; depth: 4)
		uses: ap_421,C_431,CVZN_381,CZN_390,dwLoc28_15,dwLoc2C_40,dwLoc30_43,dwLoc34_46,fp_422,N_387,qwLoc24_12,r0_424,r2_420,r3_393,r4_385,r5_389,r6_397,r7_398,r8_392,r9_396,sp_427,V_432,Z_386,ZN_430
		defs: ap_448,C_436,CVZN_434,CZN_443,fp_447,N_440,r0_444,r2_441,r3_446,r4_438,r5_442,r6_450,r7_451,r8_445,r9_449,sp_433,V_437,Z_439,ZN_435
	Mem453[r2_441 + 0x0000C692:word16] = (word16) r0_444
	Mem455[r2_441 + 128:word32] = Mem453[r2_441 + 0x0000C68A:word32] + Mem453[r2_441 + 0x0000C68E:word32]
	word32 sp_461
	*spOut = fp_447 - 0x00000004
	word32 fp_462
	*fpOut = Mem455[fp_447 + 0x0000000C:word32]
	word32 ap_463
	*apOut = Mem455[fp_447 + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011B19:
	word32 sp_290
	*spOut = fp_279 - 0x00000004
	word32 fp_291
	*fpOut = Mem270[fp_279 + 0x0000000C:word32]
	word32 ap_292
	*apOut = Mem270[fp_279 + 0x00000008:word32]
	return 0x00000033
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011A96:
	branch Mem70[r2_125 + 64:word32] != 0x00000000 l00011A9F
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011A9B:
	branch Mem70[r2_125:word32] == 0x00000000 l00011ACA
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011A9F:
	word32 sp_195 = sp_126 - 0x00000004
	Mem197[sp_195:uint32] = 0x00000401
	Mem200[sp_195 - 0x00000004:word32] = Mem197[r2_125 + 0x0000C613:word32]
	Mem203[sp_195 - 0x00000008:word32] = r8_476 + 119
	Mem206[sp_195 - 0x0000000C:word32] = r2_125 + 1515
	word32 sp_210
	byte CVZN_211
	byte ZN_212
	bool C_213
	bool V_214
	word32 r4_215
	bool Z_216
	bool N_217
	word32 r2_218
	word32 r5_219
	byte CZN_220
	word32 r0_221
	word32 r8_222
	word32 r3_223
	word32 fp_224
	word32 ap_225
	word32 r9_226
	word32 r6_227
	word32 r7_228
	call Mem206[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_88,C_208,CVZN_84,CZN_79,dwLoc28_15,dwLoc2C_40,dwLoc30_43,dwLoc34_46,fp_87,N_82,qwLoc24_12,r0_85,r2_81,r3_77,r4_83,r5_80,r6_75,r7_74,r8_78,r9_76,sp_204,V_209,Z_121,ZN_207
		defs: ap_225,C_213,CVZN_211,CZN_220,fp_224,N_217,r0_221,r2_218,r3_223,r4_215,r5_219,r6_227,r7_228,r8_222,r9_226,sp_210,V_214,Z_216,ZN_212
	Mem230[sp_210 - 0x00000004:word32] = r0_221
	Mem233[sp_210 - 0x00000008:word32] = r2_218 + 1515
	Mem235[sp_210 - 0x0000000C:word32] = r2_218
	word32 r3_236 = Mem235[r2_218 + 0x0000C839:word32]
	byte CVZN_241
	byte ZN_242
	bool C_243
	bool V_244
	word32 r4_245
	bool Z_246
	bool N_247
	word32 r5_249
	byte CZN_250
	word32 r0_251
	word32 r8_252
	word32 r3_253
	word32 fp_254
	word32 ap_255
	word32 r6_257
	word32 r7_258
	call r3_236 + 2 (retsize: 4; depth: 4)
		uses: ap_225,C_238,CVZN_211,CZN_220,dwLoc28_15,dwLoc2C_40,dwLoc30_43,dwLoc34_46,fp_224,N_217,qwLoc24_12,r0_221,r2_218,r3_236,r4_215,r5_219,r6_227,r7_228,r8_222,r9_226,sp_234,V_239,Z_216,ZN_237
		defs: ap_255,C_243,CVZN_241,CZN_250,fp_254,N_247,r0_251,r2_248,r3_253,r4_245,r5_249,r6_257,r7_258,r8_252,r9_256,sp_240,V_244,Z_246,ZN_242
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011ACA:
	word32 sp_127 = sp_126 - 0x00000004
	Mem129[sp_127:uint32] = 0x00000401
	Mem132[sp_127 - 0x00000004:word32] = r9_124 + 1608
	Mem135[sp_127 - 0x00000008:word32] = r2_125 + 1515
	word32 sp_139
	byte CVZN_140
	byte ZN_141
	bool C_142
	bool V_143
	word32 r4_144
	bool Z_145
	bool N_146
	word32 r2_147
	word32 r5_148
	byte CZN_149
	word32 r0_150
	word32 r8_151
	word32 r3_152
	word32 fp_153
	word32 ap_154
	word32 r9_155
	word32 r6_156
	word32 r7_157
	call Mem135[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_88,C_137,CVZN_84,CZN_79,dwLoc28_15,dwLoc2C_40,dwLoc30_43,dwLoc34_46,fp_87,N_82,qwLoc24_12,r0_85,r2_125,r3_77,r4_83,r5_80,r6_75,r7_74,r8_78,r9_124,sp_133,V_138,Z_121,ZN_136
		defs: ap_154,C_142,CVZN_140,CZN_149,fp_153,N_146,r0_150,r2_147,r3_152,r4_144,r5_148,r6_156,r7_157,r8_151,r9_155,sp_139,V_143,Z_145,ZN_141
	Mem159[sp_139 - 0x00000004:word32] = r0_150
	Mem162[sp_139 - 0x00000008:word32] = r2_147 + 1515
	Mem164[sp_139 - 0x0000000C:word32] = r2_147
	word32 r3_165 = Mem164[r2_147 + 0x0000C839:word32]
	word32 sp_169
	byte CVZN_170
	byte ZN_171
	bool C_172
	bool V_173
	word32 r4_174
	bool Z_175
	bool N_176
	word32 r2_177
	word32 r5_178
	byte CZN_179
	word32 r0_180
	word32 r8_181
	word32 r3_182
	word32 fp_183
	word32 ap_184
	word32 r9_185
	word32 r6_186
	word32 r7_187
	call r3_165 + 2 (retsize: 4; depth: 4)
		uses: ap_154,C_167,CVZN_140,CZN_149,dwLoc28_15,dwLoc2C_40,dwLoc30_43,dwLoc34_46,fp_153,N_146,qwLoc24_12,r0_150,r2_147,r3_165,r4_144,r5_148,r6_156,r7_157,r8_151,r9_155,sp_163,V_168,Z_145,ZN_166
		defs: ap_184,C_172,CVZN_170,CZN_179,fp_183,N_176,r0_180,r2_177,r3_182,r4_174,r5_178,r6_186,r7_187,r8_181,r9_185,sp_169,V_173,Z_175,ZN_171
	word32 sp_192
	*spOut = fp_183 - 0x00000004
	word32 fp_193
	*fpOut = Mem164[fp_183 + 0x0000000C:word32]
	word32 ap_194
	*apOut = Mem164[fp_183 + 0x00000008:word32]
	return 0x00000002
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> -80(fp):r2 -76(fp):r2 + 1515 -72(fp):r0 -68(fp):r2 + 1515 -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

fn000117AA_exit:
// DataOut: ap fp r0 r2 r3 r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> -80(fp):r2 -76(fp):r2 + 1515 -72(fp):r0 -68(fp):r2 + 1515 -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l000117D4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r4:0x00000000 r5:<invalid>

l00011898:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r4:0x00000000 r5:<invalid>



word32 fn00011C0A(word32 r0, word32 r4, word32 r6, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & r5Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r4 r6
// LiveOut: ap fp r0 r3 r5 r7 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r5 r7 sp
// Preserved:
fn00011C0A_entry:
// DataOut: ap fp r0 r10 r11 r4 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00011C0A:
	word32 r2_11
	word32 r3_12
	word32 r5_13
	word32 r7_14
	word32 fp_15
	word32 sp_16
	word32 r0_17 = fn00011CDA(r0, r4, r6, ap, fp, out r2_11, out r3_12, out r5_13, out r7_14, out fp_15, out sp_16)
	branch r0_17 == 0x00000000 l00011C20
// DataOut: fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00011C20:
	word32 r1_138
	word32 r0_54 = Mem0[r2_11 + 1511:word32]
	branch (uint32) Mem0[r2_11 + 0x0000C659:byte] >=u 0x00000012 l00011C3C
// DataOut: fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C3C:
	r1_138 = DPB(r1, 0x12, 0)
// DataOut: fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C31:
	r1_138 = DPB(r1, Mem0[r2_11 + 0x0000C659:byte], 0)
// DataOut: fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C3F:
	Mem61[r0_54 + 12:uint32] = (uint32) (byte) r1_138
	word32 ap_62 = Mem61[r2_11 + 1511:word32]
	Mem64[ap_62 + 20:byte] = Mem61[ap_62 + 20:byte] & ~0x10
	branch Mem64[r2_11 + 40:word32] == 0x00000000 l00011C95
// DataOut: fp r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C95:
	branch (Mem64[r2_11 + 0x0000C67A:word32] & 0x00000008) == 0x00000000 l00011CCC
// DataOut: fp r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C9D:
	word32 ap_112 = Mem64[Mem64[r2_11 + 1511:word32] + 12:word32]
	branch ap_112 == 0x00000000 l00011CB7
// DataOut: ap fp r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011CA8:
	branch ap_112 == 0x00000006 l00011CB7
// DataOut: ap fp r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011CAD:
	branch ap_112 == 0x0000000B l00011CB7
// DataOut: ap fp r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011CB2:
	branch ap_112 != 0x00000005 l00011CCC
// DataOut: fp r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011CCC:
	word32 ap_105 = Mem64[r2_11 + 1511:word32]
	Mem107[ap_105 + 20:byte] = Mem64[ap_105 + 20:byte] & ~0x20
// DataOut: fp r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011CB7:
	word32 ap_119 = Mem64[r2_11 + 1511:word32]
	Mem121[ap_119 + 20:byte] = Mem64[ap_119 + 20:byte] | 0x20
	word32 ap_122 = Mem121[r2_11 + 1511:word32]
	Mem124[ap_122 + 20:byte] = Mem121[ap_122 + 20:byte] & ~0x10
// DataOut: fp r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011CD5:
	word32 sp_100
	*spOut = fp_15 - 0x00000004
	word32 fp_101
	*fpOut = Mem64[fp_15 + 0x0000000C:word32]
	word32 ap_102
	*apOut = Mem64[fp_15 + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C51:
	word32 ap_69 = Mem64[r2_11 + 1511:word32]
	word32 r0_70 = Mem64[ap_69 + 12:word32]
	branch r0_70 > 0x00000011 l00011C80
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C80:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C5A_1:
	word32 sp_75
	byte CVZN_76
	byte ZN_77
	bool C_78
	bool V_79
	word32 r0_80
	bool Z_81
	word32 fp_82
	word32 ap_83
	word32 r2_84
	byte CZN_85
	word32 r1_86
	bool N_87
	word32 r4_88
	word32 r6_89
	word32 r3_90
	word32 r5_91
	word32 r7_92
	call 0x00011C5E + r0_70 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_69,C_72,CVZN,CZN_56,fp_15,N,r0_70,r1_59,r2_11,r3_12,r4,r5_13,r6,r7_14,sp_16,V_73,Z_66,ZN_71
		defs: ap_83,C_78,CVZN_76,CZN_85,fp_82,N_87,r0_80,r1_86,r2_84,r3_90,r4_88,r5_91,r6_89,r7_92,sp_75,V_79,Z_81,ZN_77
	return r0_80
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C1F:
	word32 sp_46
	*spOut = fp_15 - 0x00000004
	word32 fp_48
	*fpOut = Mem0[fp_15 + 0x0000000C:word32]
	word32 ap_49
	*apOut = Mem0[fp_15 + 0x00000008:word32]
	return r0_17
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

fn00011C0A_exit:
// DataOut: ap fp r0 r3 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>



word32 fn00011CDA(word32 r0, word32 r4, word32 r6, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r5Out, ptr32 & r7Out, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r4 r6
// LiveOut: fp r0 r2 r3 r5 r7 sp
// Trashed: CVZN ap fp r0 r2 r3 r5 r7 sp
// Preserved:
fn00011CDA_entry:
// DataOut: ap fp r0 r10 r11 r4 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00011CDA:
	word32 r2_16
	word32 r3_17
	word32 r5_18
	word32 r7_19
	word32 ap_20
	word32 fp_21
	word32 sp_22
	word32 r0_23 = fn0000D5BE(r0, r4, r6, ap, fp, out r2_16, out r3_17, out r5_18, out r7_19, out ap_20, out fp_21, out sp_22)
	branch r0_23 != 0x00000000 l00011CF8
// DataOut: fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00011CF8:
	Mem61[r2_16 + 0x0000C658:byte] = Mem0[fp_21 + -46:byte]
	Mem63[r2_16 + 0x0000C659:byte] = Mem61[fp_21 + -45:byte]
	Mem65[r2_16 + 0x0000C65A:byte] = Mem63[fp_21 + -44:byte]
	Mem67[r2_16 + 0x0000C65B:byte] = Mem65[fp_21 + -43:byte]
	Mem70[sp_22 - 0x00000004:word32] = fp_21 + -42
	word32 sp_74
	byte CVZN_75
	byte ZN_76
	bool C_77
	bool V_78
	word32 fp_79
	word32 r0_80
	bool Z_81
	word32 ap_82
	word32 r2_83
	word32 r3_84
	word32 r4_85
	bool N_86
	word32 r6_87
	word32 r5_88
	word32 r7_89
	call r3_17 + 2 (retsize: 4; depth: 4)
		uses: ap_20,C_72,CVZN,dwLoc34_4,dwLoc38_8,fp_21,N,r0_23,r2_16,r3_17,r4,r5_18,r6,r7_19,sp_68,V_73,Z_25,ZN_71
		defs: ap_82,C_77,CVZN_75,fp_79,N_86,r0_80,r2_83,r3_84,r4_85,r5_88,r6_87,r7_89,sp_74,V_78,Z_81,ZN_76
	Mem91[r2_83 + 0x0000C65C:word16] = (word16) r0_80
	Mem94[sp_74 - 0x00000004:word32] = fp_79 + -40
	word32 sp_98
	byte CVZN_99
	byte ZN_100
	bool C_101
	bool V_102
	word32 fp_103
	word32 r0_104
	bool Z_105
	word32 ap_106
	word32 r2_107
	word32 r3_108
	word32 r4_109
	bool N_110
	word32 r6_111
	word32 r5_112
	word32 r7_113
	call r3_84 + 2 (retsize: 4; depth: 4)
		uses: ap_82,C_96,CVZN_75,dwLoc34_4,dwLoc38_8,fp_79,N_86,r0_80,r2_83,r3_84,r4_85,r5_88,r6_87,r7_89,sp_92,V_97,Z_81,ZN_95
		defs: ap_106,C_101,CVZN_99,fp_103,N_110,r0_104,r2_107,r3_108,r4_109,r5_112,r6_111,r7_113,sp_98,V_102,Z_105,ZN_100
	Mem115[r2_107 + 0x0000C65E:word16] = (word16) r0_104
	Mem118[sp_98 - 0x00000004:word32] = fp_103 + -38
	word32 sp_122
	byte CVZN_123
	byte ZN_124
	bool C_125
	bool V_126
	word32 fp_127
	word32 r0_128
	bool Z_129
	word32 ap_130
	word32 r2_131
	word32 r3_132
	word32 r4_133
	bool N_134
	word32 r6_135
	word32 r5_136
	word32 r7_137
	call r3_108 + 2 (retsize: 4; depth: 4)
		uses: ap_106,C_120,CVZN_99,dwLoc34_4,dwLoc38_8,fp_103,N_110,r0_104,r2_107,r3_108,r4_109,r5_112,r6_111,r7_113,sp_116,V_121,Z_105,ZN_119
		defs: ap_130,C_125,CVZN_123,fp_127,N_134,r0_128,r2_131,r3_132,r4_133,r5_136,r6_135,r7_137,sp_122,V_126,Z_129,ZN_124
	Mem139[r2_131 + 0x0000C660:word16] = (word16) r0_128
	Mem142[sp_122 - 0x00000004:word32] = fp_127 + -36
	word32 sp_146
	byte CVZN_147
	byte ZN_148
	bool C_149
	bool V_150
	word32 fp_151
	word32 r0_152
	bool Z_153
	word32 ap_154
	word32 r2_155
	word32 r3_156
	word32 r4_157
	bool N_158
	word32 r6_159
	word32 r5_160
	word32 r7_161
	call r3_132 + 2 (retsize: 4; depth: 4)
		uses: ap_130,C_144,CVZN_123,dwLoc34_4,dwLoc38_8,fp_127,N_134,r0_128,r2_131,r3_132,r4_133,r5_136,r6_135,r7_137,sp_140,V_145,Z_129,ZN_143
		defs: ap_154,C_149,CVZN_147,fp_151,N_158,r0_152,r2_155,r3_156,r4_157,r5_160,r6_159,r7_161,sp_146,V_150,Z_153,ZN_148
	Mem163[r2_155 + 0x0000C662:word16] = (word16) r0_152
	Mem166[sp_146 - 0x00000004:word32] = fp_151 + -34
	word32 sp_170
	byte CVZN_171
	byte ZN_172
	bool C_173
	bool V_174
	word32 fp_175
	word32 r0_176
	bool Z_177
	word32 ap_178
	word32 r2_179
	word32 r3_180
	word32 r4_181
	bool N_182
	word32 r6_183
	word32 r5_184
	word32 r7_185
	call r4_157 + 2 (retsize: 4; depth: 4)
		uses: ap_154,C_168,CVZN_147,dwLoc34_4,dwLoc38_8,fp_151,N_158,r0_152,r2_155,r3_156,r4_157,r5_160,r6_159,r7_161,sp_164,V_169,Z_153,ZN_167
		defs: ap_178,C_173,CVZN_171,fp_175,N_182,r0_176,r2_179,r3_180,r4_181,r5_184,r6_183,r7_185,sp_170,V_174,Z_177,ZN_172
	Mem187[r2_179 + 0x0000C664:word32] = r0_176
	Mem190[sp_170 - 0x00000004:word32] = fp_175 + -30
	word32 sp_194
	byte CVZN_195
	byte ZN_196
	bool C_197
	bool V_198
	word32 fp_199
	word32 r0_200
	bool Z_201
	word32 ap_202
	word32 r2_203
	word32 r3_204
	word32 r4_205
	bool N_206
	word32 r6_207
	word32 r5_208
	word32 r7_209
	call r4_181 + 2 (retsize: 4; depth: 4)
		uses: ap_178,C_192,CVZN_171,dwLoc34_4,dwLoc38_8,fp_175,N_182,r0_176,r2_179,r3_180,r4_181,r5_184,r6_183,r7_185,sp_188,V_193,Z_177,ZN_191
		defs: ap_202,C_197,CVZN_195,fp_199,N_206,r0_200,r2_203,r3_204,r4_205,r5_208,r6_207,r7_209,sp_194,V_198,Z_201,ZN_196
	Mem211[r2_203 + 0x0000C668:word32] = r0_200
	Mem214[sp_194 - 0x00000004:word32] = fp_199 + -26
	word32 sp_218
	byte CVZN_219
	byte ZN_220
	bool C_221
	bool V_222
	word32 fp_223
	word32 r0_224
	bool Z_225
	word32 ap_226
	word32 r2_227
	word32 r3_228
	word32 r4_229
	bool N_230
	word32 r6_231
	word32 r5_232
	word32 r7_233
	call r4_205 + 2 (retsize: 4; depth: 4)
		uses: ap_202,C_216,CVZN_195,dwLoc34_4,dwLoc38_8,fp_199,N_206,r0_200,r2_203,r3_204,r4_205,r5_208,r6_207,r7_209,sp_212,V_217,Z_201,ZN_215
		defs: ap_226,C_221,CVZN_219,fp_223,N_230,r0_224,r2_227,r3_228,r4_229,r5_232,r6_231,r7_233,sp_218,V_222,Z_225,ZN_220
	Mem235[r2_227 + 0x0000C66C:word32] = r0_224
	Mem238[sp_218 - 0x00000004:word32] = fp_223 + -22
	word32 sp_242
	byte CVZN_243
	byte ZN_244
	bool C_245
	bool V_246
	word32 fp_247
	word32 r0_248
	bool Z_249
	word32 ap_250
	word32 r2_251
	word32 r3_252
	word32 r4_253
	bool N_254
	word32 r6_255
	word32 r5_256
	word32 r7_257
	call r3_228 + 2 (retsize: 4; depth: 4)
		uses: ap_226,C_240,CVZN_219,dwLoc34_4,dwLoc38_8,fp_223,N_230,r0_224,r2_227,r3_228,r4_229,r5_232,r6_231,r7_233,sp_236,V_241,Z_225,ZN_239
		defs: ap_250,C_245,CVZN_243,fp_247,N_254,r0_248,r2_251,r3_252,r4_253,r5_256,r6_255,r7_257,sp_242,V_246,Z_249,ZN_244
	Mem259[r2_251 + 0x0000C670:word16] = (word16) r0_248
	Mem262[sp_242 - 0x00000004:word32] = fp_247 + -20
	word32 sp_266
	byte CVZN_267
	byte ZN_268
	bool C_269
	bool V_270
	word32 fp_271
	word32 r0_272
	bool Z_273
	word32 ap_274
	word32 r2_275
	word32 r3_276
	word32 r4_277
	bool N_278
	word32 r6_279
	word32 r5_280
	word32 r7_281
	call r3_252 + 2 (retsize: 4; depth: 4)
		uses: ap_250,C_264,CVZN_243,dwLoc34_4,dwLoc38_8,fp_247,N_254,r0_248,r2_251,r3_252,r4_253,r5_256,r6_255,r7_257,sp_260,V_265,Z_249,ZN_263
		defs: ap_274,C_269,CVZN_267,fp_271,N_278,r0_272,r2_275,r3_276,r4_277,r5_280,r6_279,r7_281,sp_266,V_270,Z_273,ZN_268
	Mem283[r2_275 + 0x0000C672:word16] = (word16) r0_272
	Mem286[sp_266 - 0x00000004:word32] = fp_271 + -18
	word32 sp_290
	byte CVZN_291
	byte ZN_292
	bool C_293
	bool V_294
	word32 fp_295
	word32 r0_296
	bool Z_297
	word32 ap_298
	word32 r2_299
	word32 r3_300
	word32 r4_301
	bool N_302
	word32 r6_303
	word32 r5_304
	word32 r7_305
	call r3_276 + 2 (retsize: 4; depth: 4)
		uses: ap_274,C_288,CVZN_267,dwLoc34_4,dwLoc38_8,fp_271,N_278,r0_272,r2_275,r3_276,r4_277,r5_280,r6_279,r7_281,sp_284,V_289,Z_273,ZN_287
		defs: ap_298,C_293,CVZN_291,fp_295,N_302,r0_296,r2_299,r3_300,r4_301,r5_304,r6_303,r7_305,sp_290,V_294,Z_297,ZN_292
	Mem307[r2_299 + 0x0000C674:word16] = (word16) r0_296
	Mem310[sp_290 - 0x00000004:word32] = fp_295 + -16
	word32 sp_314
	byte CVZN_315
	byte ZN_316
	bool C_317
	bool V_318
	word32 fp_319
	word32 r0_320
	bool Z_321
	word32 ap_322
	word32 r2_323
	word32 r3_324
	word32 r4_325
	bool N_326
	word32 r6_327
	word32 r5_328
	word32 r7_329
	call r3_300 + 2 (retsize: 4; depth: 4)
		uses: ap_298,C_312,CVZN_291,dwLoc34_4,dwLoc38_8,fp_295,N_302,r0_296,r2_299,r3_300,r4_301,r5_304,r6_303,r7_305,sp_308,V_313,Z_297,ZN_311
		defs: ap_322,C_317,CVZN_315,fp_319,N_326,r0_320,r2_323,r3_324,r4_325,r5_328,r6_327,r7_329,sp_314,V_318,Z_321,ZN_316
	Mem331[r2_323 + 0x0000C676:word16] = (word16) r0_320
	Mem334[sp_314 - 0x00000004:word32] = fp_319 + -14
	word32 sp_338
	byte CVZN_339
	byte ZN_340
	bool C_341
	bool V_342
	word32 fp_343
	word32 r0_344
	bool Z_345
	word32 ap_346
	word32 r2_347
	word32 r3_348
	word32 r4_349
	bool N_350
	word32 r6_351
	word32 r5_352
	word32 r7_353
	call r3_324 + 2 (retsize: 4; depth: 4)
		uses: ap_322,C_336,CVZN_315,dwLoc34_4,dwLoc38_8,fp_319,N_326,r0_320,r2_323,r3_324,r4_325,r5_328,r6_327,r7_329,sp_332,V_337,Z_321,ZN_335
		defs: ap_346,C_341,CVZN_339,fp_343,N_350,r0_344,r2_347,r3_348,r4_349,r5_352,r6_351,r7_353,sp_338,V_342,Z_345,ZN_340
	Mem355[r2_347 + 0x0000C678:word16] = (word16) r0_344
	Mem358[sp_338 - 0x00000004:word32] = fp_343 + -12
	word32 sp_362
	byte CVZN_363
	byte ZN_364
	bool C_365
	bool V_366
	word32 fp_367
	word32 r0_368
	bool Z_369
	word32 ap_370
	word32 r2_371
	word32 r3_372
	word32 r4_373
	bool N_374
	word32 r6_375
	word32 r5_376
	word32 r7_377
	call r4_349 + 2 (retsize: 4; depth: 4)
		uses: ap_346,C_360,CVZN_339,dwLoc34_4,dwLoc38_8,fp_343,N_350,r0_344,r2_347,r3_348,r4_349,r5_352,r6_351,r7_353,sp_356,V_361,Z_345,ZN_359
		defs: ap_370,C_365,CVZN_363,fp_367,N_374,r0_368,r2_371,r3_372,r4_373,r5_376,r6_375,r7_377,sp_362,V_366,Z_369,ZN_364
	Mem379[r2_371 + 0x0000C67A:word32] = r0_368
	Mem382[sp_362 - 0x00000004:word32] = fp_367 + -8
	word32 sp_386
	byte CVZN_387
	byte ZN_388
	bool C_389
	bool V_390
	word32 fp_391
	word32 r0_392
	bool Z_393
	word32 ap_394
	word32 r2_395
	word32 r3_396
	word32 r4_397
	bool N_398
	word32 r6_399
	word32 r5_400
	word32 r7_401
	call r4_373 + 2 (retsize: 4; depth: 4)
		uses: ap_370,C_384,CVZN_363,dwLoc34_4,dwLoc38_8,fp_367,N_374,r0_368,r2_371,r3_372,r4_373,r5_376,r6_375,r7_377,sp_380,V_385,Z_369,ZN_383
		defs: ap_394,C_389,CVZN_387,fp_391,N_398,r0_392,r2_395,r3_396,r4_397,r5_400,r6_399,r7_401,sp_386,V_390,Z_393,ZN_388
	Mem403[r2_395 + 0x0000C67E:word32] = r0_392
	word32 sp_409
	*spOut = fp_391 - 0x00000004
	word32 fp_410
	*fpOut = Mem403[fp_391 + 0x0000000C:word32]
	return 0x00000000
// DataOut: fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> -56(fp):fp + -46 -52(fp):0x0000002A

l00011CF4:
	word32 sp_54
	*spOut = fp_21 - 0x00000004
	word32 fp_56
	*fpOut = Mem0[fp_21 + 0x0000000C:word32]
	return 0x00000033
// DataOut: fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> -56(fp):fp + -46 -52(fp):0x0000002A

fn00011CDA_exit:
// DataOut: fp r0 r2 r3 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid> -112(fp):fp + -8 -108(fp):fp + -12 -104(fp):fp + -14 -100(fp):fp + -16 -96(fp):fp + -18 -92(fp):fp + -20 -88(fp):fp + -22 -84(fp):fp + -26 -80(fp):fp + -30 -76(fp):fp + -34 -72(fp):fp + -36 -68(fp):fp + -38 -64(fp):fp + -40 -60(fp):fp + -42 -56(fp):fp + -46 -52(fp):0x0000002A



word32 fn00011ED6(word32 r0, word32 fp, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r0
// LiveOut: fp r0 sp
// Trashed: CVZN ap fp r0 r1 sp
// Preserved:
fn00011ED6_entry:
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00011ED6:
	word32 r1_5 = Mem0[r0 + 0x0000C811:word32] & ~0xFFFF0000
	word32 sp_15
	*spOut = fp - 0x00000004
	word32 fp_16
	*fpOut = Mem0[fp + 0x0000000C:word32]
	return (uint32) SLICE(((r1_5 | 0x00000002) ^ 0x00000001) * (r1_5 | 0x00000002), ui24, 8) & ~0xFFFFFF00
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00011ED6_exit:
// DataOut: fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> ap:<invalid> r0:<invalid> fp:<invalid>



word32 fn00011F06(word32 r2, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2
// LiveOut: fp r0 r3
// Trashed: CVZN ap fp r0 r1 r3 sp
// Preserved:
fn00011F06_entry:
// DataOut: ap fp pc r11 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00011F06:
	Mem11[r2 + 0x0000C809:word32] = (uint32) Mem0[r2 + 0x0000C80A:ui24] ^ Mem0[Mem0[r2 + 0x0000C5EB:word32] + ((Mem0[ap + 4:word32] ^ Mem0[r2 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem14[r2 + 0x0000C80D:word32] = Mem11[r2 + 0x0000C80D:word32] + (Mem11[r2 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem18[r2 + 0x0000C80D:word32] = Mem14[r2 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	word32 r3_22 = Mem18[r2 + 0x0000C5EB:word32]
	*r3Out = r3_22
	Mem25[r2 + 0x0000C811:word32] = (uint32) Mem18[r2 + 0x0000C812:ui24] ^ Mem18[r3_22 + (((uint32) Mem18[r2 + 0x0000C810:byte] ^ Mem18[r2 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	word32 fp_32
	*fpOut = Mem25[fp + 0x0000000C:word32]
	return Mem25[ap + 4:word32]
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00011F06_exit:
// DataOut: fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r3:<invalid> r1:<invalid> fp:<invalid> ap:<invalid>



void fn000121EA(word32 r2, word32 r3, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2 r3
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000121EA_entry:
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000121EA:
	word32 r3_17
	word32 r7_18
	word32 ap_19
	word32 fp_20
	word32 sp_21
	word32 r0_22 = fn00012252(r2, ap, fp, out r3_17, out r7_18, out ap_19, out fp_20, out sp_21)
	branch r0_22 == 0x00000000 l0001224B
// DataOut: ap fp r0 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00012206:
	Mem58[sp_21 - 0x00000004:word32] = Mem0[r3_17 + 0x0000C815:word32]
	word32 sp_62
	byte CVZN_63
	byte ZN_64
	bool C_65
	bool V_66
	word32 r3_67
	word32 ap_68
	word32 r0_69
	word32 r4_70
	bool Z_71
	word32 r2_72
	word32 fp_73
	word32 r7_74
	call Mem58[0x000192C4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_19,C_60,CVZN,dwLoc08_7,dwLoc0C_11,fp_20,r0_22,r2,r3_17,r4_23,r7_18,sp_56,V_61,Z_25,ZN_59
		defs: ap_68,C_65,CVZN_63,fp_73,r0_69,r2_72,r3_67,r4_70,r7_74,sp_62,V_66,Z_71,ZN_64
	Mem77[sp_62 - 0x00000004:word32] = r0_69 + 0x00000001
	word32 sp_81
	byte CVZN_82
	byte ZN_83
	bool C_84
	bool V_85
	word32 r3_86
	word32 ap_87
	word32 r0_88
	word32 r4_89
	bool Z_90
	word32 r2_91
	word32 fp_92
	word32 r7_93
	call Mem77[0x000192B4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_68,C_79,CVZN_63,dwLoc08_7,dwLoc0C_11,fp_73,r0_75,r2_72,r3_67,r4_70,r7_74,sp_76,V_80,Z_71,ZN_78
		defs: ap_87,C_84,CVZN_82,fp_92,r0_88,r2_91,r3_86,r4_89,r7_93,sp_81,V_85,Z_90,ZN_83
	branch r0_88 != 0x00000000 l00012227
// DataOut: ap fp r2 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00012227:
	Mem106[sp_81 - 0x00000004:word32] = Mem77[r3_86 + 0x0000C815:word32]
	Mem108[sp_81 - 0x00000008:word32] = r0_88
	word32 r2_112
	word32 ap_113
	word32 fp_114
	word32 sp_115
	word32 r0_116 = fn0000E2A6(r7_93, ap_87, fp_92, out r2_112, out ap_113, out fp_114, out sp_115)
	Mem118[sp_115 - 0x00000004:word32] = r0_116
	Mem121[sp_115 - 0x00000008:word32] = Mem118[ap_113 + 4:word32]
	word32 r3_125
	word32 r7_126
	word32 ap_127
	word32 fp_128
	word32 sp_129
	word32 r0_130 = fn00012252(r2_112, ap_113, fp_114, out r3_125, out r7_126, out ap_127, out fp_128, out sp_129)
	Mem133[sp_129 - 0x00000004:word32] = r2_112
	word32 sp_137
	byte CVZN_138
	byte ZN_139
	bool C_140
	bool V_141
	word32 r3_142
	word32 ap_143
	word32 r0_144
	word32 r4_145
	bool Z_146
	word32 r2_147
	word32 fp_148
	word32 r7_149
	call Mem133[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_127,C_135,CVZN_82,dwLoc08_7,dwLoc0C_11,fp_128,r0_130,r2_112,r3_125,r4_131,r7_126,sp_132,V_136,Z_96,ZN_134
		defs: ap_143,C_140,CVZN_138,fp_148,r0_144,r2_147,r3_142,r4_145,r7_149,sp_137,V_141,Z_146,ZN_139
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r5:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> -20(fp):r0 + 0x00000002 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0001224B:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r6:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> -40(fp):r0 + 0x00000003 -36(fp):<invalid> -32(fp):r0 + 0x00000002 -28(fp):r0 + 0x00000003 -24(fp):<invalid> -20(fp):r0 + 0x00000002 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00012223:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r5:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> -20(fp):r0 + 0x00000002 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn000121EA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r1:<invalid> r6:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> -40(fp):r0 + 0x00000003 -36(fp):<invalid> -32(fp):r0 + 0x00000002 -28(fp):r0 + 0x00000003 -24(fp):<invalid> -20(fp):r0 + 0x00000002 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn00012252(word32 r2, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2
// LiveOut: ap fp r0 r3 r7 sp
// Trashed: CVZN ap fp r0 r1 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00012252_entry:
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012252:
	word32 r4_5 = Mem0[ap + 8:word32]
	Mem7[r2 + 0x0000C809:word32] = 0x12345678
	Mem10[r2 + 0x0000C80D:word32] = 0x23456789
	Mem12[r2 + 0x0000C811:word32] = 0x34567890
	r4_217 = r4_5
	branch Mem12[r4_5:byte] != 0x00 l00012288
// DataOut: ap fp r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012288:
	word32 r4_217
	Mem224[r2 + 0x0000C809:word32] = (uint32) Mem12[r2 + 0x0000C80A:ui24] ^ Mem12[Mem12[r2 + 0x0000C5EB:word32] + (((int32) Mem12[r4_217:int8] ^ Mem12[r2 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem227[r2 + 0x0000C80D:word32] = Mem224[r2 + 0x0000C80D:word32] + (Mem224[r2 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem231[r2 + 0x0000C80D:word32] = Mem227[r2 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	Mem238[r2 + 0x0000C811:word32] = (uint32) Mem231[r2 + 0x0000C812:ui24] ^ Mem231[Mem231[r2 + 0x0000C5EB:word32] + (((uint32) Mem231[r2 + 0x0000C810:byte] ^ Mem231[r2 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	r4_217 = r4_217 + 0x00000001
	branch Mem238[r4_217:byte] == 0x00 l00012312
// DataOut: ap fp r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000020 r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid>
// LocalsOut: fp(32)

l0001230F:
// DataOut: ap fp r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000020 r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid>
// LocalsOut: fp(32)

l00012285:
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000020 r4:<invalid>
// LocalsOut: fp(32)

l00012312:
	word32 sp_29
	byte CVZN_30
	byte ZN_31
	bool C_32
	bool V_33
	word32 ap_34
	word32 r4_35
	word32 r2_36
	bool Z_37
	word32 r5_38
	byte VZN_39
	word32 r0_40
	word32 r3_41
	word32 r1_42
	word32 fp_43
	word32 r7_44
	bool N_45
	word32 r6_46
	word32 r9_47
	byte CZN_48
	word32 r8_49
	call Mem12[0x0001929C:word32] + 2 (retsize: 4; depth: 48)
		uses: ap,C_27,dwLoc24_18,dwLoc28_21,dwLoc2C_25,fp,r2,r4_5,sp_22,V_28,Z_14,ZN_26
		defs: ap_34,C_32,CVZN_30,CZN_48,fp_43,N_45,r0_40,r1_42,r2_36,r3_41,r4_35,r5_38,r6_46,r7_44,r8_49,r9_47,sp_29,V_33,VZN_39,Z_37,ZN_31
	word32 r7_50 = 0x00000000
	word32 r4_51 = fp_43 + -16
// DataOut: fp r2 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000020 r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid>

l00012328:
	word32 r6_58 = Mem12[r2_36 + 0x0000C811:word32] & ~0xFFFF0000
	Mem65[r4_51:byte] = (byte) (uint32) Mem12[r4_51:byte] ^ (byte) ((uint32) SLICE(((r6_58 | 0x00000002) ^ 0x00000001) * (r6_58 | 0x00000002), ui24, 8) & ~0xFFFFFF00)
	Mem72[r2_36 + 0x0000C809:word32] = (uint32) Mem65[r2_36 + 0x0000C80A:ui24] ^ Mem65[Mem65[r2_36 + 0x0000C5EB:word32] + (((uint32) Mem65[r4_51:byte] ^ Mem65[r2_36 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem75[r2_36 + 0x0000C80D:word32] = Mem72[r2_36 + 0x0000C80D:word32] + (Mem72[r2_36 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem79[r2_36 + 0x0000C80D:word32] = Mem75[r2_36 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	word32 r3_83 = Mem79[r2_36 + 0x0000C5EB:word32]
	*r3Out = r3_83
	Mem86[r2_36 + 0x0000C811:word32] = (uint32) Mem79[r2_36 + 0x0000C812:ui24] ^ Mem79[r3_83 + (((uint32) Mem79[r2_36 + 0x0000C810:byte] ^ Mem79[r2_36 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	r4_51 = r4_51 + 0x00000001
	r7_50 = r7_50 + 0x00000001
	*r7Out = r7_50
	branch r7_50 <= 0x0000000B l00012328
// DataOut: fp r2 r3 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l000123DA:
	word32 r4_210
	word32 r5_93 = (uint32) (uint16) Mem86[fp_43 + -5:byte]
	branch (Mem86[Mem86[r2_36 + 1511:word32] + 20:word32] & 0x00000002) == 0x00000000 l000123FC
// DataOut: fp r2 r3 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l000123FC:
	r4_210 = (uint32) Mem86[r2_36 + 0x0000C64B:byte]
// DataOut: fp r2 r3 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l000123EB:
	word32 r3_209 = (uint32) Mem86[r2_36 + 0x0000C644:word16]
	*r3Out = r3_209
	r4_210 = r3_209 >> 8
// DataOut: fp r2 r3 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l00012403:
	branch r5_93 == r4_210 l0001240C
// DataOut: fp r2 r3 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l0001240C:
	word32 r1_138
	word32 r4_133 = Mem86[r2_36 + 0x0000C5FB:word32]
	word32 r3_134 = Mem86[r2_36 + 132:word32]
	branch r4_133 <= r3_134 l00012424
// DataOut: fp r2 r3 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l00012424:
	r1_138 = r4_133
// DataOut: fp r1 r2 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l0001241D:
	r1_138 = r3_134
// DataOut: fp r1 r2 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l00012427:
	word32 r3_139
	*r3Out = r1_138
	word32 r5_140 = Mem86[r2_36 + 0x0000C5F7:word32]
	word32 r6_142 = r1_138 - 0x00000001
	branch r1_138 != 0x00000000 l0001243F
// DataOut: fp r2 r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l0001243F:
// DataOut: fp r2 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l00012440:
	word32 r8_165 = Mem86[r2_36 + 0x0000C811:word32] & ~0xFFFF0000
	Mem172[r5_140:byte] = (byte) (uint32) Mem86[r5_140:byte] ^ (byte) ((uint32) SLICE(((r8_165 | 0x00000002) ^ 0x00000001) * (r8_165 | 0x00000002), ui24, 8) & ~0xFFFFFF00)
	Mem179[r2_36 + 0x0000C809:word32] = (uint32) Mem172[r2_36 + 0x0000C80A:ui24] ^ Mem172[Mem172[r2_36 + 0x0000C5EB:word32] + (((uint32) Mem172[r5_140:byte] ^ Mem172[r2_36 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem182[r2_36 + 0x0000C80D:word32] = Mem179[r2_36 + 0x0000C80D:word32] + (Mem179[r2_36 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem186[r2_36 + 0x0000C80D:word32] = Mem182[r2_36 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	word32 r3_190 = Mem186[r2_36 + 0x0000C5EB:word32]
	*r3Out = r3_190
	Mem193[r2_36 + 0x0000C811:word32] = (uint32) Mem186[r2_36 + 0x0000C812:ui24] ^ Mem186[r3_190 + (((uint32) Mem186[r2_36 + 0x0000C810:byte] ^ Mem186[r2_36 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	r5_140 = r5_140 + 0x00000001
	r6_142 = r6_142 - 0x00000001
	branch r6_142 == 0x00000000 l000124F8
// DataOut: fp r2 r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> r8:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l000124F5:
// DataOut: fp r2 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> r8:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l0001243C:
// DataOut: fp r2 r3 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l000124F8:
	word32 fp_160
	*fpOut = Mem86[fp_43 + 0x0000000C:word32]
	word32 ap_161
	*apOut = Mem86[fp_43 + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r2 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> r8:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l00012408:
	word32 fp_131
	*fpOut = Mem86[fp_43 + 0x0000000C:word32]
	word32 ap_132
	*apOut = Mem86[fp_43 + 0x00000008:word32]
	return -0x00000001
// DataOut: ap fp r0 r2 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

fn00012252_exit:
// DataOut: ap fp r0 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C



void fn000124FE(word32 r0, word32 r2, word32 ap, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap pc r0 r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000124FE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000124FE_entry:
// DataOut: ap pc r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000124FE:
	word32 sp_10 = fp - 0x00000004
// DataOut: ap pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00012503:
	word32 sp_11 = sp_10 - 0x00000008
	Mem13[sp_11:word64] = 0x0000000000000000
	Mem16[sp_11 - 0x00000004:word32] = r2 + 8
	Mem18[sp_11 - 0x00000008:word32] = r2
	byte CVZN_25
	byte ZN_26
	bool C_27
	bool V_28
	bool Z_29
	bool N_30
	word32 r0_33
	word32 ap_34
	byte VZN_35
	call Mem18[pc:word32] + 2 (retsize: 4; depth: 4)
		uses: C_20,pc_23,r2_9,sp_17,V_21,ZN_19
		defs: ap_34,C_27,CVZN_25,N_30,pc_32,r0_33,r2_31,sp_24,V_28,VZN_35,Z_29,ZN_26
	real32 v15_36 = Mem18[Mem18[sp_10 + 32766:word32]:real32]
	Mem37[Mem37[r0_33 + -23984:word32]:real32] = v15_36
	branch v15_36 > 0.0F l00012503
// DataOut: ap pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> -20(fp):r2 -16(fp):r2 + 8 -12(fp):0x0000000000000000

l0001251B:
	Mem42[Mem42[r0_33 + 5282:word32]:real32] = 0.8125F
	Mem45[ap_34 - 0x00000004:real32] = 0.75F
	Mem49[sp_10 - 0x00000004:word32] = ap_34 - 0x0000000C
	Mem51[sp_10 - 0x00000008:word32] = 0x00000008
	Mem54[sp_10 - 0x0000000C:word32] = r2 + 24
	Mem57[sp_10 - 0x00000014:word64] = 0x0000000000000000
	Mem60[sp_10 - 0x00000018:word32] = r2 + 10
	Mem62[sp_10 - 0x0000001C:word32] = 0x00000027
	Mem65[sp_10 - 0x00000020:int32] = (int32) Mem62[r2 + 8:int16]
	Mem67[sp_10 - 0x00000024:word32] = 0x00000000
	word32 sp_73
	byte CVZN_74
	byte ZN_75
	bool C_76
	bool V_77
	bool Z_78
	bool N_79
	word32 r2_80
	word32 pc_81
	word32 r0_82
	word32 ap_83
	byte VZN_84
	call Mem67[pc:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_46,C_69,CVZN_25,N_30,pc_72,r0_33,r2_31,sp_66,V_70,VZN_35,Z_29,ZN_68
		defs: ap_83,C_76,CVZN_74,N_79,pc_81,r0_82,r2_80,sp_73,V_77,VZN_84,Z_78,ZN_75
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> -20(fp):r2 -16(fp):r2 + 8 -12(fp):0x0000000000000000



void fn000125CA(word32 r0, word32 r2, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000125CA_entry:
// DataOut: ap fp pc r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000125CA:
	fn000124FE(r0, r2, ap, pc)
	byte CVZN_27
	byte ZN_28
	bool C_29
	bool V_30
	byte CZN_34
	bool Z_35
	byte VZN_37
	word32 pc_38
	word32 r0_36
	word32 ap_32
	word32 r2_33
	word32 sp_26
	word32 fp_31
	call Mem0[0x00019270:word32] + 2 (retsize: 4; depth: 28)
		uses: ap,C_24,dwLoc0C_4,dwLoc10_13,dwLoc14_17,dwLoc18_22,fp,pc,r0,r2_18,sp_19,V_25,ZN_23
		defs: ap_32,C_29,CVZN_27,CZN_34,fp_31,pc_38,r0_36,r2_33,sp_26,V_30,VZN_37,Z_35,ZN_28
	branch Mem0[fp_31 + -5:byte] == 0x0A l00012604
// DataOut: ap fp pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000125EE:
// DataOut: ap fp pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:ap + 4 -12(fp):0x00000000

l000125F0:
	word32 sp_68 = sp_26 - 0x00000004
	Mem69[sp_68:word32] = 0x00000001
	Mem72[sp_68 - 0x00000004:word32] = fp_31 + -6
	Mem75[sp_68 - 0x00000008:word32] = Mem72[r2_33:word32]
	byte CVZN_80
	byte ZN_81
	bool C_82
	bool V_83
	byte CZN_87
	bool Z_88
	byte VZN_90
	call Mem75[0x00019270:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_32,C_77,CVZN_27,CZN_39,dwLoc0C_4,dwLoc10_13,dwLoc14_17,dwLoc18_22,fp_67,pc_38,r0_36,r2_65,sp_73,V_78,VZN_37,Z_40,ZN_76
		defs: ap_85,C_82,CVZN_80,CZN_87,fp_84,pc_91,r0_89,r2_86,sp_79,V_83,VZN_90,Z_88,ZN_81
	branch Mem75[fp_31 + -6:byte] != 0x0A l000125F0
// DataOut: ap fp pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:ap + 4 -12(fp):0x00000000

l00012604:
	Mem52[sp_26 - 0x00000004:word32] = 0x00000001
	fn000124FE(r0_36, r2_33, ap_32, pc_38)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:ap + 4 -12(fp):0x00000000
// Terminates process

fn000125CA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r0:<invalid> sp:fp - 0x00000004 fp:<invalid> ap:<invalid> -12(fp):0x00000000



void fn00012616(word32 r0, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r8
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r11 r2 r3 r4 r5 r6 r7 r9 sp
// Preserved:
fn00012616_entry:
// DataOut: ap fp r0 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012616:
	word32 sp_14
	byte CVZN_15
	byte ZN_16
	bool C_17
	bool V_18
	word32 r7_19
	word32 r8_20
	word32 r0_21
	word32 r6_22
	bool Z_23
	bool N_24
	word32 fp_25
	word32 ap_26
	word32 r9_27
	word32 r11_28
	word32 r5_29
	word32 r4_30
	word32 r3_31
	word32 r2_32
	word32 r10_33
	word32 r1_34
	byte VZN_35
	byte CZN_36
	call Mem0[0x00019248:word32] + 2 (retsize: 4; depth: 24)
		uses: C_12,dwLoc10_8,dwLoc14_10,r7_4,r8,sp_9,V_13,ZN_11
		defs: ap_26,C_17,CVZN_15,CZN_36,fp_25,N_24,r0_21,r1_34,r10_33,r11_28,r2_32,r3_31,r4_30,r5_29,r6_22,r7_19,r8_20,r9_27,sp_14,V_18,VZN_35,Z_23,ZN_16
	word32 sp_42
	byte CVZN_43
	byte ZN_44
	bool C_45
	bool V_46
	word32 r7_47
	word32 r8_48
	word32 r0_49
	word32 r6_50
	bool Z_51
	bool N_52
	word32 fp_53
	word32 ap_54
	word32 r9_55
	word32 r11_56
	word32 r5_57
	word32 r4_58
	word32 r3_59
	word32 r2_60
	word32 r10_61
	word32 r1_62
	byte VZN_63
	byte CZN_64
	call Mem0[0x0001924C:word32] + 2 (retsize: 4; depth: 28)
		uses: ap_26,C_40,CVZN_15,CZN_36,dwLoc10_8,dwLoc14_10,dwLoc18_38,fp_25,N_24,r0_21,r1_34,r10_33,r11_28,r2_32,r3_31,r4_30,r5_29,r6_22,r7_19,r8_20,r9_27,sp_37,V_41,VZN_35,Z_23,ZN_39
		defs: ap_54,C_45,CVZN_43,CZN_64,fp_53,N_52,r0_49,r1_62,r10_61,r11_56,r2_60,r3_59,r4_58,r5_57,r6_50,r7_47,r8_48,r9_55,sp_42,V_46,VZN_63,Z_51,ZN_44
	branch r0_49 != 0x00000000 l00012644
// DataOut: ap fp r0 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012644:
	byte CVZN_111
	byte ZN_112
	bool C_113
	bool V_114
	word32 r8_116
	word32 r0_117
	word32 r6_118
	bool Z_119
	bool N_120
	word32 fp_121
	word32 r9_123
	word32 r11_124
	word32 r5_125
	word32 r4_126
	word32 r3_127
	word32 r2_128
	word32 r10_129
	word32 r1_130
	byte VZN_131
	byte CZN_132
	word32 r7_115
	word32 sp_110
	word32 ap_122
	call Mem0[0x00019294:word32] + 2 (retsize: 4; depth: 32)
		uses: ap_54,C_108,CVZN_43,CZN_64,dwLoc10_8,dwLoc14_10,dwLoc18_38,dwLoc1C_106,fp_53,N_52,r0_49,r1_62,r10_61,r11_56,r2_60,r3_59,r4_58,r5_57,r6_65,r7_47,r8_48,r9_55,sp_104,V_109,VZN_63,Z_67,ZN_107
		defs: ap_122,C_113,CVZN_111,CZN_132,fp_121,N_120,r0_117,r1_130,r10_129,r11_124,r2_128,r3_127,r4_126,r5_125,r6_118,r7_115,r8_116,r9_123,sp_110,V_114,VZN_131,Z_119,ZN_112
	word32 r9_133 = r8_116 + 14
// DataOut: ap fp r0 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 r7:<invalid> r6:r0 -24(fp):r0 -20(fp):0x00000000 -16(fp):r8 + 12

l00012680:
	branch Mem0[r9_133:byte] == 0x00 l0001268C
// DataOut: ap fp r0 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l00012684:
	word32 sp_452 = sp_110 - 0x00000004
	Mem454[sp_452:word32] = Mem0[r7_115:word32]
	Mem456[sp_452 - 0x00000004:word32] = r9_133
	byte CVZN_461
	byte ZN_462
	bool C_463
	bool V_464
	word32 r8_466
	word32 r0_467
	word32 r6_468
	bool Z_469
	bool N_470
	word32 fp_471
	word32 r9_473
	word32 r11_474
	word32 r5_475
	word32 r4_476
	word32 r3_477
	word32 r2_478
	word32 r10_479
	word32 r1_480
	byte VZN_481
	byte CZN_482
	call Mem456[sp_452 + 0x00000008:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_163,C_458,CVZN_158,CZN_145,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_162,N_160,r0_159,r1_147,r10_148,r11_153,r2_149,r3_150,r4_151,r5_152,r6_155,r7_157,r8_156,r9_154,sp_455,V_459,VZN_146,Z_165,ZN_457
		defs: ap_472,C_463,CVZN_461,CZN_482,fp_471,N_470,r0_467,r1_480,r10_479,r11_474,r2_478,r3_477,r4_476,r5_475,r6_468,r7_465,r8_466,r9_473,sp_460,V_464,VZN_481,Z_469,ZN_462
// DataOut: ap fp r0 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l0001268C:
	word32 sp_171 = sp_110 - 0x00000004
	Mem173[sp_171:word32] = Mem0[r7_115:word32]
	Mem176[sp_171 - 0x00000004:word32] = Mem173[ap_122 + 4:word32]
	word32 sp_180
	byte CVZN_181
	byte ZN_182
	bool C_183
	bool V_184
	word32 r7_185
	word32 r8_186
	word32 r0_187
	word32 r6_188
	bool Z_189
	bool N_190
	word32 fp_191
	word32 ap_192
	word32 r9_193
	word32 r11_194
	word32 r5_195
	word32 r4_196
	word32 r3_197
	word32 r2_198
	word32 r10_199
	word32 r1_200
	byte VZN_201
	byte CZN_202
	call Mem176[sp_171 + 0x00000008:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_170,C_178,CVZN_158,CZN_145,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_162,N_160,r0_159,r1_147,r10_148,r11_153,r2_149,r3_150,r4_151,r5_152,r6_155,r7_168,r8_156,r9_154,sp_174,V_179,VZN_146,Z_165,ZN_177
		defs: ap_192,C_183,CVZN_181,CZN_202,fp_191,N_190,r0_187,r1_200,r10_199,r11_194,r2_198,r3_197,r4_196,r5_195,r6_188,r7_185,r8_186,r9_193,sp_180,V_184,VZN_201,Z_189,ZN_182
	Mem205[sp_180 - 0x00000004:word32] = Mem176[r7_185:word32]
	word32 sp_209
	byte CVZN_210
	byte ZN_211
	bool C_212
	bool V_213
	word32 r7_214
	word32 r8_215
	word32 r0_216
	word32 r6_217
	bool Z_218
	bool N_219
	word32 fp_220
	word32 ap_221
	word32 r9_222
	word32 r11_223
	word32 r5_224
	word32 r4_225
	word32 r3_226
	word32 r2_227
	word32 r10_228
	word32 r1_229
	byte VZN_230
	byte CZN_231
	call r11_194 + 2 (retsize: 4; depth: 4)
		uses: ap_192,C_207,CVZN_181,CZN_202,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_191,N_190,r0_187,r1_200,r10_199,r11_194,r2_198,r3_197,r4_196,r5_195,r6_188,r7_185,r8_186,r9_193,sp_203,V_208,VZN_201,Z_189,ZN_206
		defs: ap_221,C_212,CVZN_210,CZN_231,fp_220,N_219,r0_216,r1_229,r10_228,r11_223,r2_227,r3_226,r4_225,r5_224,r6_217,r7_214,r8_215,r9_222,sp_209,V_213,VZN_230,Z_218,ZN_211
	Mem234[sp_209 - 0x00000004:word32] = 0x00000000
	byte CVZN_239
	byte ZN_240
	bool C_241
	bool V_242
	word32 r7_243
	word32 r8_244
	word32 r0_245
	bool Z_247
	bool N_248
	word32 fp_249
	word32 ap_250
	word32 r9_251
	word32 r11_252
	word32 r5_253
	word32 r4_254
	word32 r3_255
	word32 r2_256
	word32 r10_257
	word32 r1_258
	byte VZN_259
	byte CZN_260
	word32 r6_246
	word32 sp_238
	call r10_228 + 2 (retsize: 4; depth: 4)
		uses: ap_221,C_236,CVZN_210,CZN_231,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_220,N_219,r0_216,r1_229,r10_228,r11_223,r2_232,r3_226,r4_225,r5_224,r6_217,r7_214,r8_215,r9_222,sp_233,V_237,VZN_230,Z_218,ZN_235
		defs: ap_250,C_241,CVZN_239,CZN_260,fp_249,N_248,r0_245,r1_258,r10_257,r11_252,r2_256,r3_255,r4_254,r5_253,r6_246,r7_243,r8_244,r9_251,sp_238,V_242,VZN_259,Z_247,ZN_240
// DataOut: ap fp r0 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126A4:
	word32 sp_263 = sp_238 - 0x00000004
	Mem264[sp_263:word32] = r6_246
	byte CVZN_269
	byte ZN_270
	bool C_271
	bool V_272
	word32 r7_273
	word32 r8_274
	word32 r0_275
	bool Z_277
	bool N_278
	word32 fp_279
	word32 ap_280
	word32 r9_281
	word32 r11_282
	word32 r5_283
	word32 r4_284
	word32 r3_285
	word32 r2_286
	word32 r10_287
	word32 r1_288
	byte VZN_289
	byte CZN_290
	call r5_253 + 2 (retsize: 4; depth: 4)
		uses: ap_250,C_266,CVZN_239,CZN_260,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_249,N_248,r0_245,r1_258,r10_257,r11_252,r2_256,r3_255,r4_254,r5_253,r6_261,r7_243,r8_244,r9_251,sp_263,V_267,VZN_259,Z_247,ZN_265
		defs: ap_280,C_271,CVZN_269,CZN_290,fp_279,N_278,r0_275,r1_288,r10_287,r11_282,r2_286,r3_285,r4_284,r5_283,r6_276,r7_273,r8_274,r9_281,sp_268,V_272,VZN_289,Z_277,ZN_270
	int8 v31_291 = (int8) r0_275
	word32 r1_292 = DPB(r1_288, v31_291, 0)
	branch v31_291 != 0x0D l000126B4
// DataOut: ap fp r0 r1 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126B1:
	r1_292 = DPB(r1_288, 0x0A, 0)
// DataOut: ap fp r0 r1 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126B4:
	branch r2_286 >= r4_284 l000126C3
// DataOut: ap fp r0 r1 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126B9:
	Mem443[Mem443[r3_285:word32]:byte] = (byte) r1_292
// DataOut: ap fp r0 r1 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126C3:
	branch (byte) r1_292 != 0x0A l000126A4
// DataOut: ap fp r0 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126C8:
	Mem310[sp_238 - 0x00000004:word32] = 0x00000001
	word32 sp_314
	byte CVZN_315
	byte ZN_316
	bool C_317
	bool V_318
	word32 r7_319
	word32 r8_320
	word32 r0_321
	word32 r6_322
	bool Z_323
	bool N_324
	word32 fp_325
	word32 ap_326
	word32 r9_327
	word32 r11_328
	word32 r5_329
	word32 r4_330
	word32 r3_331
	word32 r2_332
	word32 r10_333
	word32 r1_334
	byte VZN_335
	byte CZN_336
	call r10_287 + 2 (retsize: 4; depth: 4)
		uses: ap_280,C_312,CVZN_269,CZN_306,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_279,N_300,r0_304,r1_296,r10_287,r11_282,r2_302,r3_285,r4_284,r5_283,r6_276,r7_273,r8_274,r9_281,sp_309,V_313,VZN_289,Z_307,ZN_311
		defs: ap_326,C_317,CVZN_315,CZN_336,fp_325,N_324,r0_321,r1_334,r10_333,r11_328,r2_332,r3_331,r4_330,r5_329,r6_322,r7_319,r8_320,r9_327,sp_314,V_318,VZN_335,Z_323,ZN_316
	Mem339[sp_314 - 0x00000004:word32] = Mem310[r7_319:word32]
	Mem341[sp_314 - 0x00000008:word32] = 0x0000000A
	word32 sp_345
	byte CVZN_346
	byte ZN_347
	bool C_348
	bool V_349
	word32 r7_350
	word32 r8_351
	word32 r0_352
	word32 r6_353
	bool Z_354
	bool N_355
	word32 fp_356
	word32 ap_357
	word32 r9_358
	word32 r11_359
	word32 r5_360
	word32 r4_361
	word32 r3_362
	word32 r2_363
	word32 r10_364
	word32 r1_365
	byte VZN_366
	byte CZN_367
	call Mem341[0x00019268:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_326,C_343,CVZN_315,CZN_336,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_325,N_324,r0_321,r1_334,r10_333,r11_328,r2_332,r3_331,r4_330,r5_329,r6_322,r7_319,r8_320,r9_327,sp_340,V_344,VZN_335,Z_323,ZN_342
		defs: ap_357,C_348,CVZN_346,CZN_367,fp_356,N_355,r0_352,r1_365,r10_364,r11_359,r2_363,r3_362,r4_361,r5_360,r6_353,r7_350,r8_351,r9_358,sp_345,V_349,VZN_366,Z_354,ZN_347
	Mem370[sp_345 - 0x00000004:word32] = Mem341[r7_350:word32]
	byte CVZN_375
	byte ZN_376
	bool C_377
	bool V_378
	word32 r8_380
	word32 r0_381
	word32 r6_382
	bool Z_383
	bool N_384
	word32 fp_385
	word32 r9_387
	word32 r11_388
	word32 r5_389
	word32 r4_390
	word32 r3_391
	word32 r2_392
	word32 r10_393
	word32 r1_394
	byte VZN_395
	byte CZN_396
	call r11_359 + 2 (retsize: 4; depth: 4)
		uses: ap_357,C_372,CVZN_346,CZN_367,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_356,N_355,r0_352,r1_365,r10_364,r11_359,r2_363,r3_362,r4_361,r5_360,r6_353,r7_350,r8_351,r9_358,sp_368,V_373,VZN_366,Z_354,ZN_371
		defs: ap_386,C_377,CVZN_375,CZN_396,fp_385,N_384,r0_381,r1_394,r10_393,r11_388,r2_392,r3_391,r4_390,r5_389,r6_382,r7_379,r8_380,r9_387,sp_374,V_378,VZN_395,Z_383,ZN_376
	r9_133 = r8_380 + 15
	branch Mem370[Mem370[sp_110 + (r2_392 - 0x00000001):word32]:byte] != 0x0A l00012680
// DataOut: ap fp r0 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126EC:
	word32 r3_402 = Mem370[ap_122 + 8:word32]
	Mem404[r3_402:byte] = 0x00
	Mem406[sp_110 - 0x00000004:word32] = r6_382
	word32 sp_410
	byte CVZN_411
	byte ZN_412
	bool C_413
	bool V_414
	word32 r7_415
	word32 r8_416
	word32 r0_417
	word32 r6_418
	bool Z_419
	bool N_420
	word32 fp_421
	word32 ap_422
	word32 r9_423
	word32 r11_424
	word32 r5_425
	word32 r4_426
	word32 r3_427
	word32 r2_428
	word32 r10_429
	word32 r1_430
	byte VZN_431
	byte CZN_432
	call Mem406[0x00019250:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_386,C_408,CVZN_375,CZN_399,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_385,N_384,r0_398,r1_394,r10_393,r11_388,r2_392,r3_402,r4_390,r5_389,r6_382,r7_379,r8_380,r9_397,sp_405,V_409,VZN_395,Z_400,ZN_407
		defs: ap_422,C_413,CVZN_411,CZN_432,fp_421,N_420,r0_417,r1_430,r10_429,r11_424,r2_428,r3_427,r4_426,r5_425,r6_418,r7_415,r8_416,r9_423,sp_410,V_414,VZN_431,Z_419,ZN_412
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:r8 + 15 r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l00012641:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 r7:<invalid> r6:r0 -24(fp):r0 -20(fp):0x00000000 -16(fp):r8 + 12

fn00012616_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid> r6:r0 r0:<invalid> fp:<invalid> ap:<invalid> r9:r8 + 15 r11:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12



void fn00012702(word32 r0, word32 r2, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00012702_entry:
// DataOut: ap fp r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012702:
	Mem12[r2 + 116:word32] = 0x00000000
	word32 v22_16 = Mem12[Mem12[ap + 8:word32]:word32]
	word32 r4_15 = Mem12[Mem12[ap + 4:word32]:word32]
	word32 sp_107 = fp - 0x00000010
	word32 dwLoc0C_17 = v22_16
	word32 dwLoc10_19 = r4_15 - 0x00000001
	branch r4_15 > 0x00000001 l00012732
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l00012732:
	dwLoc0C_17 = v22_16 + 0x00000004
	branch Mem12[Mem12[v22_16 + 0x00000004:word32]:byte] == 0x2D l00012743
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(0) Local -0010(32)

l00012743:
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(0) Local -0010(32)

l00012744:
	r4_15 = (int32) Mem12[Mem12[dwLoc0C_17:word32] + 0x00000001:int8]
	branch r4_15 != 0x00000000 l00012758
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l00012758:
	branch r4_15 > 0x0000007A l000127FD
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l000127FD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l0001275B_1:
	word32 sp_232
	byte CVZN_233
	byte ZN_234
	bool C_235
	bool V_236
	bool Z_237
	bool N_238
	word32 r1_239
	word32 r7_240
	word32 r8_241
	word32 r6_242
	word32 r11_243
	word32 r9_244
	word32 r10_245
	word32 r2_246
	word32 ap_247
	word32 r4_248
	word32 r3_249
	byte CZN_250
	word32 fp_251
	word32 r0_252
	word32 r5_253
	byte VZN_254
	call 0x00012763 + (r4_15 - 0x0000002D) * 0x00000002 (retsize: 4; depth: 20)
		uses: ap,C_229,CVZN_207,CZN_206,dwLoc08_4,dwLoc0C_204,dwLoc10_205,dwLoc14,fp,N,r0_227,r1_5,r10,r11_9,r2,r3_211,r4_213,r5_212,r6_8,r7_6,r8_7,r9,sp_2,V_230,VZN_214,Z_215,ZN_228
		defs: ap_247,C_235,CVZN_233,CZN_250,fp_251,N_238,r0_252,r1_239,r10_245,r11_243,r2_246,r3_249,r4_248,r5_253,r6_242,r7_240,r8_241,r9_244,sp_232,V_236,VZN_254,Z_237,ZN_234
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012755:
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l00012948:
	word32 v37_217 = dwLoc10_19 - 0x00000001
	dwLoc10_19 = v37_217
	branch v37_217 <= 0x00000000 l0001295D
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l0001294C:
	word32 v38_221 = dwLoc0C_17 + 0x00000004
	dwLoc0C_17 = v38_221
	branch Mem12[Mem12[v38_221:word32]:byte] != 0x2D l0001295D
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l0001295A:
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(0) Local -0010(32)

l00012740:
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l0001272F:
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l0001295D:
	word32 v27_57 = dwLoc10_19 - 0x00000001
	branch dwLoc10_19 == 0x00000000 l0001296B
// DataOut: ap fp r0 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l00012966:
	branch 0x00000000 == 0x00000000 l0001297F
// DataOut: ap fp r0 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l0001297F:
	branch Mem12[r2 + 44:word32] == 0x00000000 l00012994
// DataOut: r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32)

l00012984:
	byte CVZN_162
	byte ZN_163
	bool C_164
	bool V_165
	bool Z_166
	bool N_167
	word32 r1_168
	word32 r7_169
	word32 r8_170
	word32 r6_171
	word32 r11_172
	word32 r9_173
	word32 r10_174
	word32 ap_176
	word32 r4_177
	word32 r3_178
	byte CZN_179
	word32 fp_180
	word32 r0_181
	word32 r5_182
	byte VZN_183
	call Mem12[0x000192E4:word32] + 2 (retsize: 4; depth: 24)
		uses: ap,C_159,CVZN_55,CZN_53,dwLoc08_4,dwLoc0C_48,dwLoc10_58,dwLoc14_157,fp,N,r0_52,r1_5,r10,r11_9,r2,r3_56,r4_54,r5_51,r6_8,r7_6,r8_7,r9,sp_156,V_160,VZN_50,Z_86,ZN_158
		defs: ap_176,C_164,CVZN_162,CZN_179,fp_180,N_167,r0_181,r1_168,r10_174,r11_172,r2_175,r3_178,r4_177,r5_182,r6_171,r7_169,r8_170,r9_173,sp_161,V_165,VZN_183,Z_166,ZN_163
	branch r0_181 != 0x00000000 l00012994
// DataOut: r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012991:
	Mem189[r2 + 44:word32] = 0x00000000
// DataOut: r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000014 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012994:
	branch Mem12[r2 + 36:word32] < 0x00000000 l000129A2
// DataOut: r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012999:
	branch Mem12[sp_107:word32] <= 0x00000000 l000129A6
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l0001299D:
	branch Mem12[r2 + 36:word32] != 0x00000000 l000129A6
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l000129A2:
	Mem145[r2 + 36:word32] = 0x00000003
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l000129A6:
	word32 r0_115 = Mem12[r2 + 36:word32]
	branch r0_115 > 0x0000000A l000129C2
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l000129C2:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l000129AA_1:
	word32 sp_120
	byte CVZN_121
	byte ZN_122
	bool C_123
	bool V_124
	bool Z_125
	bool N_126
	word32 r1_127
	word32 r7_128
	word32 r8_129
	word32 r6_130
	word32 r11_131
	word32 r9_132
	word32 r10_133
	word32 r2_134
	word32 ap_135
	word32 r4_136
	word32 r3_137
	byte CZN_138
	word32 fp_139
	word32 r0_140
	word32 r5_141
	byte VZN_142
	call 0x000129AE + r0_115 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_109,C_117,CVZN_105,CZN_93,dwLoc08_4,dwLoc0C_48,dwLoc10_58,dwLoc14_106,fp_108,N_111,r0_115,r1_103,r10_97,r11_99,r2_96,r3_94,r4_95,r5_91,r6_100,r7_102,r8_101,r9_98,sp_107,V_118,VZN_90,Z_114,ZN_116
		defs: ap_135,C_123,CVZN_121,CZN_138,fp_139,N_126,r0_140,r1_127,r10_133,r11_131,r2_134,r3_137,r4_136,r5_141,r6_130,r7_128,r8_129,r9_132,sp_120,V_124,VZN_142,Z_125,ZN_122
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l0001296B:
	Mem65[Mem65[ap + 4:word32]:word32] = v27_57
	Mem67[Mem67[ap + 8:word32]:word32] = dwLoc0C_17
	fn00008CCE(r2, dwLoc10_19, r4_15, ap)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

fn00012702_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000



word32 fn00012A2A(word32 r0, word32 r2, word32 r4, word32 r5, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r4 r5
// LiveOut: ap fp r0 r11 r3 r6 r7 r8 sp
// Trashed: CVZN ap fp r0 r11 r3 r6 r7 r8 sp
// Preserved:
fn00012A2A_entry:
	*r11Out = r11
	*r7Out = r7
	*r3Out = r3
	*r6Out = r6
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012A2A:
	word32 sp_1192 = fp - 0x00000004
	word32 r8_1197 = 0x00000000
	*r8Out = r8_1197
	branch Mem0[r2 + 28:word32] == 0x00000000 l00012AAB
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012A49:
	word32 r0_1110 = (uint32) Mem0[r2 + 0x0000C688:word16]
	branch r0_1110 != 0x00000001 l00012A5C
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r8:0x00000000
// LocalsOut: fp(32)

l00012A5C:
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:0x00000000 r0:<invalid> -8(fp):0x00000000
// LocalsOut: fp(32)

l00012A57:
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:0x00000000 r0:<invalid> -8(fp):0x00000000
// LocalsOut: fp(32)

l00012A5F:
	word32 sp_1131
	byte CVZN_1132
	byte ZN_1133
	bool C_1134
	bool V_1135
	word32 r8_1136
	bool Z_1137
	bool N_1138
	word32 r2_1139
	word32 r0_1140
	byte CZN_1141
	word32 r4_1142
	word32 r6_1143
	word32 r3_1144
	word32 ap_1145
	word32 r7_1146
	word32 r5_1147
	word32 fp_1148
	word32 r11_1149
	call Mem0[0x000192C4:word32] + 2 (retsize: 4; depth: 32)
		uses: ap,C_1129,CVZN,CZN_1111,dwLoc08_1109,dwLoc0C_1116,dwLoc10_1118,dwLoc14_1121,dwLoc18_1124,dwLoc1C_1127,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc30,fp,N,r0_1110,r11,r2,r3,r4,r5,r6_1114,r7,r8_3,sp_1125,V_1130,Z_1112,ZN_1128
		defs: ap_1145,C_1134,CVZN_1132,CZN_1141,fp_1148,N_1138,r0_1140,r11_1149,r2_1139,r3_1144,r4_1142,r5_1147,r6_1143,r7_1146,r8_1136,sp_1131,V_1135,Z_1137,ZN_1133
	branch r0_1140 >= 0x00000027 l00012A88
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:0x00000000 r0:<invalid> r6:<invalid> -8(fp):0x00000000
// LocalsOut: fp(32)

l00012A88:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r8:0x00000000 r0:<invalid> r6:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32)

l00012A81:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r8:0x00000000 r0:<invalid> r6:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32)

l00012A8C:
	word32 sp_1162
	byte CVZN_1163
	byte ZN_1164
	bool C_1165
	bool V_1166
	word32 r8_1167
	bool Z_1168
	bool N_1169
	word32 r2_1170
	word32 r0_1171
	byte CZN_1172
	word32 r4_1173
	word32 r6_1174
	word32 r3_1175
	word32 ap_1176
	word32 r7_1177
	word32 r5_1178
	word32 fp_1179
	word32 r11_1180
	call Mem0[0x000192D0:word32] + 2 (retsize: 4; depth: 40)
		uses: ap_1145,C_1160,CVZN_1132,CZN_1150,dwLoc08_1109,dwLoc0C_1116,dwLoc10_1118,dwLoc14_1121,dwLoc18_1124,dwLoc1C_1127,dwLoc20_1155,dwLoc24_1158,dwLoc28,dwLoc2C,dwLoc30,fp_1148,N_1151,r0_1140,r11_1149,r2_1139,r3_1153,r4_1142,r5_1147,r6_1143,r7_1146,r8_1136,sp_1156,V_1161,Z_1137,ZN_1159
		defs: ap_1176,C_1165,CVZN_1163,CZN_1172,fp_1179,N_1169,r0_1171,r11_1180,r2_1170,r3_1175,r4_1173,r5_1178,r6_1174,r7_1177,r8_1167,sp_1162,V_1166,Z_1168,ZN_1164
	word32 ap_1188 = Mem0[r2_1170 + 0x0000C839:word32]
	byte CVZN_1193
	byte ZN_1194
	bool C_1195
	bool V_1196
	bool Z_1198
	bool N_1199
	word32 r0_1201
	byte CZN_1202
	word32 r6_1204
	word32 r3_1205
	word32 r7_1207
	word32 r5_1208
	word32 r11_1210
	call ap_1188 + 2 (retsize: 4; depth: 52)
		uses: ap_1188,C_1190,CVZN_1163,CZN_1172,dwLoc08_1109,dwLoc0C_1116,dwLoc10_1118,dwLoc14_1121,dwLoc18_1124,dwLoc1C_1127,dwLoc20_1155,dwLoc24_1158,dwLoc28_1182,dwLoc2C_1185,dwLoc30_1187,fp_1179,N_1169,r0_1171,r11_1180,r2_1170,r3_1175,r4_1173,r5_1178,r6_1174,r7_1177,r8_1167,sp_1186,V_1191,Z_1168,ZN_1189
		defs: ap_1206,C_1195,CVZN_1193,CZN_1202,fp_1209,N_1199,r0_1201,r11_1210,r2_1200,r3_1205,r4_1203,r5_1208,r6_1204,r7_1207,r8_1197,sp_1192,V_1196,Z_1198,ZN_1194
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r8:0x00000000 r0:<invalid> r6:<invalid> r3:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012AAB:
	branch Mem0[r2 + 36:word32] > 0x00000009 l00012AB4
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r0:<invalid> r6:<invalid> r3:<invalid> ap:<invalid> -48(fp):r2 -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):r2 + 1515 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012AB4:
	word32 sp_1073
	word32 r2_1081
	word32 r4_1084
	word32 sp_180 = sp_1192 - 0x00000004
	Mem181[sp_180:word32] = 0x00000000
	Mem184[sp_180 - 0x00000004:word32] = r4 + 64
	Mem187[sp_180 - 0x00000008:word32] = r2 + 1515
	word32 r7_188 = Mem187[0x000192D0:word32]
	word32 sp_192
	byte CVZN_193
	byte ZN_194
	bool C_195
	bool V_196
	word32 r8_197
	bool Z_198
	bool N_199
	word32 r2_200
	word32 r0_201
	byte CZN_202
	word32 r4_203
	word32 r6_204
	word32 r3_205
	word32 ap_206
	word32 r7_207
	word32 r5_208
	word32 fp_209
	word32 r11_210
	call r7_188 + 2 (retsize: 4; depth: 4)
		uses: ap_58,C_190,CVZN_52,CZN_59,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_57,N_50,r0_54,r11_43,r2_49,r3_46,r4_48,r5_44,r6_47,r7_188,r8_53,sp_185,V_191,Z_51,ZN_189
		defs: ap_206,C_195,CVZN_193,CZN_202,fp_209,N_199,r0_201,r11_210,r2_200,r3_205,r4_203,r5_208,r6_204,r7_207,r8_197,sp_192,V_196,Z_198,ZN_194
	Mem212[sp_192 - 0x00000004:word32] = r0_201
	Mem215[sp_192 - 0x00000008:word32] = r2_200 + 1515
	Mem217[sp_192 - 0x0000000C:word32] = r2_200
	word32 ap_218 = Mem217[r2_200 + 0x0000C839:word32]
	word32 sp_222
	byte CVZN_223
	byte ZN_224
	bool C_225
	bool V_226
	word32 r8_227
	bool Z_228
	bool N_229
	word32 r2_230
	word32 r0_231
	byte CZN_232
	word32 r4_233
	word32 r6_234
	word32 r3_235
	word32 ap_236
	word32 r7_237
	word32 r5_238
	word32 fp_239
	word32 r11_240
	call ap_218 + 2 (retsize: 4; depth: 4)
		uses: ap_218,C_220,CVZN_193,CZN_202,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_209,N_199,r0_201,r11_210,r2_200,r3_205,r4_203,r5_208,r6_204,r7_207,r8_197,sp_216,V_221,Z_198,ZN_219
		defs: ap_236,C_225,CVZN_223,CZN_232,fp_239,N_229,r0_231,r11_240,r2_230,r3_235,r4_233,r5_238,r6_234,r7_237,r8_227,sp_222,V_226,Z_228,ZN_224
	Mem242[sp_222 - 0x00000004:word32] = 0x00000000
	Mem245[sp_222 - 0x00000008:word32] = r4_233 + 99
	Mem248[sp_222 - 0x0000000C:word32] = r2_230 + 1515
	word32 sp_252
	byte CVZN_253
	byte ZN_254
	bool C_255
	bool V_256
	word32 r8_257
	bool Z_258
	bool N_259
	word32 r2_260
	word32 r0_261
	byte CZN_262
	word32 r4_263
	word32 r6_264
	word32 r3_265
	word32 ap_266
	word32 r7_267
	word32 r5_268
	word32 fp_269
	word32 r11_270
	call r7_237 + 2 (retsize: 4; depth: 4)
		uses: ap_236,C_250,CVZN_223,CZN_232,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_239,N_229,r0_231,r11_240,r2_230,r3_235,r4_233,r5_238,r6_234,r7_237,r8_227,sp_246,V_251,Z_228,ZN_249
		defs: ap_266,C_255,CVZN_253,CZN_262,fp_269,N_259,r0_261,r11_270,r2_260,r3_265,r4_263,r5_268,r6_264,r7_267,r8_257,sp_252,V_256,Z_258,ZN_254
	Mem272[sp_252 - 0x00000004:word32] = r0_261
	Mem275[sp_252 - 0x00000008:word32] = r2_260 + 1515
	Mem277[sp_252 - 0x0000000C:word32] = r2_260
	word32 ap_278 = Mem277[r2_260 + 0x0000C839:word32]
	word32 sp_282
	byte CVZN_283
	byte ZN_284
	bool C_285
	bool V_286
	word32 r8_287
	bool Z_288
	bool N_289
	word32 r2_290
	word32 r0_291
	byte CZN_292
	word32 r4_293
	word32 r6_294
	word32 r3_295
	word32 ap_296
	word32 r7_297
	word32 r5_298
	word32 fp_299
	word32 r11_300
	call ap_278 + 2 (retsize: 4; depth: 4)
		uses: ap_278,C_280,CVZN_253,CZN_262,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_269,N_259,r0_261,r11_270,r2_260,r3_265,r4_263,r5_268,r6_264,r7_267,r8_257,sp_276,V_281,Z_258,ZN_279
		defs: ap_296,C_285,CVZN_283,CZN_292,fp_299,N_289,r0_291,r11_300,r2_290,r3_295,r4_293,r5_298,r6_294,r7_297,r8_287,sp_282,V_286,Z_288,ZN_284
	Mem302[sp_282 - 0x00000004:word32] = 0x00000000
	Mem305[sp_282 - 0x00000008:word32] = Mem302[r2_290 + 128:word32]
	Mem308[sp_282 - 0x0000000C:word32] = Mem305[r2_290 + 128:word32]
	Mem311[sp_282 - 0x00000010:word32] = Mem308[r2_290 + 124:word32]
	Mem314[sp_282 - 0x00000014:word32] = Mem311[r2_290 + 124:word32]
	Mem317[sp_282 - 0x00000018:word32] = r4_293 + 133
	Mem320[sp_282 - 0x0000001C:word32] = r2_290 + 1515
	word32 sp_324
	byte CVZN_325
	byte ZN_326
	bool C_327
	bool V_328
	word32 r8_329
	bool Z_330
	bool N_331
	word32 r2_332
	word32 r0_333
	byte CZN_334
	word32 r4_335
	word32 r6_336
	word32 r3_337
	word32 ap_338
	word32 r7_339
	word32 r5_340
	word32 fp_341
	word32 r11_342
	call r7_297 + 2 (retsize: 4; depth: 4)
		uses: ap_296,C_322,CVZN_283,CZN_292,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_299,N_289,r0_291,r11_300,r2_290,r3_295,r4_293,r5_298,r6_294,r7_297,r8_287,sp_318,V_323,Z_288,ZN_321
		defs: ap_338,C_327,CVZN_325,CZN_334,fp_341,N_331,r0_333,r11_342,r2_332,r3_337,r4_335,r5_340,r6_336,r7_339,r8_329,sp_324,V_328,Z_330,ZN_326
	Mem344[sp_324 - 0x00000004:word32] = r0_333
	Mem347[sp_324 - 0x00000008:word32] = r2_332 + 1515
	Mem349[sp_324 - 0x0000000C:word32] = r2_332
	word32 ap_350 = Mem349[r2_332 + 0x0000C839:word32]
	word32 sp_354
	byte CVZN_355
	byte ZN_356
	bool C_357
	bool V_358
	word32 r8_359
	bool Z_360
	bool N_361
	word32 r2_362
	word32 r0_363
	byte CZN_364
	word32 r4_365
	word32 r6_366
	word32 r3_367
	word32 ap_368
	word32 r7_369
	word32 r5_370
	word32 fp_371
	word32 r11_372
	call ap_350 + 2 (retsize: 4; depth: 4)
		uses: ap_350,C_352,CVZN_325,CZN_334,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_341,N_331,r0_333,r11_342,r2_332,r3_337,r4_335,r5_340,r6_336,r7_339,r8_329,sp_348,V_353,Z_330,ZN_351
		defs: ap_368,C_357,CVZN_355,CZN_364,fp_371,N_361,r0_363,r11_372,r2_362,r3_367,r4_365,r5_370,r6_366,r7_369,r8_359,sp_354,V_358,Z_360,ZN_356
	word32 r6_373 = (uint32) Mem349[r2_362 + 0x0000C682:word16]
	branch r6_373 != 0x00000000 l00012BA4
// DataOut: fp pc r10 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r0:<invalid> r6:<invalid> r3:<invalid> ap:<invalid> -48(fp):r2 -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):r2 + 1515 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012BA4:
	word32 r3_1100
	Mem876[sp_354 - 0x00000004:word32] = 0x00000000
	word32 r0_877 = (uint32) Mem876[r2_362 + 0x0000C686:word16]
	branch r0_877 != 0x00000001 l00012BB8
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012BB8:
	r3_1100 = r5_370 + 16
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012BB2:
	r3_1100 = r5_370 + 20
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012BBC:
	word32 r3_1092
	Mem883[sp_354 - 0x00000008:word32] = r3_1100
	Mem885[sp_354 - 0x0000000C:word32] = r0_877
	Mem889[sp_354 - 0x00000010:word32] = (uint32) Mem885[r2_362 + 0x0000C684:word16] + 0x00000001
	Mem892[sp_354 - 0x00000014:word32] = r6_373 + 0x00000001
	Mem895[sp_354 - 0x00000018:word32] = r4_365 + 583
	Mem898[sp_354 - 0x0000001C:word32] = r2_362 + 1515
	word32 sp_902
	byte CVZN_903
	byte ZN_904
	bool C_905
	bool V_906
	word32 r8_907
	bool Z_908
	bool N_909
	word32 r2_910
	word32 r0_911
	byte CZN_912
	word32 r4_913
	word32 r6_914
	word32 r3_915
	word32 ap_916
	word32 r7_917
	word32 r5_918
	word32 fp_919
	word32 r11_920
	call r7_369 + 2 (retsize: 4; depth: 4)
		uses: ap_887,C_900,CVZN_355,CZN_878,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_371,N_361,r0_877,r11_372,r2_362,r3_881,r4_365,r5_370,r6_890,r7_369,r8_359,sp_896,V_901,Z_879,ZN_899
		defs: ap_916,C_905,CVZN_903,CZN_912,fp_919,N_909,r0_911,r11_920,r2_910,r3_915,r4_913,r5_918,r6_914,r7_917,r8_907,sp_902,V_906,Z_908,ZN_904
	Mem922[sp_902 - 0x00000004:word32] = r0_911
	Mem925[sp_902 - 0x00000008:word32] = r2_910 + 1515
	Mem927[sp_902 - 0x0000000C:word32] = r2_910
	word32 ap_928 = Mem927[r2_910 + 0x0000C839:word32]
	word32 sp_932
	byte CVZN_933
	byte ZN_934
	bool C_935
	bool V_936
	word32 r8_937
	bool Z_938
	bool N_939
	word32 r2_940
	word32 r0_941
	byte CZN_942
	word32 r4_943
	word32 r6_944
	word32 r3_945
	word32 ap_946
	word32 r7_947
	word32 r5_948
	word32 fp_949
	word32 r11_950
	call ap_928 + 2 (retsize: 4; depth: 4)
		uses: ap_928,C_930,CVZN_903,CZN_912,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_919,N_909,r0_911,r11_920,r2_910,r3_915,r4_913,r5_918,r6_914,r7_917,r8_907,sp_926,V_931,Z_908,ZN_929
		defs: ap_946,C_935,CVZN_933,CZN_942,fp_949,N_939,r0_941,r11_950,r2_940,r3_945,r4_943,r5_948,r6_944,r7_947,r8_937,sp_932,V_936,Z_938,ZN_934
	Mem952[sp_932 - 0x00000004:word32] = 0x00000000
	Mem955[sp_932 - 0x00000008:word32] = Mem952[r2_940 + 0x0000C68A:word32]
	Mem958[sp_932 - 0x0000000C:word32] = Mem955[r2_940 + 0x0000C68A:word32]
	word32 r0_959 = (uint32) Mem958[r2_940 + 0x0000C688:word16]
	branch r0_959 != 0x00000001 l00012C0C
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C0C:
	r3_1092 = r5_948 + 23
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):r4 + 583 -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C06:
	r3_1092 = r5_948 + 31
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):r4 + 583 -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C10:
	Mem965[sp_932 - 0x00000010:word32] = r3_1092
	Mem967[sp_932 - 0x00000014:word32] = r0_959
	Mem970[sp_932 - 0x00000018:word32] = r4_943 + 726
	Mem973[sp_932 - 0x0000001C:word32] = r2_940 + 1515
	word32 sp_977
	byte CVZN_978
	byte ZN_979
	bool C_980
	bool V_981
	word32 r8_982
	bool Z_983
	bool N_984
	word32 r2_985
	word32 r0_986
	byte CZN_987
	word32 r4_988
	word32 r6_989
	word32 r3_990
	word32 ap_991
	word32 r7_992
	word32 r5_993
	word32 fp_994
	word32 r11_995
	call r7_947 + 2 (retsize: 4; depth: 4)
		uses: ap_946,C_975,CVZN_933,CZN_960,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_949,N_939,r0_959,r11_950,r2_940,r3_963,r4_943,r5_948,r6_944,r7_947,r8_937,sp_971,V_976,Z_961,ZN_974
		defs: ap_991,C_980,CVZN_978,CZN_987,fp_994,N_984,r0_986,r11_995,r2_985,r3_990,r4_988,r5_993,r6_989,r7_992,r8_982,sp_977,V_981,Z_983,ZN_979
	Mem997[sp_977 - 0x00000004:word32] = r0_986
	Mem1000[sp_977 - 0x00000008:word32] = r2_985 + 1515
	Mem1002[sp_977 - 0x0000000C:word32] = r2_985
	word32 ap_1003 = Mem1002[r2_985 + 0x0000C839:word32]
	word32 sp_1007
	byte CVZN_1008
	byte ZN_1009
	bool C_1010
	bool V_1011
	word32 r8_1012
	bool Z_1013
	bool N_1014
	word32 r2_1015
	word32 r0_1016
	byte CZN_1017
	word32 r4_1018
	word32 r6_1019
	word32 r3_1020
	word32 ap_1021
	word32 r7_1022
	word32 r5_1023
	word32 fp_1024
	word32 r11_1025
	call ap_1003 + 2 (retsize: 4; depth: 4)
		uses: ap_1003,C_1005,CVZN_978,CZN_987,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_994,N_984,r0_986,r11_995,r2_985,r3_990,r4_988,r5_993,r6_989,r7_992,r8_982,sp_1001,V_1006,Z_983,ZN_1004
		defs: ap_1021,C_1010,CVZN_1008,CZN_1017,fp_1024,N_1014,r0_1016,r11_1025,r2_1015,r3_1020,r4_1018,r5_1023,r6_1019,r7_1022,r8_1012,sp_1007,V_1011,Z_1013,ZN_1009
	Mem1027[sp_1007 - 0x00000004:word32] = 0x00000000
	Mem1030[sp_1007 - 0x00000008:word32] = Mem1027[r2_1015 + 0x0000C68E:word32]
	Mem1033[sp_1007 - 0x0000000C:word32] = Mem1030[r2_1015 + 0x0000C68E:word32]
	Mem1036[sp_1007 - 0x00000010:word32] = r4_1018 + 857
	Mem1039[sp_1007 - 0x00000014:word32] = r2_1015 + 1515
	word32 sp_1043
	byte CVZN_1044
	byte ZN_1045
	bool C_1046
	bool V_1047
	word32 r8_1048
	bool Z_1049
	bool N_1050
	word32 r2_1051
	word32 r0_1052
	byte CZN_1053
	word32 r4_1054
	word32 r6_1055
	word32 r3_1056
	word32 ap_1057
	word32 r7_1058
	word32 r5_1059
	word32 fp_1060
	word32 r11_1061
	call r7_1022 + 2 (retsize: 4; depth: 4)
		uses: ap_1021,C_1041,CVZN_1008,CZN_1017,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_1024,N_1014,r0_1016,r11_1025,r2_1015,r3_1020,r4_1018,r5_1023,r6_1019,r7_1022,r8_1012,sp_1037,V_1042,Z_1013,ZN_1040
		defs: ap_1057,C_1046,CVZN_1044,CZN_1053,fp_1060,N_1050,r0_1052,r11_1061,r2_1051,r3_1056,r4_1054,r5_1059,r6_1055,r7_1058,r8_1048,sp_1043,V_1047,Z_1049,ZN_1045
	Mem1063[sp_1043 - 0x00000004:word32] = r0_1052
	Mem1066[sp_1043 - 0x00000008:word32] = r2_1051 + 1515
	Mem1068[sp_1043 - 0x0000000C:word32] = r2_1051
	word32 ap_1069 = Mem1068[r2_1051 + 0x0000C839:word32]
	byte CVZN_1074
	byte ZN_1075
	bool C_1076
	bool V_1077
	word32 r8_1078
	bool Z_1079
	bool N_1080
	word32 r0_1082
	byte CZN_1083
	word32 r6_1085
	word32 r3_1086
	word32 ap_1087
	word32 r7_1088
	word32 r5_1089
	word32 fp_1090
	word32 r11_1091
	call ap_1069 + 2 (retsize: 4; depth: 4)
		uses: ap_1069,C_1071,CVZN_1044,CZN_1053,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_1060,N_1050,r0_1052,r11_1061,r2_1051,r3_1056,r4_1054,r5_1059,r6_1055,r7_1058,r8_1048,sp_1067,V_1072,Z_1049,ZN_1070
		defs: ap_1087,C_1076,CVZN_1074,CZN_1083,fp_1090,N_1080,r0_1082,r11_1091,r2_1081,r3_1086,r4_1084,r5_1089,r6_1085,r7_1088,r8_1078,sp_1073,V_1077,Z_1079,ZN_1075
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):r4 + 583 -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012B2D:
	word32 r3_738
	Mem727[sp_354 - 0x00000004:word32] = 0x00000000
	Mem730[sp_354 - 0x00000008:word32] = Mem727[r2_362 + 0x0000C68A:word32]
	Mem733[sp_354 - 0x0000000C:word32] = Mem730[r2_362 + 0x0000C68A:word32]
	word32 r0_734 = (uint32) Mem733[r2_362 + 0x0000C688:word16]
	branch r0_734 != 0x00000001 l00012B50
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012B50:
	r3_738 = r5_370 + 2
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012B47:
	r3_738 = r5_370 + 10
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012B54:
	Mem740[sp_354 - 0x00000010:word32] = r3_738
	Mem742[sp_354 - 0x00000014:word32] = r0_734
	Mem745[sp_354 - 0x00000018:word32] = r4_365 + 332
	Mem748[sp_354 - 0x0000001C:word32] = r2_362 + 1515
	word32 sp_752
	byte CVZN_753
	byte ZN_754
	bool C_755
	bool V_756
	word32 r8_757
	bool Z_758
	bool N_759
	word32 r2_760
	word32 r0_761
	byte CZN_762
	word32 r4_763
	word32 r6_764
	word32 r3_765
	word32 ap_766
	word32 r7_767
	word32 r5_768
	word32 fp_769
	word32 r11_770
	call r7_369 + 2 (retsize: 4; depth: 4)
		uses: ap_368,C_750,CVZN_355,CZN_735,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_371,N_361,r0_734,r11_372,r2_362,r3_738,r4_365,r5_370,r6_373,r7_369,r8_359,sp_746,V_751,Z_736,ZN_749
		defs: ap_766,C_755,CVZN_753,CZN_762,fp_769,N_759,r0_761,r11_770,r2_760,r3_765,r4_763,r5_768,r6_764,r7_767,r8_757,sp_752,V_756,Z_758,ZN_754
	Mem772[sp_752 - 0x00000004:word32] = r0_761
	Mem775[sp_752 - 0x00000008:word32] = r2_760 + 1515
	Mem777[sp_752 - 0x0000000C:word32] = r2_760
	word32 ap_778 = Mem777[r2_760 + 0x0000C839:word32]
	word32 sp_782
	byte CVZN_783
	byte ZN_784
	bool C_785
	bool V_786
	word32 r8_787
	bool Z_788
	bool N_789
	word32 r2_790
	word32 r0_791
	byte CZN_792
	word32 r4_793
	word32 r6_794
	word32 r3_795
	word32 ap_796
	word32 r7_797
	word32 r5_798
	word32 fp_799
	word32 r11_800
	call ap_778 + 2 (retsize: 4; depth: 4)
		uses: ap_778,C_780,CVZN_753,CZN_762,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_769,N_759,r0_761,r11_770,r2_760,r3_765,r4_763,r5_768,r6_764,r7_767,r8_757,sp_776,V_781,Z_758,ZN_779
		defs: ap_796,C_785,CVZN_783,CZN_792,fp_799,N_789,r0_791,r11_800,r2_790,r3_795,r4_793,r5_798,r6_794,r7_797,r8_787,sp_782,V_786,Z_788,ZN_784
	Mem802[sp_782 - 0x00000004:word32] = 0x00000000
	Mem805[sp_782 - 0x00000008:word32] = Mem802[r2_790 + 0x0000C68E:word32]
	Mem808[sp_782 - 0x0000000C:word32] = Mem805[r2_790 + 0x0000C68E:word32]
	Mem811[sp_782 - 0x00000010:word32] = r4_793 + 537
	Mem814[sp_782 - 0x00000014:word32] = r2_790 + 1515
	word32 sp_818
	byte CVZN_819
	byte ZN_820
	bool C_821
	bool V_822
	word32 r8_823
	bool Z_824
	bool N_825
	word32 r2_826
	word32 r0_827
	byte CZN_828
	word32 r4_829
	word32 r6_830
	word32 r3_831
	word32 ap_832
	word32 r7_833
	word32 r5_834
	word32 fp_835
	word32 r11_836
	call r7_797 + 2 (retsize: 4; depth: 4)
		uses: ap_796,C_816,CVZN_783,CZN_792,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_799,N_789,r0_791,r11_800,r2_790,r3_795,r4_793,r5_798,r6_794,r7_797,r8_787,sp_812,V_817,Z_788,ZN_815
		defs: ap_832,C_821,CVZN_819,CZN_828,fp_835,N_825,r0_827,r11_836,r2_826,r3_831,r4_829,r5_834,r6_830,r7_833,r8_823,sp_818,V_822,Z_824,ZN_820
	Mem838[sp_818 - 0x00000004:word32] = r0_827
	Mem841[sp_818 - 0x00000008:word32] = r2_826 + 1515
	Mem843[sp_818 - 0x0000000C:word32] = r2_826
	word32 ap_844 = Mem843[r2_826 + 0x0000C839:word32]
	byte CVZN_849
	byte ZN_850
	bool C_851
	bool V_852
	word32 r8_853
	bool Z_854
	bool N_855
	word32 r0_857
	byte CZN_858
	word32 r6_860
	word32 r3_861
	word32 ap_862
	word32 r7_863
	word32 r5_864
	word32 fp_865
	word32 r11_866
	call ap_844 + 2 (retsize: 4; depth: 4)
		uses: ap_844,C_846,CVZN_819,CZN_828,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_835,N_825,r0_827,r11_836,r2_826,r3_831,r4_829,r5_834,r6_830,r7_833,r8_823,sp_842,V_847,Z_824,ZN_845
		defs: ap_862,C_851,CVZN_849,CZN_858,fp_865,N_855,r0_857,r11_866,r2_856,r3_861,r4_859,r5_864,r6_860,r7_863,r8_853,sp_848,V_852,Z_854,ZN_850
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C5C:
	branch Mem349[r2_1081 + 0x0000C692:word16] != 0x0000 l00012C8C
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -204(fp):r2 -200(fp):r2 + 1515 -196(fp):<invalid> -192(fp):r2 + 1515 -188(fp):r4 + 857 -184(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):r2 -168(fp):r2 + 1515 -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C8C:
	word32 sp_457 = sp_1073 - 0x00000004
	Mem458[sp_457:word32] = 0x00000000
	Mem461[sp_457 - 0x00000004:uint32] = (uint32) Mem458[r2_1081 + 0x0000C692:word16]
	Mem464[sp_457 - 0x00000008:word32] = r4_1084 + 958
	Mem467[sp_457 - 0x0000000C:word32] = r2_1081 + 1515
	word32 r3_468 = Mem467[0x000192D0:word32]
	word32 sp_472
	byte CVZN_473
	byte ZN_474
	bool C_475
	bool V_476
	word32 r8_477
	bool Z_478
	bool N_479
	word32 r2_480
	word32 r0_481
	byte CZN_482
	word32 r4_483
	word32 r6_484
	word32 r3_485
	word32 ap_486
	word32 r7_487
	word32 r5_488
	word32 fp_489
	word32 r11_490
	call r3_468 + 2 (retsize: 4; depth: 4)
		uses: ap_392,C_470,CVZN_387,CZN_384,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_391,N_386,r0_389,r11_378,r2_385,r3_468,r4_383,r5_379,r6_382,r7_380,r8_388,sp_465,V_471,Z_394,ZN_469
		defs: ap_486,C_475,CVZN_473,CZN_482,fp_489,N_479,r0_481,r11_490,r2_480,r3_485,r4_483,r5_488,r6_484,r7_487,r8_477,sp_472,V_476,Z_478,ZN_474
	Mem492[sp_472 - 0x00000004:word32] = r0_481
	Mem495[sp_472 - 0x00000008:word32] = r2_480 + 1515
	Mem497[sp_472 - 0x0000000C:word32] = r2_480
	word32 ap_498 = Mem497[r2_480 + 0x0000C839:word32]
	word32 sp_502
	byte CVZN_503
	byte ZN_504
	bool C_505
	bool V_506
	word32 r8_507
	bool Z_508
	bool N_509
	word32 r2_510
	word32 r0_511
	byte CZN_512
	word32 r4_513
	word32 r6_514
	word32 r3_515
	word32 ap_516
	word32 r7_517
	word32 r5_518
	word32 fp_519
	word32 r11_520
	call ap_498 + 2 (retsize: 4; depth: 4)
		uses: ap_498,C_500,CVZN_473,CZN_482,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_489,N_479,r0_481,r11_490,r2_480,r3_485,r4_483,r5_488,r6_484,r7_487,r8_477,sp_496,V_501,Z_478,ZN_499
		defs: ap_516,C_505,CVZN_503,CZN_512,fp_519,N_509,r0_511,r11_520,r2_510,r3_515,r4_513,r5_518,r6_514,r7_517,r8_507,sp_502,V_506,Z_508,ZN_504
	Mem522[sp_502 - 0x00000004:word32] = 0x00000000
	Mem525[sp_502 - 0x00000008:word32] = r4_513 + 1032
	Mem528[sp_502 - 0x0000000C:word32] = r2_510 + 1515
	word32 sp_532
	byte CVZN_533
	byte ZN_534
	bool C_535
	bool V_536
	word32 r8_537
	bool Z_538
	bool N_539
	word32 r2_540
	word32 r0_541
	byte CZN_542
	word32 r4_543
	word32 r6_544
	word32 r3_545
	word32 ap_546
	word32 r7_547
	word32 r5_548
	word32 fp_549
	word32 r11_550
	call r3_515 + 2 (retsize: 4; depth: 4)
		uses: ap_516,C_530,CVZN_503,CZN_512,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_519,N_509,r0_511,r11_520,r2_510,r3_515,r4_513,r5_518,r6_514,r7_517,r8_507,sp_526,V_531,Z_508,ZN_529
		defs: ap_546,C_535,CVZN_533,CZN_542,fp_549,N_539,r0_541,r11_550,r2_540,r3_545,r4_543,r5_548,r6_544,r7_547,r8_537,sp_532,V_536,Z_538,ZN_534
	Mem552[sp_532 - 0x00000004:word32] = r0_541
	Mem555[sp_532 - 0x00000008:word32] = r2_540 + 1515
	Mem557[sp_532 - 0x0000000C:word32] = r2_540
	word32 ap_558 = Mem557[r2_540 + 0x0000C839:word32]
	word32 sp_562
	byte CVZN_563
	byte ZN_564
	bool C_565
	bool V_566
	word32 r8_567
	bool Z_568
	bool N_569
	word32 r2_570
	word32 r0_571
	byte CZN_572
	word32 r4_573
	word32 r6_574
	word32 r3_575
	word32 ap_576
	word32 r7_577
	word32 r5_578
	word32 fp_579
	word32 r11_580
	call ap_558 + 2 (retsize: 4; depth: 4)
		uses: ap_558,C_560,CVZN_533,CZN_542,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_549,N_539,r0_541,r11_550,r2_540,r3_545,r4_543,r5_548,r6_544,r7_547,r8_537,sp_556,V_561,Z_538,ZN_559
		defs: ap_576,C_565,CVZN_563,CZN_572,fp_579,N_569,r0_571,r11_580,r2_570,r3_575,r4_573,r5_578,r6_574,r7_577,r8_567,sp_562,V_566,Z_568,ZN_564
	Mem582[sp_562 - 0x00000004:word32] = 0x00000001
	Mem585[sp_562 - 0x00000008:uint32] = (uint32) Mem582[r2_570 + 0x0000C692:word16]
	word32 r11_589
	word32 ap_590
	word32 fp_591
	word32 sp_592
	word32 r0_593 = fn0000DC76(ap_576, fp_579, out r11_589, out ap_590, out fp_591, out sp_592)
	branch r0_593 == 0x00000000 l00012CEF
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -204(fp):r2 -200(fp):r2 + 1515 -196(fp):<invalid> -192(fp):r2 + 1515 -188(fp):r4 + 857 -184(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):r2 -168(fp):r2 + 1515 -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012CEC:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> -224(fp):<invalid> -220(fp):0x00000001 -216(fp):r2 -212(fp):r2 + 1515 -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012CEF:
	Mem599[sp_592 - 0x00000004:word32] = 0x00000000
	Mem602[sp_592 - 0x00000008:word32] = r4_573 + 1108
	Mem605[sp_592 - 0x0000000C:word32] = r2_570 + 1515
	word32 sp_609
	byte CVZN_610
	byte ZN_611
	bool C_612
	bool V_613
	word32 r8_614
	bool Z_615
	bool N_616
	word32 r2_617
	word32 r0_618
	byte CZN_619
	word32 r4_620
	word32 r6_621
	word32 r3_622
	word32 ap_623
	word32 r7_624
	word32 r5_625
	word32 fp_626
	word32 r11_627
	call r3_575 + 2 (retsize: 4; depth: 4)
		uses: ap_590,C_607,CVZN_563,CZN_572,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_591,N_569,r0_593,r11_589,r2_570,r3_575,r4_573,r5_578,r6_574,r7_577,r8_567,sp_603,V_608,Z_595,ZN_606
		defs: ap_623,C_612,CVZN_610,CZN_619,fp_626,N_616,r0_618,r11_627,r2_617,r3_622,r4_620,r5_625,r6_621,r7_624,r8_614,sp_609,V_613,Z_615,ZN_611
	Mem629[sp_609 - 0x00000004:word32] = r0_618
	Mem632[sp_609 - 0x00000008:word32] = r2_617 + 1515
	Mem634[sp_609 - 0x0000000C:word32] = r2_617
	word32 ap_635 = Mem634[r2_617 + 0x0000C839:word32]
	word32 sp_639
	byte CVZN_640
	byte ZN_641
	bool C_642
	bool V_643
	bool Z_645
	bool N_646
	word32 r2_647
	word32 r0_648
	byte CZN_649
	word32 r4_650
	word32 r6_651
	word32 r3_652
	word32 ap_653
	word32 r7_654
	word32 r5_655
	word32 r11_657
	call ap_635 + 2 (retsize: 4; depth: 4)
		uses: ap_635,C_637,CVZN_610,CZN_619,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_626,N_616,r0_618,r11_627,r2_617,r3_622,r4_620,r5_625,r6_621,r7_624,r8_614,sp_633,V_638,Z_615,ZN_636
		defs: ap_653,C_642,CVZN_640,CZN_649,fp_656,N_646,r0_648,r11_657,r2_647,r3_652,r4_650,r5_655,r6_651,r7_654,r8_644,sp_639,V_643,Z_645,ZN_641
	branch r8_1197 == 0x00000000 l00012D7E
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> -224(fp):<invalid> -220(fp):0x00000001 -216(fp):r2 -212(fp):r2 + 1515 -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012D12:
	Mem663[sp_639 - 0x00000004:word32] = 0x00000000
	Mem666[sp_639 - 0x00000008:word32] = r4_650 + 1184
	Mem669[sp_639 - 0x0000000C:word32] = r2_647 + 1515
	word32 sp_673
	byte CVZN_674
	byte ZN_675
	bool C_676
	bool V_677
	word32 r8_678
	bool Z_679
	bool N_680
	word32 r2_681
	word32 r0_682
	byte CZN_683
	word32 r4_684
	word32 r6_685
	word32 r3_686
	word32 ap_687
	word32 r7_688
	word32 r5_689
	word32 fp_690
	word32 r11_691
	call r3_652 + 2 (retsize: 4; depth: 4)
		uses: ap_653,C_671,CVZN_640,CZN_649,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_656,N_646,r0_648,r11_657,r2_647,r3_652,r4_650,r5_655,r6_651,r7_654,r8_644,sp_667,V_672,Z_659,ZN_670
		defs: ap_687,C_676,CVZN_674,CZN_683,fp_690,N_680,r0_682,r11_691,r2_681,r3_686,r4_684,r5_689,r6_685,r7_688,r8_678,sp_673,V_677,Z_679,ZN_675
	Mem693[sp_673 - 0x00000004:word32] = r0_682
	Mem696[sp_673 - 0x00000008:word32] = r2_681 + 1515
	Mem698[sp_673 - 0x0000000C:word32] = r2_681
	word32 ap_699 = Mem698[r2_681 + 0x0000C839:word32]
	word32 sp_703
	byte CVZN_704
	byte ZN_705
	bool C_706
	bool V_707
	bool Z_709
	bool N_710
	word32 r2_711
	word32 r0_712
	byte CZN_713
	word32 r4_714
	word32 r6_715
	word32 r3_716
	word32 ap_717
	word32 r7_718
	word32 r5_719
	word32 r11_721
	call ap_699 + 2 (retsize: 4; depth: 4)
		uses: ap_699,C_701,CVZN_674,CZN_683,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_690,N_680,r0_682,r11_691,r2_681,r3_686,r4_684,r5_689,r6_685,r7_688,r8_678,sp_697,V_702,Z_679,ZN_700
		defs: ap_717,C_706,CVZN_704,CZN_713,fp_720,N_710,r0_712,r11_721,r2_711,r3_716,r4_714,r5_719,r6_715,r7_718,r8_708,sp_703,V_707,Z_709,ZN_705
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> -224(fp):<invalid> -220(fp):0x00000001 -216(fp):r2 -212(fp):r2 + 1515 -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C64:
	word32 sp_397 = sp_1073 - 0x00000004
	Mem398[sp_397:word32] = 0x00000000
	Mem401[sp_397 - 0x00000004:word32] = r4_1084 + 926
	Mem404[sp_397 - 0x00000008:word32] = r2_1081 + 1515
	word32 sp_408
	byte CVZN_409
	byte ZN_410
	bool C_411
	bool V_412
	word32 r8_413
	bool Z_414
	bool N_415
	word32 r2_416
	word32 r0_417
	byte CZN_418
	word32 r4_419
	word32 r6_420
	word32 r3_421
	word32 ap_422
	word32 r7_423
	word32 r5_424
	word32 fp_425
	word32 r11_426
	call Mem404[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_392,C_406,CVZN_387,CZN_384,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_391,N_386,r0_389,r11_378,r2_385,r3_381,r4_383,r5_379,r6_382,r7_380,r8_388,sp_402,V_407,Z_394,ZN_405
		defs: ap_422,C_411,CVZN_409,CZN_418,fp_425,N_415,r0_417,r11_426,r2_416,r3_421,r4_419,r5_424,r6_420,r7_423,r8_413,sp_408,V_412,Z_414,ZN_410
	Mem428[sp_408 - 0x00000004:word32] = r0_417
	Mem431[sp_408 - 0x00000008:word32] = r2_416 + 1515
	Mem433[sp_408 - 0x0000000C:word32] = r2_416
	word32 ap_434 = Mem433[r2_416 + 0x0000C839:word32]
	word32 sp_438
	byte CVZN_439
	byte ZN_440
	bool C_441
	bool V_442
	bool Z_444
	bool N_445
	word32 r2_446
	word32 r0_447
	byte CZN_448
	word32 r4_449
	word32 r6_450
	word32 r3_451
	word32 ap_452
	word32 r7_453
	word32 r5_454
	word32 r11_456
	call ap_434 + 2 (retsize: 4; depth: 4)
		uses: ap_434,C_436,CVZN_409,CZN_418,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_425,N_415,r0_417,r11_426,r2_416,r3_421,r4_419,r5_424,r6_420,r7_423,r8_413,sp_432,V_437,Z_414,ZN_435
		defs: ap_452,C_441,CVZN_439,CZN_448,fp_455,N_445,r0_447,r11_456,r2_446,r3_451,r4_449,r5_454,r6_450,r7_453,r8_443,sp_438,V_442,Z_444,ZN_440
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -204(fp):r2 -200(fp):r2 + 1515 -196(fp):<invalid> -192(fp):r2 + 1515 -188(fp):r4 + 857 -184(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):r2 -168(fp):r2 + 1515 -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012AB1:
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r0:<invalid> r6:<invalid> r3:<invalid> ap:<invalid> -48(fp):r2 -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):r2 + 1515 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012D34:
	branch Mem0[r2 + 92:word32] == 0x00000000 l00012D7E
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r0:<invalid> r6:<invalid> r3:<invalid> ap:<invalid> -48(fp):r2 -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):r2 + 1515 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012D39:
	branch Mem0[r2 + 0x0000C692:word16] == 0x0000 l00012D7E
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r0:<invalid> r6:<invalid> r3:<invalid> ap:<invalid> -48(fp):r2 -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):r2 + 1515 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012D41:
	word32 sp_98 = sp_1192 - 0x00000004
	Mem99[sp_98:word32] = 0x00000001
	Mem102[sp_98 - 0x00000004:uint32] = (uint32) Mem99[r2 + 0x0000C692:word16]
	word32 r11_106
	word32 ap_107
	word32 sp_109
	word32 r0_110 = fn0000DC76(ap, fp, out r11_106, out ap_107, out fp, out sp_109)
	branch r0_110 == 0x00000000 l00012D7E
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r0:<invalid> r6:<invalid> r3:<invalid> ap:<invalid> -48(fp):r2 -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):r2 + 1515 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012D55:
	Mem117[sp_109 - 0x00000004:uint32] = 0x00000401
	Mem120[sp_109 - 0x00000008:word32] = r4 + 1222
	Mem123[sp_109 - 0x0000000C:word32] = r2 + 1515
	word32 sp_127
	byte CVZN_128
	byte ZN_129
	bool C_130
	bool V_131
	word32 r8_132
	bool Z_133
	bool N_134
	word32 r2_135
	word32 r0_136
	byte CZN_137
	word32 r4_138
	word32 r6_139
	word32 r3_140
	word32 ap_141
	word32 r7_142
	word32 r5_143
	word32 fp_144
	word32 r11_145
	call Mem123[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_107,C_125,CVZN_52,CZN_59,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_108,N_50,r0_110,r11_106,r2_49,r3_46,r4_48,r5_44,r6_47,r7_45,r8_53,sp_121,V_126,Z_112,ZN_124
		defs: ap_141,C_130,CVZN_128,CZN_137,fp_144,N_134,r0_136,r11_145,r2_135,r3_140,r4_138,r5_143,r6_139,r7_142,r8_132,sp_127,V_131,Z_133,ZN_129
	Mem147[sp_127 - 0x00000004:word32] = r0_136
	Mem150[sp_127 - 0x00000008:word32] = r2_135 + 1515
	Mem152[sp_127 - 0x0000000C:word32] = r2_135
	word32 ap_153 = Mem152[r2_135 + 0x0000C839:word32]
	word32 sp_157
	byte CVZN_158
	byte ZN_159
	bool C_160
	bool V_161
	word32 r8_162
	bool Z_163
	bool N_164
	word32 r2_165
	word32 r0_166
	byte CZN_167
	word32 r4_168
	word32 r6_169
	word32 r3_170
	word32 ap_171
	word32 r7_172
	word32 r5_173
	word32 r11_175
	call ap_153 + 2 (retsize: 4; depth: 4)
		uses: ap_153,C_155,CVZN_128,CZN_137,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_144,N_134,r0_136,r11_145,r2_135,r3_140,r4_138,r5_143,r6_139,r7_142,r8_132,sp_151,V_156,Z_133,ZN_154
		defs: ap_171,C_160,CVZN_158,CZN_167,fp_174,N_164,r0_166,r11_175,r2_165,r3_170,r4_168,r5_173,r6_169,r7_172,r8_162,sp_157,V_161,Z_163,ZN_159
	*r8Out = 0x00000001
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r3:<invalid> -48(fp):r2 -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):r2 + 1515 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00012D7E:
	word32 sp_79 = fp - 0x00000004
	*spOut = sp_79
	word32 fp_80
	*fpOut = Mem0[sp_79 + 0x00000010:word32]
	word32 ap_81
	*apOut = Mem0[sp_79 + 0x0000000C:word32]
	return r8_1197
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r6:<invalid> r3:<invalid> -224(fp):<invalid> -220(fp):0x00000001 -216(fp):r2 -212(fp):r2 + 1515 -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn00012A2A_exit:
// DataOut: ap fp r0 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r7:<invalid> r6:<invalid> r3:<invalid> -224(fp):<invalid> -220(fp):0x00000001 -216(fp):r2 -212(fp):r2 + 1515 -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



void fn00012D86(word32 r0, word32 r3, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r3
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r2 r3 r4 r5 r6 r7 r9 sp
// Preserved:
fn00012D86_entry:
// DataOut: ap fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012D86:
	word32 sp_124 = fp - 0x00000014
	word32 r6_118 = 0x00000000
	branch Mem0[r3 + 100:word32] <= 0x00000000 l00012DCB
// DataOut: ap fp r0 r10 r3 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012DA8:
	byte CVZN_927
	byte ZN_928
	bool C_929
	bool V_930
	word32 r5_931
	bool Z_932
	bool N_933
	word32 r10_934
	word32 r6_935
	word32 r7_936
	byte VZN_938
	word32 r2_940
	byte CZN_941
	word32 r9_944
	word32 r8_946
	call Mem0[0x000192B4:word32] + 2 (retsize: 4; depth: 28)
		uses: ap,C_925,CVZN,CZN,dwLoc18_923,fp,N,qwLoc10_10,r0,r10_4,r2,r3,r4,r5_3,r6_6,r7,r8,r9,sp_921,V_15,VZN_924,wLoc12_8,Z,ZN_13
		defs: ap_945,C_929,CVZN_927,CZN_941,fp_943,N_933,r0_939,r10_934,r2_940,r3_937,r4_942,r5_931,r6_935,r7_936,r8_946,r9_944,sp_926,V_930,VZN_938,Z_932,ZN_928
	r6_118 = r0
	branch r0 == 0x00000000 l00012DCB
// DataOut: ap fp r0 r10 r3 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000014 r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DB9:
	word32 r2_953 = 0x00000000
	branch Mem0[r3 + 100:word32] <= 0x00000000 l00012DCB
// DataOut: ap fp r0 r10 r2 r3 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DC0:
	Mem959[r0:word32] = 0x00000000
	r2_953 = r2_953 + 0x00000001
	branch r2_953 < Mem959[r3 + 100:word32] l00012DC0
// DataOut: ap fp r0 r10 r2 r3 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DCB:
	branch Mem0[r3 + 104:word32] <= 0x00000000 l00012DF3
// DataOut: ap fp r0 r10 r3 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DD0:
	word32 sp_878 = sp_124 - 0x00000004
	Mem880[sp_878:word32] = Mem0[r3 + 104:word32] << 2
	byte CVZN_884
	byte ZN_885
	bool C_886
	bool V_887
	word32 r5_888
	bool Z_889
	bool N_890
	word32 r10_891
	word32 r7_893
	byte VZN_895
	word32 r2_897
	byte CZN_898
	word32 r9_901
	word32 r8_903
	call Mem880[0x000192B4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_49,C_882,CVZN_45,CZN_40,dwLoc18_30,fp_48,N_43,qwLoc10_10,r0_46,r10_41,r2_42,r3_36,r4_34,r5_44,r6_38,r7_37,r8_32,r9_33,sp_878,V_52,VZN_881,wLoc12_8,Z_39,ZN_50
		defs: ap_902,C_886,CVZN_884,CZN_898,fp_900,N_890,r0_896,r10_891,r2_897,r3_894,r4_899,r5_888,r6_892,r7_893,r8_903,r9_901,sp_883,V_887,VZN_895,Z_889,ZN_885
	branch r0 == 0x00000000 l00012DF3
// DataOut: ap fp r0 r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DE1:
	word32 r2_910 = 0x00000000
	branch Mem880[r3 + 104:word32] <= 0x00000000 l00012DF3
// DataOut: ap fp r0 r10 r2 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r7:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DE8:
	Mem916[r0:word32] = 0x00000000
	r2_910 = r2_910 + 0x00000001
	branch r2_910 < Mem916[r3 + 104:word32] l00012DE8
// DataOut: ap fp r0 r10 r2 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r7:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DF3:
	word32 r4_115
	Mem72[r3 + 40:word32] = 0x00000000
	Mem74[r3 + 1511:word32] = r3 + 167
	word32 r2_75 = Mem74[r3 + 1511:word32]
	Mem77[r2_75 + 20:byte] = Mem74[r2_75 + 20:byte] & ~0x08
	branch Mem77[r3 + 0x0000C67E:word32] != 0x00000004 l00012E14
// DataOut: ap fp r0 r10 r3 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r7:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E14:
	r4_115 = DPB(r4, 0x00, 0)
// DataOut: ap fp r0 r10 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r7:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E0F:
	r4_115 = DPB(r4, 0x04, 0)
// DataOut: ap fp r0 r10 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r7:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E16:
	Mem86[fp + -8:int32] = (int32) (int8) r4_115
	branch 0x00000000 < (uint32) Mem86[r3 + 0x0000C688:word16] l00012E2B
// DataOut: ap fp r0 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r7:r0 r2:<invalid> r4:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E2B:
// DataOut: ap fp r0 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r7:r0 r2:<invalid> r4:<invalid> r9:0x00000000 -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E3C:
	word32 sp_409 = sp_124 - 0x00000004
	Mem410[sp_409:word32] = 0x00000004
	Mem413[sp_409 - 0x00000004:word32] = r3 + 152
	word32 r2_417
	word32 r3_418
	word32 r5_419
	word32 r7_420
	word32 ap_421
	word32 fp_422
	word32 sp_423
	word32 r0_424 = fn0000D5BE(r0, r4_115, r6_118, ap, fp, out r2_417, out r3_418, out r5_419, out r7_420, out ap_421, out fp_422, out sp_423)
	branch r0_424 != 0x00000000 l00012E51
// DataOut: ap fp r0 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E51:
	Mem437[sp_423 - 0x00000004:word32] = 0x00000004
	Mem440[sp_423 - 0x00000008:word32] = r3_418 + 0x0000C634
	Mem443[sp_423 - 0x0000000C:word32] = r3_418 + 152
	word32 sp_447
	byte CVZN_448
	byte ZN_449
	bool C_450
	bool V_451
	word32 r5_452
	bool Z_453
	bool N_454
	word32 r10_455
	word32 r6_456
	word32 r7_457
	word32 r3_458
	byte VZN_459
	word32 r0_460
	word32 r2_461
	byte CZN_462
	word32 r4_463
	word32 fp_464
	word32 r9_465
	word32 ap_466
	word32 r8_467
	call Mem443[0x000192D8:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_421,C_445,CVZN_404,CZN_401,dwLoc18_30,fp_422,N_403,qwLoc10_10,r0_424,r10_402,r2_417,r3_418,r4_397,r5_419,r6_400,r7_420,r8_395,r9_396,sp_441,V_446,VZN_398,wLoc12_8,Z_426,ZN_444
		defs: ap_466,C_450,CVZN_448,CZN_462,fp_464,N_454,r0_460,r10_455,r2_461,r3_458,r4_463,r5_452,r6_456,r7_457,r8_467,r9_465,sp_447,V_451,VZN_459,Z_453,ZN_449
	branch r0_460 == 0x00000000 l00012E96
// DataOut: ap fp r0 r10 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E96:
	word32 r3_480
	word32 r5_481
	word32 r7_482
	word32 ap_483
	word32 fp_484
	word32 sp_485
	word32 r0_486 = fn00011C0A(r0_460, r4_463, r6_456, ap_466, fp_464, out r3_480, out r5_481, out r7_482, out ap_483, out fp_484, out sp_485)
	branch r0_486 == 0x00000000 l00012EA2
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EA2:
	Mem495[sp_485 - 0x00000004:word32] = 0x00000002
	Mem498[sp_485 - 0x00000008:uint32] = (uint32) Mem495[r3_480 + 0x0000C670:word16]
	byte CVZN_503
	byte ZN_504
	bool C_505
	bool V_506
	bool Z_508
	bool N_509
	word32 r10_510
	word32 r7_512
	byte VZN_514
	word32 r2_516
	byte CZN_517
	word32 r8_522
	word32 r9_520
	word32 r5_507
	call r8_467 + 2 (retsize: 4; depth: 4)
		uses: ap_483,C_500,CVZN_448,CZN_462,dwLoc18_30,fp_484,N_454,qwLoc10_10,r0_486,r10_455,r2_461,r3_480,r4_463,r5_481,r6_456,r7_482,r8_467,r9_465,sp_496,V_501,VZN_459,wLoc12_8,Z_488,ZN_499
		defs: ap_521,C_505,CVZN_503,CZN_517,fp_519,N_509,r0_515,r10_510,r2_516,r3_513,r4_518,r5_507,r6_511,r7_512,r8_522,r9_520,sp_502,V_506,VZN_514,Z_508,ZN_504
	branch r0 == 0x00000000 l00012EBB
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EB2:
	branch r0 <= 0x00000001 l00012EBB
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EBB:
	branch Mem498[r3 + 108:word32] != 0x00000000 l00012F3F
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EC0:
	ap = Mem498[r3 + 144:word32] - 0x00000004
	r5_507 = 0x00000000
	word32 r2_714 = ap + 0x00000004
	branch Mem498[ap + 0x00000004:word32] == 0x00000000 l00012EFF
// DataOut: ap fp r0 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012ED0:
	word32 sp_806 = sp_124 - 0x00000004
	Mem808[sp_806:word32] = Mem498[r3 + 16:word32]
	Mem811[sp_806 - 0x00000004:word32] = Mem808[r2_714:word32]
	Mem814[sp_806 - 0x00000008:word32] = r3 + 0x0000C701
	byte CVZN_819
	byte ZN_820
	bool C_821
	bool V_822
	bool Z_824
	bool N_825
	word32 r10_826
	word32 r7_828
	byte VZN_830
	word32 r2_832
	byte CZN_833
	call r4_115 + 2 (retsize: 4; depth: 4)
		uses: ap_712,C_816,CVZN_503,CZN_527,dwLoc18_30,fp_519,N_509,qwLoc10_10,r0_515,r10_528,r2_804,r3_803,r4_518,r5_713,r6_511,r7_512,r8_522,r9_520,sp_812,V_817,VZN_514,wLoc12_8,Z_716,ZN_815
		defs: ap_837,C_821,CVZN_819,CZN_833,fp_835,N_825,r0_831,r10_826,r2_832,r3_829,r4_834,r5_823,r6_827,r7_828,r8_838,r9_836,sp_818,V_822,VZN_830,Z_824,ZN_820
	branch r0 == 0x00000000 l00012EF8
// DataOut: ap fp r0 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EF8:
	r2_714 = r2_832 + 0x00000004
	branch Mem814[r2_832 + 0x00000004:word32] != 0x00000000 l00012ED0
// DataOut: ap fp r0 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EE2:
	r5_507 = 0x00000001
	branch r6_118 == 0x00000000 l00012EFF
// DataOut: ap fp r0 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EE9:
	ap = (r2_832 - Mem814[r3 + 144:word32]) / 0x00000004
	Mem851[r6_118:word32] = 0x00000001
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000001 r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EFF:
	branch r5_507 == 0x00000000 l00012F3F
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F03:
	word32 r2_740 = Mem498[r3 + 148:word32] - 0x00000004
	word32 r2_741 = r2_740 + 0x00000004
	branch Mem498[r2_740 + 0x00000004:word32] == 0x00000000 l00012F3F
// DataOut: ap fp r0 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F10:
	word32 sp_749 = sp_124 - 0x00000004
	Mem751[sp_749:word32] = Mem498[r3 + 16:word32]
	Mem754[sp_749 - 0x00000004:word32] = Mem751[r2_741:word32]
	Mem757[sp_749 - 0x00000008:word32] = r3 + 0x0000C701
	byte CVZN_762
	byte ZN_763
	bool C_764
	bool V_765
	bool Z_767
	bool N_768
	word32 r10_769
	word32 r7_771
	byte VZN_773
	word32 r2_775
	byte CZN_776
	call r4_115 + 2 (retsize: 4; depth: 4)
		uses: ap_735,C_759,CVZN_731,CZN_726,dwLoc18_30,fp_734,N_729,qwLoc10_10,r0_732,r10_727,r2_747,r3_746,r4_721,r5_730,r6_725,r7_724,r8_719,r9_720,sp_755,V_760,VZN_722,wLoc12_8,Z_743,ZN_758
		defs: ap_780,C_764,CVZN_762,CZN_776,fp_778,N_768,r0_774,r10_769,r2_775,r3_772,r4_777,r5_766,r6_770,r7_771,r8_781,r9_779,sp_761,V_765,VZN_773,Z_767,ZN_763
	branch r0 == 0x00000000 l00012F38
// DataOut: ap fp r0 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F38:
	r2_741 = r2_775 + 0x00000004
	branch Mem757[r2_775 + 0x00000004:word32] != 0x00000000 l00012F10
// DataOut: ap fp r0 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F22:
	r5_507 = 0x00000000
	branch r7_771 == 0x00000000 l00012F3F
// DataOut: ap fp r0 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F28:
	ap = (r2_775 - Mem757[r3 + 148:word32]) / 0x00000004
	Mem794[r7_771:word32] = 0x00000001
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F3F:
	branch Mem498[r3 + 108:word32] != 0x00000000 l00012F4B
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F44:
	branch r5_507 != 0x00000000 l00012F4B
// DataOut: ap fp r0 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F4B:
	word32 r0_555 = Mem498[r3 + 36:word32]
	branch r0_555 > 0x0000000A l00012F65
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F65:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F4F_1:
	word32 sp_560
	byte CVZN_561
	byte ZN_562
	bool C_563
	bool V_564
	word32 r5_565
	bool Z_566
	bool N_567
	word32 r10_568
	word32 r6_569
	word32 r7_570
	word32 r3_571
	byte VZN_572
	word32 r0_573
	word32 r2_574
	byte CZN_575
	word32 r4_576
	word32 fp_577
	word32 r9_578
	word32 ap_579
	word32 r8_580
	call 0x00012F53 + (r0_555 - 0x00000001) * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_549,C_557,CVZN_545,CZN_540,dwLoc18_30,fp_548,N_543,qwLoc10_10,r0_555,r10_541,r2_542,r3_537,r4_535,r5_544,r6_539,r7_538,r8_533,r9_534,sp_547,V_558,VZN_536,wLoc12_8,Z_554,ZN_556
		defs: ap_579,C_563,CVZN_561,CZN_575,fp_577,N_567,r0_573,r10_568,r2_574,r3_571,r4_576,r5_565,r6_569,r7_570,r8_580,r9_578,sp_560,V_564,VZN_572,Z_566,ZN_562
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F48:
// DataOut: ap fp r0 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l0001307C:
	branch Mem498[r3 + 0x0000C672:word16] == 0x0000 l0001309D
// DataOut: ap fp r0 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013084:
	word32 sp_672 = sp_124 - 0x00000004
	Mem673[sp_672:word32] = 0x00000000
	Mem676[sp_672 - 0x00000004:uint32] = (uint32) Mem673[r3 + 0x0000C672:word16]
	byte CVZN_681
	byte ZN_682
	bool C_683
	bool V_684
	word32 r5_685
	bool Z_686
	bool N_687
	word32 r10_688
	word32 r7_690
	byte VZN_692
	word32 r2_694
	byte CZN_695
	call r8_522 + 2 (retsize: 4; depth: 4)
		uses: ap_549,C_678,CVZN_545,CZN_540,dwLoc18_30,fp_548,N_543,qwLoc10_10,r0_546,r10_541,r2_542,r3_537,r4_535,r5_544,r6_539,r7_538,r8_533,r9_534,sp_674,V_679,VZN_536,wLoc12_8,Z_586,ZN_677
		defs: ap_699,C_683,CVZN_681,CZN_695,fp_697,N_687,r0_693,r10_688,r2_694,r3_691,r4_696,r5_685,r6_689,r7_690,r8_700,r9_698,sp_680,V_684,VZN_692,Z_686,ZN_682
	branch r0 == 0x00000000 l0001309D
// DataOut: ap fp r0 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013094:
	branch r0 <= 0x00000001 l0001309D
// DataOut: ap fp r0 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l0001309D:
	branch Mem498[r3 + 0x0000C674:word16] == 0x0000 l000130BE
// DataOut: ap fp r0 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130A5:
	word32 sp_632 = sp_124 - 0x00000004
	Mem633[sp_632:word32] = 0x00000000
	Mem636[sp_632 - 0x00000004:uint32] = (uint32) Mem633[r3 + 0x0000C674:word16]
	byte CVZN_641
	byte ZN_642
	bool C_643
	bool V_644
	word32 r5_645
	bool Z_646
	bool N_647
	word32 r10_648
	word32 r7_650
	byte VZN_652
	word32 r2_654
	byte CZN_655
	word32 r8_660
	call r8_522 + 2 (retsize: 4; depth: 4)
		uses: ap_605,C_638,CVZN_601,CZN_596,dwLoc18_30,fp_604,N_599,qwLoc10_10,r0_602,r10_597,r2_598,r3_593,r4_591,r5_600,r6_595,r7_594,r8_589,r9_590,sp_634,V_639,VZN_592,wLoc12_8,Z_607,ZN_637
		defs: ap_659,C_643,CVZN_641,CZN_655,fp_657,N_647,r0_653,r10_648,r2_654,r3_651,r4_656,r5_645,r6_649,r7_650,r8_660,r9_658,sp_640,V_644,VZN_652,Z_646,ZN_642
	branch r0 == 0x00000000 l000130BE
// DataOut: ap fp r0 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130B5:
	branch r0 <= 0x00000001 l000130BE
// DataOut: ap fp r0 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130BE:
	branch r9_520 + 0x00000001 >= (uint32) Mem498[r3 + 0x0000C688:word16] l000130CF
// DataOut: ap fp r0 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130CC:
// DataOut: ap fp r0 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130BD:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l0001309C:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EBA:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EA1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E68:
	Mem474[sp_447 - 0x00000004:uint32] = 0x00000401
	Mem476[sp_447 - 0x00000008:word32] = r9_465
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E4D:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E28:
// DataOut: ap fp r0 r10 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r7:r0 r2:<invalid> r4:<invalid> r9:0x00000000 -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130CF:
	word32 sp_127 = sp_124 - 0x00000004
	Mem128[sp_127:word32] = 0x00000004
	Mem131[sp_127 - 0x00000004:word32] = r3 + 152
	word32 r2_135
	word32 r3_136
	word32 r5_137
	word32 r7_138
	word32 ap_139
	word32 fp_140
	word32 sp_141
	word32 r0_142 = fn0000D5BE(r0, r4_115, r6_118, ap, fp, out r2_135, out r3_136, out r5_137, out r7_138, out ap_139, out fp_140, out sp_141)
	branch r0_142 != 0x00000000 l000130E4
// DataOut: ap fp r0 r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130E4:
	Mem155[sp_141 - 0x00000004:word32] = 0x00000004
	Mem158[sp_141 - 0x00000008:word32] = r3_136 + 0x0000C639
	Mem161[sp_141 - 0x0000000C:word32] = r3_136 + 152
	byte CVZN_166
	byte ZN_167
	bool C_168
	bool V_169
	word32 r5_170
	bool Z_171
	bool N_172
	word32 r6_174
	byte VZN_177
	word32 r0_178
	word32 r2_179
	byte CZN_180
	word32 r4_181
	word32 fp_182
	word32 r9_183
	word32 ap_184
	word32 r8_185
	word32 r3_176
	word32 r7_175
	word32 r10_173
	word32 sp_165
	call Mem161[0x000192D8:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_139,C_163,CVZN_122,CZN_119,dwLoc18_30,fp_140,N_121,qwLoc10_10,r0_142,r10_120,r2_135,r3_136,r4_115,r5_137,r6_118,r7_138,r8_113,r9_114,sp_159,V_164,VZN_116,wLoc12_8,Z_144,ZN_162
		defs: ap_184,C_168,CVZN_166,CZN_180,fp_182,N_172,r0_178,r10_173,r2_179,r3_176,r4_181,r5_170,r6_174,r7_175,r8_185,r9_183,sp_165,V_169,VZN_177,Z_171,ZN_167
	branch r0_178 == 0x00000000 l00013126
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013126:
	branch Mem161[r3_176 + 68:word32] == 0x00000000 l000131A4
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131A4:
	branch r6_174 == 0x00000000 l000131F6
// DataOut: fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131A8:
	word32 ap_341 = 0x00000000
	branch Mem161[r3_176 + 100:word32] <= 0x00000000 l000131ED
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131AF:
	ap_373 = ap_341
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:0x00000000 r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131B0:
	word32 ap_373
	branch Mem161[r6_174 + ap_373 * 4:word32] != 0x00000000 l000131E5
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131E5:
	ap_373 = ap_373 + 0x00000001
	branch ap_373 < Mem161[r3_176 + 100:word32] l000131B0
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131ED:
	Mem346[sp_165 - 0x00000004:word32] = r6_174
	byte CVZN_351
	byte ZN_352
	bool C_353
	bool V_354
	word32 r5_355
	bool Z_356
	bool N_357
	word32 r6_359
	byte VZN_362
	word32 r0_363
	word32 r2_364
	byte CZN_365
	word32 r4_366
	word32 fp_367
	word32 r9_368
	word32 ap_369
	word32 r8_370
	call Mem346[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_341,C_348,CVZN_166,CZN_180,dwLoc18_30,fp_182,N_172,qwLoc10_10,r0_178,r10_173,r2_179,r3_176,r4_181,r5_170,r6_174,r7_175,r8_185,r9_183,sp_345,V_349,VZN_177,wLoc12_8,Z_226,ZN_347
		defs: ap_369,C_353,CVZN_351,CZN_365,fp_367,N_357,r0_363,r10_358,r2_364,r3_361,r4_366,r5_355,r6_359,r7_360,r8_370,r9_368,sp_350,V_354,VZN_362,Z_356,ZN_352
// DataOut: fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131F6:
	branch r7_175 == 0x00000000 l0001324A
// DataOut: fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131FA:
	word32 ap_287 = 0x00000000
	branch Mem161[r3_176 + 104:word32] <= 0x00000000 l00013241
// DataOut: ap fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013201:
	ap_322 = ap_287
// DataOut: ap fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:0x00000000 r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013204:
	word32 ap_322
	branch Mem161[r7_175 + ap_322 * 4:word32] != 0x00000000 l00013239
// DataOut: ap fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013239:
	ap_322 = ap_322 + 0x00000001
	branch ap_322 < Mem161[r3_176 + 104:word32] l00013204
// DataOut: ap fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013241:
	word32 sp_291 = sp_165 - 0x00000004
	Mem292[sp_291:word32] = r7_175
	byte CVZN_297
	byte ZN_298
	bool C_299
	bool V_300
	word32 r5_301
	bool Z_302
	bool N_303
	word32 r6_305
	word32 r7_306
	word32 r3_307
	byte VZN_308
	word32 r0_309
	word32 r2_310
	byte CZN_311
	word32 r4_312
	word32 fp_313
	word32 r9_314
	word32 ap_315
	word32 r8_316
	call Mem292[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_287,C_294,CVZN_241,CZN_236,dwLoc18_30,fp_244,N_239,qwLoc10_10,r0_242,r10_237,r2_238,r3_233,r4_231,r5_240,r6_235,r7_234,r8_229,r9_230,sp_291,V_295,VZN_232,wLoc12_8,Z_247,ZN_293
		defs: ap_315,C_299,CVZN_297,CZN_311,fp_313,N_303,r0_309,r10_304,r2_310,r3_307,r4_312,r5_301,r6_305,r7_306,r8_316,r9_314,sp_296,V_300,VZN_308,Z_302,ZN_298
// DataOut: fp r10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l0001324A:
	branch (uint32) Mem161[sp_165 + 2:word16] != 0x00000000 l00013258
// DataOut: fp r10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013250:
	branch r10_173 > 0x00000001 l00013258
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013255:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013258:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013209:
	word32 sp_327 = sp_165 - 0x00000004
	Mem329[sp_327:uint32] = 0x00000401
	Mem333[sp_327 - 0x00000004:word32] = Mem329[Mem329[r3_176 + 148:word32] + ap_322 * 4:word32]
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131B5:
	Mem380[sp_165 - 0x00000004:uint32] = 0x00000401
	Mem384[sp_165 - 0x00000008:word32] = Mem380[Mem380[r3_176 + 144:word32] + ap_373 * 4:word32]
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l0001312B:
	Mem202[sp_165 - 0x00000004:word32] = Mem161[sp_165 + 0x00000004:word32]
	Mem205[sp_165 - 0x00000008:word32] = Mem202[sp_165:word32]
	word32 sp_209
	branch fn00017662(ap_184, fp_182, out sp_209) >= 0x00000000 l0001314E
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013144:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:<invalid> r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l0001314E:
	Mem219[sp_209 - 0x00000004:word32] = 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:<invalid> r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130FB:
	Mem192[sp_165 - 0x00000004:uint32] = 0x00000401
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130E0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

fn00012D86_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000



void fn0001325E(word32 r5, word32 r6, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r5 r6 r8
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0001325E_entry:
// DataOut: ap fp r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001325E:
	word32 sp_2 = fp + -236
	word32 r2_7 = Mem0[Mem0[ap + 4:word32]:word32]
	branch Mem0[r5 + 0x0000C67E:word32] == r2_7 l000132B7
// DataOut: ap fp r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00013288:
	branch r2_7 == 0x00000000 l000132B7
// DataOut: ap fp r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -236 r2:<invalid> -228(fp):0x00000000
// LocalsOut: fp(32)

l0001328C:
	word32 sp_6545
	byte ZN_6546
	bool C_6547
	bool V_6548
	bool Z_6549
	bool N_6550
	word32 ap_6551
	word32 r2_6552
	word32 r5_6553
	byte CZN_6554
	byte CVZN_6555
	word32 r6_6556
	word32 r0_6557
	word32 r3_6558
	word32 fp_6559
	word32 r4_6560
	word32 r9_6561
	word32 r10_6562
	word32 r8_6563
	word32 r7_6564
	word32 r1_6565
	byte CZ_6566
	byte VZN_6567
	word32 r11_6568
	call Mem0[0x000192D0:word32] + 2 (retsize: 4; depth: 256)
		uses: ap,C_6540,CVZN,CZ,CZN_9,dwLoc0100,dwLoc0104,dwLoc0108,dwLocE4_4,dwLocF0_6529,dwLocF4_6532,dwLocF8_6535,dwLocFC_6538,fp,N,r0,r1,r10,r11,r2_7,r3,r4,r5,r6,r7,r8,r9,sp_6536,V_6541,VZN,Z_6525,ZN_6539
		defs: ap_6551,C_6547,CVZN_6555,CZ_6566,CZN_6554,fp_6559,N_6550,r0_6557,r1_6565,r10_6562,r11_6568,r2_6552,r3_6558,r4_6560,r5_6553,r6_6556,r7_6564,r8_6563,r9_6561,sp_6545,V_6548,VZN_6567,Z_6549,ZN_6546
	word32 r2_6576 = Mem0[r5_6553 + 0x0000C839:word32]
	byte ZN_6581
	bool C_6582
	bool V_6583
	bool Z_6584
	bool N_6585
	word32 r2_6587
	byte CZN_6589
	byte CVZN_6590
	word32 r6_6591
	word32 r0_6592
	word32 r3_6593
	word32 r4_6595
	word32 r9_6596
	word32 r10_6597
	word32 r7_6599
	word32 r1_6600
	byte CZ_6601
	byte VZN_6602
	word32 r11_6603
	call r2_6576 + 2 (retsize: 4; depth: 268)
		uses: ap_6551,C_6578,CVZN_6555,CZ_6566,CZN_6554,dwLoc0100_6570,dwLoc0104_6573,dwLoc0108_6575,dwLocE4_4,dwLocF0_6529,dwLocF4_6532,dwLocF8_6535,dwLocFC_6538,fp_6559,N_6550,r0_6557,r1_6565,r10_6562,r11_6568,r2_6576,r3_6558,r4_6560,r5_6553,r6_6556,r7_6564,r8_6563,r9_6561,sp_6574,V_6579,VZN_6567,Z_6549,ZN_6577
		defs: ap_6586,C_6582,CVZN_6590,CZ_6601,CZN_6589,fp_6594,N_6585,r0_6592,r1_6600,r10_6597,r11_6603,r2_6587,r3_6593,r4_6595,r5_6588,r6_6591,r7_6599,r8_6598,r9_6596,sp_6580,V_6583,VZN_6602,Z_6584,ZN_6581
// DataOut: ap fp r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -236 r2:<invalid> -228(fp):0x00000000

l000132B7:
	word32 r2_59 = (uint32) Mem0[r5 + 0x0000C674:word16]
	word32 r3_60 = Mem0[r5 + 0x0000C67E:word32] + 0x0000001E + (uint32) Mem0[r5 + 0x0000C670:word16] + (uint32) Mem0[r5 + 0x0000C672:word16] + r2_59
	Mem62[Mem62[ap + 4:word32]:word32] = r3_60 + Mem0[r5 + 0x0000C668:word32]
	word32 sp_63 = sp_2 - 0x00000004
	Mem64[sp_63:word32] = 0x00000003
	Mem67[sp_63 - 0x00000004:uint32] = (uint32) Mem64[r5 + 0x0000C672:word16]
	word32 r11_71
	word32 ap_72
	word32 sp_6480
	word32 fp_100
	word32 r0_75 = fn0000DC76(ap, fp, out r11_71, out ap_72, out fp_100, out sp_6480)
	Mem77[sp_6480 + 4:word32] = r0_75
	branch r0_75 == 0x00000000 l0001331C
// DataOut: ap fp r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):r6 + 1743 -244(fp):<invalid> -240(fp):0x00000000 -228(fp):0x00000000

l000132FC:
	branch Mem77[r5 + 0x0000C627:word32] == 0x00000000 l00013317
// DataOut: ap fp r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):r6 + 1743 -244(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l00013304:
	Mem6490[sp_6480 - 0x00000004:word32] = Mem77[r5 + 0x0000C627:word32]
	byte ZN_6495
	bool C_6496
	bool V_6497
	bool Z_6498
	bool N_6499
	word32 ap_6500
	word32 r2_6501
	byte CZN_6503
	byte CVZN_6504
	word32 r6_6505
	word32 r0_6506
	word32 r4_6509
	word32 r9_6510
	word32 r10_6511
	word32 r7_6513
	word32 r1_6514
	byte CZ_6515
	byte VZN_6516
	word32 r11_6517
	call Mem6490[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_72,C_6492,CVZN_47,CZ_39,CZN_48,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_73,N_50,r0_75,r1_40,r10_43,r11_71,r2_59,r3_60,r4_45,r5_49,r6_46,r7_41,r8_42,r9_44,sp_6488,V_6493,VZN_38,Z_6459,ZN_6491
		defs: ap_6500,C_6496,CVZN_6504,CZ_6515,CZN_6503,fp_6508,N_6499,r0_6506,r1_6514,r10_6511,r11_6517,r2_6501,r3_6507,r4_6509,r5_6502,r6_6505,r7_6513,r8_6512,r9_6510,sp_6494,V_6497,VZN_6516,Z_6498,ZN_6495
	Mem6519[r5 + 0x0000C627:word32] = 0x00000000
// DataOut: ap fp r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):r6 + 1743 -244(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l00013317:
	Mem6484[sp_6480 + 8:word32] = Mem77[sp_6480 + 4:word32]
// DataOut: ap fp r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l0001331C:
	Mem104[sp_6480 + 2:word16] = Mem77[Mem77[r5 + 1511:word32] + 12:word16]
	Mem106[fp_100 + -6:uint16] = (uint16) Mem104[r5 + 0x0000C658:byte]
	branch (uint32) Mem106[r5 + 0x0000C65B:byte] >=u 0x00000012 l00013344
// DataOut: ap fp r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l00013344:
// DataOut: ap fp r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l0001333A:
// DataOut: ap fp r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l00013347:
	word32 r3_121
	branch (uint32) Mem106[r5 + 0x0000C65E:word16] >=u 0x0000000B l00013368
// DataOut: ap fp r10 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l00013368:
	r3_121 = DPB(r3_60, 0x000B, 0)
// DataOut: ap fp r10 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l0001335D:
	r3_121 = DPB(r3_60, Mem106[r5 + 0x0000C65E:word16], 0)
// DataOut: ap fp r10 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l0001336B:
	word32 r4_245
	Mem123[sp_6480 + 16:word16] = (word16) r3_121
	word32 sp_124 = sp_6480 - 0x00000004
	Mem125[sp_124:word32] = 0x00000000
	Mem127[sp_124 - 0x00000004:word32] = 0x00000002
	Mem130[sp_124 - 0x00000008:word32] = r8 + 42
	Mem132[sp_124 - 0x0000000C:word32] = r5
	word32 r2_133 = Mem132[r5 + 0x0000C839:word32]
	word32 sp_137
	byte ZN_138
	bool C_139
	bool V_140
	bool Z_141
	bool N_142
	word32 ap_143
	word32 r2_144
	word32 r5_145
	byte CZN_146
	byte CVZN_147
	word32 r6_148
	word32 r0_149
	word32 r3_150
	word32 fp_151
	word32 r4_152
	word32 r9_153
	word32 r10_154
	word32 r8_155
	word32 r7_156
	word32 r1_157
	byte CZ_158
	byte VZN_159
	word32 r11_160
	call r2_133 + 2 (retsize: 4; depth: 4)
		uses: ap_101,C_135,CVZN_93,CZ_84,CZN_118,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_100,N_95,r0_97,r1_85,r10_116,r11_82,r2_133,r3_121,r4_111,r5_94,r6_92,r7_86,r8_87,r9_114,sp_131,V_136,VZN_83,Z_96,ZN_134
		defs: ap_143,C_139,CVZN_147,CZ_158,CZN_146,fp_151,N_142,r0_149,r1_157,r10_154,r11_160,r2_144,r3_150,r4_152,r5_145,r6_148,r7_156,r8_155,r9_153,sp_137,V_140,VZN_159,Z_141,ZN_138
	word32 ap_161
	word32 fp_162
	word32 sp_163
	word32 r0_164 = fn00017772(r2_144, ap_143, fp_151, out ap_161, out fp_162, out sp_163)
	Mem166[sp_163 - 0x00000004:word32] = 0x00000000
	Mem169[sp_163 - 0x00000008:word32] = Mem166[r5_145 + 0x0000C67E:word32]
	Mem172[sp_163 - 0x0000000C:word32] = Mem169[r5_145 + 0x0000C67E:word32]
	Mem175[sp_163 - 0x00000010:word32] = r6_148 + 1810
	Mem178[sp_163 - 0x00000014:word32] = r5_145 + 1515
	word32 sp_182
	byte ZN_183
	bool C_184
	bool V_185
	bool Z_186
	bool N_187
	word32 ap_188
	word32 r2_189
	word32 r5_190
	byte CZN_191
	byte CVZN_192
	word32 r6_193
	word32 r0_194
	word32 r3_195
	word32 fp_196
	word32 r4_197
	word32 r9_198
	word32 r10_199
	word32 r8_200
	word32 r7_201
	word32 r1_202
	byte CZ_203
	byte VZN_204
	word32 r11_205
	call Mem178[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_161,C_180,CVZN_147,CZ_158,CZN_146,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_162,N_142,r0_164,r1_157,r10_154,r11_160,r2_144,r3_150,r4_152,r5_145,r6_148,r7_156,r8_155,r9_153,sp_176,V_181,VZN_159,Z_141,ZN_179
		defs: ap_188,C_184,CVZN_192,CZ_203,CZN_191,fp_196,N_187,r0_194,r1_202,r10_199,r11_205,r2_189,r3_195,r4_197,r5_190,r6_193,r7_201,r8_200,r9_198,sp_182,V_185,VZN_204,Z_186,ZN_183
	Mem207[sp_182 - 0x00000004:word32] = r0_194
	Mem210[sp_182 - 0x00000008:word32] = r5_190 + 1515
	Mem212[sp_182 - 0x0000000C:word32] = r5_190
	word32 r2_213 = Mem212[r5_190 + 0x0000C839:word32]
	byte ZN_218
	bool C_219
	bool V_220
	bool Z_221
	bool N_222
	word32 ap_223
	word32 r2_224
	byte CZN_226
	byte CVZN_227
	word32 r0_229
	word32 r3_230
	word32 fp_231
	word32 r4_232
	word32 r9_233
	word32 r10_234
	word32 r8_235
	word32 r7_236
	word32 r1_237
	byte CZ_238
	byte VZN_239
	word32 r11_240
	word32 r6_228
	word32 r5_225
	word32 sp_217
	call r2_213 + 2 (retsize: 4; depth: 4)
		uses: ap_188,C_215,CVZN_192,CZ_203,CZN_191,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_196,N_187,r0_194,r1_202,r10_199,r11_205,r2_213,r3_195,r4_197,r5_190,r6_193,r7_201,r8_200,r9_198,sp_211,V_216,VZN_204,Z_186,ZN_214
		defs: ap_223,C_219,CVZN_227,CZ_238,CZN_226,fp_231,N_222,r0_229,r1_237,r10_234,r11_240,r2_224,r3_230,r4_232,r5_225,r6_228,r7_236,r8_235,r9_233,sp_217,V_220,VZN_239,Z_221,ZN_218
	word32 r3_241 = (uint32) Mem212[sp_217 + 2:word16]
	branch r3_241 <u 0x00000012 l000133DC
// DataOut: ap fp r0 r10 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l000133DC:
	r4_245 = Mem212[r6_228 + 5188 + r3_241 * 4:word32]
// DataOut: ap fp r0 r10 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000133C1:
	Mem6396[sp_217 - 0x00000004:uint32] = (uint32) Mem212[r5_225 + 0x0000C659:byte]
	Mem6399[sp_217 - 0x00000008:word32] = r6_228 + 1797
	Mem6402[sp_217 - 0x0000000C:word32] = fp_231 + -58
	byte ZN_6407
	bool C_6408
	bool V_6409
	bool Z_6410
	bool N_6411
	word32 ap_6412
	word32 r2_6413
	byte CZN_6415
	byte CVZN_6416
	word32 r0_6418
	word32 r3_6419
	word32 fp_6420
	word32 r4_6421
	word32 r9_6422
	word32 r10_6423
	word32 r8_6424
	word32 r7_6425
	word32 r1_6426
	byte CZ_6427
	byte VZN_6428
	word32 r11_6429
	call Mem6402[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_223,C_6404,CVZN_227,CZ_238,CZN_242,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_231,N_222,r0_229,r1_237,r10_234,r11_240,r2_224,r3_241,r4_232,r5_225,r6_228,r7_236,r8_235,r9_233,sp_6400,V_6405,VZN_239,Z_221,ZN_6403
		defs: ap_6412,C_6408,CVZN_6416,CZ_6427,CZN_6415,fp_6420,N_6411,r0_6418,r1_6426,r10_6423,r11_6429,r2_6413,r3_6419,r4_6421,r5_6414,r6_6417,r7_6425,r8_6424,r9_6422,sp_6406,V_6409,VZN_6428,Z_6410,ZN_6407
	r4_245 = fp_6420 + -58
// DataOut: ap fp r0 r10 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000133E2:
	word32 sp_249 = sp_217 - 0x00000004
	Mem250[sp_249:word32] = 0x00000000
	Mem252[sp_249 - 0x00000004:word32] = r4_245
	Mem255[sp_249 - 0x00000008:word32] = r6_228 + 1883
	Mem258[sp_249 - 0x0000000C:word32] = r5_225 + 1515
	word32 r7_259 = Mem258[0x000192D0:word32]
	word32 sp_263
	byte ZN_264
	bool C_265
	bool V_266
	bool Z_267
	bool N_268
	word32 ap_269
	word32 r2_270
	word32 r5_271
	byte CZN_272
	byte CVZN_273
	word32 r6_274
	word32 r0_275
	word32 r3_276
	word32 fp_277
	word32 r4_278
	word32 r9_279
	word32 r10_280
	word32 r8_281
	word32 r7_282
	word32 r1_283
	byte CZ_284
	byte VZN_285
	word32 r11_286
	call r7_259 + 2 (retsize: 4; depth: 4)
		uses: ap_223,C_261,CVZN_227,CZ_238,CZN_242,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_231,N_222,r0_229,r1_237,r10_234,r11_240,r2_224,r3_241,r4_245,r5_247,r6_246,r7_259,r8_235,r9_233,sp_256,V_262,VZN_239,Z_221,ZN_260
		defs: ap_269,C_265,CVZN_273,CZ_284,CZN_272,fp_277,N_268,r0_275,r1_283,r10_280,r11_286,r2_270,r3_276,r4_278,r5_271,r6_274,r7_282,r8_281,r9_279,sp_263,V_266,VZN_285,Z_267,ZN_264
	Mem288[sp_263 - 0x00000004:word32] = r0_275
	Mem291[sp_263 - 0x00000008:word32] = r5_271 + 1515
	Mem293[sp_263 - 0x0000000C:word32] = r5_271
	word32 r2_294 = Mem293[r5_271 + 0x0000C839:word32]
	word32 sp_298
	byte ZN_299
	bool C_300
	bool V_301
	bool Z_302
	bool N_303
	word32 ap_304
	word32 r2_305
	word32 r5_306
	byte CZN_307
	byte CVZN_308
	word32 r6_309
	word32 r0_310
	word32 r3_311
	word32 fp_312
	word32 r4_313
	word32 r9_314
	word32 r10_315
	word32 r8_316
	word32 r7_317
	word32 r1_318
	byte CZ_319
	byte VZN_320
	word32 r11_321
	call r2_294 + 2 (retsize: 4; depth: 4)
		uses: ap_269,C_296,CVZN_273,CZ_284,CZN_272,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_277,N_268,r0_275,r1_283,r10_280,r11_286,r2_294,r3_276,r4_278,r5_271,r6_274,r7_282,r8_281,r9_279,sp_292,V_297,VZN_285,Z_267,ZN_295
		defs: ap_304,C_300,CVZN_308,CZ_319,CZN_307,fp_312,N_303,r0_310,r1_318,r10_315,r11_321,r2_305,r3_311,r4_313,r5_306,r6_309,r7_317,r8_316,r9_314,sp_298,V_301,VZN_320,Z_302,ZN_299
	Mem323[sp_298 - 0x00000004:word32] = 0x00000000
	word32 r1_324 = 0x00000000
	word32 r0_325 = (uint32) Mem323[fp_312 + -6:word16]
	branch 0x0000000A == 0x00000000 l00013430
// DataOut: ap fp r0 r1 r10 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013417:
	branch 0x00000009 == 0x00000000 l00013435
// DataOut: ap fp r0 r1 r10 r5 r6 r8 r9 sp
// DataOut (flags): ZN
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001341C:
	branch true l00013430
// DataOut: ap fp r0 r1 r10 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013430:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001341E:
	branch 0x0000000A == r0_325 l00013435
// DataOut: ap fp r0 r1 r10 r5 r6 r8 r9 sp
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013423:
	branch 0x0000000A >u r0_325 l00013428
// DataOut: ap fp r0 r1 r10 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013425:
	r1_324 = 0xFFFFFFF6
// DataOut: ap fp r0 r1 r10 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013428:
	r1_324 = r1_324 + r0_325
// DataOut: ap fp r1 r10 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013435:
	Mem357[sp_298 - 0x00000008:uint32] = (uint32) (word16) r1_324
	word32 r2_358 = (uint32) Mem357[fp_312 + -6:word16]
	word32 r1_359 = 0x00000000
	branch true l00013450
// DataOut: ap fp r0 r1 r10 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013450:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013446:
	branch 0x0000000A >u r2_358 l00013455
// DataOut: ap fp r0 r1 r10 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001344B:
	r1_359 = 0x00000001
// DataOut: ap fp r0 r1 r10 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013455:
	word32 r4_444
	Mem371[sp_298 - 0x0000000C:word32] = r1_359
	Mem374[sp_298 - 0x00000010:word32] = r6_309 + 1939
	Mem377[sp_298 - 0x00000014:word32] = r5_306 + 1515
	word32 sp_381
	byte ZN_382
	bool C_383
	bool V_384
	bool Z_385
	bool N_386
	word32 ap_387
	word32 r2_388
	word32 r5_389
	byte CZN_390
	byte CVZN_391
	word32 r6_392
	word32 r0_393
	word32 r3_394
	word32 fp_395
	word32 r4_396
	word32 r9_397
	word32 r10_398
	word32 r8_399
	word32 r7_400
	word32 r1_401
	byte CZ_402
	byte VZN_403
	word32 r11_404
	call r7_317 + 2 (retsize: 4; depth: 4)
		uses: ap_304,C_379,CVZN_352,CZ_367,CZN_366,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_312,N_363,r0_360,r1_369,r10_315,r11_321,r2_361,r3_311,r4_313,r5_306,r6_309,r7_317,r8_316,r9_314,sp_375,V_380,VZN_349,Z_354,ZN_378
		defs: ap_387,C_383,CVZN_391,CZ_402,CZN_390,fp_395,N_386,r0_393,r1_401,r10_398,r11_404,r2_388,r3_394,r4_396,r5_389,r6_392,r7_400,r8_399,r9_397,sp_381,V_384,VZN_403,Z_385,ZN_382
	Mem406[sp_381 - 0x00000004:word32] = r0_393
	Mem409[sp_381 - 0x00000008:word32] = r5_389 + 1515
	Mem411[sp_381 - 0x0000000C:word32] = r5_389
	word32 r2_412 = Mem411[r5_389 + 0x0000C839:word32]
	byte ZN_417
	bool C_418
	bool V_419
	bool Z_420
	bool N_421
	word32 ap_422
	word32 r2_423
	byte CZN_425
	byte CVZN_426
	word32 r0_428
	word32 r3_429
	word32 fp_430
	word32 r4_431
	word32 r9_432
	word32 r10_433
	word32 r8_434
	word32 r7_435
	word32 r1_436
	byte CZ_437
	byte VZN_438
	word32 r11_439
	word32 r6_427
	word32 r5_424
	word32 sp_416
	call r2_412 + 2 (retsize: 4; depth: 4)
		uses: ap_387,C_414,CVZN_391,CZ_402,CZN_390,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_395,N_386,r0_393,r1_401,r10_398,r11_404,r2_412,r3_394,r4_396,r5_389,r6_392,r7_400,r8_399,r9_397,sp_410,V_415,VZN_403,Z_385,ZN_413
		defs: ap_422,C_418,CVZN_426,CZ_437,CZN_425,fp_430,N_421,r0_428,r1_436,r10_433,r11_439,r2_423,r3_429,r4_431,r5_424,r6_427,r7_435,r8_434,r9_432,sp_416,V_419,VZN_438,Z_420,ZN_417
	word32 r3_440 = (uint32) (word16) r9_432
	branch r3_440 <u 0x00000012 l00013494
// DataOut: ap fp r0 r10 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013494:
	r4_444 = Mem411[r6_427 + 5188 + r3_440 * 4:word32]
// DataOut: ap fp r0 r10 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001347C:
	Mem6336[sp_416 - 0x00000004:uint32] = (uint32) Mem411[r5_424 + 0x0000C65B:byte]
	Mem6339[sp_416 - 0x00000008:word32] = r6_427 + 1797
	Mem6342[sp_416 - 0x0000000C:word32] = fp_430 + -58
	byte ZN_6347
	bool C_6348
	bool V_6349
	bool Z_6350
	bool N_6351
	word32 ap_6352
	word32 r2_6353
	byte CZN_6355
	byte CVZN_6356
	word32 r0_6358
	word32 r3_6359
	word32 fp_6360
	word32 r4_6361
	word32 r9_6362
	word32 r10_6363
	word32 r8_6364
	word32 r7_6365
	word32 r1_6366
	byte CZ_6367
	byte VZN_6368
	word32 r11_6369
	call r7_435 + 2 (retsize: 4; depth: 4)
		uses: ap_422,C_6344,CVZN_426,CZ_437,CZN_441,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_430,N_421,r0_428,r1_436,r10_433,r11_439,r2_423,r3_440,r4_431,r5_424,r6_427,r7_435,r8_434,r9_432,sp_6340,V_6345,VZN_438,Z_420,ZN_6343
		defs: ap_6352,C_6348,CVZN_6356,CZ_6367,CZN_6355,fp_6360,N_6351,r0_6358,r1_6366,r10_6363,r11_6369,r2_6353,r3_6359,r4_6361,r5_6354,r6_6357,r7_6365,r8_6364,r9_6362,sp_6346,V_6349,VZN_6368,Z_6350,ZN_6347
	r4_444 = fp_6360 + -58
// DataOut: ap fp r0 r10 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001349A:
	word32 sp_448 = sp_416 - 0x00000004
	Mem449[sp_448:word32] = 0x00000000
	Mem451[sp_448 - 0x00000004:word32] = r4_444
	Mem454[sp_448 - 0x00000008:word32] = r6_427 + 1998
	Mem457[sp_448 - 0x0000000C:word32] = r5_424 + 1515
	word32 r7_458 = Mem457[0x000192D0:word32]
	word32 sp_462
	byte ZN_463
	bool C_464
	bool V_465
	bool Z_466
	bool N_467
	word32 ap_468
	word32 r2_469
	word32 r5_470
	byte CZN_471
	byte CVZN_472
	word32 r6_473
	word32 r0_474
	word32 r3_475
	word32 fp_476
	word32 r4_477
	word32 r9_478
	word32 r10_479
	word32 r8_480
	word32 r7_481
	word32 r1_482
	byte CZ_483
	byte VZN_484
	word32 r11_485
	call r7_458 + 2 (retsize: 4; depth: 4)
		uses: ap_422,C_460,CVZN_426,CZ_437,CZN_441,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_430,N_421,r0_428,r1_436,r10_433,r11_439,r2_423,r3_440,r4_444,r5_446,r6_445,r7_458,r8_434,r9_432,sp_455,V_461,VZN_438,Z_420,ZN_459
		defs: ap_468,C_464,CVZN_472,CZ_483,CZN_471,fp_476,N_467,r0_474,r1_482,r10_479,r11_485,r2_469,r3_475,r4_477,r5_470,r6_473,r7_481,r8_480,r9_478,sp_462,V_465,VZN_484,Z_466,ZN_463
	Mem487[sp_462 - 0x00000004:word32] = r0_474
	Mem490[sp_462 - 0x00000008:word32] = r5_470 + 1515
	Mem492[sp_462 - 0x0000000C:word32] = r5_470
	word32 r2_493 = Mem492[r5_470 + 0x0000C839:word32]
	word32 sp_497
	byte ZN_498
	bool C_499
	bool V_500
	bool Z_501
	bool N_502
	word32 ap_503
	word32 r2_504
	word32 r5_505
	byte CZN_506
	byte CVZN_507
	word32 r6_508
	word32 r0_509
	word32 r3_510
	word32 fp_511
	word32 r4_512
	word32 r9_513
	word32 r10_514
	word32 r8_515
	word32 r7_516
	word32 r1_517
	byte CZ_518
	byte VZN_519
	word32 r11_520
	call r2_493 + 2 (retsize: 4; depth: 4)
		uses: ap_468,C_495,CVZN_472,CZ_483,CZN_471,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_476,N_467,r0_474,r1_482,r10_479,r11_485,r2_493,r3_475,r4_477,r5_470,r6_473,r7_481,r8_480,r9_478,sp_491,V_496,VZN_484,Z_466,ZN_494
		defs: ap_503,C_499,CVZN_507,CZ_518,CZN_506,fp_511,N_502,r0_509,r1_517,r10_514,r11_520,r2_504,r3_510,r4_512,r5_505,r6_508,r7_516,r8_515,r9_513,sp_497,V_500,VZN_519,Z_501,ZN_498
	Mem522[sp_497 - 0x00000004:word32] = 0x00000000
	word32 r1_523 = 0x00000000
	word32 r0_524 = (uint32) (word16) r10_514
	branch 0x0000000A == 0x00000000 l000134E4
// DataOut: ap fp r0 r1 r10 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134CE:
	branch 0x00000009 == 0x00000000 l000134E9
// DataOut: ap fp r0 r1 r10 r5 r6 r8 sp
// DataOut (flags): ZN
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134D3:
	branch true l000134E4
// DataOut: ap fp r0 r1 r10 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134E4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134D5:
	branch 0x0000000A == r0_524 l000134E9
// DataOut: ap fp r0 r1 r10 r5 r6 r8 sp
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134DA:
	branch 0x0000000A >u r0_524 l000134DF
// DataOut: ap fp r0 r1 r10 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134DC:
	r1_523 = 0xFFFFFFF6
// DataOut: ap fp r0 r1 r10 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134DF:
	r1_523 = r1_523 + r0_524
// DataOut: ap fp r1 r10 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134E9:
	Mem556[sp_497 - 0x00000008:uint32] = (uint32) (word16) r1_523
	word32 r2_557 = (uint32) (word16) r10_514
	word32 r1_558 = 0x00000000
	branch true l00013504
// DataOut: ap fp r0 r1 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013504:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134F9:
	branch 0x0000000A >u r2_557 l00013509
// DataOut: ap fp r0 r1 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134FE:
	r1_558 = 0x00000001
// DataOut: ap fp r0 r1 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013509:
	word32 r4_6310
	Mem570[sp_497 - 0x0000000C:word32] = r1_558
	Mem573[sp_497 - 0x00000010:word32] = r6_508 + 2054
	Mem576[sp_497 - 0x00000014:word32] = r5_505 + 1515
	word32 sp_580
	byte ZN_581
	bool C_582
	bool V_583
	bool Z_584
	bool N_585
	word32 ap_586
	word32 r2_587
	word32 r5_588
	byte CZN_589
	byte CVZN_590
	word32 r6_591
	word32 r0_592
	word32 r3_593
	word32 fp_594
	word32 r4_595
	word32 r9_596
	word32 r10_597
	word32 r8_598
	word32 r7_599
	word32 r1_600
	byte CZ_601
	byte VZN_602
	word32 r11_603
	call r7_516 + 2 (retsize: 4; depth: 4)
		uses: ap_503,C_578,CVZN_551,CZ_566,CZN_565,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_511,N_562,r0_559,r1_568,r10_514,r11_520,r2_560,r3_510,r4_512,r5_505,r6_508,r7_516,r8_515,r9_513,sp_574,V_579,VZN_548,Z_553,ZN_577
		defs: ap_586,C_582,CVZN_590,CZ_601,CZN_589,fp_594,N_585,r0_592,r1_600,r10_597,r11_603,r2_587,r3_593,r4_595,r5_588,r6_591,r7_599,r8_598,r9_596,sp_580,V_583,VZN_602,Z_584,ZN_581
	Mem605[sp_580 - 0x00000004:word32] = r0_592
	Mem608[sp_580 - 0x00000008:word32] = r5_588 + 1515
	Mem610[sp_580 - 0x0000000C:word32] = r5_588
	word32 r2_611 = Mem610[r5_588 + 0x0000C839:word32]
	byte ZN_616
	bool C_617
	bool V_618
	bool Z_619
	bool N_620
	word32 ap_621
	word32 r2_622
	byte CZN_624
	byte CVZN_625
	word32 r0_627
	word32 r3_628
	word32 fp_629
	word32 r4_630
	word32 r9_631
	word32 r10_632
	word32 r8_633
	word32 r7_634
	word32 r1_635
	byte CZ_636
	byte VZN_637
	word32 r11_638
	word32 r6_626
	word32 r5_623
	word32 sp_615
	call r2_611 + 2 (retsize: 4; depth: 4)
		uses: ap_586,C_613,CVZN_590,CZ_601,CZN_589,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_594,N_585,r0_592,r1_600,r10_597,r11_603,r2_611,r3_593,r4_595,r5_588,r6_591,r7_599,r8_598,r9_596,sp_609,V_614,VZN_602,Z_584,ZN_612
		defs: ap_621,C_617,CVZN_625,CZ_636,CZN_624,fp_629,N_620,r0_627,r1_635,r10_632,r11_638,r2_622,r3_628,r4_630,r5_623,r6_626,r7_634,r8_633,r9_631,sp_615,V_618,VZN_637,Z_619,ZN_616
	word32 r3_639 = (uint32) Mem610[sp_615 + 16:word16]
	branch r3_639 <u 0x0000000B l00013548
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013548:
	r4_6310 = Mem610[r6_626 + 5260 + r3_639 * 4:word32]
// DataOut: ap fp r0 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013531:
	Mem6276[sp_615 - 0x00000004:uint32] = (uint32) Mem610[r5_623 + 0x0000C65E:word16]
	Mem6279[sp_615 - 0x00000008:word32] = r6_626 + 1797
	Mem6282[sp_615 - 0x0000000C:word32] = fp_629 + -58
	byte ZN_6287
	bool C_6288
	bool V_6289
	bool Z_6290
	bool N_6291
	word32 ap_6292
	word32 r2_6293
	byte CZN_6295
	byte CVZN_6296
	word32 r0_6298
	word32 r3_6299
	word32 fp_6300
	word32 r4_6301
	word32 r9_6302
	word32 r10_6303
	word32 r8_6304
	word32 r7_6305
	word32 r1_6306
	byte CZ_6307
	byte VZN_6308
	word32 r11_6309
	call r7_634 + 2 (retsize: 4; depth: 4)
		uses: ap_621,C_6284,CVZN_625,CZ_636,CZN_640,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_629,N_620,r0_627,r1_635,r10_632,r11_638,r2_622,r3_639,r4_630,r5_623,r6_626,r7_634,r8_633,r9_631,sp_6280,V_6285,VZN_637,Z_619,ZN_6283
		defs: ap_6292,C_6288,CVZN_6296,CZ_6307,CZN_6295,fp_6300,N_6291,r0_6298,r1_6306,r10_6303,r11_6309,r2_6293,r3_6299,r4_6301,r5_6294,r6_6297,r7_6305,r8_6304,r9_6302,sp_6286,V_6289,VZN_6308,Z_6290,ZN_6287
	r4_6310 = fp_6300 + -58
// DataOut: ap fp r0 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001354E:
	word32 sp_647 = sp_615 - 0x00000004
	Mem648[sp_647:word32] = 0x00000000
	Mem650[sp_647 - 0x00000004:word32] = r4_6310
	Mem653[sp_647 - 0x00000008:word32] = r6_626 + 2113
	Mem656[sp_647 - 0x0000000C:word32] = r5_623 + 1515
	word32 r7_657 = Mem656[0x000192D0:word32]
	word32 sp_661
	byte ZN_662
	bool C_663
	bool V_664
	bool Z_665
	bool N_666
	word32 ap_667
	word32 r2_668
	word32 r5_669
	byte CZN_670
	byte CVZN_671
	word32 r6_672
	word32 r0_673
	word32 r3_674
	word32 fp_675
	word32 r4_676
	word32 r9_677
	word32 r10_678
	word32 r8_679
	word32 r7_680
	word32 r1_681
	byte CZ_682
	byte VZN_683
	word32 r11_684
	call r7_657 + 2 (retsize: 4; depth: 4)
		uses: ap_621,C_659,CVZN_625,CZ_636,CZN_640,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_629,N_620,r0_627,r1_635,r10_632,r11_638,r2_622,r3_639,r4_643,r5_645,r6_644,r7_657,r8_633,r9_631,sp_654,V_660,VZN_637,Z_619,ZN_658
		defs: ap_667,C_663,CVZN_671,CZ_682,CZN_670,fp_675,N_666,r0_673,r1_681,r10_678,r11_684,r2_668,r3_674,r4_676,r5_669,r6_672,r7_680,r8_679,r9_677,sp_661,V_664,VZN_683,Z_665,ZN_662
	Mem686[sp_661 - 0x00000004:word32] = r0_673
	Mem689[sp_661 - 0x00000008:word32] = r5_669 + 1515
	Mem691[sp_661 - 0x0000000C:word32] = r5_669
	word32 r2_692 = Mem691[r5_669 + 0x0000C839:word32]
	byte ZN_697
	bool C_698
	bool V_699
	bool Z_700
	bool N_701
	word32 ap_702
	word32 r2_703
	byte CZN_705
	byte CVZN_706
	word32 r0_708
	word32 r3_709
	word32 fp_710
	word32 r4_711
	word32 r9_712
	word32 r10_713
	word32 r7_715
	word32 r1_716
	byte CZ_717
	byte VZN_718
	word32 r11_719
	word32 r8_6166
	word32 r6_6159
	word32 r5_6156
	word32 sp_6148
	call r2_692 + 2 (retsize: 4; depth: 4)
		uses: ap_667,C_694,CVZN_671,CZ_682,CZN_670,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_675,N_666,r0_673,r1_681,r10_678,r11_684,r2_692,r3_674,r4_676,r5_669,r6_672,r7_680,r8_679,r9_677,sp_690,V_695,VZN_683,Z_665,ZN_693
		defs: ap_702,C_698,CVZN_706,CZ_717,CZN_705,fp_710,N_701,r0_708,r1_716,r10_713,r11_719,r2_703,r3_709,r4_711,r5_704,r6_707,r7_715,r8_714,r9_712,sp_696,V_699,VZN_718,Z_700,ZN_697
	word32 r4_720 = (uint32) Mem691[sp_6148 + 16:word16]
	branch r4_720 != 0x00000006 l000135F4
// DataOut: ap fp r0 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000135F4:
	branch r4_720 != 0x00000008 l00013638
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000135F9:
	Mem6199[fp_710 + -8:int16] = (int16) ((uint32) Mem691[r5_6156 + 0x0000C65C:word16] >> 1 & ~0xFFFFFFFC)
	Mem6201[sp_6148 - 0x00000004:word32] = 0x00000000
	word32 r2_6202 = (uint32) Mem6201[fp_710 + -8:word16]
	Mem6205[sp_6148 - 0x00000008:word32] = Mem6201[r6_6159 + 5304 + r2_6202 * 4:word32]
	Mem6208[sp_6148 - 0x0000000C:word32] = r6_6159 + 2282
	Mem6211[sp_6148 - 0x00000010:word32] = r5_6156 + 1515
	word32 sp_6215
	byte ZN_6216
	bool C_6217
	bool V_6218
	bool Z_6219
	bool N_6220
	word32 ap_6221
	word32 r2_6222
	word32 r5_6223
	byte CZN_6224
	byte CVZN_6225
	word32 r6_6226
	word32 r0_6227
	word32 r3_6228
	word32 fp_6229
	word32 r4_6230
	word32 r9_6231
	word32 r10_6232
	word32 r8_6233
	word32 r7_6234
	word32 r1_6235
	byte CZ_6236
	byte VZN_6237
	word32 r11_6238
	call r7_715 + 2 (retsize: 4; depth: 4)
		uses: ap_702,C_6213,CVZN_706,CZ_717,CZN_6192,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_710,N_701,r0_708,r1_716,r10_713,r11_719,r2_6202,r3_709,r4_720,r5_704,r6_707,r7_715,r8_714,r9_712,sp_6209,V_6214,VZN_718,Z_6193,ZN_6212
		defs: ap_6221,C_6217,CVZN_6225,CZ_6236,CZN_6224,fp_6229,N_6220,r0_6227,r1_6235,r10_6232,r11_6238,r2_6222,r3_6228,r4_6230,r5_6223,r6_6226,r7_6234,r8_6233,r9_6231,sp_6215,V_6218,VZN_6237,Z_6219,ZN_6216
	Mem6240[sp_6215 - 0x00000004:word32] = r0_6227
	Mem6243[sp_6215 - 0x00000008:word32] = r5_6223 + 1515
	Mem6245[sp_6215 - 0x0000000C:word32] = r5_6223
	word32 r2_6246 = Mem6245[r5_6223 + 0x0000C839:word32]
	byte ZN_6251
	bool C_6252
	bool V_6253
	bool Z_6254
	bool N_6255
	word32 ap_6256
	word32 r2_6257
	byte CZN_6259
	byte CVZN_6260
	word32 r0_6262
	word32 r3_6263
	word32 fp_6264
	word32 r4_6265
	word32 r9_6266
	word32 r10_6267
	word32 r7_6269
	word32 r1_6270
	byte CZ_6271
	byte VZN_6272
	word32 r11_6273
	call r2_6246 + 2 (retsize: 4; depth: 4)
		uses: ap_6221,C_6248,CVZN_6225,CZ_6236,CZN_6224,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_6229,N_6220,r0_6227,r1_6235,r10_6232,r11_6238,r2_6246,r3_6228,r4_6230,r5_6223,r6_6226,r7_6234,r8_6233,r9_6231,sp_6244,V_6249,VZN_6237,Z_6219,ZN_6247
		defs: ap_6256,C_6252,CVZN_6260,CZ_6271,CZN_6259,fp_6264,N_6255,r0_6262,r1_6270,r10_6267,r11_6273,r2_6257,r3_6263,r4_6265,r5_6258,r6_6261,r7_6269,r8_6268,r9_6266,sp_6250,V_6253,VZN_6272,Z_6254,ZN_6251
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001357F:
	word32 r3_6022
	Mem6017[sp_6148 - 0x00000004:word32] = 0x00000000
	word32 r2_6018 = (uint32) Mem6017[r5_6156 + 0x0000C65C:word16]
	branch (r2_6018 & 0x00000002) == 0x00000000 l00013594
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013594:
	r3_6022 = DPB(r3_709, 0x34, 0)
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001358C:
	r3_6022 = DPB(r3_709, 0x38, 0)
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013597:
	word32 r3_6100
	Mem6025[sp_6148 - 0x00000008:int32] = (int32) (int8) r3_6022
	Mem6028[sp_6148 - 0x0000000C:word32] = r6_6159 + 2169
	Mem6031[sp_6148 - 0x00000010:word32] = r5_6156 + 1515
	word32 sp_6035
	byte ZN_6036
	bool C_6037
	bool V_6038
	bool Z_6039
	bool N_6040
	word32 ap_6041
	word32 r2_6042
	word32 r5_6043
	byte CZN_6044
	byte CVZN_6045
	word32 r6_6046
	word32 r0_6047
	word32 r3_6048
	word32 fp_6049
	word32 r4_6050
	word32 r9_6051
	word32 r10_6052
	word32 r8_6053
	word32 r7_6054
	word32 r1_6055
	byte CZ_6056
	byte VZN_6057
	word32 r11_6058
	call r7_715 + 2 (retsize: 4; depth: 4)
		uses: ap_702,C_6033,CVZN_706,CZ_717,CZN_721,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_710,N_701,r0_708,r1_716,r10_713,r11_719,r2_6018,r3_6022,r4_720,r5_704,r6_707,r7_715,r8_714,r9_712,sp_6029,V_6034,VZN_718,Z_722,ZN_6032
		defs: ap_6041,C_6037,CVZN_6045,CZ_6056,CZN_6044,fp_6049,N_6040,r0_6047,r1_6055,r10_6052,r11_6058,r2_6042,r3_6048,r4_6050,r5_6043,r6_6046,r7_6054,r8_6053,r9_6051,sp_6035,V_6038,VZN_6057,Z_6039,ZN_6036
	Mem6060[sp_6035 - 0x00000004:word32] = r0_6047
	Mem6063[sp_6035 - 0x00000008:word32] = r5_6043 + 1515
	Mem6065[sp_6035 - 0x0000000C:word32] = r5_6043
	word32 r2_6066 = Mem6065[r5_6043 + 0x0000C839:word32]
	word32 sp_6070
	byte ZN_6071
	bool C_6072
	bool V_6073
	bool Z_6074
	bool N_6075
	word32 ap_6076
	word32 r2_6077
	word32 r5_6078
	byte CZN_6079
	byte CVZN_6080
	word32 r6_6081
	word32 r0_6082
	word32 r3_6083
	word32 fp_6084
	word32 r4_6085
	word32 r9_6086
	word32 r10_6087
	word32 r8_6088
	word32 r7_6089
	word32 r1_6090
	byte CZ_6091
	byte VZN_6092
	word32 r11_6093
	call r2_6066 + 2 (retsize: 4; depth: 4)
		uses: ap_6041,C_6068,CVZN_6045,CZ_6056,CZN_6044,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_6049,N_6040,r0_6047,r1_6055,r10_6052,r11_6058,r2_6066,r3_6048,r4_6050,r5_6043,r6_6046,r7_6054,r8_6053,r9_6051,sp_6064,V_6069,VZN_6057,Z_6039,ZN_6067
		defs: ap_6076,C_6072,CVZN_6080,CZ_6091,CZN_6079,fp_6084,N_6075,r0_6082,r1_6090,r10_6087,r11_6093,r2_6077,r3_6083,r4_6085,r5_6078,r6_6081,r7_6089,r8_6088,r9_6086,sp_6070,V_6073,VZN_6092,Z_6074,ZN_6071
	Mem6095[sp_6070 - 0x00000004:word32] = 0x00000000
	word32 r2_6096 = (uint32) Mem6095[r5_6078 + 0x0000C65C:word16]
	branch (r2_6096 & 0x00000004) == 0x00000000 l000135CC
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000135CC:
	r3_6100 = DPB(r3_6083, 0x32, 0)
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000135C4:
	r3_6100 = DPB(r3_6083, 0x33, 0)
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000135CF:
	Mem6103[sp_6070 - 0x00000008:int32] = (int32) (int8) r3_6100
	Mem6106[sp_6070 - 0x0000000C:word32] = r6_6081 + 2226
	Mem6109[sp_6070 - 0x00000010:word32] = r5_6078 + 1515
	word32 sp_6113
	byte ZN_6114
	bool C_6115
	bool V_6116
	bool Z_6117
	bool N_6118
	word32 ap_6119
	word32 r2_6120
	word32 r5_6121
	byte CZN_6122
	byte CVZN_6123
	word32 r6_6124
	word32 r0_6125
	word32 r3_6126
	word32 fp_6127
	word32 r4_6128
	word32 r9_6129
	word32 r10_6130
	word32 r8_6131
	word32 r7_6132
	word32 r1_6133
	byte CZ_6134
	byte VZN_6135
	word32 r11_6136
	call r7_6089 + 2 (retsize: 4; depth: 4)
		uses: ap_6076,C_6111,CVZN_6080,CZ_6091,CZN_6079,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_6084,N_6075,r0_6082,r1_6090,r10_6087,r11_6093,r2_6096,r3_6100,r4_6085,r5_6078,r6_6081,r7_6089,r8_6088,r9_6086,sp_6107,V_6112,VZN_6092,Z_6074,ZN_6110
		defs: ap_6119,C_6115,CVZN_6123,CZ_6134,CZN_6122,fp_6127,N_6118,r0_6125,r1_6133,r10_6130,r11_6136,r2_6120,r3_6126,r4_6128,r5_6121,r6_6124,r7_6132,r8_6131,r9_6129,sp_6113,V_6116,VZN_6135,Z_6117,ZN_6114
	Mem6138[sp_6113 - 0x00000004:word32] = r0_6125
	Mem6141[sp_6113 - 0x00000008:word32] = r5_6121 + 1515
	Mem6143[sp_6113 - 0x0000000C:word32] = r5_6121
	word32 r2_6144 = Mem6143[r5_6121 + 0x0000C839:word32]
	byte ZN_6149
	bool C_6150
	bool V_6151
	bool Z_6152
	bool N_6153
	word32 ap_6154
	word32 r2_6155
	byte CZN_6157
	byte CVZN_6158
	word32 r0_6160
	word32 r3_6161
	word32 fp_6162
	word32 r4_6163
	word32 r9_6164
	word32 r10_6165
	word32 r7_6167
	word32 r1_6168
	byte CZ_6169
	byte VZN_6170
	word32 r11_6171
	call r2_6144 + 2 (retsize: 4; depth: 4)
		uses: ap_6119,C_6146,CVZN_6123,CZ_6134,CZN_6122,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_6127,N_6118,r0_6125,r1_6133,r10_6130,r11_6136,r2_6144,r3_6126,r4_6128,r5_6121,r6_6124,r7_6132,r8_6131,r9_6129,sp_6142,V_6147,VZN_6135,Z_6117,ZN_6145
		defs: ap_6154,C_6150,CVZN_6158,CZ_6169,CZN_6157,fp_6162,N_6153,r0_6160,r1_6168,r10_6165,r11_6171,r2_6155,r3_6161,r4_6163,r5_6156,r6_6159,r7_6167,r8_6166,r9_6164,sp_6148,V_6151,VZN_6170,Z_6152,ZN_6149
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013638:
	word32 r3_6008
	word32 sp_744 = sp_6148 - 0x00000004
	Mem745[sp_744:word32] = 0x00000000
	word32 r2_746 = (uint32) Mem745[r5_6156 + 0x0000C65C:word16]
	branch (r2_746 & 0x00000001) == 0x00000000 l0001364C
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001364C:
	r3_6008 = r8_6166 + 45
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013644:
	r3_6008 = r6_6159
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013650:
	word32 r3_6000
	Mem752[sp_744 - 0x00000004:word32] = r3_6008
	Mem755[sp_744 - 0x00000008:word32] = r6_6159 + 2338
	Mem758[sp_744 - 0x0000000C:word32] = r5_6156 + 1515
	word32 r4_759 = Mem758[0x000192D0:word32]
	word32 sp_763
	byte ZN_764
	bool C_765
	bool V_766
	bool Z_767
	bool N_768
	word32 ap_769
	word32 r2_770
	word32 r5_771
	byte CZN_772
	byte CVZN_773
	word32 r6_774
	word32 r0_775
	word32 r3_776
	word32 fp_777
	word32 r4_778
	word32 r9_779
	word32 r10_780
	word32 r8_781
	word32 r7_782
	word32 r1_783
	byte CZ_784
	byte VZN_785
	word32 r11_786
	call r4_759 + 2 (retsize: 4; depth: 4)
		uses: ap_743,C_761,CVZN_735,CZ_726,CZN_736,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_742,N_738,r0_740,r1_727,r10_730,r11_724,r2_746,r3_750,r4_759,r5_737,r6_734,r7_728,r8_729,r9_731,sp_756,V_762,VZN_725,Z_739,ZN_760
		defs: ap_769,C_765,CVZN_773,CZ_784,CZN_772,fp_777,N_768,r0_775,r1_783,r10_780,r11_786,r2_770,r3_776,r4_778,r5_771,r6_774,r7_782,r8_781,r9_779,sp_763,V_766,VZN_785,Z_767,ZN_764
	Mem788[sp_763 - 0x00000004:word32] = r0_775
	Mem791[sp_763 - 0x00000008:word32] = r5_771 + 1515
	Mem793[sp_763 - 0x0000000C:word32] = r5_771
	word32 r2_794 = Mem793[r5_771 + 0x0000C839:word32]
	word32 sp_798
	byte ZN_799
	bool C_800
	bool V_801
	bool Z_802
	bool N_803
	word32 ap_804
	word32 r2_805
	word32 r5_806
	byte CZN_807
	byte CVZN_808
	word32 r6_809
	word32 r0_810
	word32 r3_811
	word32 fp_812
	word32 r4_813
	word32 r9_814
	word32 r10_815
	word32 r8_816
	word32 r7_817
	word32 r1_818
	byte CZ_819
	byte VZN_820
	word32 r11_821
	call r2_794 + 2 (retsize: 4; depth: 4)
		uses: ap_769,C_796,CVZN_773,CZ_784,CZN_772,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_777,N_768,r0_775,r1_783,r10_780,r11_786,r2_794,r3_776,r4_778,r5_771,r6_774,r7_782,r8_781,r9_779,sp_792,V_797,VZN_785,Z_767,ZN_795
		defs: ap_804,C_800,CVZN_808,CZ_819,CZN_807,fp_812,N_803,r0_810,r1_818,r10_815,r11_821,r2_805,r3_811,r4_813,r5_806,r6_809,r7_817,r8_816,r9_814,sp_798,V_801,VZN_820,Z_802,ZN_799
	Mem823[sp_798 - 0x00000004:word32] = 0x00000000
	word32 r2_824 = (uint32) Mem823[r5_806 + 0x0000C65C:word16]
	branch (r2_824 & 0x00000008) == 0x00000000 l0001368C
// DataOut: ap fp r0 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001368C:
	r3_6000 = r8_816 + 50
// DataOut: ap fp r0 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013683:
	r3_6000 = r8_816 + 53
// DataOut: ap fp r0 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013690:
	word32 r4_1511
	Mem830[sp_798 - 0x00000008:word32] = r3_6000
	Mem833[sp_798 - 0x0000000C:word32] = r6_809 + 2403
	Mem836[sp_798 - 0x00000010:word32] = r5_806 + 1515
	word32 sp_840
	byte ZN_841
	bool C_842
	bool V_843
	bool Z_844
	bool N_845
	word32 ap_846
	word32 r2_847
	word32 r5_848
	byte CZN_849
	byte CVZN_850
	word32 r6_851
	word32 r0_852
	word32 r3_853
	word32 fp_854
	word32 r4_855
	word32 r9_856
	word32 r10_857
	word32 r8_858
	word32 r7_859
	word32 r1_860
	byte CZ_861
	byte VZN_862
	word32 r11_863
	call r4_813 + 2 (retsize: 4; depth: 4)
		uses: ap_804,C_838,CVZN_808,CZ_819,CZN_807,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_812,N_803,r0_810,r1_818,r10_815,r11_821,r2_824,r3_828,r4_813,r5_806,r6_809,r7_817,r8_816,r9_814,sp_834,V_839,VZN_820,Z_802,ZN_837
		defs: ap_846,C_842,CVZN_850,CZ_861,CZN_849,fp_854,N_845,r0_852,r1_860,r10_857,r11_863,r2_847,r3_853,r4_855,r5_848,r6_851,r7_859,r8_858,r9_856,sp_840,V_843,VZN_862,Z_844,ZN_841
	Mem865[sp_840 - 0x00000004:word32] = r0_852
	Mem868[sp_840 - 0x00000008:word32] = r5_848 + 1515
	Mem870[sp_840 - 0x0000000C:word32] = r5_848
	word32 r2_871 = Mem870[r5_848 + 0x0000C839:word32]
	word32 sp_875
	byte ZN_876
	bool C_877
	bool V_878
	bool Z_879
	bool N_880
	word32 ap_881
	word32 r2_882
	word32 r5_883
	byte CZN_884
	byte CVZN_885
	word32 r6_886
	word32 r0_887
	word32 r3_888
	word32 fp_889
	word32 r4_890
	word32 r9_891
	word32 r10_892
	word32 r8_893
	word32 r7_894
	word32 r1_895
	byte CZ_896
	byte VZN_897
	word32 r11_898
	call r2_871 + 2 (retsize: 4; depth: 4)
		uses: ap_846,C_873,CVZN_850,CZ_861,CZN_849,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_854,N_845,r0_852,r1_860,r10_857,r11_863,r2_871,r3_853,r4_855,r5_848,r6_851,r7_859,r8_858,r9_856,sp_869,V_874,VZN_862,Z_844,ZN_872
		defs: ap_881,C_877,CVZN_885,CZ_896,CZN_884,fp_889,N_880,r0_887,r1_895,r10_892,r11_898,r2_882,r3_888,r4_890,r5_883,r6_886,r7_894,r8_893,r9_891,sp_875,V_878,VZN_897,Z_879,ZN_876
	Mem901[sp_875 - 0x00000004:word32] = fp_889 + -42
	Mem903[sp_875 - 0x00000008:word32] = 0x00000000
	Mem906[sp_875 - 0x0000000C:word32] = r5_883 + 0x0000C660
	Mem909[sp_875 - 0x00000010:word32] = r5_883 + 0x0000C662
	word32 r5_913
	word32 r6_914
	word32 r8_915
	word32 ap_916
	word32 fp_917
	word32 sp_918
	word32 r0_919 = fn00015106(r3_888, r4_890, ap_881, fp_889, out r5_913, out r6_914, out r8_915, out ap_916, out fp_917, out sp_918)
	Mem921[sp_918 - 0x00000004:word32] = 0x00000000
	Mem924[sp_918 - 0x00000008:word32] = fp_917 + -42
	Mem927[sp_918 - 0x0000000C:word32] = r6_914 + 2459
	Mem930[sp_918 - 0x00000010:word32] = r5_913 + 1515
	word32 sp_934
	byte ZN_935
	bool C_936
	bool V_937
	bool Z_938
	bool N_939
	word32 ap_940
	word32 r2_941
	word32 r5_942
	byte CZN_943
	byte CVZN_944
	word32 r6_945
	word32 r0_946
	word32 r3_947
	word32 fp_948
	word32 r4_949
	word32 r9_950
	word32 r10_951
	word32 r8_952
	word32 r7_953
	word32 r1_954
	byte CZ_955
	byte VZN_956
	word32 r11_957
	call r4_890 + 2 (retsize: 4; depth: 4)
		uses: ap_916,C_932,CVZN_885,CZ_896,CZN_884,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_917,N_880,r0_919,r1_895,r10_892,r11_898,r2_882,r3_888,r4_890,r5_913,r6_914,r7_894,r8_915,r9_891,sp_928,V_933,VZN_897,Z_879,ZN_931
		defs: ap_940,C_936,CVZN_944,CZ_955,CZN_943,fp_948,N_939,r0_946,r1_954,r10_951,r11_957,r2_941,r3_947,r4_949,r5_942,r6_945,r7_953,r8_952,r9_950,sp_934,V_937,VZN_956,Z_938,ZN_935
	Mem959[sp_934 - 0x00000004:word32] = r0_946
	Mem962[sp_934 - 0x00000008:word32] = r5_942 + 1515
	Mem964[sp_934 - 0x0000000C:word32] = r5_942
	word32 r2_965 = Mem964[r5_942 + 0x0000C839:word32]
	word32 sp_969
	byte ZN_970
	bool C_971
	bool V_972
	bool Z_973
	bool N_974
	word32 ap_975
	word32 r2_976
	word32 r5_977
	byte CZN_978
	byte CVZN_979
	word32 r6_980
	word32 r0_981
	word32 r3_982
	word32 fp_983
	word32 r4_984
	word32 r9_985
	word32 r10_986
	word32 r8_987
	word32 r7_988
	word32 r1_989
	byte CZ_990
	byte VZN_991
	word32 r11_992
	call r2_965 + 2 (retsize: 4; depth: 4)
		uses: ap_940,C_967,CVZN_944,CZ_955,CZN_943,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_948,N_939,r0_946,r1_954,r10_951,r11_957,r2_965,r3_947,r4_949,r5_942,r6_945,r7_953,r8_952,r9_950,sp_963,V_968,VZN_956,Z_938,ZN_966
		defs: ap_975,C_971,CVZN_979,CZ_990,CZN_978,fp_983,N_974,r0_981,r1_989,r10_986,r11_992,r2_976,r3_982,r4_984,r5_977,r6_980,r7_988,r8_987,r9_985,sp_969,V_972,VZN_991,Z_973,ZN_970
	Mem994[sp_969 - 0x00000004:word32] = 0x00000000
	Mem997[sp_969 - 0x00000008:word32] = Mem994[r5_977 + 0x0000C664:word32]
	Mem1000[sp_969 - 0x0000000C:word32] = r6_980 + 2515
	Mem1003[sp_969 - 0x00000010:word32] = r5_977 + 1515
	word32 sp_1007
	byte ZN_1008
	bool C_1009
	bool V_1010
	bool Z_1011
	bool N_1012
	word32 ap_1013
	word32 r2_1014
	word32 r5_1015
	byte CZN_1016
	byte CVZN_1017
	word32 r6_1018
	word32 r0_1019
	word32 r3_1020
	word32 fp_1021
	word32 r4_1022
	word32 r9_1023
	word32 r10_1024
	word32 r8_1025
	word32 r7_1026
	word32 r1_1027
	byte CZ_1028
	byte VZN_1029
	word32 r11_1030
	call r4_984 + 2 (retsize: 4; depth: 4)
		uses: ap_975,C_1005,CVZN_979,CZ_990,CZN_978,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_983,N_974,r0_981,r1_989,r10_986,r11_992,r2_976,r3_982,r4_984,r5_977,r6_980,r7_988,r8_987,r9_985,sp_1001,V_1006,VZN_991,Z_973,ZN_1004
		defs: ap_1013,C_1009,CVZN_1017,CZ_1028,CZN_1016,fp_1021,N_1012,r0_1019,r1_1027,r10_1024,r11_1030,r2_1014,r3_1020,r4_1022,r5_1015,r6_1018,r7_1026,r8_1025,r9_1023,sp_1007,V_1010,VZN_1029,Z_1011,ZN_1008
	Mem1032[sp_1007 - 0x00000004:word32] = r0_1019
	Mem1035[sp_1007 - 0x00000008:word32] = r5_1015 + 1515
	Mem1037[sp_1007 - 0x0000000C:word32] = r5_1015
	word32 r2_1038 = Mem1037[r5_1015 + 0x0000C839:word32]
	word32 sp_1042
	byte ZN_1043
	bool C_1044
	bool V_1045
	bool Z_1046
	bool N_1047
	word32 ap_1048
	word32 r2_1049
	word32 r5_1050
	byte CZN_1051
	byte CVZN_1052
	word32 r6_1053
	word32 r0_1054
	word32 r3_1055
	word32 fp_1056
	word32 r4_1057
	word32 r9_1058
	word32 r10_1059
	word32 r8_1060
	word32 r7_1061
	word32 r1_1062
	byte CZ_1063
	byte VZN_1064
	word32 r11_1065
	call r2_1038 + 2 (retsize: 4; depth: 4)
		uses: ap_1013,C_1040,CVZN_1017,CZ_1028,CZN_1016,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1021,N_1012,r0_1019,r1_1027,r10_1024,r11_1030,r2_1038,r3_1020,r4_1022,r5_1015,r6_1018,r7_1026,r8_1025,r9_1023,sp_1036,V_1041,VZN_1029,Z_1011,ZN_1039
		defs: ap_1048,C_1044,CVZN_1052,CZ_1063,CZN_1051,fp_1056,N_1047,r0_1054,r1_1062,r10_1059,r11_1065,r2_1049,r3_1055,r4_1057,r5_1050,r6_1053,r7_1061,r8_1060,r9_1058,sp_1042,V_1045,VZN_1064,Z_1046,ZN_1043
	Mem1067[sp_1042 - 0x00000004:word32] = 0x00000000
	Mem1070[sp_1042 - 0x00000008:word32] = Mem1067[r5_1050 + 0x0000C668:word32]
	Mem1073[sp_1042 - 0x0000000C:word32] = r6_1053 + 2574
	Mem1076[sp_1042 - 0x00000010:word32] = r5_1050 + 1515
	word32 sp_1080
	byte ZN_1081
	bool C_1082
	bool V_1083
	bool Z_1084
	bool N_1085
	word32 ap_1086
	word32 r2_1087
	word32 r5_1088
	byte CZN_1089
	byte CVZN_1090
	word32 r6_1091
	word32 r0_1092
	word32 r3_1093
	word32 fp_1094
	word32 r4_1095
	word32 r9_1096
	word32 r10_1097
	word32 r8_1098
	word32 r7_1099
	word32 r1_1100
	byte CZ_1101
	byte VZN_1102
	word32 r11_1103
	call r4_1057 + 2 (retsize: 4; depth: 4)
		uses: ap_1048,C_1078,CVZN_1052,CZ_1063,CZN_1051,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1056,N_1047,r0_1054,r1_1062,r10_1059,r11_1065,r2_1049,r3_1055,r4_1057,r5_1050,r6_1053,r7_1061,r8_1060,r9_1058,sp_1074,V_1079,VZN_1064,Z_1046,ZN_1077
		defs: ap_1086,C_1082,CVZN_1090,CZ_1101,CZN_1089,fp_1094,N_1085,r0_1092,r1_1100,r10_1097,r11_1103,r2_1087,r3_1093,r4_1095,r5_1088,r6_1091,r7_1099,r8_1098,r9_1096,sp_1080,V_1083,VZN_1102,Z_1084,ZN_1081
	Mem1105[sp_1080 - 0x00000004:word32] = r0_1092
	Mem1108[sp_1080 - 0x00000008:word32] = r5_1088 + 1515
	Mem1110[sp_1080 - 0x0000000C:word32] = r5_1088
	word32 r2_1111 = Mem1110[r5_1088 + 0x0000C839:word32]
	word32 sp_1115
	byte ZN_1116
	bool C_1117
	bool V_1118
	bool Z_1119
	bool N_1120
	word32 ap_1121
	word32 r2_1122
	word32 r5_1123
	byte CZN_1124
	byte CVZN_1125
	word32 r6_1126
	word32 r0_1127
	word32 r3_1128
	word32 fp_1129
	word32 r4_1130
	word32 r9_1131
	word32 r10_1132
	word32 r8_1133
	word32 r7_1134
	word32 r1_1135
	byte CZ_1136
	byte VZN_1137
	word32 r11_1138
	call r2_1111 + 2 (retsize: 4; depth: 4)
		uses: ap_1086,C_1113,CVZN_1090,CZ_1101,CZN_1089,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1094,N_1085,r0_1092,r1_1100,r10_1097,r11_1103,r2_1111,r3_1093,r4_1095,r5_1088,r6_1091,r7_1099,r8_1098,r9_1096,sp_1109,V_1114,VZN_1102,Z_1084,ZN_1112
		defs: ap_1121,C_1117,CVZN_1125,CZ_1136,CZN_1124,fp_1129,N_1120,r0_1127,r1_1135,r10_1132,r11_1138,r2_1122,r3_1128,r4_1130,r5_1123,r6_1126,r7_1134,r8_1133,r9_1131,sp_1115,V_1118,VZN_1137,Z_1119,ZN_1116
	Mem1140[sp_1115 - 0x00000004:word32] = 0x00000000
	Mem1143[sp_1115 - 0x00000008:word32] = Mem1140[r5_1123 + 0x0000C66C:word32]
	Mem1146[sp_1115 - 0x0000000C:word32] = r6_1126 + 2637
	Mem1149[sp_1115 - 0x00000010:word32] = r5_1123 + 1515
	word32 sp_1153
	byte ZN_1154
	bool C_1155
	bool V_1156
	bool Z_1157
	bool N_1158
	word32 ap_1159
	word32 r2_1160
	word32 r5_1161
	byte CZN_1162
	byte CVZN_1163
	word32 r6_1164
	word32 r0_1165
	word32 r3_1166
	word32 fp_1167
	word32 r4_1168
	word32 r9_1169
	word32 r10_1170
	word32 r8_1171
	word32 r7_1172
	word32 r1_1173
	byte CZ_1174
	byte VZN_1175
	word32 r11_1176
	call r4_1130 + 2 (retsize: 4; depth: 4)
		uses: ap_1121,C_1151,CVZN_1125,CZ_1136,CZN_1124,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1129,N_1120,r0_1127,r1_1135,r10_1132,r11_1138,r2_1122,r3_1128,r4_1130,r5_1123,r6_1126,r7_1134,r8_1133,r9_1131,sp_1147,V_1152,VZN_1137,Z_1119,ZN_1150
		defs: ap_1159,C_1155,CVZN_1163,CZ_1174,CZN_1162,fp_1167,N_1158,r0_1165,r1_1173,r10_1170,r11_1176,r2_1160,r3_1166,r4_1168,r5_1161,r6_1164,r7_1172,r8_1171,r9_1169,sp_1153,V_1156,VZN_1175,Z_1157,ZN_1154
	Mem1178[sp_1153 - 0x00000004:word32] = r0_1165
	Mem1181[sp_1153 - 0x00000008:word32] = r5_1161 + 1515
	Mem1183[sp_1153 - 0x0000000C:word32] = r5_1161
	word32 r2_1184 = Mem1183[r5_1161 + 0x0000C839:word32]
	word32 sp_1188
	byte ZN_1189
	bool C_1190
	bool V_1191
	bool Z_1192
	bool N_1193
	word32 ap_1194
	word32 r2_1195
	word32 r5_1196
	byte CZN_1197
	byte CVZN_1198
	word32 r6_1199
	word32 r0_1200
	word32 r3_1201
	word32 fp_1202
	word32 r4_1203
	word32 r9_1204
	word32 r10_1205
	word32 r8_1206
	word32 r7_1207
	word32 r1_1208
	byte CZ_1209
	byte VZN_1210
	word32 r11_1211
	call r2_1184 + 2 (retsize: 4; depth: 4)
		uses: ap_1159,C_1186,CVZN_1163,CZ_1174,CZN_1162,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1167,N_1158,r0_1165,r1_1173,r10_1170,r11_1176,r2_1184,r3_1166,r4_1168,r5_1161,r6_1164,r7_1172,r8_1171,r9_1169,sp_1182,V_1187,VZN_1175,Z_1157,ZN_1185
		defs: ap_1194,C_1190,CVZN_1198,CZ_1209,CZN_1197,fp_1202,N_1193,r0_1200,r1_1208,r10_1205,r11_1211,r2_1195,r3_1201,r4_1203,r5_1196,r6_1199,r7_1207,r8_1206,r9_1204,sp_1188,V_1191,VZN_1210,Z_1192,ZN_1189
	Mem1213[sp_1188 - 0x00000004:word32] = 0x00000000
	Mem1216[sp_1188 - 0x00000008:uint32] = (uint32) Mem1213[r5_1196 + 0x0000C670:word16]
	Mem1219[sp_1188 - 0x0000000C:word32] = r6_1199 + 2700
	Mem1222[sp_1188 - 0x00000010:word32] = r5_1196 + 1515
	word32 sp_1226
	byte ZN_1227
	bool C_1228
	bool V_1229
	bool Z_1230
	bool N_1231
	word32 ap_1232
	word32 r2_1233
	word32 r5_1234
	byte CZN_1235
	byte CVZN_1236
	word32 r6_1237
	word32 r0_1238
	word32 r3_1239
	word32 fp_1240
	word32 r4_1241
	word32 r9_1242
	word32 r10_1243
	word32 r8_1244
	word32 r7_1245
	word32 r1_1246
	byte CZ_1247
	byte VZN_1248
	word32 r11_1249
	call r4_1203 + 2 (retsize: 4; depth: 4)
		uses: ap_1194,C_1224,CVZN_1198,CZ_1209,CZN_1197,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1202,N_1193,r0_1200,r1_1208,r10_1205,r11_1211,r2_1195,r3_1201,r4_1203,r5_1196,r6_1199,r7_1207,r8_1206,r9_1204,sp_1220,V_1225,VZN_1210,Z_1192,ZN_1223
		defs: ap_1232,C_1228,CVZN_1236,CZ_1247,CZN_1235,fp_1240,N_1231,r0_1238,r1_1246,r10_1243,r11_1249,r2_1233,r3_1239,r4_1241,r5_1234,r6_1237,r7_1245,r8_1244,r9_1242,sp_1226,V_1229,VZN_1248,Z_1230,ZN_1227
	Mem1251[sp_1226 - 0x00000004:word32] = r0_1238
	Mem1254[sp_1226 - 0x00000008:word32] = r5_1234 + 1515
	Mem1256[sp_1226 - 0x0000000C:word32] = r5_1234
	word32 r2_1257 = Mem1256[r5_1234 + 0x0000C839:word32]
	word32 sp_1261
	byte ZN_1262
	bool C_1263
	bool V_1264
	bool Z_1265
	bool N_1266
	word32 ap_1267
	word32 r2_1268
	word32 r5_1269
	byte CZN_1270
	byte CVZN_1271
	word32 r6_1272
	word32 r0_1273
	word32 r3_1274
	word32 fp_1275
	word32 r4_1276
	word32 r9_1277
	word32 r10_1278
	word32 r8_1279
	word32 r7_1280
	word32 r1_1281
	byte CZ_1282
	byte VZN_1283
	word32 r11_1284
	call r2_1257 + 2 (retsize: 4; depth: 4)
		uses: ap_1232,C_1259,CVZN_1236,CZ_1247,CZN_1235,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1240,N_1231,r0_1238,r1_1246,r10_1243,r11_1249,r2_1257,r3_1239,r4_1241,r5_1234,r6_1237,r7_1245,r8_1244,r9_1242,sp_1255,V_1260,VZN_1248,Z_1230,ZN_1258
		defs: ap_1267,C_1263,CVZN_1271,CZ_1282,CZN_1270,fp_1275,N_1266,r0_1273,r1_1281,r10_1278,r11_1284,r2_1268,r3_1274,r4_1276,r5_1269,r6_1272,r7_1280,r8_1279,r9_1277,sp_1261,V_1264,VZN_1283,Z_1265,ZN_1262
	Mem1286[sp_1261 - 0x00000004:word32] = 0x00000000
	Mem1289[sp_1261 - 0x00000008:uint32] = (uint32) Mem1286[r5_1269 + 0x0000C672:word16]
	Mem1292[sp_1261 - 0x0000000C:word32] = r6_1272 + 2767
	Mem1295[sp_1261 - 0x00000010:word32] = r5_1269 + 1515
	word32 sp_1299
	byte ZN_1300
	bool C_1301
	bool V_1302
	bool Z_1303
	bool N_1304
	word32 ap_1305
	word32 r2_1306
	word32 r5_1307
	byte CZN_1308
	byte CVZN_1309
	word32 r6_1310
	word32 r0_1311
	word32 r3_1312
	word32 fp_1313
	word32 r4_1314
	word32 r9_1315
	word32 r10_1316
	word32 r8_1317
	word32 r7_1318
	word32 r1_1319
	byte CZ_1320
	byte VZN_1321
	word32 r11_1322
	call r4_1276 + 2 (retsize: 4; depth: 4)
		uses: ap_1267,C_1297,CVZN_1271,CZ_1282,CZN_1270,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1275,N_1266,r0_1273,r1_1281,r10_1278,r11_1284,r2_1268,r3_1274,r4_1276,r5_1269,r6_1272,r7_1280,r8_1279,r9_1277,sp_1293,V_1298,VZN_1283,Z_1265,ZN_1296
		defs: ap_1305,C_1301,CVZN_1309,CZ_1320,CZN_1308,fp_1313,N_1304,r0_1311,r1_1319,r10_1316,r11_1322,r2_1306,r3_1312,r4_1314,r5_1307,r6_1310,r7_1318,r8_1317,r9_1315,sp_1299,V_1302,VZN_1321,Z_1303,ZN_1300
	Mem1324[sp_1299 - 0x00000004:word32] = r0_1311
	Mem1327[sp_1299 - 0x00000008:word32] = r5_1307 + 1515
	Mem1329[sp_1299 - 0x0000000C:word32] = r5_1307
	word32 r2_1330 = Mem1329[r5_1307 + 0x0000C839:word32]
	word32 sp_1334
	byte ZN_1335
	bool C_1336
	bool V_1337
	bool Z_1338
	bool N_1339
	word32 ap_1340
	word32 r2_1341
	word32 r5_1342
	byte CZN_1343
	byte CVZN_1344
	word32 r6_1345
	word32 r0_1346
	word32 r3_1347
	word32 fp_1348
	word32 r4_1349
	word32 r9_1350
	word32 r10_1351
	word32 r8_1352
	word32 r7_1353
	word32 r1_1354
	byte CZ_1355
	byte VZN_1356
	word32 r11_1357
	call r2_1330 + 2 (retsize: 4; depth: 4)
		uses: ap_1305,C_1332,CVZN_1309,CZ_1320,CZN_1308,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1313,N_1304,r0_1311,r1_1319,r10_1316,r11_1322,r2_1330,r3_1312,r4_1314,r5_1307,r6_1310,r7_1318,r8_1317,r9_1315,sp_1328,V_1333,VZN_1321,Z_1303,ZN_1331
		defs: ap_1340,C_1336,CVZN_1344,CZ_1355,CZN_1343,fp_1348,N_1339,r0_1346,r1_1354,r10_1351,r11_1357,r2_1341,r3_1347,r4_1349,r5_1342,r6_1345,r7_1353,r8_1352,r9_1350,sp_1334,V_1337,VZN_1356,Z_1338,ZN_1335
	Mem1359[sp_1334 - 0x00000004:word32] = 0x00000000
	Mem1362[sp_1334 - 0x00000008:uint32] = (uint32) Mem1359[r5_1342 + 0x0000C674:word16]
	Mem1365[sp_1334 - 0x0000000C:word32] = r6_1345 + 2829
	Mem1368[sp_1334 - 0x00000010:word32] = r5_1342 + 1515
	word32 sp_1372
	byte ZN_1373
	bool C_1374
	bool V_1375
	bool Z_1376
	bool N_1377
	word32 ap_1378
	word32 r2_1379
	word32 r5_1380
	byte CZN_1381
	byte CVZN_1382
	word32 r6_1383
	word32 r0_1384
	word32 r3_1385
	word32 fp_1386
	word32 r4_1387
	word32 r9_1388
	word32 r10_1389
	word32 r8_1390
	word32 r7_1391
	word32 r1_1392
	byte CZ_1393
	byte VZN_1394
	word32 r11_1395
	call r4_1349 + 2 (retsize: 4; depth: 4)
		uses: ap_1340,C_1370,CVZN_1344,CZ_1355,CZN_1343,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1348,N_1339,r0_1346,r1_1354,r10_1351,r11_1357,r2_1341,r3_1347,r4_1349,r5_1342,r6_1345,r7_1353,r8_1352,r9_1350,sp_1366,V_1371,VZN_1356,Z_1338,ZN_1369
		defs: ap_1378,C_1374,CVZN_1382,CZ_1393,CZN_1381,fp_1386,N_1377,r0_1384,r1_1392,r10_1389,r11_1395,r2_1379,r3_1385,r4_1387,r5_1380,r6_1383,r7_1391,r8_1390,r9_1388,sp_1372,V_1375,VZN_1394,Z_1376,ZN_1373
	Mem1397[sp_1372 - 0x00000004:word32] = r0_1384
	Mem1400[sp_1372 - 0x00000008:word32] = r5_1380 + 1515
	Mem1402[sp_1372 - 0x0000000C:word32] = r5_1380
	word32 r2_1403 = Mem1402[r5_1380 + 0x0000C839:word32]
	word32 sp_1407
	byte ZN_1408
	bool C_1409
	bool V_1410
	bool Z_1411
	bool N_1412
	word32 ap_1413
	word32 r2_1414
	word32 r5_1415
	byte CZN_1416
	byte CVZN_1417
	word32 r6_1418
	word32 r0_1419
	word32 r3_1420
	word32 fp_1421
	word32 r4_1422
	word32 r9_1423
	word32 r10_1424
	word32 r8_1425
	word32 r7_1426
	word32 r1_1427
	byte CZ_1428
	byte VZN_1429
	word32 r11_1430
	call r2_1403 + 2 (retsize: 4; depth: 4)
		uses: ap_1378,C_1405,CVZN_1382,CZ_1393,CZN_1381,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1386,N_1377,r0_1384,r1_1392,r10_1389,r11_1395,r2_1403,r3_1385,r4_1387,r5_1380,r6_1383,r7_1391,r8_1390,r9_1388,sp_1401,V_1406,VZN_1394,Z_1376,ZN_1404
		defs: ap_1413,C_1409,CVZN_1417,CZ_1428,CZN_1416,fp_1421,N_1412,r0_1419,r1_1427,r10_1424,r11_1430,r2_1414,r3_1420,r4_1422,r5_1415,r6_1418,r7_1426,r8_1425,r9_1423,sp_1407,V_1410,VZN_1429,Z_1411,ZN_1408
	Mem1432[sp_1407 - 0x00000004:word32] = 0x00000000
	Mem1436[sp_1407 - 0x00000008:word32] = (uint32) Mem1432[r5_1415 + 0x0000C676:word16] + 0x00000001
	Mem1439[sp_1407 - 0x0000000C:word32] = r6_1418 + 2896
	Mem1442[sp_1407 - 0x00000010:word32] = r5_1415 + 1515
	word32 sp_1446
	byte ZN_1447
	bool C_1448
	bool V_1449
	bool Z_1450
	bool N_1451
	word32 ap_1452
	word32 r2_1453
	word32 r5_1454
	byte CZN_1455
	byte CVZN_1456
	word32 r6_1457
	word32 r0_1458
	word32 r3_1459
	word32 fp_1460
	word32 r4_1461
	word32 r9_1462
	word32 r10_1463
	word32 r8_1464
	word32 r7_1465
	word32 r1_1466
	byte CZ_1467
	byte VZN_1468
	word32 r11_1469
	call r4_1422 + 2 (retsize: 4; depth: 4)
		uses: ap_1413,C_1444,CVZN_1417,CZ_1428,CZN_1416,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1421,N_1412,r0_1419,r1_1427,r10_1424,r11_1430,r2_1434,r3_1420,r4_1422,r5_1415,r6_1418,r7_1426,r8_1425,r9_1423,sp_1440,V_1445,VZN_1429,Z_1411,ZN_1443
		defs: ap_1452,C_1448,CVZN_1456,CZ_1467,CZN_1455,fp_1460,N_1451,r0_1458,r1_1466,r10_1463,r11_1469,r2_1453,r3_1459,r4_1461,r5_1454,r6_1457,r7_1465,r8_1464,r9_1462,sp_1446,V_1449,VZN_1468,Z_1450,ZN_1447
	Mem1471[sp_1446 - 0x00000004:word32] = r0_1458
	Mem1474[sp_1446 - 0x00000008:word32] = r5_1454 + 1515
	Mem1476[sp_1446 - 0x0000000C:word32] = r5_1454
	word32 r2_1477 = Mem1476[r5_1454 + 0x0000C839:word32]
	word32 sp_1481
	byte ZN_1482
	bool C_1483
	bool V_1484
	bool Z_1485
	bool N_1486
	word32 ap_1487
	word32 r2_1488
	word32 r5_1489
	byte CZN_1490
	byte CVZN_1491
	word32 r6_1492
	word32 r0_1493
	word32 r3_1494
	word32 fp_1495
	word32 r4_1496
	word32 r9_1497
	word32 r10_1498
	word32 r8_1499
	word32 r7_1500
	word32 r1_1501
	byte CZ_1502
	byte VZN_1503
	word32 r11_1504
	call r2_1477 + 2 (retsize: 4; depth: 4)
		uses: ap_1452,C_1479,CVZN_1456,CZ_1467,CZN_1455,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1460,N_1451,r0_1458,r1_1466,r10_1463,r11_1469,r2_1477,r3_1459,r4_1461,r5_1454,r6_1457,r7_1465,r8_1464,r9_1462,sp_1475,V_1480,VZN_1468,Z_1450,ZN_1478
		defs: ap_1487,C_1483,CVZN_1491,CZ_1502,CZN_1490,fp_1495,N_1486,r0_1493,r1_1501,r10_1498,r11_1504,r2_1488,r3_1494,r4_1496,r5_1489,r6_1492,r7_1500,r8_1499,r9_1497,sp_1481,V_1484,VZN_1503,Z_1485,ZN_1482
	Mem1506[sp_1481 - 0x00000004:word32] = 0x00000000
	word32 r3_1507 = (uint32) Mem1506[r5_1489 + 0x0000C678:word16]
	branch (r3_1507 & 0x00000001) == 0x00000000 l00013804
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013804:
	word32 r3_5987
	branch (r3_1507 & 0x00000002) == 0x00000000 l00013810
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013810:
	r3_5987 = r8_1499 + 57
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013808:
	r3_5987 = r8_1499 + 64
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013814:
	r4_1511 = r3_5987
// DataOut: ap fp r0 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000137FE:
	r4_1511 = r8_1499 + 71
// DataOut: ap fp r0 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013817:
	word32 fp_1606
	word32 sp_1605
	word32 r5_1601
	word32 r6_1598
	word32 r8_1594
	Mem1513[sp_1481 - 0x00000008:word32] = r4_1511
	Mem1516[sp_1481 - 0x0000000C:word32] = r6_1492 + 2957
	Mem1519[sp_1481 - 0x00000010:word32] = r5_1489 + 1515
	word32 sp_1523
	byte ZN_1524
	bool C_1525
	bool V_1526
	bool Z_1527
	bool N_1528
	word32 ap_1529
	word32 r2_1530
	word32 r5_1531
	byte CZN_1532
	byte CVZN_1533
	word32 r6_1534
	word32 r0_1535
	word32 r3_1536
	word32 fp_1537
	word32 r4_1538
	word32 r9_1539
	word32 r10_1540
	word32 r8_1541
	word32 r7_1542
	word32 r1_1543
	byte CZ_1544
	byte VZN_1545
	word32 r11_1546
	call Mem1519[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1487,C_1521,CVZN_1491,CZ_1502,CZN_1490,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1495,N_1486,r0_1493,r1_1501,r10_1498,r11_1504,r2_1488,r3_1507,r4_1511,r5_1489,r6_1492,r7_1500,r8_1499,r9_1497,sp_1517,V_1522,VZN_1503,Z_1485,ZN_1520
		defs: ap_1529,C_1525,CVZN_1533,CZ_1544,CZN_1532,fp_1537,N_1528,r0_1535,r1_1543,r10_1540,r11_1546,r2_1530,r3_1536,r4_1538,r5_1531,r6_1534,r7_1542,r8_1541,r9_1539,sp_1523,V_1526,VZN_1545,Z_1527,ZN_1524
	Mem1548[sp_1523 - 0x00000004:word32] = r0_1535
	Mem1551[sp_1523 - 0x00000008:word32] = r5_1531 + 1515
	Mem1553[sp_1523 - 0x0000000C:word32] = r5_1531
	word32 r2_1554 = Mem1553[r5_1531 + 0x0000C839:word32]
	word32 sp_1558
	byte ZN_1559
	bool C_1560
	bool V_1561
	bool Z_1562
	bool N_1563
	word32 ap_1564
	word32 r2_1565
	word32 r5_1566
	byte CZN_1567
	byte CVZN_1568
	word32 r6_1569
	word32 r0_1570
	word32 r3_1571
	word32 fp_1572
	word32 r4_1573
	word32 r9_1574
	word32 r10_1575
	word32 r8_1576
	word32 r7_1577
	word32 r1_1578
	byte CZ_1579
	byte VZN_1580
	word32 r11_1581
	call r2_1554 + 2 (retsize: 4; depth: 4)
		uses: ap_1529,C_1556,CVZN_1533,CZ_1544,CZN_1532,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1537,N_1528,r0_1535,r1_1543,r10_1540,r11_1546,r2_1554,r3_1536,r4_1538,r5_1531,r6_1534,r7_1542,r8_1541,r9_1539,sp_1552,V_1557,VZN_1545,Z_1527,ZN_1555
		defs: ap_1564,C_1560,CVZN_1568,CZ_1579,CZN_1567,fp_1572,N_1563,r0_1570,r1_1578,r10_1575,r11_1581,r2_1565,r3_1571,r4_1573,r5_1566,r6_1569,r7_1577,r8_1576,r9_1574,sp_1558,V_1561,VZN_1580,Z_1562,ZN_1559
	Mem1584[sp_1558 + 14:word16] = (word16) (uint32) Mem1553[r5_1566 + 0x0000C67C:word16] & ~0x0000
	word32 r9_1585 = (uint32) Mem1584[sp_1558 + 2:word16]
	branch r9_1585 == 0x00000002 l00013854
// DataOut: ap fp r0 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013854:
	word32 r4_5729 = fp_1572 + 0xFFFFFFD7
	word32 r0_5730 = 0x00000000
	word32 r2_5731 = fp_1572 + -20
// DataOut: ap fp r0 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013868:
	Mem5738[r2_5731:byte] = 0x00
	r2_5731 = r2_5731 + 0x00000001
	r0_5730 = r0_5730 + 0x00000001
	branch r0_5730 <= 0x0000000B l00013868
// DataOut: ap fp r0 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013870:
	word32 r7_5742 = (uint32) Mem5738[sp_1558 + 14:word16]
	branch (r7_5742 & 0x00000100) == 0x00000000 l0001387D
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013878:
	Mem5979[fp_1572 + -20:byte] = 0x52
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001387D:
	branch (r7_5742 & 0x00000080) == 0x00000000 l0001388B
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013881:
	Mem5972[fp_1572 + -19:byte] = 0x57
	Mem5974[fp_1572 + -17:byte] = 0x44
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001388B:
	branch (r7_5742 & 0x00000040) == 0x00000000 l00013894
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001388F:
	Mem5967[fp_1572 + -18:byte] = 0x45
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013894:
	branch (r7_5742 & 0x00000020) == 0x00000000 l0001389D
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013898:
	Mem5962[fp_1572 + -16:byte] = 0x52
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001389D:
	branch (r7_5742 & 0x00000010) == 0x00000000 l000138AB
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138A1:
	Mem5955[fp_1572 + -15:byte] = 0x57
	Mem5957[fp_1572 + -13:byte] = 0x44
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138AB:
	branch (r7_5742 & 0x00000008) == 0x00000000 l000138B4
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138AF:
	Mem5950[fp_1572 + -14:byte] = 0x45
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138B4:
	branch (r7_5742 & 0x00000004) == 0x00000000 l000138BD
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138B8:
	Mem5945[fp_1572 + -12:byte] = 0x52
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138BD:
	branch (r7_5742 & 0x00000002) == 0x00000000 l000138CB
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138C1:
	Mem5938[fp_1572 + -11:byte] = 0x57
	Mem5940[fp_1572 + -9:byte] = 0x44
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138CB:
	branch (r7_5742 & 0x00000001) == 0x00000000 l000138D3
// DataOut: ap fp r0 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138CE:
	Mem5933[fp_1572 + -10:byte] = 0x45
// DataOut: ap fp r0 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138D3:
	Mem5773[fp_1572 + -42:byte] = 0x28
	word32 r3_5774 = fp_1572 + 0xFFFFFFD7
	word32 r7_5775 = 0x00000000
	word32 r2_5776 = 0x00000000
	branch false l00013920
// DataOut: ap fp r0 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138DF:
	r7_5863 = r7_5775
	r4_5864 = r4_5729
// DataOut: ap fp r0 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x00000000 r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:0x00000000 r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138E0:
	word32 r7_5863
	word32 r4_5864
	word32 r1_5870 = 0x00000000
// DataOut: ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138E4:
	branch Mem5773[fp_1572 + -20 + r2_5776:byte] == 0x00 l000138EF
// DataOut: ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138EA:
	Mem5927[r3_5774:byte] = Mem5773[fp_1572 + -20 + r2_5776:byte]
	r3_5774 = r3_5774 + 0x00000001
// DataOut: ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138EF:
	r1_5870 = r1_5870 + 0x00000001
	r2_5776 = r2_5776 + 0x00000001
	branch r1_5870 < 0x00000004 l000138E4
// DataOut: ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138F8:
	Mem5892[r3_5774:byte] = 0x2C
	r3_5774 = r3_5774 + 0x00000001
	branch r7_5863 != 0x00000000 l00013919
// DataOut: ap fp r0 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138FF:
	Mem5911[r3_5774:byte] = Mem5892[r4_5864:byte]
	r3_5774 = r3_5774 + 0x00000001
	r4_5864 = r4_5864 + 0x00000001
	branch Mem5911[r3_5774:byte] == 0x2C l00013919
// DataOut: ap fp r0 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001390C:
	Mem5922[r3_6604:byte] = Mem5911[r4_5864:byte]
	r3_5774 = r3_6604 + 0x00000001
	r4_5864 = r4_5864 + 0x00000001
	word32 r3_6604 = r3_5774
	branch Mem5922[r3_6604:byte] != 0x2C l0001390C
// DataOut: ap fp r0 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013919:
	r7_5863 = r7_5863 + 0x00000001
	branch r7_5863 < 0x00000003 l000138E0
// DataOut: ap fp r0 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013920:
	Mem5784[r3_5774:byte] = 0x00
	word32 r3_5782 = r3_5774 - 0x00000001
	Mem5786[r3_5782:byte] = 0x29
	Mem5788[sp_1558 - 0x00000004:word32] = 0x00000000
	Mem5791[sp_1558 - 0x00000008:word32] = fp_1572 + -42
	Mem5794[sp_1558 - 0x0000000C:uint32] = (uint32) Mem5791[sp_1558 + 0x0000000A:word16]
	Mem5797[sp_1558 - 0x00000010:word32] = r6_1569 + 3013
	Mem5800[sp_1558 - 0x00000014:word32] = r5_1566 + 1515
	word32 sp_5804
	byte ZN_5805
	bool C_5806
	bool V_5807
	bool Z_5808
	bool N_5809
	word32 ap_5810
	word32 r2_5811
	word32 r5_5812
	byte CZN_5813
	byte CVZN_5814
	word32 r6_5815
	word32 r0_5816
	word32 r3_5817
	word32 fp_5818
	word32 r4_5819
	word32 r9_5820
	word32 r10_5821
	word32 r8_5822
	word32 r7_5823
	word32 r1_5824
	byte CZ_5825
	byte VZN_5826
	word32 r11_5827
	call Mem5800[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1564,C_5802,CVZN_5741,CZ_1579,CZN_5777,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1572,N_5778,r0_5740,r1_1578,r10_1575,r11_1581,r2_5781,r3_5782,r4_5729,r5_1566,r6_1569,r7_5775,r8_1576,r9_1585,sp_5798,V_5803,VZN_1580,Z_1587,ZN_5801
		defs: ap_5810,C_5806,CVZN_5814,CZ_5825,CZN_5813,fp_5818,N_5809,r0_5816,r1_5824,r10_5821,r11_5827,r2_5811,r3_5817,r4_5819,r5_5812,r6_5815,r7_5823,r8_5822,r9_5820,sp_5804,V_5807,VZN_5826,Z_5808,ZN_5805
	Mem5829[sp_5804 - 0x00000004:word32] = r0_5816
	Mem5832[sp_5804 - 0x00000008:word32] = r5_5812 + 1515
	Mem5834[sp_5804 - 0x0000000C:word32] = r5_5812
	word32 r2_5835 = Mem5834[r5_5812 + 0x0000C839:word32]
	byte ZN_5840
	bool C_5841
	bool V_5842
	bool Z_5843
	bool N_5844
	word32 ap_5845
	word32 r2_5846
	byte CZN_5848
	byte CVZN_5849
	word32 r0_5851
	word32 r3_5852
	word32 r4_5854
	word32 r9_5855
	word32 r10_5856
	word32 r7_5858
	word32 r1_5859
	byte CZ_5860
	byte VZN_5861
	word32 r11_5862
	call r2_5835 + 2 (retsize: 4; depth: 4)
		uses: ap_5810,C_5837,CVZN_5814,CZ_5825,CZN_5813,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_5818,N_5809,r0_5816,r1_5824,r10_5821,r11_5827,r2_5835,r3_5817,r4_5819,r5_5812,r6_5815,r7_5823,r8_5822,r9_5820,sp_5833,V_5838,VZN_5826,Z_5808,ZN_5836
		defs: ap_5845,C_5841,CVZN_5849,CZ_5860,CZN_5848,fp_5853,N_5844,r0_5851,r1_5859,r10_5856,r11_5862,r2_5846,r3_5852,r4_5854,r5_5847,r6_5850,r7_5858,r8_5857,r9_5855,sp_5839,V_5842,VZN_5861,Z_5843,ZN_5840
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013851:
// DataOut: ap fp r0 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013958:
	branch r9_1585 == 0x00000001 l00013960
// DataOut: ap fp r0 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013960:
	word32 r2_5489 = (uint32) Mem1584[sp_1558 + 14:word16] & ~0xFFFFF3FF
	branch r2_5489 < 0x00000400 l00013990
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013974:
	branch r2_5489 == 0x00000400 l00013988
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013988:
	Mem5723[fp_1572 + -42:byte] = 0x2D
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013976:
	branch r2_5489 != 0x00000800 l00013990
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013990:
	Mem5710[fp_1572 + -42:byte] = 0x3F
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001397F:
	Mem5718[fp_1572 + -42:byte] = 0x64
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013994:
	word32 r3_5505
	word32 r7_5501 = (uint32) Mem1584[sp_1558 + 14:word16]
	branch (r7_5501 & 0x00000080) == 0x00000000 l000139A4
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139A4:
	r3_5505 = DPB(r3_1571, 0x2D, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001399C:
	r3_5505 = DPB(r3_1571, 0x68, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139A7:
	word32 r4_5511
	Mem5507[fp_1572 + -41:byte] = (byte) r3_5505
	branch (r7_5501 & 0x00000040) == 0x00000000 l000139B8
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139B8:
	r4_5511 = DPB(r4_1573, 0x2D, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139AF:
	r4_5511 = DPB(r4_1573, 0x73, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139BB:
	word32 r3_5517
	Mem5513[fp_1572 + -40:byte] = (byte) r4_5511
	branch (r7_5501 & 0x00000020) == 0x00000000 l000139CC
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139CC:
	r3_5517 = DPB(r3_5505, 0x2D, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139C3:
	r3_5517 = DPB(r3_5505, 0x70, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139CF:
	word32 r4_5523
	Mem5519[fp_1572 + -39:byte] = (byte) r3_5517
	branch (r7_5501 & 0x00000010) == 0x00000000 l000139E0
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139E0:
	r4_5523 = DPB(r4_5511, 0x2D, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139D7:
	r4_5523 = DPB(r4_5511, 0x61, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139E3:
	word32 r3_5529
	Mem5525[fp_1572 + -38:byte] = (byte) r4_5523
	branch (r7_5501 & 0x00000008) == 0x00000000 l000139F4
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139F4:
	r3_5529 = DPB(r3_5517, 0x2D, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139EB:
	r3_5529 = DPB(r3_5517, 0x72, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139F7:
	word32 r4_5535
	Mem5531[fp_1572 + -37:byte] = (byte) r3_5529
	branch (r7_5501 & 0x00000004) == 0x00000000 l00013A08
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A08:
	r4_5535 = DPB(r4_5523, 0x2D, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139FF:
	r4_5535 = DPB(r4_5523, 0x77, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A0B:
	word32 r3_5541
	Mem5537[fp_1572 + -36:byte] = (byte) r4_5535
	branch (r7_5501 & 0x00000002) == 0x00000000 l00013A1C
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A1C:
	r3_5541 = DPB(r3_5529, 0x2D, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A13:
	r3_5541 = DPB(r3_5529, 0x65, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A1F:
	word32 r4_5547
	Mem5543[fp_1572 + -35:byte] = (byte) r3_5541
	branch (r7_5501 & 0x00000001) == 0x00000000 l00013A2C
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A2C:
	r4_5547 = DPB(r4_5535, 0x2D, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A26:
	r4_5547 = DPB(r4_5535, 0x64, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A2F:
	Mem5549[fp_1572 + -34:byte] = (byte) r4_5547
	Mem5551[fp_1572 + -33:byte] = 0x00
	Mem5553[sp_1558 - 0x00000004:word32] = 0x00000000
	Mem5556[sp_1558 - 0x00000008:word32] = fp_1572 + -42
	Mem5558[sp_1558 - 0x0000000C:word32] = r7_5501
	Mem5561[sp_1558 - 0x00000010:word32] = r6_1569 + 3067
	Mem5564[sp_1558 - 0x00000014:word32] = r5_1566 + 1515
	word32 sp_5568
	byte ZN_5569
	bool C_5570
	bool V_5571
	bool Z_5572
	bool N_5573
	word32 ap_5574
	word32 r2_5575
	word32 r5_5576
	byte CZN_5577
	byte CVZN_5578
	word32 r6_5579
	word32 r0_5580
	word32 r3_5581
	word32 fp_5582
	word32 r4_5583
	word32 r9_5584
	word32 r10_5585
	word32 r8_5586
	word32 r7_5587
	word32 r1_5588
	byte CZ_5589
	byte VZN_5590
	word32 r11_5591
	call Mem5564[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1564,C_5566,CVZN_5498,CZ_5495,CZN_5499,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1572,N_5494,r0_1570,r1_1578,r10_1575,r11_1581,r2_5489,r3_5541,r4_5547,r5_1566,r6_1569,r7_5501,r8_1576,r9_1585,sp_5562,V_5567,VZN_5497,Z_5500,ZN_5565
		defs: ap_5574,C_5570,CVZN_5578,CZ_5589,CZN_5577,fp_5582,N_5573,r0_5580,r1_5588,r10_5585,r11_5591,r2_5575,r3_5581,r4_5583,r5_5576,r6_5579,r7_5587,r8_5586,r9_5584,sp_5568,V_5571,VZN_5590,Z_5572,ZN_5569
	Mem5593[sp_5568 - 0x00000004:word32] = r0_5580
	Mem5596[sp_5568 - 0x00000008:word32] = r5_5576 + 1515
	Mem5598[sp_5568 - 0x0000000C:word32] = r5_5576
	word32 r2_5599 = Mem5598[r5_5576 + 0x0000C839:word32]
	byte ZN_5604
	bool C_5605
	bool V_5606
	bool Z_5607
	bool N_5608
	word32 ap_5609
	word32 r2_5610
	byte CZN_5612
	byte CVZN_5613
	word32 r0_5615
	word32 r3_5616
	word32 r4_5618
	word32 r9_5619
	word32 r10_5620
	word32 r7_5622
	word32 r1_5623
	byte CZ_5624
	byte VZN_5625
	word32 r11_5626
	call r2_5599 + 2 (retsize: 4; depth: 4)
		uses: ap_5574,C_5601,CVZN_5578,CZ_5589,CZN_5577,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_5582,N_5573,r0_5580,r1_5588,r10_5585,r11_5591,r2_5599,r3_5581,r4_5583,r5_5576,r6_5579,r7_5587,r8_5586,r9_5584,sp_5597,V_5602,VZN_5590,Z_5572,ZN_5600
		defs: ap_5609,C_5605,CVZN_5613,CZ_5624,CZN_5612,fp_5617,N_5608,r0_5615,r1_5623,r10_5620,r11_5626,r2_5610,r3_5616,r4_5618,r5_5611,r6_5614,r7_5622,r8_5621,r9_5619,sp_5603,V_5606,VZN_5625,Z_5607,ZN_5604
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001395D:
// DataOut: ap fp r0 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A64:
	branch r9_1585 != 0x00000000 l00013A6B
// DataOut: ap fp r0 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A6B:
	branch r9_1585 != 0x00000006 l00013A73
// DataOut: ap fp r0 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A73:
	branch r9_1585 != 0x0000000B l00013A7B
// DataOut: ap fp r0 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A7B:
	branch r9_1585 != 0x0000000E l00013A83
// DataOut: ap fp r0 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A83:
	branch r9_1585 != 0x0000000D l00013A8B
// DataOut: ap fp r0 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A8B:
	branch r9_1585 != 0x00000004 l00013A93
// DataOut: ap fp r0 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A93:
	branch r9_1585 != 0x0000000F l00013A9B
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A9B:
	word32 r2_5094 = (uint32) Mem1584[sp_1558 + 14:word16] & ~0xFFFF0FFF
	branch r2_5094 < 0x00001000 l00013B2C
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AAF:
	branch r2_5094 == 0x00001000 l00013B1C
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B1C:
	Mem5484[fp_1572 + -42:byte] = 0x70
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AB1:
	branch r2_5094 < 0x00002000 l00013B2C
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013ABA:
	branch r2_5094 == 0x00002000 l00013B14
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B14:
	Mem5479[fp_1572 + -42:byte] = 0x63
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013ABC:
	branch r2_5094 < 0x00004000 l00013B2C
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AC5:
	branch r2_5094 == 0x00004000 l00013AF4
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AF4:
	Mem5474[fp_1572 + -42:byte] = 0x64
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AC7:
	branch r2_5094 < 0x00006000 l00013B2C
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AD0:
	branch r2_5094 == 0x00006000 l00013B0C
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B0C:
	Mem5469[fp_1572 + -42:byte] = 0x62
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AD2:
	branch r2_5094 < 0x00008000 l00013B2C
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013ADB:
	branch r2_5094 == 0x00008000 l00013AFC
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AFC:
	Mem5464[fp_1572 + -42:byte] = 0x2D
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013ADD:
	branch r2_5094 < 0x0000A000 l00013B2C
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AE6:
	branch r2_5094 == 0x0000A000 l00013B04
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B04:
	Mem5459[fp_1572 + -42:byte] = 0x6C
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AE8:
	branch r2_5094 == 0x0000C000 l00013B24
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B24:
	Mem5454[fp_1572 + -42:byte] = 0x73
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AF1:
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B2C:
	Mem5401[fp_1572 + -42:byte] = 0x3F
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B30:
	word32 r3_5114
	word32 r7_5110 = (uint32) Mem1584[sp_1558 + 14:word16]
	branch (r7_5110 & 0x00000100) == 0x00000000 l00013B40
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B40:
	r3_5114 = DPB(r3_1571, 0x2D, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B38:
	r3_5114 = DPB(r3_1571, 0x72, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B43:
	word32 r4_5120
	Mem5116[fp_1572 + -41:byte] = (byte) r3_5114
	branch (r7_5110 & 0x00000020) == 0x00000000 l00013B54
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B54:
	r4_5120 = DPB(r4_1573, 0x2D, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B4B:
	r4_5120 = DPB(r4_1573, 0x72, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B57:
	word32 r3_5126
	Mem5122[fp_1572 + -38:byte] = (byte) r4_5120
	branch (r7_5110 & 0x00000004) == 0x00000000 l00013B68
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B68:
	r3_5126 = DPB(r3_5114, 0x2D, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B5F:
	r3_5126 = DPB(r3_5114, 0x72, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B6B:
	word32 r4_5132
	Mem5128[fp_1572 + -35:byte] = (byte) r3_5126
	branch (r7_5110 & 0x00000080) == 0x00000000 l00013B7C
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B7C:
	r4_5132 = DPB(r4_5120, 0x2D, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B73:
	r4_5132 = DPB(r4_5120, 0x77, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B7F:
	word32 r3_5138
	Mem5134[fp_1572 + -40:byte] = (byte) r4_5132
	branch (r7_5110 & 0x00000010) == 0x00000000 l00013B90
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B90:
	r3_5138 = DPB(r3_5126, 0x2D, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B87:
	r3_5138 = DPB(r3_5126, 0x77, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B93:
	word32 r4_5144
	Mem5140[fp_1572 + -37:byte] = (byte) r3_5138
	branch (r7_5110 & 0x00000002) == 0x00000000 l00013BA4
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BA4:
	r4_5144 = DPB(r4_5132, 0x2D, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B9B:
	r4_5144 = DPB(r4_5132, 0x77, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BA7:
	word32 r2_5150
	Mem5146[fp_1572 + -34:byte] = (byte) r4_5144
	branch (r7_5110 & 0x00000040) == 0x00000000 l00013BC8
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BC8:
	branch (r7_5110 & 0x00000800) == 0x00000000 l00013BD4
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BD4:
	r2_5150 = DPB(r2_5094, 0x2D, 0)
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BCC:
	r2_5150 = DPB(r2_5094, 0x53, 0)
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BD7:
	Mem5320[fp_1572 + -39:byte] = (byte) r2_5150
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BAF:
	branch (r7_5110 & 0x00000800) == 0x00000000 l00013BBC
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BBC:
	r2_5150 = DPB(r2_5094, 0x78, 0)
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BB3:
	r2_5150 = DPB(r2_5094, 0x73, 0)
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BC0:
	Mem5304[fp_1572 + -39:byte] = (byte) r2_5150
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BDB:
	word32 r2_5155
	word32 r3_5151 = (uint32) Mem5146[sp_1558 + 14:word16]
	branch (r3_5151 & 0x00000008) == 0x00000000 l00013BFC
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BFC:
	branch (r3_5151 & 0x00000400) == 0x00000000 l00013C08
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C08:
	r2_5155 = DPB(r2_5150, 0x2D, 0)
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C00:
	r2_5155 = DPB(r2_5150, 0x6C, 0)
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C0B:
	Mem5288[fp_1572 + -36:byte] = (byte) r2_5155
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BE3:
	branch (r3_5151 & 0x00000400) == 0x00000000 l00013BF0
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BF0:
	r2_5155 = DPB(r2_5150, 0x78, 0)
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BE7:
	r2_5155 = DPB(r2_5150, 0x73, 0)
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BF4:
	Mem5272[fp_1572 + -36:byte] = (byte) r2_5155
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C0F:
	word32 r3_5156 = (uint32) Mem5146[sp_1558 + 14:word16]
	branch (r3_5156 & 0x00000001) == 0x00000000 l00013C2C
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C2C:
	word32 r2_5254
	branch (r3_5156 & 0x00000200) == 0x00000000 l00013C38
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C38:
	r2_5254 = DPB(r2_5155, 0x2D, 0)
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C30:
	r2_5254 = DPB(r2_5155, 0x54, 0)
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C3B:
	Mem5256[fp_1572 + -33:byte] = (byte) r2_5254
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C16:
	word32 r2_5238
	branch (r3_5156 & 0x00000200) == 0x00000000 l00013C20
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C20:
	r2_5238 = DPB(r2_5155, 0x78, 0)
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C1A:
	r2_5238 = DPB(r2_5155, 0x74, 0)
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C24:
	Mem5240[fp_1572 + -33:byte] = (byte) r2_5238
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C3F:
	Mem5161[fp_1572 + -32:byte] = 0x00
	Mem5163[sp_1558 - 0x00000004:word32] = 0x00000000
	Mem5166[sp_1558 - 0x00000008:word32] = fp_1572 + -42
	Mem5169[sp_1558 - 0x0000000C:uint32] = (uint32) Mem5166[sp_1558 + 0x0000000A:word16]
	Mem5172[sp_1558 - 0x00000010:word32] = r6_1569 + 3121
	Mem5175[sp_1558 - 0x00000014:word32] = r5_1566 + 1515
	word32 sp_5179
	byte ZN_5180
	bool C_5181
	bool V_5182
	bool Z_5183
	bool N_5184
	word32 ap_5185
	word32 r2_5186
	word32 r5_5187
	byte CZN_5188
	byte CVZN_5189
	word32 r6_5190
	word32 r0_5191
	word32 r3_5192
	word32 fp_5193
	word32 r4_5194
	word32 r9_5195
	word32 r10_5196
	word32 r8_5197
	word32 r7_5198
	word32 r1_5199
	byte CZ_5200
	byte VZN_5201
	word32 r11_5202
	call Mem5175[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1564,C_5177,CVZN_5106,CZ_5105,CZN_5107,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1572,N_5108,r0_1570,r1_1578,r10_1575,r11_1581,r2_5155,r3_5156,r4_5144,r5_1566,r6_1569,r7_5110,r8_1576,r9_1585,sp_5173,V_5178,VZN_5104,Z_5109,ZN_5176
		defs: ap_5185,C_5181,CVZN_5189,CZ_5200,CZN_5188,fp_5193,N_5184,r0_5191,r1_5199,r10_5196,r11_5202,r2_5186,r3_5192,r4_5194,r5_5187,r6_5190,r7_5198,r8_5197,r9_5195,sp_5179,V_5182,VZN_5201,Z_5183,ZN_5180
	Mem5204[sp_5179 - 0x00000004:word32] = r0_5191
	Mem5207[sp_5179 - 0x00000008:word32] = r5_5187 + 1515
	Mem5209[sp_5179 - 0x0000000C:word32] = r5_5187
	word32 r2_5210 = Mem5209[r5_5187 + 0x0000C839:word32]
	byte ZN_5215
	bool C_5216
	bool V_5217
	bool Z_5218
	bool N_5219
	word32 ap_5220
	word32 r2_5221
	byte CZN_5223
	byte CVZN_5224
	word32 r0_5226
	word32 r3_5227
	word32 r4_5229
	word32 r9_5230
	word32 r10_5231
	word32 r7_5233
	word32 r1_5234
	byte CZ_5235
	byte VZN_5236
	word32 r11_5237
	call r2_5210 + 2 (retsize: 4; depth: 4)
		uses: ap_5185,C_5212,CVZN_5189,CZ_5200,CZN_5188,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_5193,N_5184,r0_5191,r1_5199,r10_5196,r11_5202,r2_5210,r3_5192,r4_5194,r5_5187,r6_5190,r7_5198,r8_5197,r9_5195,sp_5208,V_5213,VZN_5201,Z_5183,ZN_5211
		defs: ap_5220,C_5216,CVZN_5224,CZ_5235,CZN_5223,fp_5228,N_5219,r0_5226,r1_5234,r10_5231,r11_5237,r2_5221,r3_5227,r4_5229,r5_5222,r6_5225,r7_5233,r8_5232,r9_5230,sp_5214,V_5217,VZN_5236,Z_5218,ZN_5215
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A98:
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A90:
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A88:
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A80:
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A78:
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A70:
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A68:
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C70:
	Mem5003[sp_1558 - 0x00000004:word32] = 0x00000000
	word32 r2_5004 = (uint32) Mem5003[r5_1566 + 0x0000C67B:ui24]
	Mem5006[sp_1558 - 0x00000008:word32] = r2_5004
	Mem5009[sp_1558 - 0x0000000C:word32] = r6_1569 + 3175
	Mem5012[sp_1558 - 0x00000010:word32] = r5_1566 + 1515
	word32 sp_5016
	byte ZN_5017
	bool C_5018
	bool V_5019
	bool Z_5020
	bool N_5021
	word32 ap_5022
	word32 r2_5023
	word32 r5_5024
	byte CZN_5025
	byte CVZN_5026
	word32 r6_5027
	word32 r0_5028
	word32 r3_5029
	word32 fp_5030
	word32 r4_5031
	word32 r9_5032
	word32 r10_5033
	word32 r8_5034
	word32 r7_5035
	word32 r1_5036
	byte CZ_5037
	byte VZN_5038
	word32 r11_5039
	call Mem5012[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1564,C_5014,CVZN_1568,CZ_1579,CZN_4995,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1572,N_1563,r0_1570,r1_1578,r10_1575,r11_1581,r2_5004,r3_1571,r4_1573,r5_1566,r6_1569,r7_1577,r8_1576,r9_1585,sp_5010,V_5015,VZN_1580,Z_4999,ZN_5013
		defs: ap_5022,C_5018,CVZN_5026,CZ_5037,CZN_5025,fp_5030,N_5021,r0_5028,r1_5036,r10_5033,r11_5039,r2_5023,r3_5029,r4_5031,r5_5024,r6_5027,r7_5035,r8_5034,r9_5032,sp_5016,V_5019,VZN_5038,Z_5020,ZN_5017
	Mem5041[sp_5016 - 0x00000004:word32] = r0_5028
	Mem5044[sp_5016 - 0x00000008:word32] = r5_5024 + 1515
	Mem5046[sp_5016 - 0x0000000C:word32] = r5_5024
	word32 r2_5047 = Mem5046[r5_5024 + 0x0000C839:word32]
	byte ZN_5052
	bool C_5053
	bool V_5054
	bool Z_5055
	bool N_5056
	word32 ap_5057
	word32 r2_5058
	byte CZN_5060
	byte CVZN_5061
	word32 r0_5063
	word32 r3_5064
	word32 r4_5066
	word32 r9_5067
	word32 r10_5068
	word32 r7_5070
	word32 r1_5071
	byte CZ_5072
	byte VZN_5073
	word32 r11_5074
	call r2_5047 + 2 (retsize: 4; depth: 4)
		uses: ap_5022,C_5049,CVZN_5026,CZ_5037,CZN_5025,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_5030,N_5021,r0_5028,r1_5036,r10_5033,r11_5039,r2_5047,r3_5029,r4_5031,r5_5024,r6_5027,r7_5035,r8_5034,r9_5032,sp_5045,V_5050,VZN_5038,Z_5020,ZN_5048
		defs: ap_5057,C_5053,CVZN_5061,CZ_5072,CZN_5060,fp_5065,N_5056,r0_5063,r1_5071,r10_5068,r11_5074,r2_5058,r3_5064,r4_5066,r5_5059,r6_5062,r7_5070,r8_5069,r9_5067,sp_5051,V_5054,VZN_5073,Z_5055,ZN_5052
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C9E:
	word32 sp_1631
	word32 r5_1628
	word32 r6_1625
	word32 r8_1620
	Mem1609[sp_1605 + 14:word16] = Mem1584[r5_1601 + 0x0000C67A:word16] & ~0xFF00
	word32 r3_1610 = (uint32) Mem1609[sp_1605 + 14:word16]
	branch r3_1610 != 0x00000000 l00013CD8
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013CD8:
	branch r3_1610 != 0x00000001 l00013D08
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D08:
	word32 r10_4840
	word32 sp_4835 = sp_1605 - 0x00000004
	Mem4836[sp_4835:word32] = 0x00000000
	branch (r3_1610 & 0x00000020) == 0x00000000 l00013D14
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D14:
	r10_4840 = r6_1598
// DataOut: ap fp r0 r10 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D0E:
	r10_4840 = r8_1594 + 101
// DataOut: ap fp r0 r10 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D17:
	word32 r9_4846
	Mem4842[sp_4835 - 0x00000004:word32] = r10_4840
	branch (r3_1610 & 0x00000010) == 0x00000000 l00013D24
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D24:
	r9_4846 = r6_1598
// DataOut: ap fp r0 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D1D:
	r9_4846 = r8_1594 + 96
// DataOut: ap fp r0 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D27:
	word32 r7_4852
	Mem4848[sp_4835 - 0x00000008:word32] = r9_4846
	branch (r3_1610 & 0x00000008) == 0x00000000 l00013D34
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D34:
	r7_4852 = r6_1598
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D2D:
	r7_4852 = r8_1594 + 91
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D37:
	word32 r4_4858
	Mem4854[sp_4835 - 0x0000000C:word32] = r7_4852
	branch (r3_1610 & 0x00000004) == 0x00000000 l00013D44
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D44:
	r4_4858 = r6_1598
// DataOut: ap fp r0 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D3D:
	r4_4858 = r8_1594 + 86
// DataOut: ap fp r0 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D47:
	Mem4860[sp_4835 - 0x00000010:word32] = r4_4858
	branch (r3_1610 & 0x00000002) == 0x00000000 l00013D54
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D54:
	Mem4959[fp_1606 + -62:word32] = r6_1598
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D4D:
	Mem4954[fp_1606 + -62:word32] = r8_1594 + 81
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D58:
	Mem4866[sp_4835 - 0x00000014:word32] = Mem4860[fp_1606 + -62:word32]
	branch (r3_1610 & 0x00000001) == 0x00000000 l00013D68
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D68:
	Mem4949[fp_1606 + -66:word32] = r6_1598
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D5E:
	Mem4944[fp_1606 + -66:word32] = r8_1594 + 76
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D6C:
	Mem4872[sp_4835 - 0x00000018:word32] = Mem4866[fp_1606 + -66:word32]
	Mem4874[sp_4835 - 0x0000001C:word32] = r3_1610
	Mem4877[sp_4835 - 0x00000020:word32] = r6_1598 + 3363
	Mem4880[sp_4835 - 0x00000024:word32] = r5_1601 + 1515
	word32 sp_4884
	byte ZN_4885
	bool C_4886
	bool V_4887
	bool Z_4888
	bool N_4889
	word32 ap_4890
	word32 r2_4891
	word32 r5_4892
	byte CZN_4893
	byte CVZN_4894
	word32 r6_4895
	word32 r0_4896
	word32 r3_4897
	word32 fp_4898
	word32 r4_4899
	word32 r9_4900
	word32 r10_4901
	word32 r8_4902
	word32 r7_4903
	word32 r1_4904
	byte CZ_4905
	byte VZN_4906
	word32 r11_4907
	call Mem4880[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1607,C_4882,CVZN_1599,CZ_1591,CZN_4760,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1606,N_1603,r0_1604,r1_1592,r10_4840,r11_1589,r2_1602,r3_1610,r4_4858,r5_1601,r6_1598,r7_4852,r8_1594,r9_4846,sp_4878,V_4883,VZN_1590,Z_4761,ZN_4881
		defs: ap_4890,C_4886,CVZN_4894,CZ_4905,CZN_4893,fp_4898,N_4889,r0_4896,r1_4904,r10_4901,r11_4907,r2_4891,r3_4897,r4_4899,r5_4892,r6_4895,r7_4903,r8_4902,r9_4900,sp_4884,V_4887,VZN_4906,Z_4888,ZN_4885
	Mem4909[sp_4884 - 0x00000004:word32] = r0_4896
	Mem4912[sp_4884 - 0x00000008:word32] = r5_4892 + 1515
	Mem4914[sp_4884 - 0x0000000C:word32] = r5_4892
	word32 r2_4915 = Mem4914[r5_4892 + 0x0000C839:word32]
	byte ZN_4920
	bool C_4921
	bool V_4922
	bool Z_4923
	bool N_4924
	word32 ap_4925
	word32 r2_4926
	byte CZN_4928
	byte CVZN_4929
	word32 r0_4931
	word32 r3_4932
	word32 fp_4933
	word32 r4_4934
	word32 r9_4935
	word32 r10_4936
	word32 r7_4938
	word32 r1_4939
	byte CZ_4940
	byte VZN_4941
	word32 r11_4942
	call r2_4915 + 2 (retsize: 4; depth: 4)
		uses: ap_4890,C_4917,CVZN_4894,CZ_4905,CZN_4893,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4898,N_4889,r0_4896,r1_4904,r10_4901,r11_4907,r2_4915,r3_4897,r4_4899,r5_4892,r6_4895,r7_4903,r8_4902,r9_4900,sp_4913,V_4918,VZN_4906,Z_4888,ZN_4916
		defs: ap_4925,C_4921,CVZN_4929,CZ_4940,CZN_4928,fp_4933,N_4924,r0_4931,r1_4939,r10_4936,r11_4942,r2_4926,r3_4932,r4_4934,r5_4927,r6_4930,r7_4938,r8_4937,r9_4935,sp_4919,V_4922,VZN_4941,Z_4923,ZN_4920
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013CDD:
	word32 sp_4763 = sp_1605 - 0x00000004
	Mem4764[sp_4763:word32] = 0x00000000
	Mem4766[sp_4763 - 0x00000004:word32] = r3_1610
	Mem4769[sp_4763 - 0x00000008:word32] = r6_1598 + 3298
	Mem4772[sp_4763 - 0x0000000C:word32] = r5_1601 + 1515
	word32 sp_4776
	byte ZN_4777
	bool C_4778
	bool V_4779
	bool Z_4780
	bool N_4781
	word32 ap_4782
	word32 r2_4783
	word32 r5_4784
	byte CZN_4785
	byte CVZN_4786
	word32 r6_4787
	word32 r0_4788
	word32 r3_4789
	word32 fp_4790
	word32 r4_4791
	word32 r9_4792
	word32 r10_4793
	word32 r8_4794
	word32 r7_4795
	word32 r1_4796
	byte CZ_4797
	byte VZN_4798
	word32 r11_4799
	call Mem4772[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1607,C_4774,CVZN_1599,CZ_1591,CZN_4760,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1606,N_1603,r0_1604,r1_1592,r10_1595,r11_1589,r2_1602,r3_1610,r4_1597,r5_1601,r6_1598,r7_1593,r8_1594,r9_1596,sp_4770,V_4775,VZN_1590,Z_4761,ZN_4773
		defs: ap_4782,C_4778,CVZN_4786,CZ_4797,CZN_4785,fp_4790,N_4781,r0_4788,r1_4796,r10_4793,r11_4799,r2_4783,r3_4789,r4_4791,r5_4784,r6_4787,r7_4795,r8_4794,r9_4792,sp_4776,V_4779,VZN_4798,Z_4780,ZN_4777
	Mem4801[sp_4776 - 0x00000004:word32] = r0_4788
	Mem4804[sp_4776 - 0x00000008:word32] = r5_4784 + 1515
	Mem4806[sp_4776 - 0x0000000C:word32] = r5_4784
	word32 r2_4807 = Mem4806[r5_4784 + 0x0000C839:word32]
	byte ZN_4812
	bool C_4813
	bool V_4814
	bool Z_4815
	bool N_4816
	word32 ap_4817
	word32 r2_4818
	byte CZN_4820
	byte CVZN_4821
	word32 r0_4823
	word32 r3_4824
	word32 fp_4825
	word32 r4_4826
	word32 r9_4827
	word32 r10_4828
	word32 r7_4830
	word32 r1_4831
	byte CZ_4832
	byte VZN_4833
	word32 r11_4834
	call r2_4807 + 2 (retsize: 4; depth: 4)
		uses: ap_4782,C_4809,CVZN_4786,CZ_4797,CZN_4785,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4790,N_4781,r0_4788,r1_4796,r10_4793,r11_4799,r2_4807,r3_4789,r4_4791,r5_4784,r6_4787,r7_4795,r8_4794,r9_4792,sp_4805,V_4810,VZN_4798,Z_4780,ZN_4808
		defs: ap_4817,C_4813,CVZN_4821,CZ_4832,CZN_4820,fp_4825,N_4816,r0_4823,r1_4831,r10_4828,r11_4834,r2_4818,r3_4824,r4_4826,r5_4819,r6_4822,r7_4830,r8_4829,r9_4827,sp_4811,V_4814,VZN_4833,Z_4815,ZN_4812
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013CAF:
	word32 sp_4688 = sp_1605 - 0x00000004
	Mem4689[sp_4688:word32] = 0x00000000
	Mem4691[sp_4688 - 0x00000004:word32] = r3_1610
	Mem4694[sp_4688 - 0x00000008:word32] = r6_1598 + 3238
	Mem4697[sp_4688 - 0x0000000C:word32] = r5_1601 + 1515
	word32 sp_4701
	byte ZN_4702
	bool C_4703
	bool V_4704
	bool Z_4705
	bool N_4706
	word32 ap_4707
	word32 r2_4708
	word32 r5_4709
	byte CZN_4710
	byte CVZN_4711
	word32 r6_4712
	word32 r0_4713
	word32 r3_4714
	word32 fp_4715
	word32 r4_4716
	word32 r9_4717
	word32 r10_4718
	word32 r8_4719
	word32 r7_4720
	word32 r1_4721
	byte CZ_4722
	byte VZN_4723
	word32 r11_4724
	call Mem4697[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1607,C_4699,CVZN_1599,CZ_1591,CZN_1600,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1606,N_1603,r0_1604,r1_1592,r10_1595,r11_1589,r2_1602,r3_1610,r4_1597,r5_1601,r6_1598,r7_1593,r8_1594,r9_1596,sp_4695,V_4700,VZN_1590,Z_1612,ZN_4698
		defs: ap_4707,C_4703,CVZN_4711,CZ_4722,CZN_4710,fp_4715,N_4706,r0_4713,r1_4721,r10_4718,r11_4724,r2_4708,r3_4714,r4_4716,r5_4709,r6_4712,r7_4720,r8_4719,r9_4717,sp_4701,V_4704,VZN_4723,Z_4705,ZN_4702
	Mem4726[sp_4701 - 0x00000004:word32] = r0_4713
	Mem4729[sp_4701 - 0x00000008:word32] = r5_4709 + 1515
	Mem4731[sp_4701 - 0x0000000C:word32] = r5_4709
	word32 r2_4732 = Mem4731[r5_4709 + 0x0000C839:word32]
	byte ZN_4737
	bool C_4738
	bool V_4739
	bool Z_4740
	bool N_4741
	word32 ap_4742
	word32 r2_4743
	byte CZN_4745
	byte CVZN_4746
	word32 r0_4748
	word32 r3_4749
	word32 fp_4750
	word32 r4_4751
	word32 r9_4752
	word32 r10_4753
	word32 r7_4755
	word32 r1_4756
	byte CZ_4757
	byte VZN_4758
	word32 r11_4759
	call r2_4732 + 2 (retsize: 4; depth: 4)
		uses: ap_4707,C_4734,CVZN_4711,CZ_4722,CZN_4710,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4715,N_4706,r0_4713,r1_4721,r10_4718,r11_4724,r2_4732,r3_4714,r4_4716,r5_4709,r6_4712,r7_4720,r8_4719,r9_4717,sp_4730,V_4735,VZN_4723,Z_4705,ZN_4733
		defs: ap_4742,C_4738,CVZN_4746,CZ_4757,CZN_4745,fp_4750,N_4741,r0_4748,r1_4756,r10_4753,r11_4759,r2_4743,r3_4749,r4_4751,r5_4744,r6_4747,r7_4755,r8_4754,r9_4752,sp_4736,V_4739,VZN_4758,Z_4740,ZN_4737
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D92:
	word32 r2_1634 = (uint32) Mem1609[r5_1628 + 0x0000C672:word16]
	branch r2_1634 != 0x00000000 l00013D9E
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D9E:
	Mem2177[sp_1631 + 42:word16] = Mem1609[r5_1628 + 0x0000C672:word16]
	branch Mem2177[sp_1631 + 8:word32] <= 0x00000001 l00013DB8
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013DB8:
	branch Mem2177[r5_1628 + 0x0000C627:word32] != 0x00000000 l00013DC4
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013DC4:
	word32 sp_2199 = sp_1631 - 0x00000004
	Mem2200[sp_2199:word32] = 0x00000000
	Mem2203[sp_2199 - 0x00000004:word32] = r6_1625 + 3560
	Mem2206[sp_2199 - 0x00000008:word32] = r5_1628 + 1515
	word32 sp_2210
	byte ZN_2211
	bool C_2212
	bool V_2213
	bool Z_2214
	bool N_2215
	word32 ap_2216
	word32 r2_2217
	word32 r5_2218
	byte CZN_2219
	byte CVZN_2220
	word32 r6_2221
	word32 r0_2222
	word32 r3_2223
	word32 fp_2224
	word32 r4_2225
	word32 r9_2226
	word32 r10_2227
	word32 r8_2228
	word32 r7_2229
	word32 r1_2230
	byte CZ_2231
	byte VZN_2232
	word32 r11_2233
	call Mem2206[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1633,C_2208,CVZN_1626,CZ_1617,CZN_2178,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1632,N_1629,r0_1630,r1_1618,r10_1621,r11_1615,r2_1634,r3_1624,r4_1623,r5_1628,r6_1625,r7_2175,r8_1620,r9_1622,sp_2204,V_2209,VZN_1616,Z_2189,ZN_2207
		defs: ap_2216,C_2212,CVZN_2220,CZ_2231,CZN_2219,fp_2224,N_2215,r0_2222,r1_2230,r10_2227,r11_2233,r2_2217,r3_2223,r4_2225,r5_2218,r6_2221,r7_2229,r8_2228,r9_2226,sp_2210,V_2213,VZN_2232,Z_2214,ZN_2211
	Mem2235[sp_2210 - 0x00000004:word32] = r0_2222
	Mem2238[sp_2210 - 0x00000008:word32] = r5_2218 + 1515
	Mem2240[sp_2210 - 0x0000000C:word32] = r5_2218
	word32 r2_2241 = Mem2240[r5_2218 + 0x0000C839:word32]
	byte ZN_2246
	bool C_2247
	bool V_2248
	bool Z_2249
	bool N_2250
	word32 ap_2251
	word32 r2_2252
	byte CZN_2254
	byte CVZN_2255
	word32 r6_2256
	word32 r0_2257
	word32 r3_2258
	word32 fp_2259
	word32 r4_2260
	word32 r9_2261
	word32 r10_2262
	word32 r7_2264
	word32 r1_2265
	byte CZ_2266
	byte VZN_2267
	word32 r11_2268
	word32 r8_2263
	word32 r5_2253
	word32 sp_2245
	call r2_2241 + 2 (retsize: 4; depth: 4)
		uses: ap_2216,C_2243,CVZN_2220,CZ_2231,CZN_2219,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2224,N_2215,r0_2222,r1_2230,r10_2227,r11_2233,r2_2241,r3_2223,r4_2225,r5_2218,r6_2221,r7_2229,r8_2228,r9_2226,sp_2239,V_2244,VZN_2232,Z_2214,ZN_2242
		defs: ap_2251,C_2247,CVZN_2255,CZ_2266,CZN_2254,fp_2259,N_2250,r0_2257,r1_2265,r10_2262,r11_2268,r2_2252,r3_2258,r4_2260,r5_2253,r6_2256,r7_2264,r8_2263,r9_2261,sp_2245,V_2248,VZN_2267,Z_2249,ZN_2246
	word32 r2_2269 = (uint32) Mem2240[sp_2245 + 42:word16]
	branch r2_2269 >=u 0x00000004 l00013DF3
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013DF3:
	Mem2315[sp_2245 + 44:word32] = Mem2240[0x000192D8:word32]
	Mem2317[sp_2245 + 24:word32] = Mem2315[0x000192BC:word32]
	Mem2319[sp_2245 + 20:word32] = Mem2317[0x000192C4:word32]
	r7_2323 = r7_2264
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013E24:
	word32 r7_2323
	word32 sp_2325 = sp_2245 - 0x00000004
	Mem2326[sp_2325:word32] = r7_2323
	word32 sp_2330
	byte ZN_2331
	bool C_2332
	bool V_2333
	bool Z_2334
	bool N_2335
	word32 ap_2336
	word32 r2_2337
	word32 r5_2338
	byte CZN_2339
	byte CVZN_2340
	word32 r6_2341
	word32 r0_2342
	word32 r3_2343
	word32 fp_2344
	word32 r4_2345
	word32 r9_2346
	word32 r10_2347
	word32 r8_2348
	word32 r7_2349
	word32 r1_2350
	byte CZ_2351
	byte VZN_2352
	word32 r11_2353
	call fn00000002 (retsize: 4; depth: 4)
		uses: ap_2251,C_2328,CVZN_2255,CZ_2266,CZN_2270,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2259,N_2250,r0_2257,r1_2265,r10_2262,r11_2268,r2_2269,r3_2258,r4_2260,r5_2253,r6_2256,r7_2323,r8_2263,r9_2313,sp_2325,V_2329,VZN_2267,Z_2249,ZN_2327
		defs: ap_2336,C_2332,CVZN_2340,CZ_2351,CZN_2339,fp_2344,N_2335,r0_2342,r1_2350,r10_2347,r11_2353,r2_2337,r3_2343,r4_2345,r5_2338,r6_2341,r7_2349,r8_2348,r9_2346,sp_2330,V_2333,VZN_2352,Z_2334,ZN_2331
	Mem2355[sp_2330 + 18:word16] = (word16) r0_2342
	Mem2358[sp_2330 - 0x00000004:word32] = r7_2349 + 2
	byte ZN_2363
	bool C_2364
	bool V_2365
	bool Z_2366
	bool N_2367
	word32 ap_2368
	word32 r2_2369
	byte CZN_2371
	byte CVZN_2372
	word32 r0_2374
	word32 r3_2375
	word32 fp_2376
	word32 r4_2377
	word32 r10_2379
	word32 r8_2380
	word32 r7_2381
	word32 r1_2382
	byte CZ_2383
	byte VZN_2384
	word32 r11_2385
	word32 r9_2378
	word32 r6_2373
	word32 r5_2370
	word32 sp_2362
	call Mem2358[sp_2330 + 0x00000020:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2336,C_2360,CVZN_2340,CZ_2351,CZN_2339,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2344,N_2335,r0_2342,r1_2350,r10_2347,r11_2353,r2_2337,r3_2343,r4_2345,r5_2338,r6_2341,r7_2349,r8_2348,r9_2346,sp_2356,V_2361,VZN_2352,Z_2334,ZN_2359
		defs: ap_2368,C_2364,CVZN_2372,CZ_2383,CZN_2371,fp_2376,N_2367,r0_2374,r1_2382,r10_2379,r11_2385,r2_2369,r3_2375,r4_2377,r5_2370,r6_2373,r7_2381,r8_2380,r9_2378,sp_2362,V_2365,VZN_2384,Z_2366,ZN_2363
	Mem2387[sp_2362 + 40:word16] = (word16) r0_2374
	Mem2392[sp_2362 + 42:int16] = (int16) ((uint32) Mem2387[sp_2362 + 42:word16] - 0x00000004)
	branch Mem2392[sp_2362 + 40:word16] <=u Mem2392[sp_2362 + 42:word16] l00013E81
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013E4E:
	Mem4605[sp_2362 - 0x00000004:uint32] = 0x00000421
	Mem4608[sp_2362 - 0x00000008:uint32] = (uint32) Mem4605[sp_2362 + 0x00000026:word16]
	Mem4611[sp_2362 - 0x0000000C:uint32] = (uint32) Mem4608[sp_2362 + 0x00000024:word16]
	Mem4614[sp_2362 - 0x00000010:uint32] = (uint32) Mem4611[sp_2362 + 0x0000000E:word16]
	Mem4617[sp_2362 - 0x00000014:word32] = r6_2373 + 3431
	Mem4620[sp_2362 - 0x00000018:word32] = r5_2370 + 1515
	word32 sp_4624
	byte ZN_4625
	bool C_4626
	bool V_4627
	bool Z_4628
	bool N_4629
	word32 ap_4630
	word32 r2_4631
	word32 r5_4632
	byte CZN_4633
	byte CVZN_4634
	word32 r6_4635
	word32 r0_4636
	word32 r3_4637
	word32 fp_4638
	word32 r4_4639
	word32 r9_4640
	word32 r10_4641
	word32 r8_4642
	word32 r7_4643
	word32 r1_4644
	byte CZ_4645
	byte VZN_4646
	word32 r11_4647
	call r9_2378 + 2 (retsize: 4; depth: 4)
		uses: ap_2368,C_4622,CVZN_2372,CZ_2394,CZN_2393,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2376,N_2367,r0_2390,r1_2382,r10_2379,r11_2385,r2_2369,r3_2375,r4_2377,r5_2370,r6_2373,r7_2388,r8_2380,r9_2378,sp_4618,V_4623,VZN_2384,Z_2366,ZN_4621
		defs: ap_4630,C_4626,CVZN_4634,CZ_4645,CZN_4633,fp_4638,N_4629,r0_4636,r1_4644,r10_4641,r11_4647,r2_4631,r3_4637,r4_4639,r5_4632,r6_4635,r7_4643,r8_4642,r9_4640,sp_4624,V_4627,VZN_4646,Z_4628,ZN_4625
	Mem4649[sp_4624 - 0x00000004:word32] = r0_4636
	Mem4652[sp_4624 - 0x00000008:word32] = r5_4632 + 1515
	Mem4654[sp_4624 - 0x0000000C:word32] = r5_4632
	word32 r2_4655 = Mem4654[r5_4632 + 0x0000C839:word32]
	byte ZN_4660
	bool C_4661
	bool V_4662
	bool Z_4663
	bool N_4664
	word32 ap_4665
	word32 r2_4666
	byte CZN_4668
	byte CVZN_4669
	word32 r0_4671
	word32 r3_4672
	word32 fp_4673
	word32 r4_4674
	word32 r10_4676
	word32 r8_4677
	word32 r7_4678
	word32 r1_4679
	byte CZ_4680
	byte VZN_4681
	word32 r11_4682
	call r2_4655 + 2 (retsize: 4; depth: 4)
		uses: ap_4630,C_4657,CVZN_4634,CZ_4645,CZN_4633,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4638,N_4629,r0_4636,r1_4644,r10_4641,r11_4647,r2_4655,r3_4637,r4_4639,r5_4632,r6_4635,r7_4643,r8_4642,r9_4640,sp_4653,V_4658,VZN_4646,Z_4628,ZN_4656
		defs: ap_4665,C_4661,CVZN_4669,CZ_4680,CZN_4668,fp_4673,N_4664,r0_4671,r1_4679,r10_4676,r11_4682,r2_4666,r3_4672,r4_4674,r5_4667,r6_4670,r7_4678,r8_4677,r9_4675,sp_4659,V_4662,VZN_4681,Z_4663,ZN_4660
	Mem4684[sp_2362 + 40:word16] = Mem4654[sp_2362 + 42:word16]
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013E81:
	word32 r2_2416 = (uint32) Mem2392[sp_2362 + 18:word16]
	branch r2_2416 >= 0x00000007 l00013E8D
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013E8D:
	branch r2_2416 > 0x0000000D l00013EA0
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013EA0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013E90_1:
	word32 sp_4579
	byte ZN_4580
	bool C_4581
	bool V_4582
	bool Z_4583
	bool N_4584
	word32 ap_4585
	word32 r2_4586
	word32 r5_4587
	byte CZN_4588
	byte CVZN_4589
	word32 r6_4590
	word32 r0_4591
	word32 r3_4592
	word32 fp_4593
	word32 r4_4594
	word32 r9_4595
	word32 r10_4596
	word32 r8_4597
	word32 r7_4598
	word32 r1_4599
	byte CZ_4600
	byte VZN_4601
	word32 r11_4602
	call 0x00013E94 + (r2_2416 - 0x00000007) * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_2415,C_4576,CVZN_2407,CZ_2398,CZN_2417,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2414,N_2418,r0_4574,r1_2399,r10_2402,r11_2396,r2_2416,r3_2405,r4_2404,r5_2408,r6_2406,r7_2400,r8_2401,r9_2403,sp_2413,V_4577,VZN_2397,Z_2409,ZN_4575
		defs: ap_4585,C_4581,CVZN_4589,CZ_4600,CZN_4588,fp_4593,N_4584,r0_4591,r1_4599,r10_4596,r11_4602,r2_4586,r3_4592,r4_4594,r5_4587,r6_4590,r7_4598,r8_4597,r9_4595,sp_4579,V_4582,VZN_4601,Z_4583,ZN_4580
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013E8A:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014080:
	word32 sp_2421 = sp_2362 - 0x00000004
	Mem2422[sp_2421:word32] = 0x00000000
	Mem2425[sp_2421 - 0x00000004:uint32] = (uint32) Mem2422[sp_2421 + 0x00000028:word16]
	word32 r3_2420 = r6_2373 + 3904
	Mem2427[sp_2421 - 0x00000008:word32] = r3_2420
	word32 r4_2428 = (uint32) Mem2427[sp_2421 + 0x00000016:word16]
	Mem2430[sp_2421 - 0x0000000C:word32] = r4_2428
	Mem2433[sp_2421 - 0x00000010:word32] = r6_2373 + 3607
	Mem2436[sp_2421 - 0x00000014:word32] = r5_2370 + 1515
	word32 sp_2440
	byte ZN_2441
	bool C_2442
	bool V_2443
	bool Z_2444
	bool N_2445
	word32 ap_2446
	word32 r2_2447
	word32 r5_2448
	byte CZN_2449
	byte CVZN_2450
	word32 r6_2451
	word32 r0_2452
	word32 r3_2453
	word32 fp_2454
	word32 r4_2455
	word32 r9_2456
	word32 r10_2457
	word32 r8_2458
	word32 r7_2459
	word32 r1_2460
	byte CZ_2461
	byte VZN_2462
	word32 r11_2463
	call r9_2378 + 2 (retsize: 4; depth: 4)
		uses: ap_2415,C_2438,CVZN_2407,CZ_2398,CZN_2417,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2414,N_2418,r0_2410,r1_2399,r10_2402,r11_2396,r2_2416,r3_2420,r4_2428,r5_2408,r6_2406,r7_2400,r8_2401,r9_2403,sp_2434,V_2439,VZN_2397,Z_2409,ZN_2437
		defs: ap_2446,C_2442,CVZN_2450,CZ_2461,CZN_2449,fp_2454,N_2445,r0_2452,r1_2460,r10_2457,r11_2463,r2_2447,r3_2453,r4_2455,r5_2448,r6_2451,r7_2459,r8_2458,r9_2456,sp_2440,V_2443,VZN_2462,Z_2444,ZN_2441
	Mem2465[sp_2440 - 0x00000004:word32] = r0_2452
	Mem2468[sp_2440 - 0x00000008:word32] = r5_2448 + 1515
	Mem2470[sp_2440 - 0x0000000C:word32] = r5_2448
	word32 r2_2471 = Mem2470[r5_2448 + 0x0000C839:word32]
	byte ZN_2476
	bool C_2477
	bool V_2478
	bool Z_2479
	bool N_2480
	word32 ap_2481
	word32 r2_2482
	byte CZN_2484
	byte CVZN_2485
	word32 r6_2486
	word32 r0_2487
	word32 r3_2488
	word32 fp_2489
	word32 r4_2490
	word32 r9_2491
	word32 r10_2492
	word32 r7_2494
	word32 r1_2495
	byte CZ_2496
	byte VZN_2497
	word32 r11_2498
	word32 r8_2493
	word32 r5_2483
	word32 sp_2475
	call r2_2471 + 2 (retsize: 4; depth: 4)
		uses: ap_2446,C_2473,CVZN_2450,CZ_2461,CZN_2449,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2454,N_2445,r0_2452,r1_2460,r10_2457,r11_2463,r2_2471,r3_2453,r4_2455,r5_2448,r6_2451,r7_2459,r8_2458,r9_2456,sp_2469,V_2474,VZN_2462,Z_2444,ZN_2472
		defs: ap_2481,C_2477,CVZN_2485,CZ_2496,CZN_2484,fp_2489,N_2480,r0_2487,r1_2495,r10_2492,r11_2498,r2_2482,r3_2488,r4_2490,r5_2483,r6_2486,r7_2494,r8_2493,r9_2491,sp_2475,V_2478,VZN_2497,Z_2479,ZN_2476
	branch r4_2490 >= 0x00000009 l000140BB
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140BB:
	branch r4_2490 != 0x00000009 l000140C0
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140C0:
	branch r4_2490 >= 0x00002605 l000140CC
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140CC:
	branch r4_2490 != 0x00002605 l000140D1
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140D1:
	branch r4_2490 >= 0x00004453 l000140DD
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140DD:
	branch r4_2490 != 0x00004453 l000140E2
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140E2:
	branch r4_2490 >= 0x00004B46 l000140EE
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140EE:
	branch r4_2490 != 0x00004B46 l000140F3
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140F3:
	branch r4_2490 >= 0x00004C41 l000140FF
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140FF:
	branch r4_2490 == 0x00004C41 l00014154
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014101:
	branch r4_2490 >= 0x00004D49 l0001410D
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001410D:
	branch r4_2490 != 0x00004D49 l00014112
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014112:
	branch r4_2490 >= 0x00005356 l0001411E
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001411E:
	branch r4_2490 != 0x00005356 l00014123
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014123:
	branch r4_2490 >= 0x00005455 l0001412F
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001412F:
	branch r4_2490 != 0x00005455 l00014134
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014134:
	branch r4_2490 >= 0x00006542 l00014140
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014140:
	branch r4_2490 != 0x00006542 l00014145
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014145:
	branch r4_2490 != 0x0000FB4A l00014151
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014151:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001414E:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014504:
	word32 r0_4488 = (uint32) Mem2470[sp_2475 + 40:word16]
	branch r0_4488 >=u 0x00000004 l00014510
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014510:
	Mem4493[sp_2475 - 0x00000004:word32] = 0x00000000
	Mem4496[sp_2475 - 0x00000008:uint32] = (uint32) Mem4493[r7_2494 + 3:byte]
	Mem4499[sp_2475 - 0x0000000C:uint32] = (uint32) Mem4496[r7_2494 + 2:byte]
	Mem4502[sp_2475 - 0x00000010:uint32] = (uint32) Mem4499[r7_2494 + 1:byte]
	Mem4505[sp_2475 - 0x00000014:uint32] = (uint32) Mem4502[r7_2494:byte]
	Mem4508[sp_2475 - 0x00000018:word32] = r6_2486 + 4591
	Mem4511[sp_2475 - 0x0000001C:word32] = r5_2483 + 1515
	word32 sp_4515
	byte ZN_4516
	bool C_4517
	bool V_4518
	bool Z_4519
	bool N_4520
	word32 ap_4521
	word32 r2_4522
	word32 r5_4523
	byte CZN_4524
	byte CVZN_4525
	word32 r6_4526
	word32 r0_4527
	word32 r3_4528
	word32 fp_4529
	word32 r4_4530
	word32 r9_4531
	word32 r10_4532
	word32 r8_4533
	word32 r7_4534
	word32 r1_4535
	byte CZ_4536
	byte VZN_4537
	word32 r11_4538
	call r9_2491 + 2 (retsize: 4; depth: 4)
		uses: ap_2481,C_4513,CVZN_4354,CZ_4351,CZN_4489,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2489,N_4350,r0_4488,r1_2495,r10_2492,r11_2498,r2_2499,r3_2488,r4_2490,r5_2483,r6_2486,r7_2494,r8_2493,r9_2491,sp_4509,V_4514,VZN_4353,Z_4486,ZN_4512
		defs: ap_4521,C_4517,CVZN_4525,CZ_4536,CZN_4524,fp_4529,N_4520,r0_4527,r1_4535,r10_4532,r11_4538,r2_4522,r3_4528,r4_4530,r5_4523,r6_4526,r7_4534,r8_4533,r9_4531,sp_4515,V_4518,VZN_4537,Z_4519,ZN_4516
	Mem4540[sp_4515 - 0x00000004:word32] = r0_4527
	Mem4543[sp_4515 - 0x00000008:word32] = r5_4523 + 1515
	Mem4545[sp_4515 - 0x0000000C:word32] = r5_4523
	word32 r2_4546 = Mem4545[r5_4523 + 0x0000C839:word32]
	byte ZN_4551
	bool C_4552
	bool V_4553
	bool Z_4554
	bool N_4555
	word32 ap_4556
	word32 r2_4557
	byte CZN_4559
	byte CVZN_4560
	word32 r6_4561
	word32 r0_4562
	word32 r3_4563
	word32 fp_4564
	word32 r4_4565
	word32 r9_4566
	word32 r10_4567
	word32 r7_4569
	word32 r1_4570
	byte CZ_4571
	byte VZN_4572
	word32 r11_4573
	call r2_4546 + 2 (retsize: 4; depth: 4)
		uses: ap_4521,C_4548,CVZN_4525,CZ_4536,CZN_4524,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4529,N_4520,r0_4527,r1_4535,r10_4532,r11_4538,r2_4546,r3_4528,r4_4530,r5_4523,r6_4526,r7_4534,r8_4533,r9_4531,sp_4544,V_4549,VZN_4537,Z_4519,ZN_4547
		defs: ap_4556,C_4552,CVZN_4560,CZ_4571,CZN_4559,fp_4564,N_4555,r0_4562,r1_4570,r10_4567,r11_4573,r2_4557,r3_4563,r4_4565,r5_4558,r6_4561,r7_4569,r8_4568,r9_4566,sp_4550,V_4553,VZN_4572,Z_4554,ZN_4551
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001450D:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014142:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000144AC:
	word32 r0_4355 = (uint32) Mem2470[sp_2475 + 40:word16]
	branch r0_4355 >=u 0x00000005 l000144B8
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000144B8:
	word32 r3_4365
	Mem4360[sp_2475 - 0x00000004:word32] = 0x00000000
	word32 r2_4361 = (uint32) Mem4360[r7_2494 + 4:byte]
	branch (r2_4361 & 0x00000001) == 0x00000000 l000144C8
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000144C8:
	r3_4365 = r6_2486
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000144C1:
	r3_4365 = r8_2493 + 214
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000144CB:
	Mem4367[sp_2475 - 0x00000008:word32] = r3_4365
	Mem4369[sp_2475 - 0x0000000C:word32] = r7_2494
	word32 sp_4373
	byte ZN_4374
	bool C_4375
	bool V_4376
	bool Z_4377
	bool N_4378
	word32 ap_4379
	word32 r2_4380
	word32 r5_4381
	byte CZN_4382
	byte CVZN_4383
	word32 r6_4384
	word32 r0_4385
	word32 r3_4386
	word32 fp_4387
	word32 r4_4388
	word32 r9_4389
	word32 r10_4390
	word32 r8_4391
	word32 r7_4392
	word32 r1_4393
	byte CZ_4394
	byte VZN_4395
	word32 r11_4396
	call Mem4369[sp_2475 + 0x0000001C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2481,C_4371,CVZN_4354,CZ_4351,CZN_4356,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2489,N_4350,r0_4355,r1_2495,r10_2492,r11_2498,r2_4361,r3_4365,r4_2490,r5_2483,r6_2486,r7_2494,r8_2493,r9_2491,sp_4368,V_4372,VZN_4353,Z_4349,ZN_4370
		defs: ap_4379,C_4375,CVZN_4383,CZ_4394,CZN_4382,fp_4387,N_4378,r0_4385,r1_4393,r10_4390,r11_4396,r2_4380,r3_4386,r4_4388,r5_4381,r6_4384,r7_4392,r8_4391,r9_4389,sp_4373,V_4376,VZN_4395,Z_4377,ZN_4374
	Mem4398[sp_4373 - 0x00000004:word32] = r0_4385
	Mem4401[sp_4373 - 0x00000008:word32] = r6_4384 + 4512
	Mem4404[sp_4373 - 0x0000000C:word32] = r5_4381 + 1515
	word32 sp_4408
	byte ZN_4409
	bool C_4410
	bool V_4411
	bool Z_4412
	bool N_4413
	word32 ap_4414
	word32 r2_4415
	word32 r5_4416
	byte CZN_4417
	byte CVZN_4418
	word32 r6_4419
	word32 r0_4420
	word32 r3_4421
	word32 fp_4422
	word32 r4_4423
	word32 r9_4424
	word32 r10_4425
	word32 r8_4426
	word32 r7_4427
	word32 r1_4428
	byte CZ_4429
	byte VZN_4430
	word32 r11_4431
	call r9_4389 + 2 (retsize: 4; depth: 4)
		uses: ap_4379,C_4406,CVZN_4383,CZ_4394,CZN_4382,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4387,N_4378,r0_4385,r1_4393,r10_4390,r11_4396,r2_4380,r3_4386,r4_4388,r5_4381,r6_4384,r7_4392,r8_4391,r9_4389,sp_4402,V_4407,VZN_4395,Z_4377,ZN_4405
		defs: ap_4414,C_4410,CVZN_4418,CZ_4429,CZN_4417,fp_4422,N_4413,r0_4420,r1_4428,r10_4425,r11_4431,r2_4415,r3_4421,r4_4423,r5_4416,r6_4419,r7_4427,r8_4426,r9_4424,sp_4408,V_4411,VZN_4430,Z_4412,ZN_4409
	Mem4433[sp_4408 - 0x00000004:word32] = r0_4420
	Mem4436[sp_4408 - 0x00000008:word32] = r5_4416 + 1515
	Mem4438[sp_4408 - 0x0000000C:word32] = r5_4416
	word32 r2_4439 = Mem4438[r5_4416 + 0x0000C839:word32]
	byte ZN_4444
	bool C_4445
	bool V_4446
	bool Z_4447
	bool N_4448
	word32 ap_4449
	word32 r2_4450
	byte CZN_4452
	byte CVZN_4453
	word32 r6_4454
	word32 r0_4455
	word32 r3_4456
	word32 fp_4457
	word32 r4_4458
	word32 r9_4459
	word32 r10_4460
	word32 r7_4462
	word32 r1_4463
	byte CZ_4464
	byte VZN_4465
	word32 r11_4466
	call r2_4439 + 2 (retsize: 4; depth: 4)
		uses: ap_4414,C_4441,CVZN_4418,CZ_4429,CZN_4417,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4422,N_4413,r0_4420,r1_4428,r10_4425,r11_4431,r2_4439,r3_4421,r4_4423,r5_4416,r6_4419,r7_4427,r8_4426,r9_4424,sp_4437,V_4442,VZN_4430,Z_4412,ZN_4440
		defs: ap_4449,C_4445,CVZN_4453,CZ_4464,CZN_4452,fp_4457,N_4448,r0_4455,r1_4463,r10_4460,r11_4466,r2_4450,r3_4456,r4_4458,r5_4451,r6_4454,r7_4462,r8_4461,r9_4459,sp_4443,V_4446,VZN_4465,Z_4447,ZN_4444
	branch ((uint32) Mem4438[r7_4462 + 4:byte] & 0x00000001) == 0x00000000 l000144FC
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000144FC:
	Mem4472[Mem4472[ap_4449 + 4:word32]:word32] = 0x00000000
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000144F9:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000144B5:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001413D:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014131:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001432C:
	word32 r0_3982 = (uint32) Mem2470[sp_2475 + 40:word16]
	branch r0_3982 >=u 0x00000001 l00014338
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014338:
	word32 fp_4012
	word32 r6_4004
	word32 r9_4001
	word32 r7_3998
	Mem3989[fp_2489 + -154:byte] = 0x00
	word32 r4_3986 = 0x00000000
	word32 r2_3990 = (uint32) Mem3989[r7_2494:byte]
	r7_3998 = r7_2494
	r9_4001 = r9_2491
	r6_4004 = r6_2486
	fp_4012 = fp_2489
	branch (r2_3990 & 0x00000001) == 0x00000000 l00014355
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014347:
	Mem4313[sp_2475 - 0x00000004:word32] = r6_2486 + 4380
	Mem4316[sp_2475 - 0x00000008:word32] = fp_2489 + -154
	byte ZN_4321
	bool C_4322
	bool V_4323
	bool Z_4324
	bool N_4325
	word32 ap_4326
	word32 r2_4327
	byte CZN_4329
	byte CVZN_4330
	word32 r0_4332
	word32 r3_4333
	word32 r4_4335
	word32 r10_4337
	word32 r1_4340
	byte CZ_4341
	byte VZN_4342
	word32 r11_4343
	call Mem4316[sp_2475 + 0x00000018:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2481,C_4318,CVZN_3981,CZ_3978,CZN_3983,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2489,N_3977,r0_3982,r1_2495,r10_2492,r11_2498,r2_3990,r3_2488,r4_3986,r5_2483,r6_2486,r7_2494,r8_2493,r9_2491,sp_4314,V_4319,VZN_3980,Z_3976,ZN_4317
		defs: ap_4326,C_4322,CVZN_4330,CZ_4341,CZN_4329,fp_4334,N_4325,r0_4332,r1_4340,r10_4337,r11_4343,r2_4327,r3_4333,r4_4335,r5_4328,r6_4331,r7_4339,r8_4338,r9_4336,sp_4320,V_4323,VZN_4342,Z_4324,ZN_4321
	r4_3986 = 0x00000001
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:0x00000000 r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014355:
	word32 r2_4014 = (uint32) Mem3989[r7_3998:byte]
	branch (r2_4014 & 0x00000002) == 0x00000000 l0001438D
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001435C:
	word32 sp_4232 = sp_2475 - 0x00000004
	Mem4234[sp_4232:word32] = fp_4012 + -154
	word32 sp_4238
	byte ZN_4239
	bool C_4240
	bool V_4241
	bool Z_4242
	bool N_4243
	word32 ap_4244
	word32 r2_4245
	word32 r5_4246
	byte CZN_4247
	byte CVZN_4248
	word32 r6_4249
	word32 r0_4250
	word32 r3_4251
	word32 fp_4252
	word32 r4_4253
	word32 r9_4254
	word32 r10_4255
	word32 r8_4256
	word32 r7_4257
	word32 r1_4258
	byte CZ_4259
	byte VZN_4260
	word32 r11_4261
	call Mem4234[sp_4232 + 24:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_4013,C_4236,CVZN_4005,CZ_3996,CZN_4006,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4012,N_4008,r0_4010,r1_3997,r10_4000,r11_3994,r2_4014,r3_4003,r4_4002,r5_4007,r6_4004,r7_3998,r8_3999,r9_4001,sp_4232,V_4237,VZN_3995,Z_4009,ZN_4235
		defs: ap_4244,C_4240,CVZN_4248,CZ_4259,CZN_4247,fp_4252,N_4243,r0_4250,r1_4258,r10_4255,r11_4261,r2_4245,r3_4251,r4_4253,r5_4246,r6_4249,r7_4257,r8_4256,r9_4254,sp_4238,V_4241,VZN_4260,Z_4242,ZN_4239
	word32 r3_4262 = r0_4250
	branch r4_4253 == 0x00000000 l00014376
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001436B:
	Mem4307[fp_4252 + -154:byte] = 0x2F
	r3_4262 = r0_4250 + 0x00000001
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014376:
	Mem4270[sp_4238 - 0x00000004:word32] = r6_4249 + 4393
	Mem4274[sp_4238 - 0x00000008:word32] = fp_4252 + -154 + r3_4262
	byte ZN_4277
	bool C_4278
	bool V_4279
	bool Z_4280
	bool N_4281
	word32 ap_4282
	word32 r2_4283
	byte CZN_4285
	byte CVZN_4286
	word32 r0_4288
	word32 r3_4289
	word32 r4_4291
	word32 r10_4293
	word32 r1_4296
	byte CZ_4297
	byte VZN_4298
	word32 r11_4299
	call Mem4274[sp_4238 + 0x00000018:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_4244,C_4265,CVZN_4275,CZ_4259,CZN_4247,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4252,N_4243,r0_4250,r1_4258,r10_4255,r11_4261,r2_4271,r3_4267,r4_4253,r5_4246,r6_4249,r7_4257,r8_4256,r9_4254,sp_4272,V_4266,VZN_4260,Z_4264,ZN_4263
		defs: ap_4282,C_4278,CVZN_4286,CZ_4297,CZN_4285,fp_4290,N_4281,r0_4288,r1_4296,r10_4293,r11_4299,r2_4283,r3_4289,r4_4291,r5_4284,r6_4287,r7_4295,r8_4294,r9_4292,sp_4276,V_4279,VZN_4298,Z_4280,ZN_4277
	Mem4302[Mem4302[ap_4282 + 4:word32]:word32] = Mem4274[ap_4282 + 4:word32] + 0x00000004
	r4_3986 = r4_4291 + 0x00000001
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001438D:
	word32 r2_4038 = (uint32) Mem3989[r7_3998:byte]
	branch (r2_4038 & 0x00000004) == 0x00000000 l000143C5
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014394:
	word32 sp_4153 = sp_2475 - 0x00000004
	Mem4155[sp_4153:word32] = fp_4012 + -154
	word32 sp_4159
	byte ZN_4160
	bool C_4161
	bool V_4162
	bool Z_4163
	bool N_4164
	word32 ap_4165
	word32 r2_4166
	word32 r5_4167
	byte CZN_4168
	byte CVZN_4169
	word32 r6_4170
	word32 r0_4171
	word32 r3_4172
	word32 fp_4173
	word32 r4_4174
	word32 r9_4175
	word32 r10_4176
	word32 r8_4177
	word32 r7_4178
	word32 r1_4179
	byte CZ_4180
	byte VZN_4181
	word32 r11_4182
	call Mem4155[sp_4153 + 24:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_4037,C_4157,CVZN_4029,CZ_4020,CZN_4030,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4036,N_4032,r0_4034,r1_4021,r10_4024,r11_4018,r2_4038,r3_4027,r4_4026,r5_4031,r6_4028,r7_4022,r8_4023,r9_4025,sp_4153,V_4158,VZN_4019,Z_4033,ZN_4156
		defs: ap_4165,C_4161,CVZN_4169,CZ_4180,CZN_4168,fp_4173,N_4164,r0_4171,r1_4179,r10_4176,r11_4182,r2_4166,r3_4172,r4_4174,r5_4167,r6_4170,r7_4178,r8_4177,r9_4175,sp_4159,V_4162,VZN_4181,Z_4163,ZN_4160
	word32 r3_4183 = r0_4171
	branch r4_4174 == 0x00000000 l000143AE
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000143A3:
	Mem4228[fp_4173 + -154:byte] = 0x2F
	r3_4183 = r0_4171 + 0x00000001
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000143AE:
	Mem4191[sp_4159 - 0x00000004:word32] = r6_4170 + 4400
	Mem4195[sp_4159 - 0x00000008:word32] = fp_4173 + -154 + r3_4183
	byte ZN_4198
	bool C_4199
	bool V_4200
	bool Z_4201
	bool N_4202
	word32 ap_4203
	word32 r2_4204
	byte CZN_4206
	byte CVZN_4207
	word32 r0_4209
	word32 r3_4210
	word32 r4_4212
	word32 r10_4214
	word32 r7_4216
	word32 r1_4217
	byte CZ_4218
	byte VZN_4219
	word32 r11_4220
	call Mem4195[sp_4159 + 0x00000018:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_4165,C_4186,CVZN_4196,CZ_4180,CZN_4168,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4173,N_4164,r0_4171,r1_4179,r10_4176,r11_4182,r2_4192,r3_4188,r4_4174,r5_4167,r6_4170,r7_4178,r8_4177,r9_4175,sp_4193,V_4187,VZN_4181,Z_4185,ZN_4184
		defs: ap_4203,C_4199,CVZN_4207,CZ_4218,CZN_4206,fp_4211,N_4202,r0_4209,r1_4217,r10_4214,r11_4220,r2_4204,r3_4210,r4_4212,r5_4205,r6_4208,r7_4216,r8_4215,r9_4213,sp_4197,V_4200,VZN_4219,Z_4201,ZN_4198
	Mem4223[Mem4223[ap_4203 + 4:word32]:word32] = Mem4195[ap_4203 + 4:word32] + 0x00000004
	r4_3986 = r4_4212 + 0x00000001
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000143C5:
	branch r4_3986 > 0x00000000 l000143CC
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000143CC:
	word32 r3_4071
	word32 sp_4066 = sp_2475 - 0x00000004
	Mem4067[sp_4066:word32] = 0x00000000
	branch r4_3986 != 0x00000001 l000143D8
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000143D8:
	r3_4071 = r8_2493 + 207
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000143D3:
	r3_4071 = r6_4004
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000143DD:
	Mem4073[sp_4066 - 0x00000004:word32] = r3_4071
	Mem4076[sp_4066 - 0x00000008:word32] = fp_4012 + -154
	Mem4079[sp_4066 - 0x0000000C:word32] = r6_4004 + 4330
	Mem4082[sp_4066 - 0x00000010:word32] = r5_2483 + 1515
	word32 sp_4086
	byte ZN_4087
	bool C_4088
	bool V_4089
	bool Z_4090
	bool N_4091
	word32 ap_4092
	word32 r2_4093
	word32 r5_4094
	byte CZN_4095
	byte CVZN_4096
	word32 r6_4097
	word32 r0_4098
	word32 r3_4099
	word32 fp_4100
	word32 r4_4101
	word32 r9_4102
	word32 r10_4103
	word32 r8_4104
	word32 r7_4105
	word32 r1_4106
	byte CZ_4107
	byte VZN_4108
	word32 r11_4109
	call r9_4001 + 2 (retsize: 4; depth: 4)
		uses: ap_4062,C_4084,CVZN_4053,CZ_4044,CZN_4068,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4061,N_4057,r0_4059,r1_4045,r10_4048,r11_4042,r2_4056,r3_4071,r4_4050,r5_4055,r6_4052,r7_4046,r8_4047,r9_4049,sp_4080,V_4085,VZN_4043,Z_4069,ZN_4083
		defs: ap_4092,C_4088,CVZN_4096,CZ_4107,CZN_4095,fp_4100,N_4091,r0_4098,r1_4106,r10_4103,r11_4109,r2_4093,r3_4099,r4_4101,r5_4094,r6_4097,r7_4105,r8_4104,r9_4102,sp_4086,V_4089,VZN_4108,Z_4090,ZN_4087
	Mem4111[sp_4086 - 0x00000004:word32] = r0_4098
	Mem4114[sp_4086 - 0x00000008:word32] = r5_4094 + 1515
	Mem4116[sp_4086 - 0x0000000C:word32] = r5_4094
	word32 r2_4117 = Mem4116[r5_4094 + 0x0000C839:word32]
	byte ZN_4122
	bool C_4123
	bool V_4124
	bool Z_4125
	bool N_4126
	word32 ap_4127
	word32 r2_4128
	byte CZN_4130
	byte CVZN_4131
	word32 r6_4132
	word32 r0_4133
	word32 r3_4134
	word32 fp_4135
	word32 r4_4136
	word32 r9_4137
	word32 r10_4138
	word32 r7_4140
	word32 r1_4141
	byte CZ_4142
	byte VZN_4143
	word32 r11_4144
	call r2_4117 + 2 (retsize: 4; depth: 4)
		uses: ap_4092,C_4119,CVZN_4096,CZ_4107,CZN_4095,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4100,N_4091,r0_4098,r1_4106,r10_4103,r11_4109,r2_4117,r3_4099,r4_4101,r5_4094,r6_4097,r7_4105,r8_4104,r9_4102,sp_4115,V_4120,VZN_4108,Z_4090,ZN_4118
		defs: ap_4127,C_4123,CVZN_4131,CZ_4142,CZN_4130,fp_4135,N_4126,r0_4133,r1_4141,r10_4138,r11_4144,r2_4128,r3_4134,r4_4136,r5_4129,r6_4132,r7_4140,r8_4139,r9_4137,sp_4121,V_4124,VZN_4143,Z_4125,ZN_4122
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000143C9:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014335:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001412C:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014120:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014544:
	branch (uint32) Mem2470[sp_2475 + 40:word16] >=u 0x00000005 l00014550
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014550:
	Mem3968[sp_2475 - 0x00000004:word32] = 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001454D:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001411B:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001410F:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000141DC:
	word32 r10_3411 = (uint32) Mem2470[sp_2475 + 40:word16]
	branch r10_3411 >=u 0x00000008 l000141E8
// DataOut: ap fp r0 r10 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000141E8:
	Mem3417[sp_2475 - 0x00000004:word32] = r7_2494 + 0x00000004
	word32 sp_3419
	byte ZN_3420
	bool C_3421
	bool V_3422
	bool Z_3423
	bool N_3424
	word32 ap_3425
	word32 r2_3426
	word32 r5_3427
	byte CZN_3428
	byte CVZN_3429
	word32 r6_3430
	word32 r0_3431
	word32 r3_3432
	word32 fp_3433
	word32 r4_3434
	word32 r9_3435
	word32 r10_3436
	word32 r8_3437
	word32 r7_3438
	word32 r1_3439
	byte CZ_3440
	byte VZN_3441
	word32 r11_3442
	call Mem3417[sp_2475 + 0x00000020:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2481,C_3413,CVZN_3418,CZ_3407,CZN_3412,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2489,N_3406,r0_2487,r1_2495,r10_3411,r11_2498,r2_2499,r3_2488,r4_2490,r5_2483,r6_2486,r7_2494,r8_2493,r9_2491,sp_3415,V_3414,VZN_3409,Z_3405,ZN_3404
		defs: ap_3425,C_3421,CVZN_3429,CZ_3440,CZN_3428,fp_3433,N_3424,r0_3431,r1_3439,r10_3436,r11_3442,r2_3426,r3_3432,r4_3434,r5_3427,r6_3430,r7_3438,r8_3437,r9_3435,sp_3419,V_3422,VZN_3441,Z_3423,ZN_3420
	Mem3447[fp_3433 + -74:byte] = 0x00
	word32 r4_3444 = (uint32) (word16) r0_3431 & ~0xFFFFFFF8
	branch r4_3444 <= 0x00000003 l00014209
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014206:
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014209:
	word32 r3_3490
	Mem3452[sp_3419 - 0x00000004:word32] = 0x00000004
	Mem3455[sp_3419 - 0x00000008:word32] = r8_3437 + 105
	Mem3457[sp_3419 - 0x0000000C:word32] = r7_3438
	byte ZN_3462
	bool C_3463
	bool V_3464
	bool Z_3465
	bool N_3466
	word32 ap_3467
	word32 r2_3468
	word32 r5_3469
	byte CZN_3470
	byte CVZN_3471
	word32 r6_3472
	word32 r0_3473
	word32 r3_3474
	word32 r4_3476
	word32 r9_3477
	word32 r10_3478
	word32 r8_3479
	word32 r1_3481
	byte CZ_3482
	byte VZN_3483
	word32 r11_3484
	word32 r7_3480
	word32 sp_3461
	word32 fp_3475
	call Mem3457[sp_3419 + 0x0000002C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3425,C_3459,CVZN_3429,CZ_3440,CZN_3448,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3433,N_3424,r0_3431,r1_3439,r10_3436,r11_3442,r2_3445,r3_3432,r4_3444,r5_3427,r6_3430,r7_3438,r8_3437,r9_3435,sp_3456,V_3460,VZN_3441,Z_3423,ZN_3458
		defs: ap_3467,C_3463,CVZN_3471,CZ_3482,CZN_3470,fp_3475,N_3466,r0_3473,r1_3481,r10_3478,r11_3484,r2_3468,r3_3474,r4_3476,r5_3469,r6_3472,r7_3480,r8_3479,r9_3477,sp_3461,V_3464,VZN_3483,Z_3465,ZN_3462
	branch r0_3473 != 0x00000000 l00014220
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014220:
	Mem3607[sp_3461 - 0x00000004:word32] = 0x00000004
	Mem3610[sp_3461 - 0x00000008:word32] = r8_3479 + 114
	Mem3612[sp_3461 - 0x0000000C:word32] = r7_3480
	byte ZN_3617
	bool C_3618
	bool V_3619
	bool Z_3620
	bool N_3621
	word32 ap_3622
	word32 r2_3623
	word32 r5_3624
	byte CZN_3625
	byte CVZN_3626
	word32 r6_3627
	word32 r0_3628
	word32 r3_3629
	word32 r4_3631
	word32 r9_3632
	word32 r10_3633
	word32 r8_3634
	word32 r1_3636
	byte CZ_3637
	byte VZN_3638
	word32 r11_3639
	call Mem3612[sp_3461 + 0x0000002C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3467,C_3614,CVZN_3471,CZ_3482,CZN_3470,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3475,N_3466,r0_3473,r1_3481,r10_3478,r11_3484,r2_3468,r3_3474,r4_3476,r5_3469,r6_3472,r7_3480,r8_3479,r9_3477,sp_3611,V_3615,VZN_3483,Z_3486,ZN_3613
		defs: ap_3622,C_3618,CVZN_3626,CZ_3637,CZN_3625,fp_3630,N_3621,r0_3628,r1_3636,r10_3633,r11_3639,r2_3623,r3_3629,r4_3631,r5_3624,r6_3627,r7_3635,r8_3634,r9_3632,sp_3616,V_3619,VZN_3638,Z_3620,ZN_3617
	branch r0_3628 != 0x00000000 l00014238
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014238:
	Mem3649[sp_3461 - 0x00000004:word32] = 0x00000004
	Mem3652[sp_3461 - 0x00000008:word32] = r8_3634 + 126
	Mem3654[sp_3461 - 0x0000000C:word32] = r7_3480
	byte ZN_3659
	bool C_3660
	bool V_3661
	bool Z_3662
	bool N_3663
	word32 ap_3664
	word32 r2_3665
	word32 r5_3666
	byte CZN_3667
	byte CVZN_3668
	word32 r6_3669
	word32 r0_3670
	word32 r3_3671
	word32 r4_3673
	word32 r9_3674
	word32 r10_3675
	word32 r8_3676
	word32 r1_3678
	byte CZ_3679
	byte VZN_3680
	word32 r11_3681
	call Mem3654[sp_3461 + 0x0000002C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3622,C_3656,CVZN_3626,CZ_3637,CZN_3625,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3630,N_3621,r0_3628,r1_3636,r10_3633,r11_3639,r2_3623,r3_3629,r4_3631,r5_3624,r6_3627,r7_3635,r8_3634,r9_3632,sp_3653,V_3657,VZN_3638,Z_3641,ZN_3655
		defs: ap_3664,C_3660,CVZN_3668,CZ_3679,CZN_3667,fp_3672,N_3663,r0_3670,r1_3678,r10_3675,r11_3681,r2_3665,r3_3671,r4_3673,r5_3666,r6_3669,r7_3677,r8_3676,r9_3674,sp_3658,V_3661,VZN_3680,Z_3662,ZN_3659
	branch r0_3670 != 0x00000000 l00014250
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014250:
	Mem3691[sp_3461 - 0x00000004:word32] = 0x00000004
	Mem3694[sp_3461 - 0x00000008:word32] = r8_3676 + 138
	Mem3696[sp_3461 - 0x0000000C:word32] = r7_3480
	byte ZN_3701
	bool C_3702
	bool V_3703
	bool Z_3704
	bool N_3705
	word32 ap_3706
	word32 r2_3707
	word32 r5_3708
	byte CZN_3709
	byte CVZN_3710
	word32 r6_3711
	word32 r0_3712
	word32 r3_3713
	word32 r4_3715
	word32 r9_3716
	word32 r10_3717
	word32 r8_3718
	word32 r1_3720
	byte CZ_3721
	byte VZN_3722
	word32 r11_3723
	call Mem3696[sp_3461 + 0x0000002C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3664,C_3698,CVZN_3668,CZ_3679,CZN_3667,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3672,N_3663,r0_3670,r1_3678,r10_3675,r11_3681,r2_3665,r3_3671,r4_3673,r5_3666,r6_3669,r7_3677,r8_3676,r9_3674,sp_3695,V_3699,VZN_3680,Z_3683,ZN_3697
		defs: ap_3706,C_3702,CVZN_3710,CZ_3721,CZN_3709,fp_3714,N_3705,r0_3712,r1_3720,r10_3717,r11_3723,r2_3707,r3_3713,r4_3715,r5_3708,r6_3711,r7_3719,r8_3718,r9_3716,sp_3700,V_3703,VZN_3722,Z_3704,ZN_3701
	branch r0_3712 != 0x00000000 l00014268
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014268:
	Mem3733[sp_3461 - 0x00000004:word32] = 0x00000004
	Mem3736[sp_3461 - 0x00000008:word32] = r8_3718 + 150
	Mem3738[sp_3461 - 0x0000000C:word32] = r7_3480
	byte ZN_3743
	bool C_3744
	bool V_3745
	bool Z_3746
	bool N_3747
	word32 ap_3748
	word32 r2_3749
	word32 r5_3750
	byte CZN_3751
	byte CVZN_3752
	word32 r6_3753
	word32 r0_3754
	word32 r3_3755
	word32 r4_3757
	word32 r9_3758
	word32 r10_3759
	word32 r8_3760
	word32 r1_3762
	byte CZ_3763
	byte VZN_3764
	word32 r11_3765
	call Mem3738[sp_3461 + 0x0000002C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3706,C_3740,CVZN_3710,CZ_3721,CZN_3709,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3714,N_3705,r0_3712,r1_3720,r10_3717,r11_3723,r2_3707,r3_3713,r4_3715,r5_3708,r6_3711,r7_3719,r8_3718,r9_3716,sp_3737,V_3741,VZN_3722,Z_3725,ZN_3739
		defs: ap_3748,C_3744,CVZN_3752,CZ_3763,CZN_3751,fp_3756,N_3747,r0_3754,r1_3762,r10_3759,r11_3765,r2_3749,r3_3755,r4_3757,r5_3750,r6_3753,r7_3761,r8_3760,r9_3758,sp_3742,V_3745,VZN_3764,Z_3746,ZN_3743
	branch r0_3754 != 0x00000000 l00014280
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014280:
	Mem3775[sp_3461 - 0x00000004:word32] = 0x00000004
	Mem3778[sp_3461 - 0x00000008:word32] = r8_3760 + 162
	Mem3780[sp_3461 - 0x0000000C:word32] = r7_3480
	byte ZN_3785
	bool C_3786
	bool V_3787
	bool Z_3788
	bool N_3789
	word32 ap_3790
	word32 r2_3791
	word32 r5_3792
	byte CZN_3793
	byte CVZN_3794
	word32 r6_3795
	word32 r0_3796
	word32 r3_3797
	word32 r4_3799
	word32 r9_3800
	word32 r10_3801
	word32 r8_3802
	word32 r1_3804
	byte CZ_3805
	byte VZN_3806
	word32 r11_3807
	call Mem3780[sp_3461 + 0x0000002C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3748,C_3782,CVZN_3752,CZ_3763,CZN_3751,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3756,N_3747,r0_3754,r1_3762,r10_3759,r11_3765,r2_3749,r3_3755,r4_3757,r5_3750,r6_3753,r7_3761,r8_3760,r9_3758,sp_3779,V_3783,VZN_3764,Z_3767,ZN_3781
		defs: ap_3790,C_3786,CVZN_3794,CZ_3805,CZN_3793,fp_3798,N_3789,r0_3796,r1_3804,r10_3801,r11_3807,r2_3791,r3_3797,r4_3799,r5_3792,r6_3795,r7_3803,r8_3802,r9_3800,sp_3784,V_3787,VZN_3806,Z_3788,ZN_3785
	branch r0_3796 != 0x00000000 l00014298
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014298:
	Mem3817[sp_3461 - 0x00000004:word32] = 0x00000004
	Mem3820[sp_3461 - 0x00000008:word32] = r8_3802 + 174
	Mem3822[sp_3461 - 0x0000000C:word32] = r7_3480
	byte ZN_3827
	bool C_3828
	bool V_3829
	bool Z_3830
	bool N_3831
	word32 ap_3832
	word32 r2_3833
	word32 r5_3834
	byte CZN_3835
	byte CVZN_3836
	word32 r6_3837
	word32 r0_3838
	word32 r3_3839
	word32 r4_3841
	word32 r9_3842
	word32 r10_3843
	word32 r8_3844
	word32 r1_3846
	byte CZ_3847
	byte VZN_3848
	word32 r11_3849
	call Mem3822[sp_3461 + 0x0000002C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3790,C_3824,CVZN_3794,CZ_3805,CZN_3793,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3798,N_3789,r0_3796,r1_3804,r10_3801,r11_3807,r2_3791,r3_3797,r4_3799,r5_3792,r6_3795,r7_3803,r8_3802,r9_3800,sp_3821,V_3825,VZN_3806,Z_3809,ZN_3823
		defs: ap_3832,C_3828,CVZN_3836,CZ_3847,CZN_3835,fp_3840,N_3831,r0_3838,r1_3846,r10_3843,r11_3849,r2_3833,r3_3839,r4_3841,r5_3834,r6_3837,r7_3845,r8_3844,r9_3842,sp_3826,V_3829,VZN_3848,Z_3830,ZN_3827
	branch r0_3838 != 0x00000000 l000142B0
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000142B0:
	Mem3859[sp_3461 - 0x00000004:word32] = 0x00000004
	Mem3862[sp_3461 - 0x00000008:word32] = r8_3844 + 186
	Mem3864[sp_3461 - 0x0000000C:word32] = r7_3480
	byte ZN_3869
	bool C_3870
	bool V_3871
	bool Z_3872
	bool N_3873
	word32 ap_3874
	word32 r2_3875
	word32 r5_3876
	byte CZN_3877
	byte CVZN_3878
	word32 r6_3879
	word32 r0_3880
	word32 r3_3881
	word32 r4_3883
	word32 r9_3884
	word32 r10_3885
	word32 r8_3886
	word32 r1_3888
	byte CZ_3889
	byte VZN_3890
	word32 r11_3891
	call Mem3864[sp_3461 + 0x0000002C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3832,C_3866,CVZN_3836,CZ_3847,CZN_3835,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3840,N_3831,r0_3838,r1_3846,r10_3843,r11_3849,r2_3833,r3_3839,r4_3841,r5_3834,r6_3837,r7_3845,r8_3844,r9_3842,sp_3863,V_3867,VZN_3848,Z_3851,ZN_3865
		defs: ap_3874,C_3870,CVZN_3878,CZ_3889,CZN_3877,fp_3882,N_3873,r0_3880,r1_3888,r10_3885,r11_3891,r2_3875,r3_3881,r4_3883,r5_3876,r6_3879,r7_3887,r8_3886,r9_3884,sp_3868,V_3871,VZN_3890,Z_3872,ZN_3869
	branch r0_3880 != 0x00000000 l000142F0
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000142F0:
	r3_3490 = r8_3886 + 199
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000142C0:
	r3_3490 = r8_3886 + 191
	branch r10_3885 <u 0x00000010 l000142F5
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000142CA:
	Mem3901[fp_3475 + -74:byte] = 0x20
	Mem3903[fp_3475 + -73:byte] = 0x28
	Mem3905[sp_3461 - 0x00000004:word32] = 0x00000004
	Mem3908[sp_3461 - 0x00000008:word32] = r7_3480 + 0x0000000C
	Mem3912[sp_3461 - 0x0000000C:word32] = fp_3475 + 0xFFFFFFB8
	byte ZN_3915
	bool C_3916
	bool V_3917
	bool Z_3918
	bool N_3919
	word32 ap_3920
	word32 r2_3921
	word32 r5_3922
	byte CZN_3923
	byte CVZN_3924
	word32 r6_3925
	word32 r0_3926
	word32 r4_3929
	word32 r9_3930
	word32 r10_3931
	word32 r8_3932
	word32 r1_3934
	byte CZ_3935
	byte VZN_3936
	word32 r11_3937
	call Mem3912[0x000192C0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3874,C_3898,CVZN_3913,CZ_3889,CZN_3897,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3882,N_3873,r0_3880,r1_3888,r10_3885,r11_3891,r2_3909,r3_3896,r4_3883,r5_3876,r6_3879,r7_3887,r8_3886,r9_3884,sp_3910,V_3899,VZN_3890,Z_3893,ZN_3892
		defs: ap_3920,C_3916,CVZN_3924,CZ_3935,CZN_3923,fp_3928,N_3919,r0_3926,r1_3934,r10_3931,r11_3937,r2_3921,r3_3927,r4_3929,r5_3922,r6_3925,r7_3933,r8_3932,r9_3930,sp_3914,V_3917,VZN_3936,Z_3918,ZN_3915
	Mem3939[fp_3475 + -68:byte] = 0x29
	Mem3941[fp_3475 + -67:byte] = 0x00
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000142A8:
	r3_3490 = r8_3844 + 179
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014290:
	r3_3490 = r8_3802 + 167
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014278:
	r3_3490 = r8_3760 + 155
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014260:
	r3_3490 = r8_3718 + 143
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014247:
	r3_3490 = r8_3676 + 131
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001422F:
	r3_3490 = r8_3634 + 119
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014218:
	r3_3490 = r8_3479 + 110
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000142F5:
	word32 sp_3493 = sp_3461 - 0x00000004
	Mem3494[sp_3493:word32] = 0x00000000
	Mem3497[sp_3493 - 0x00000004:word32] = fp_3475 + -74
	Mem3499[sp_3493 - 0x00000008:word32] = r3_3490
	Mem3502[sp_3493 - 0x0000000C:word32] = r7_3480 + 0x00000006
	word32 sp_3504
	byte ZN_3505
	bool C_3506
	bool V_3507
	bool Z_3508
	bool N_3509
	word32 ap_3510
	word32 r2_3511
	word32 r5_3512
	byte CZN_3513
	byte CVZN_3514
	word32 r6_3515
	word32 r0_3516
	word32 r3_3517
	word32 fp_3518
	word32 r4_3519
	word32 r9_3520
	word32 r10_3521
	word32 r8_3522
	word32 r7_3523
	word32 r1_3524
	byte CZ_3525
	byte VZN_3526
	word32 r11_3527
	call Mem3502[sp_3493 + 0x00000024:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3467,C_3487,CVZN_3503,CZ_3482,CZN_3470,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3492,N_3466,r0_3473,r1_3481,r10_3478,r11_3484,r2_3468,r3_3490,r4_3476,r5_3469,r6_3472,r7_3489,r8_3479,r9_3477,sp_3500,V_3488,VZN_3483,Z_3486,ZN_3485
		defs: ap_3510,C_3506,CVZN_3514,CZ_3525,CZN_3513,fp_3518,N_3509,r0_3516,r1_3524,r10_3521,r11_3527,r2_3511,r3_3517,r4_3519,r5_3512,r6_3515,r7_3523,r8_3522,r9_3520,sp_3504,V_3507,VZN_3526,Z_3508,ZN_3505
	Mem3530[sp_3504 - 0x00000004:uint32] = (uint32) (word16) r0_3516
	Mem3533[sp_3504 - 0x00000008:word32] = Mem3530[r6_3515 + 4164 + r4_3519 * 4:word32]
	Mem3536[sp_3504 - 0x0000000C:word32] = r6_3515 + 4043
	Mem3539[sp_3504 - 0x00000010:word32] = r5_3512 + 1515
	word32 sp_3543
	byte ZN_3544
	bool C_3545
	bool V_3546
	bool Z_3547
	bool N_3548
	word32 ap_3549
	word32 r2_3550
	word32 r5_3551
	byte CZN_3552
	byte CVZN_3553
	word32 r6_3554
	word32 r0_3555
	word32 r3_3556
	word32 fp_3557
	word32 r4_3558
	word32 r9_3559
	word32 r10_3560
	word32 r8_3561
	word32 r7_3562
	word32 r1_3563
	byte CZ_3564
	byte VZN_3565
	word32 r11_3566
	call r9_3520 + 2 (retsize: 4; depth: 4)
		uses: ap_3510,C_3541,CVZN_3514,CZ_3525,CZN_3513,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3518,N_3509,r0_3516,r1_3524,r10_3521,r11_3527,r2_3511,r3_3517,r4_3519,r5_3512,r6_3515,r7_3523,r8_3522,r9_3520,sp_3537,V_3542,VZN_3526,Z_3508,ZN_3540
		defs: ap_3549,C_3545,CVZN_3553,CZ_3564,CZN_3552,fp_3557,N_3548,r0_3555,r1_3563,r10_3560,r11_3566,r2_3550,r3_3556,r4_3558,r5_3551,r6_3554,r7_3562,r8_3561,r9_3559,sp_3543,V_3546,VZN_3565,Z_3547,ZN_3544
	Mem3568[sp_3543 - 0x00000004:word32] = r0_3555
	Mem3571[sp_3543 - 0x00000008:word32] = r5_3551 + 1515
	Mem3573[sp_3543 - 0x0000000C:word32] = r5_3551
	word32 r2_3574 = Mem3573[r5_3551 + 0x0000C839:word32]
	byte ZN_3579
	bool C_3580
	bool V_3581
	bool Z_3582
	bool N_3583
	word32 ap_3584
	word32 r2_3585
	byte CZN_3587
	byte CVZN_3588
	word32 r6_3589
	word32 r0_3590
	word32 r3_3591
	word32 fp_3592
	word32 r4_3593
	word32 r9_3594
	word32 r10_3595
	word32 r7_3597
	word32 r1_3598
	byte CZ_3599
	byte VZN_3600
	word32 r11_3601
	call r2_3574 + 2 (retsize: 4; depth: 4)
		uses: ap_3549,C_3576,CVZN_3553,CZ_3564,CZN_3552,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3557,N_3548,r0_3555,r1_3563,r10_3560,r11_3566,r2_3574,r3_3556,r4_3558,r5_3551,r6_3554,r7_3562,r8_3561,r9_3559,sp_3572,V_3577,VZN_3565,Z_3547,ZN_3575
		defs: ap_3584,C_3580,CVZN_3588,CZ_3599,CZN_3587,fp_3592,N_3583,r0_3590,r1_3598,r10_3595,r11_3601,r2_3585,r3_3591,r4_3593,r5_3586,r6_3589,r7_3597,r8_3596,r9_3594,sp_3578,V_3581,VZN_3600,Z_3582,ZN_3579
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000141E5:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001410A:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140FC:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140F0:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014588:
	branch (uint32) Mem2470[sp_2475 + 40:word16] <u 0x00000013 l000145DC
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014591:
	word32 r2_3268 = 0x00000000
	r7_3273 = r7_2494
	fp_3277 = fp_2489
// DataOut: ap fp r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014594:
	word32 r7_3273
	word32 fp_3277
	word32 sp_3279 = sp_2475 - 0x00000004
	Mem3281[sp_3279:uint32] = (uint32) Mem2470[r7_3273 + (0x0000000F - r2_3268):byte]
	Mem3284[sp_3279 - 0x00000004:word32] = r8_2493 + 217
	word32 r0_3285 = r2_3268 << 1
	Mem3288[sp_3279 - 0x00000008:word32] = fp_3277 + -188 + r0_3285 * 4
	byte ZN_3293
	bool C_3294
	bool V_3295
	bool Z_3296
	bool N_3297
	word32 ap_3298
	word32 r2_3299
	word32 r5_3300
	byte CZN_3301
	byte CVZN_3302
	word32 r6_3303
	word32 r0_3304
	word32 r3_3305
	word32 r4_3307
	word32 r9_3308
	word32 r10_3309
	word32 r1_3312
	byte CZ_3313
	byte VZN_3314
	word32 r11_3315
	call r9_2491 + 2 (retsize: 4; depth: 4)
		uses: ap_2481,C_3290,CVZN_3263,CZ_3260,CZN_3265,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3277,N_3270,r0_3285,r1_2495,r10_2492,r11_2498,r2_3275,r3_2488,r4_2490,r5_2483,r6_2486,r7_3273,r8_3274,r9_2491,sp_3286,V_3291,VZN_3262,Z_3269,ZN_3289
		defs: ap_3298,C_3294,CVZN_3302,CZ_3313,CZN_3301,fp_3306,N_3297,r0_3304,r1_3312,r10_3309,r11_3315,r2_3299,r3_3305,r4_3307,r5_3300,r6_3303,r7_3311,r8_3310,r9_3308,sp_3292,V_3295,VZN_3314,Z_3296,ZN_3293
	r2_3268 = r2_3299 + 0x00000001
	branch r2_3299 <= 0xFFFFFFF2 l00014594
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000145B0:
	Mem3319[fp_3277 + -156:byte] = 0x00
	Mem3321[sp_2475 - 0x00000004:word32] = 0x00000000
	Mem3324[sp_2475 - 0x00000008:word32] = fp_3277 + -188
	Mem3327[sp_2475 - 0x0000000C:word32] = r6_3303 + 4687
	Mem3330[sp_2475 - 0x00000010:word32] = r5_3300 + 1515
	word32 sp_3334
	byte ZN_3335
	bool C_3336
	bool V_3337
	bool Z_3338
	bool N_3339
	word32 ap_3340
	word32 r2_3341
	word32 r5_3342
	byte CZN_3343
	byte CVZN_3344
	word32 r6_3345
	word32 r0_3346
	word32 r3_3347
	word32 fp_3348
	word32 r4_3349
	word32 r9_3350
	word32 r10_3351
	word32 r8_3352
	word32 r7_3353
	word32 r1_3354
	byte CZ_3355
	byte VZN_3356
	word32 r11_3357
	call r9_3308 + 2 (retsize: 4; depth: 4)
		uses: ap_3298,C_3332,CVZN_3317,CZ_3313,CZN_3301,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3306,N_3297,r0_3304,r1_3312,r10_3309,r11_3315,r2_3316,r3_3305,r4_3307,r5_3300,r6_3303,r7_3311,r8_3310,r9_3308,sp_3328,V_3333,VZN_3314,Z_3296,ZN_3331
		defs: ap_3340,C_3336,CVZN_3344,CZ_3355,CZN_3343,fp_3348,N_3339,r0_3346,r1_3354,r10_3351,r11_3357,r2_3341,r3_3347,r4_3349,r5_3342,r6_3345,r7_3353,r8_3352,r9_3350,sp_3334,V_3337,VZN_3356,Z_3338,ZN_3335
	Mem3359[sp_3334 - 0x00000004:word32] = r0_3346
	Mem3362[sp_3334 - 0x00000008:word32] = r5_3342 + 1515
	Mem3364[sp_3334 - 0x0000000C:word32] = r5_3342
	word32 r2_3365 = Mem3364[r5_3342 + 0x0000C839:word32]
	byte ZN_3370
	bool C_3371
	bool V_3372
	bool Z_3373
	bool N_3374
	word32 ap_3375
	word32 r2_3376
	byte CZN_3378
	byte CVZN_3379
	word32 r6_3380
	word32 r0_3381
	word32 r3_3382
	word32 fp_3383
	word32 r4_3384
	word32 r9_3385
	word32 r10_3386
	word32 r7_3388
	word32 r1_3389
	byte CZ_3390
	byte VZN_3391
	word32 r11_3392
	call r2_3365 + 2 (retsize: 4; depth: 4)
		uses: ap_3340,C_3367,CVZN_3344,CZ_3355,CZN_3343,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3348,N_3339,r0_3346,r1_3354,r10_3351,r11_3357,r2_3365,r3_3347,r4_3349,r5_3342,r6_3345,r7_3353,r8_3352,r9_3350,sp_3363,V_3368,VZN_3356,Z_3338,ZN_3366
		defs: ap_3375,C_3371,CVZN_3379,CZ_3390,CZN_3378,fp_3383,N_3374,r0_3381,r1_3389,r10_3386,r11_3392,r2_3376,r3_3382,r4_3384,r5_3377,r6_3380,r7_3388,r8_3387,r9_3385,sp_3369,V_3372,VZN_3391,Z_3373,ZN_3370
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140EB:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140DF:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000141A0:
	word32 r0_3144 = (uint32) Mem2470[sp_2475 + 40:word16]
	branch r0_3144 >=u 0x00000004 l000141AC
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000141AC:
	Mem3149[sp_2475 - 0x00000004:word32] = 0x00000000
	Mem3151[sp_2475 - 0x00000008:word32] = r7_2494
	word32 sp_3155
	byte ZN_3156
	bool C_3157
	bool V_3158
	bool Z_3159
	bool N_3160
	word32 ap_3161
	word32 r2_3162
	word32 r5_3163
	byte CZN_3164
	byte CVZN_3165
	word32 r6_3166
	word32 r0_3167
	word32 r3_3168
	word32 fp_3169
	word32 r4_3170
	word32 r9_3171
	word32 r10_3172
	word32 r8_3173
	word32 r7_3174
	word32 r1_3175
	byte CZ_3176
	byte VZN_3177
	word32 r11_3178
	call Mem3151[sp_2475 + 0x0000001C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2481,C_3153,CVZN_3143,CZ_3140,CZN_3145,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2489,N_3139,r0_3144,r1_2495,r10_2492,r11_2498,r2_2499,r3_2488,r4_2490,r5_2483,r6_2486,r7_2494,r8_2493,r9_2491,sp_3150,V_3154,VZN_3142,Z_3138,ZN_3152
		defs: ap_3161,C_3157,CVZN_3165,CZ_3176,CZN_3164,fp_3169,N_3160,r0_3167,r1_3175,r10_3172,r11_3178,r2_3162,r3_3168,r4_3170,r5_3163,r6_3166,r7_3174,r8_3173,r9_3171,sp_3155,V_3158,VZN_3177,Z_3159,ZN_3156
	Mem3180[sp_3155 - 0x00000004:word32] = r0_3167
	Mem3183[sp_3155 - 0x00000008:word32] = r6_3166 + 4257
	Mem3186[sp_3155 - 0x0000000C:word32] = r5_3163 + 1515
	word32 sp_3190
	byte ZN_3191
	bool C_3192
	bool V_3193
	bool Z_3194
	bool N_3195
	word32 ap_3196
	word32 r2_3197
	word32 r5_3198
	byte CZN_3199
	byte CVZN_3200
	word32 r6_3201
	word32 r0_3202
	word32 r3_3203
	word32 fp_3204
	word32 r4_3205
	word32 r9_3206
	word32 r10_3207
	word32 r8_3208
	word32 r7_3209
	word32 r1_3210
	byte CZ_3211
	byte VZN_3212
	word32 r11_3213
	call r9_3171 + 2 (retsize: 4; depth: 4)
		uses: ap_3161,C_3188,CVZN_3165,CZ_3176,CZN_3164,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3169,N_3160,r0_3167,r1_3175,r10_3172,r11_3178,r2_3162,r3_3168,r4_3170,r5_3163,r6_3166,r7_3174,r8_3173,r9_3171,sp_3184,V_3189,VZN_3177,Z_3159,ZN_3187
		defs: ap_3196,C_3192,CVZN_3200,CZ_3211,CZN_3199,fp_3204,N_3195,r0_3202,r1_3210,r10_3207,r11_3213,r2_3197,r3_3203,r4_3205,r5_3198,r6_3201,r7_3209,r8_3208,r9_3206,sp_3190,V_3193,VZN_3212,Z_3194,ZN_3191
	Mem3215[sp_3190 - 0x00000004:word32] = r0_3202
	Mem3218[sp_3190 - 0x00000008:word32] = r5_3198 + 1515
	Mem3220[sp_3190 - 0x0000000C:word32] = r5_3198
	word32 r2_3221 = Mem3220[r5_3198 + 0x0000C839:word32]
	byte ZN_3226
	bool C_3227
	bool V_3228
	bool Z_3229
	bool N_3230
	word32 ap_3231
	word32 r2_3232
	byte CZN_3234
	byte CVZN_3235
	word32 r6_3236
	word32 r0_3237
	word32 r3_3238
	word32 fp_3239
	word32 r4_3240
	word32 r9_3241
	word32 r10_3242
	word32 r7_3244
	word32 r1_3245
	byte CZ_3246
	byte VZN_3247
	word32 r11_3248
	call r2_3221 + 2 (retsize: 4; depth: 4)
		uses: ap_3196,C_3223,CVZN_3200,CZ_3211,CZN_3199,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3204,N_3195,r0_3202,r1_3210,r10_3207,r11_3213,r2_3221,r3_3203,r4_3205,r5_3198,r6_3201,r7_3209,r8_3208,r9_3206,sp_3219,V_3224,VZN_3212,Z_3194,ZN_3222
		defs: ap_3231,C_3227,CVZN_3235,CZ_3246,CZN_3234,fp_3239,N_3230,r0_3237,r1_3245,r10_3242,r11_3248,r2_3232,r3_3238,r4_3240,r5_3233,r6_3236,r7_3244,r8_3243,r9_3241,sp_3225,V_3228,VZN_3247,Z_3229,ZN_3226
	Mem3250[Mem3250[ap_3231 + 4:word32]:word32] = 0x00000000
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000141A9:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140DA:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140CE:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014404:
	word32 r3_2973 = (uint32) Mem2470[sp_2475 + 40:word16]
	branch r3_2973 >=u 0x00000005 l00014410
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014410:
	Mem2978[sp_2475 - 0x00000004:word32] = 0x00000004
	Mem2981[sp_2475 - 0x00000008:word32] = r8_2493 + 209
	Mem2983[sp_2475 - 0x0000000C:word32] = r7_2494
	byte ZN_2988
	bool C_2989
	bool V_2990
	bool Z_2991
	bool N_2992
	word32 ap_2993
	word32 r2_2994
	byte CZN_2996
	byte CVZN_2997
	word32 r6_2998
	word32 r0_2999
	word32 r3_3000
	word32 fp_3001
	word32 r4_3002
	word32 r9_3003
	word32 r10_3004
	word32 r7_3006
	word32 r1_3007
	byte CZ_3008
	byte VZN_3009
	word32 r11_3010
	call fn00000002 (retsize: 4; depth: 4)
		uses: ap_2481,C_2985,CVZN_2972,CZ_2969,CZN_2974,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2489,N_2968,r0_2487,r1_2495,r10_2492,r11_2498,r2_2499,r3_2973,r4_2490,r5_2483,r6_2486,r7_2494,r8_2493,r9_2491,sp_2982,V_2986,VZN_2971,Z_2967,ZN_2984
		defs: ap_2993,C_2989,CVZN_2997,CZ_3008,CZN_2996,fp_3001,N_2992,r0_2999,r1_3007,r10_3004,r11_3010,r2_2994,r3_3000,r4_3002,r5_2995,r6_2998,r7_3006,r8_3005,r9_3003,sp_2987,V_2990,VZN_3009,Z_2991,ZN_2988
	branch r0_2999 == 0x00000000 l00014423
// DataOut: ap fp r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014423:
	word32 r4_3015 = (uint32) Mem2983[r7_3006 + 4:byte]
	branch r3_3000 >=u r4_3015 + 0x0000000D l00014433
// DataOut: ap fp r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014433:
	word32 r0_3021 = (uint32) Mem2983[r7_3006 + (r4_3015 + 0x00000005):byte]
	Mem3023[fp_3001 + -155:int8] = (int8) r0_3021
	Mem3025[r7_3006:byte] = 0x00
	Mem3027[sp_2475 - 0x00000004:word32] = 0x00000000
	Mem3031[sp_2475 - 0x00000008:uint32] = (uint32) Mem3027[r7_3006 + (r4_3015 + 0x0000000C):byte]
	Mem3035[sp_2475 - 0x0000000C:uint32] = (uint32) Mem3031[r7_3006 + (r4_3015 + 0x0000000B):byte]
	Mem3039[sp_2475 - 0x00000010:uint32] = (uint32) Mem3035[r7_3006 + (r4_3015 + 0x0000000A):byte]
	Mem3043[sp_2475 - 0x00000014:uint32] = (uint32) Mem3039[r7_3006 + (r4_3015 + 0x00000009):byte]
	Mem3047[sp_2475 - 0x00000018:uint32] = (uint32) Mem3043[r7_3006 + (r4_3015 + 0x00000008):byte]
	Mem3051[sp_2475 - 0x0000001C:uint32] = (uint32) Mem3047[r7_3006 + (r4_3015 + 0x00000007):byte]
	Mem3055[sp_2475 - 0x00000020:uint32] = (uint32) Mem3051[r7_3006 + (r4_3015 + 0x00000006):byte]
	Mem3058[sp_2475 - 0x00000024:int32] = (int32) Mem3055[fp_3001 + -155:int8]
	Mem3061[sp_2475 - 0x00000028:word32] = r7_3006 + 0x00000005
	Mem3064[sp_2475 - 0x0000002C:word32] = r6_2998 + 4409
	Mem3067[sp_2475 - 0x00000030:word32] = r5_2483 + 1515
	word32 sp_3071
	byte ZN_3072
	bool C_3073
	bool V_3074
	bool Z_3075
	bool N_3076
	word32 ap_3077
	word32 r2_3078
	word32 r5_3079
	byte CZN_3080
	byte CVZN_3081
	word32 r6_3082
	word32 r0_3083
	word32 r3_3084
	word32 fp_3085
	word32 r4_3086
	word32 r9_3087
	word32 r10_3088
	word32 r8_3089
	word32 r7_3090
	word32 r1_3091
	byte CZ_3092
	byte VZN_3093
	word32 r11_3094
	call r9_3003 + 2 (retsize: 4; depth: 4)
		uses: ap_2993,C_3069,CVZN_2997,CZ_3008,CZN_3017,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3001,N_2992,r0_3021,r1_3007,r10_3004,r11_3010,r2_3048,r3_3020,r4_3052,r5_2995,r6_2998,r7_3006,r8_3005,r9_3003,sp_3065,V_3070,VZN_3009,Z_3012,ZN_3068
		defs: ap_3077,C_3073,CVZN_3081,CZ_3092,CZN_3080,fp_3085,N_3076,r0_3083,r1_3091,r10_3088,r11_3094,r2_3078,r3_3084,r4_3086,r5_3079,r6_3082,r7_3090,r8_3089,r9_3087,sp_3071,V_3074,VZN_3093,Z_3075,ZN_3072
	Mem3096[sp_3071 - 0x00000004:word32] = r0_3083
	Mem3099[sp_3071 - 0x00000008:word32] = r5_3079 + 1515
	Mem3101[sp_3071 - 0x0000000C:word32] = r5_3079
	word32 r2_3102 = Mem3101[r5_3079 + 0x0000C839:word32]
	byte ZN_3107
	bool C_3108
	bool V_3109
	bool Z_3110
	bool N_3111
	word32 ap_3112
	word32 r2_3113
	byte CZN_3115
	byte CVZN_3116
	word32 r6_3117
	word32 r0_3118
	word32 r3_3119
	word32 fp_3120
	word32 r4_3121
	word32 r9_3122
	word32 r10_3123
	word32 r7_3125
	word32 r1_3126
	byte CZ_3127
	byte VZN_3128
	word32 r11_3129
	call r2_3102 + 2 (retsize: 4; depth: 4)
		uses: ap_3077,C_3104,CVZN_3081,CZ_3092,CZN_3080,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3085,N_3076,r0_3083,r1_3091,r10_3088,r11_3094,r2_3102,r3_3084,r4_3086,r5_3079,r6_3082,r7_3090,r8_3089,r9_3087,sp_3100,V_3105,VZN_3093,Z_3075,ZN_3103
		defs: ap_3112,C_3108,CVZN_3116,CZ_3127,CZN_3115,fp_3120,N_3111,r0_3118,r1_3126,r10_3123,r11_3129,r2_3113,r3_3119,r4_3121,r5_3114,r6_3117,r7_3125,r8_3124,r9_3122,sp_3106,V_3109,VZN_3128,Z_3110,ZN_3107
	Mem3131[r7_3125:byte] = Mem3101[fp_3120 + -155:byte]
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014430:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014420:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001440D:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140C9:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140BD:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014154:
	branch (uint32) Mem2470[sp_2475 + 40:word16] >=u 0x00000004 l00014160
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014160:
	word32 r0_2846 = (uint32) Mem2470[sp_2475 + 18:word16]
	branch r0_2846 != 0x00000009 l00014170
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014170:
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014169:
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014175:
	Mem2851[sp_2475 - 0x00000004:word32] = 0x00000000
	Mem2853[sp_2475 - 0x00000008:word32] = r7_2494
	word32 sp_2857
	byte ZN_2858
	bool C_2859
	bool V_2860
	bool Z_2861
	bool N_2862
	word32 ap_2863
	word32 r2_2864
	word32 r5_2865
	byte CZN_2866
	byte CVZN_2867
	word32 r6_2868
	word32 r0_2869
	word32 r3_2870
	word32 fp_2871
	word32 r4_2872
	word32 r9_2873
	word32 r10_2874
	word32 r8_2875
	word32 r7_2876
	word32 r1_2877
	byte CZ_2878
	byte VZN_2879
	word32 r11_2880
	call Mem2853[sp_2475 + 0x0000001C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2481,C_2855,CVZN_2838,CZ_2837,CZN_2847,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2489,N_2839,r0_2846,r1_2495,r10_2492,r11_2498,r2_2499,r3_2488,r4_2490,r5_2483,r6_2486,r7_2494,r8_2493,r9_2491,sp_2852,V_2856,VZN_2836,Z_2848,ZN_2854
		defs: ap_2863,C_2859,CVZN_2867,CZ_2878,CZN_2866,fp_2871,N_2862,r0_2869,r1_2877,r10_2874,r11_2880,r2_2864,r3_2870,r4_2872,r5_2865,r6_2868,r7_2876,r8_2875,r9_2873,sp_2857,V_2860,VZN_2879,Z_2861,ZN_2858
	Mem2882[sp_2857 - 0x00000004:word32] = r0_2869
	Mem2884[sp_2857 - 0x00000008:word32] = r3_2870
	Mem2887[sp_2857 - 0x0000000C:word32] = r5_2865 + 1515
	word32 sp_2891
	byte ZN_2892
	bool C_2893
	bool V_2894
	bool Z_2895
	bool N_2896
	word32 ap_2897
	word32 r2_2898
	word32 r5_2899
	byte CZN_2900
	byte CVZN_2901
	word32 r6_2902
	word32 r0_2903
	word32 r3_2904
	word32 fp_2905
	word32 r4_2906
	word32 r9_2907
	word32 r10_2908
	word32 r8_2909
	word32 r7_2910
	word32 r1_2911
	byte CZ_2912
	byte VZN_2913
	word32 r11_2914
	call r9_2873 + 2 (retsize: 4; depth: 4)
		uses: ap_2863,C_2889,CVZN_2867,CZ_2878,CZN_2866,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2871,N_2862,r0_2869,r1_2877,r10_2874,r11_2880,r2_2864,r3_2870,r4_2872,r5_2865,r6_2868,r7_2876,r8_2875,r9_2873,sp_2885,V_2890,VZN_2879,Z_2861,ZN_2888
		defs: ap_2897,C_2893,CVZN_2901,CZ_2912,CZN_2900,fp_2905,N_2896,r0_2903,r1_2911,r10_2908,r11_2914,r2_2898,r3_2904,r4_2906,r5_2899,r6_2902,r7_2910,r8_2909,r9_2907,sp_2891,V_2894,VZN_2913,Z_2895,ZN_2892
	Mem2916[sp_2891 - 0x00000004:word32] = r0_2903
	Mem2919[sp_2891 - 0x00000008:word32] = r5_2899 + 1515
	Mem2921[sp_2891 - 0x0000000C:word32] = r5_2899
	word32 r2_2922 = Mem2921[r5_2899 + 0x0000C839:word32]
	byte ZN_2927
	bool C_2928
	bool V_2929
	bool Z_2930
	bool N_2931
	word32 ap_2932
	word32 r2_2933
	byte CZN_2935
	byte CVZN_2936
	word32 r6_2937
	word32 r0_2938
	word32 r3_2939
	word32 fp_2940
	word32 r4_2941
	word32 r9_2942
	word32 r10_2943
	word32 r7_2945
	word32 r1_2946
	byte CZ_2947
	byte VZN_2948
	word32 r11_2949
	call r2_2922 + 2 (retsize: 4; depth: 4)
		uses: ap_2897,C_2924,CVZN_2901,CZ_2912,CZN_2900,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2905,N_2896,r0_2903,r1_2911,r10_2908,r11_2914,r2_2922,r3_2904,r4_2906,r5_2899,r6_2902,r7_2910,r8_2909,r9_2907,sp_2920,V_2925,VZN_2913,Z_2895,ZN_2923
		defs: ap_2932,C_2928,CVZN_2936,CZ_2947,CZN_2935,fp_2940,N_2931,r0_2938,r1_2946,r10_2943,r11_2949,r2_2933,r3_2939,r4_2941,r5_2934,r6_2937,r7_2945,r8_2944,r9_2942,sp_2926,V_2929,VZN_2948,Z_2930,ZN_2927
	Mem2951[Mem2951[ap_2932 + 4:word32]:word32] = 0x00000000
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001415D:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140B8:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000145DC:
	word32 r2_2565 = (uint32) Mem2470[sp_2475 + 40:word16]
	branch r2_2565 != 0x00000000 l000145E5
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000145E5:
	word32 r6_2583
	word32 r7_2577
	word32 r9_2580
	word32 r11_2573
	branch r2_2565 >u 0x00000018 l00014610
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014610:
	Mem2762[sp_2475 - 0x00000004:word32] = 0x00000000
	Mem2765[sp_2475 - 0x00000008:word32] = r6_2486 + 4725
	Mem2768[sp_2475 - 0x0000000C:word32] = r5_2483 + 1515
	word32 sp_2772
	byte ZN_2773
	bool C_2774
	bool V_2775
	bool Z_2776
	bool N_2777
	word32 ap_2778
	word32 r2_2779
	word32 r5_2780
	byte CZN_2781
	byte CVZN_2782
	word32 r6_2783
	word32 r0_2784
	word32 r3_2785
	word32 fp_2786
	word32 r4_2787
	word32 r9_2788
	word32 r10_2789
	word32 r8_2790
	word32 r7_2791
	word32 r1_2792
	byte CZ_2793
	byte VZN_2794
	word32 r11_2795
	call r9_2491 + 2 (retsize: 4; depth: 4)
		uses: ap_2481,C_2770,CVZN_2561,CZ_2571,CZN_2570,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2489,N_2563,r0_2564,r1_2495,r10_2492,r11_2498,r2_2565,r3_2488,r4_2490,r5_2483,r6_2486,r7_2494,r8_2493,r9_2491,sp_2766,V_2771,VZN_2559,Z_2567,ZN_2769
		defs: ap_2778,C_2774,CVZN_2782,CZ_2793,CZN_2781,fp_2786,N_2777,r0_2784,r1_2792,r10_2789,r11_2795,r2_2779,r3_2785,r4_2787,r5_2780,r6_2783,r7_2791,r8_2790,r9_2788,sp_2772,V_2775,VZN_2794,Z_2776,ZN_2773
	Mem2797[sp_2772 - 0x00000004:word32] = r0_2784
	Mem2800[sp_2772 - 0x00000008:word32] = r5_2780 + 1515
	Mem2802[sp_2772 - 0x0000000C:word32] = r5_2780
	word32 r2_2803 = Mem2802[r5_2780 + 0x0000C839:word32]
	byte ZN_2808
	bool C_2809
	bool V_2810
	bool Z_2811
	bool N_2812
	word32 ap_2813
	word32 r2_2814
	byte CZN_2816
	byte CVZN_2817
	word32 r0_2819
	word32 r3_2820
	word32 fp_2821
	word32 r4_2822
	word32 r10_2824
	word32 r1_2827
	byte CZ_2828
	byte VZN_2829
	call r2_2803 + 2 (retsize: 4; depth: 4)
		uses: ap_2778,C_2805,CVZN_2782,CZ_2793,CZN_2781,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2786,N_2777,r0_2784,r1_2792,r10_2789,r11_2795,r2_2803,r3_2785,r4_2787,r5_2780,r6_2783,r7_2791,r8_2790,r9_2788,sp_2801,V_2806,VZN_2794,Z_2776,ZN_2804
		defs: ap_2813,C_2809,CVZN_2817,CZ_2828,CZN_2816,fp_2821,N_2812,r0_2819,r1_2827,r10_2824,r11_2830,r2_2814,r3_2820,r4_2822,r5_2815,r6_2818,r7_2826,r8_2825,r9_2823,sp_2807,V_2810,VZN_2829,Z_2811,ZN_2808
	Mem2832[sp_2475 + 38:word16] = 0x0014
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000145EA:
	Mem2687[sp_2475 - 0x00000004:word32] = 0x00000000
	Mem2690[sp_2475 - 0x00000008:word32] = r6_2486 + 4752
	Mem2693[sp_2475 - 0x0000000C:word32] = r5_2483 + 1515
	word32 sp_2697
	byte ZN_2698
	bool C_2699
	bool V_2700
	bool Z_2701
	bool N_2702
	word32 ap_2703
	word32 r2_2704
	word32 r5_2705
	byte CZN_2706
	byte CVZN_2707
	word32 r6_2708
	word32 r0_2709
	word32 r3_2710
	word32 fp_2711
	word32 r4_2712
	word32 r9_2713
	word32 r10_2714
	word32 r8_2715
	word32 r7_2716
	word32 r1_2717
	byte CZ_2718
	byte VZN_2719
	word32 r11_2720
	call r9_2491 + 2 (retsize: 4; depth: 4)
		uses: ap_2481,C_2695,CVZN_2561,CZ_2571,CZN_2570,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2489,N_2563,r0_2564,r1_2495,r10_2492,r11_2498,r2_2565,r3_2488,r4_2490,r5_2483,r6_2486,r7_2494,r8_2493,r9_2491,sp_2691,V_2696,VZN_2559,Z_2567,ZN_2694
		defs: ap_2703,C_2699,CVZN_2707,CZ_2718,CZN_2706,fp_2711,N_2702,r0_2709,r1_2717,r10_2714,r11_2720,r2_2704,r3_2710,r4_2712,r5_2705,r6_2708,r7_2716,r8_2715,r9_2713,sp_2697,V_2700,VZN_2719,Z_2701,ZN_2698
	Mem2722[sp_2697 - 0x00000004:word32] = r0_2709
	Mem2725[sp_2697 - 0x00000008:word32] = r5_2705 + 1515
	Mem2727[sp_2697 - 0x0000000C:word32] = r5_2705
	word32 r2_2728 = Mem2727[r5_2705 + 0x0000C839:word32]
	byte ZN_2733
	bool C_2734
	bool V_2735
	bool Z_2736
	bool N_2737
	word32 ap_2738
	word32 r2_2739
	byte CZN_2741
	byte CVZN_2742
	word32 r0_2744
	word32 r3_2745
	word32 fp_2746
	word32 r4_2747
	word32 r10_2749
	word32 r1_2752
	byte CZ_2753
	byte VZN_2754
	call r2_2728 + 2 (retsize: 4; depth: 4)
		uses: ap_2703,C_2730,CVZN_2707,CZ_2718,CZN_2706,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2711,N_2702,r0_2709,r1_2717,r10_2714,r11_2720,r2_2728,r3_2710,r4_2712,r5_2705,r6_2708,r7_2716,r8_2715,r9_2713,sp_2726,V_2731,VZN_2719,Z_2701,ZN_2729
		defs: ap_2738,C_2734,CVZN_2742,CZ_2753,CZN_2741,fp_2746,N_2737,r0_2744,r1_2752,r10_2749,r11_2755,r2_2739,r3_2745,r4_2747,r5_2740,r6_2743,r7_2751,r8_2750,r9_2748,sp_2732,V_2735,VZN_2754,Z_2736,ZN_2733
	Mem2757[sp_2475 + 38:word16] = Mem2727[sp_2475 + 40:word16]
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014633:
	word32 r11_2594 = DPB(r11_2573, 0x0000, 0)
	branch Mem2470[sp_2475 + 38:word16] == 0x0000 l0001466A
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001463A:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001463C:
	word32 sp_2607 = sp_2475 - 0x00000004
	Mem2608[sp_2607:word32] = 0x00000000
	word32 r0_2609 = (uint32) (word16) r11_2594
	Mem2612[sp_2607 - 0x00000004:uint32] = (uint32) Mem2608[r7_2577 + r0_2609:byte]
	Mem2615[sp_2607 - 0x00000008:word32] = r6_2583 + 4758
	Mem2618[sp_2607 - 0x0000000C:word32] = r5_2483 + 1515
	word32 sp_2622
	byte ZN_2623
	bool C_2624
	bool V_2625
	bool Z_2626
	bool N_2627
	word32 ap_2628
	word32 r2_2629
	word32 r5_2630
	byte CZN_2631
	byte CVZN_2632
	word32 r6_2633
	word32 r0_2634
	word32 r3_2635
	word32 fp_2636
	word32 r4_2637
	word32 r9_2638
	word32 r10_2639
	word32 r8_2640
	word32 r7_2641
	word32 r1_2642
	byte CZ_2643
	byte VZN_2644
	word32 r11_2645
	call r9_2580 + 2 (retsize: 4; depth: 4)
		uses: ap_2592,C_2620,CVZN_2584,CZ_2575,CZN_2585,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2591,N_2588,r0_2609,r1_2576,r10_2579,r11_2602,r2_2587,r3_2582,r4_2581,r5_2605,r6_2604,r7_2603,r8_2578,r9_2580,sp_2616,V_2621,VZN_2574,Z_2596,ZN_2619
		defs: ap_2628,C_2624,CVZN_2632,CZ_2643,CZN_2631,fp_2636,N_2627,r0_2634,r1_2642,r10_2639,r11_2645,r2_2629,r3_2635,r4_2637,r5_2630,r6_2633,r7_2641,r8_2640,r9_2638,sp_2622,V_2625,VZN_2644,Z_2626,ZN_2623
	Mem2647[sp_2622 - 0x00000004:word32] = r0_2634
	Mem2650[sp_2622 - 0x00000008:word32] = r5_2630 + 1515
	Mem2652[sp_2622 - 0x0000000C:word32] = r5_2630
	word32 r0_2653 = Mem2652[r5_2630 + 0x0000C839:word32]
	byte ZN_2658
	bool C_2659
	bool V_2660
	bool Z_2661
	bool N_2662
	word32 ap_2663
	word32 r2_2664
	byte CZN_2666
	byte CVZN_2667
	word32 r0_2669
	word32 r3_2670
	word32 fp_2671
	word32 r4_2672
	word32 r9_2673
	word32 r10_2674
	word32 r1_2677
	byte CZ_2678
	byte VZN_2679
	word32 r11_2680
	call r0_2653 + 2 (retsize: 4; depth: 4)
		uses: ap_2628,C_2655,CVZN_2632,CZ_2643,CZN_2631,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2636,N_2627,r0_2653,r1_2642,r10_2639,r11_2645,r2_2629,r3_2635,r4_2637,r5_2630,r6_2633,r7_2641,r8_2640,r9_2638,sp_2651,V_2656,VZN_2644,Z_2626,ZN_2654
		defs: ap_2663,C_2659,CVZN_2667,CZ_2678,CZN_2666,fp_2671,N_2662,r0_2669,r1_2677,r10_2674,r11_2680,r2_2664,r3_2670,r4_2672,r5_2665,r6_2668,r7_2676,r8_2675,r9_2673,sp_2657,V_2660,VZN_2679,Z_2661,ZN_2658
	word16 v264_2681 = (word16) r11_2680 + 0x0001
	r11_2594 = DPB(r11_2680, v264_2681, 0)
	branch v264_2681 <u Mem2652[sp_2475 + 38:word16] l0001463C
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000145E2:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001466A:
	word32 sp_2512 = sp_2475 - 0x00000004
	Mem2513[sp_2512:word32] = 0x00000000
	Mem2515[sp_2512 - 0x00000004:word32] = 0x00000001
	Mem2518[sp_2512 - 0x00000008:word32] = r8_2493 + 222
	Mem2520[sp_2512 - 0x0000000C:word32] = r5_2483
	word32 r2_2521 = Mem2520[r5_2483 + 0x0000C839:word32]
	byte ZN_2526
	bool C_2527
	bool V_2528
	bool Z_2529
	bool N_2530
	word32 ap_2531
	word32 r2_2532
	byte CZN_2534
	byte CVZN_2535
	word32 r6_2536
	word32 r0_2537
	word32 r3_2538
	word32 fp_2539
	word32 r4_2540
	word32 r9_2541
	word32 r10_2542
	word32 r7_2544
	word32 r1_2545
	byte CZ_2546
	byte VZN_2547
	word32 r11_2548
	call r2_2521 + 2 (retsize: 4; depth: 4)
		uses: ap_2481,C_2523,CVZN_2508,CZ_2505,CZN_2500,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2489,N_2504,r0_2487,r1_2495,r10_2492,r11_2498,r2_2521,r3_2488,r4_2490,r5_2510,r6_2486,r7_2494,r8_2509,r9_2491,sp_2519,V_2524,VZN_2507,Z_2503,ZN_2522
		defs: ap_2531,C_2527,CVZN_2535,CZ_2546,CZN_2534,fp_2539,N_2530,r0_2537,r1_2545,r10_2542,r11_2548,r2_2532,r3_2538,r4_2540,r5_2533,r6_2536,r7_2544,r8_2543,r9_2541,sp_2525,V_2528,VZN_2547,Z_2529,ZN_2526
	word32 r0_2549 = (uint32) Mem2520[sp_2245 + 40:word16]
	word32 r0_2552 = (uint32) Mem2520[sp_2245 + 42:word16] - r0_2549
	Mem2554[sp_2245 + 42:int16] = (int16) r0_2552
	r7_2323 = r7_2544 + r0_2549
	branch (uint32) (word16) r0_2552 <u 0x00000004 l0001469C
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014699:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013DF0:
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001469C:
	word32 sp_2276 = sp_2245 - 0x00000004
	Mem2277[sp_2276:word32] = 0x00000000
	Mem2279[sp_2276 - 0x00000004:word32] = 0x00000001
	Mem2282[sp_2276 - 0x00000008:word32] = r8_2263 + 224
	Mem2284[sp_2276 - 0x0000000C:word32] = r5_2253
	word32 r2_2285 = Mem2284[r5_2253 + 0x0000C839:word32]
	byte ZN_2290
	bool C_2291
	bool V_2292
	bool Z_2293
	bool N_2294
	word32 ap_2295
	word32 r2_2296
	byte CZN_2298
	byte CVZN_2299
	word32 r0_2301
	word32 r3_2302
	word32 fp_2303
	word32 r4_2304
	word32 r9_2305
	word32 r10_2306
	word32 r7_2308
	word32 r1_2309
	byte CZ_2310
	byte VZN_2311
	word32 r11_2312
	call r2_2285 + 2 (retsize: 4; depth: 4)
		uses: ap_2251,C_2287,CVZN_2255,CZ_2266,CZN_2270,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2259,N_2250,r0_2257,r1_2265,r10_2262,r11_2268,r2_2285,r3_2258,r4_2260,r5_2274,r6_2256,r7_2264,r8_2273,r9_2261,sp_2283,V_2288,VZN_2267,Z_2249,ZN_2286
		defs: ap_2295,C_2291,CVZN_2299,CZ_2310,CZN_2298,fp_2303,N_2294,r0_2301,r1_2309,r10_2306,r11_2312,r2_2296,r3_2302,r4_2304,r5_2297,r6_2300,r7_2308,r8_2307,r9_2305,sp_2289,V_2292,VZN_2311,Z_2293,ZN_2290
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013DC0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013DB3:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D9B:
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146B0:
	word32 r2_1683 = (uint32) SLICE(Mem1609[r5_1628 + 0x0000C67A:word32] & ~0xFFFF3FFF, ui20, 12)
	Mem1685[sp_1631 + 14:int16] = (int16) r2_1683
	word32 r9_1686 = (uint32) (word16) r2_1683
	branch (r9_1686 & 0x00000008) != 0x00000000 l000146CF
// DataOut: ap fp r0 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146CF:
	word32 r7_1975 = (uint32) Mem1685[sp_1631 + 2:word16]
	branch r7_1975 == 0x00000003 l000146E2
// DataOut: ap fp r0 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146D8:
	branch r7_1975 == 0x00000006 l000146E2
// DataOut: ap fp r0 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146DD:
	branch r7_1975 != 0x0000000B l00014738
// DataOut: ap fp r0 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014738:
	branch r7_1975 != 0x00000000 l00014776
// DataOut: ap fp r0 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001473C:
	branch (r9_1686 & 0x00000004) != 0x00000000 l00014776
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014740:
	word32 sp_2091 = sp_1631 - 0x00000004
	Mem2092[sp_2091:word32] = 0x00000000
	Mem2095[sp_2091 - 0x00000004:word32] = r6_1625 + 4890
	Mem2097[sp_2091 - 0x00000008:word32] = 0x00000008
	Mem2100[sp_2091 - 0x0000000C:word32] = r6_1625 + 3712
	Mem2103[sp_2091 - 0x00000010:uint32] = 0x00005855
	Mem2106[sp_2091 - 0x00000014:word32] = r8_1620 + 229
	Mem2109[sp_2091 - 0x00000018:word32] = r6_1625 + 4764
	Mem2112[sp_2091 - 0x0000001C:word32] = r5_1628 + 1515
	word32 sp_2116
	byte ZN_2117
	bool C_2118
	bool V_2119
	bool Z_2120
	bool N_2121
	word32 ap_2122
	word32 r2_2123
	word32 r5_2124
	byte CZN_2125
	byte CVZN_2126
	word32 r6_2127
	word32 r0_2128
	word32 r3_2129
	word32 fp_2130
	word32 r4_2131
	word32 r9_2132
	word32 r10_2133
	word32 r8_2134
	word32 r7_2135
	word32 r1_2136
	byte CZ_2137
	byte VZN_2138
	word32 r11_2139
	call Mem2112[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1681,C_2114,CVZN_1673,CZ_1665,CZN_2084,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1680,N_1676,r0_1678,r1_1666,r10_1669,r11_1663,r2_1683,r3_1671,r4_1670,r5_1675,r6_1672,r7_1975,r8_1668,r9_1686,sp_2110,V_2115,VZN_1664,Z_2088,ZN_2113
		defs: ap_2122,C_2118,CVZN_2126,CZ_2137,CZN_2125,fp_2130,N_2121,r0_2128,r1_2136,r10_2133,r11_2139,r2_2123,r3_2129,r4_2131,r5_2124,r6_2127,r7_2135,r8_2134,r9_2132,sp_2116,V_2119,VZN_2138,Z_2120,ZN_2117
	Mem2141[sp_2116 - 0x00000004:word32] = r0_2128
	Mem2144[sp_2116 - 0x00000008:word32] = r5_2124 + 1515
	Mem2146[sp_2116 - 0x0000000C:word32] = r5_2124
	word32 r2_2147 = Mem2146[r5_2124 + 0x0000C839:word32]
	byte ZN_2152
	bool C_2153
	bool V_2154
	bool Z_2155
	bool N_2156
	word32 ap_2157
	word32 r2_2158
	byte CZN_2160
	byte CVZN_2161
	word32 r0_2163
	word32 r3_2164
	word32 fp_2165
	word32 r4_2166
	word32 r9_2167
	word32 r10_2168
	word32 r8_2169
	word32 r7_2170
	word32 r1_2171
	byte CZ_2172
	byte VZN_2173
	word32 r11_2174
	call r2_2147 + 2 (retsize: 4; depth: 4)
		uses: ap_2122,C_2149,CVZN_2126,CZ_2137,CZN_2125,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2130,N_2121,r0_2128,r1_2136,r10_2133,r11_2139,r2_2147,r3_2129,r4_2131,r5_2124,r6_2127,r7_2135,r8_2134,r9_2132,sp_2145,V_2150,VZN_2138,Z_2120,ZN_2148
		defs: ap_2157,C_2153,CVZN_2161,CZ_2172,CZN_2160,fp_2165,N_2156,r0_2163,r1_2171,r10_2168,r11_2174,r2_2158,r3_2164,r4_2166,r5_2159,r6_2162,r7_2170,r8_2169,r9_2167,sp_2151,V_2154,VZN_2173,Z_2155,ZN_2152
// DataOut: ap fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146E2:
	word32 r4_1987
	word32 sp_1981 = sp_1631 - 0x00000004
	Mem1982[sp_1981:word32] = 0x00000000
	word32 r3_1983 = (uint32) Mem1982[sp_1981 + 18:word16]
	branch (r3_1983 & 0x00000004) == 0x00000000 l000146F4
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146F4:
	r4_1987 = r6_1625 + 4890
// DataOut: ap fp r0 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146EC:
	r4_1987 = r6_1625 + 4843
// DataOut: ap fp r0 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146F9:
	Mem1989[sp_1981 - 0x00000004:word32] = r4_1987
	word32 r3_1990 = r3_1983 & ~0xFFFFFFF3
	Mem1992[sp_1981 - 0x00000008:word32] = r3_1990
	Mem1995[sp_1981 - 0x0000000C:word32] = r6_1625 + 3712
	Mem1998[sp_1981 - 0x00000010:uint32] = 0x00005855
	Mem2001[sp_1981 - 0x00000014:word32] = r8_1620 + 226
	Mem2004[sp_1981 - 0x00000018:word32] = r6_1625 + 4764
	Mem2007[sp_1981 - 0x0000001C:word32] = r5_1628 + 1515
	word32 sp_2011
	byte ZN_2012
	bool C_2013
	bool V_2014
	bool Z_2015
	bool N_2016
	word32 ap_2017
	word32 r2_2018
	word32 r5_2019
	byte CZN_2020
	byte CVZN_2021
	word32 r6_2022
	word32 r0_2023
	word32 r3_2024
	word32 fp_2025
	word32 r4_2026
	word32 r9_2027
	word32 r10_2028
	word32 r8_2029
	word32 r7_2030
	word32 r1_2031
	byte CZ_2032
	byte VZN_2033
	word32 r11_2034
	call Mem2007[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1681,C_2009,CVZN_1673,CZ_1665,CZN_1979,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1680,N_1676,r0_1678,r1_1666,r10_1669,r11_1663,r2_1683,r3_1990,r4_1987,r5_1675,r6_1672,r7_1975,r8_1668,r9_1686,sp_2005,V_2010,VZN_1664,Z_1980,ZN_2008
		defs: ap_2017,C_2013,CVZN_2021,CZ_2032,CZN_2020,fp_2025,N_2016,r0_2023,r1_2031,r10_2028,r11_2034,r2_2018,r3_2024,r4_2026,r5_2019,r6_2022,r7_2030,r8_2029,r9_2027,sp_2011,V_2014,VZN_2033,Z_2015,ZN_2012
	Mem2036[sp_2011 - 0x00000004:word32] = r0_2023
	Mem2039[sp_2011 - 0x00000008:word32] = r5_2019 + 1515
	Mem2041[sp_2011 - 0x0000000C:word32] = r5_2019
	word32 r2_2042 = Mem2041[r5_2019 + 0x0000C839:word32]
	byte ZN_2047
	bool C_2048
	bool V_2049
	bool Z_2050
	bool N_2051
	word32 ap_2052
	word32 r2_2053
	byte CZN_2055
	byte CVZN_2056
	word32 r0_2058
	word32 r3_2059
	word32 fp_2060
	word32 r4_2061
	word32 r9_2062
	word32 r10_2063
	word32 r8_2064
	word32 r7_2065
	word32 r1_2066
	byte CZ_2067
	byte VZN_2068
	word32 r11_2069
	call r2_2042 + 2 (retsize: 4; depth: 4)
		uses: ap_2017,C_2044,CVZN_2021,CZ_2032,CZN_2020,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2025,N_2016,r0_2023,r1_2031,r10_2028,r11_2034,r2_2042,r3_2024,r4_2026,r5_2019,r6_2022,r7_2030,r8_2029,r9_2027,sp_2040,V_2045,VZN_2033,Z_2015,ZN_2043
		defs: ap_2052,C_2048,CVZN_2056,CZ_2067,CZN_2055,fp_2060,N_2051,r0_2058,r1_2066,r10_2063,r11_2069,r2_2053,r3_2059,r4_2061,r5_2054,r6_2057,r7_2065,r8_2064,r9_2062,sp_2046,V_2049,VZN_2068,Z_2050,ZN_2047
	Mem2071[Mem2071[ap_2052 + 4:word32]:word32] = Mem2041[ap_2052 + 4:word32] + r3_2059
// DataOut: ap fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146CC:
// DataOut: ap fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014776:
	branch Mem1685[r5_1628 + 0x0000C674:word16] != 0x0000 l000147A4
// DataOut: ap fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000147A4:
	word32 sp_1810 = sp_1631 - 0x00000004
	Mem1811[sp_1810:word32] = 0x00000000
	Mem1814[sp_1810 - 0x00000004:word32] = r6_1625 + 4955
	Mem1817[sp_1810 - 0x00000008:word32] = r5_1628 + 1515
	word32 sp_1821
	byte ZN_1822
	bool C_1823
	bool V_1824
	bool Z_1825
	bool N_1826
	word32 ap_1827
	word32 r2_1828
	word32 r5_1829
	byte CZN_1830
	byte CVZN_1831
	word32 r6_1832
	word32 r0_1833
	word32 r3_1834
	word32 fp_1835
	word32 r4_1836
	word32 r9_1837
	word32 r10_1838
	word32 r8_1839
	word32 r7_1840
	word32 r1_1841
	byte CZ_1842
	byte VZN_1843
	word32 r11_1844
	call Mem1817[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1709,C_1819,CVZN_1701,CZ_1692,CZN_1702,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1708,N_1705,r0_1706,r1_1693,r10_1696,r11_1690,r2_1704,r3_1699,r4_1698,r5_1703,r6_1700,r7_1694,r8_1695,r9_1697,sp_1815,V_1820,VZN_1691,Z_1711,ZN_1818
		defs: ap_1827,C_1823,CVZN_1831,CZ_1842,CZN_1830,fp_1835,N_1826,r0_1833,r1_1841,r10_1838,r11_1844,r2_1828,r3_1834,r4_1836,r5_1829,r6_1832,r7_1840,r8_1839,r9_1837,sp_1821,V_1824,VZN_1843,Z_1825,ZN_1822
	Mem1846[sp_1821 - 0x00000004:word32] = r0_1833
	Mem1849[sp_1821 - 0x00000008:word32] = r5_1829 + 1515
	Mem1851[sp_1821 - 0x0000000C:word32] = r5_1829
	word32 r2_1852 = Mem1851[r5_1829 + 0x0000C839:word32]
	word32 sp_1856
	byte ZN_1857
	bool C_1858
	bool V_1859
	bool Z_1860
	bool N_1861
	word32 ap_1862
	word32 r2_1863
	word32 r5_1864
	byte CZN_1865
	byte CVZN_1866
	word32 r6_1867
	word32 r0_1868
	word32 r3_1869
	word32 fp_1870
	word32 r4_1871
	word32 r9_1872
	word32 r10_1873
	word32 r8_1874
	word32 r7_1875
	word32 r1_1876
	byte CZ_1877
	byte VZN_1878
	word32 r11_1879
	call r2_1852 + 2 (retsize: 4; depth: 4)
		uses: ap_1827,C_1854,CVZN_1831,CZ_1842,CZN_1830,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1835,N_1826,r0_1833,r1_1841,r10_1838,r11_1844,r2_1852,r3_1834,r4_1836,r5_1829,r6_1832,r7_1840,r8_1839,r9_1837,sp_1850,V_1855,VZN_1843,Z_1825,ZN_1853
		defs: ap_1862,C_1858,CVZN_1866,CZ_1877,CZN_1865,fp_1870,N_1861,r0_1868,r1_1876,r10_1873,r11_1879,r2_1863,r3_1869,r4_1871,r5_1864,r6_1867,r7_1875,r8_1874,r9_1872,sp_1856,V_1859,VZN_1878,Z_1860,ZN_1857
	Mem1881[sp_1856 - 0x00000004:word32] = 0x00000005
	Mem1884[sp_1856 - 0x00000008:uint32] = (uint32) Mem1881[r5_1864 + 0x0000C674:word16]
	word32 r11_1888
	word32 ap_1889
	word32 fp_1890
	word32 sp_1891
	word32 r0_1892 = fn0000DC76(ap_1862, fp_1870, out r11_1888, out ap_1889, out fp_1890, out sp_1891)
	branch r0_1892 == 0x00000000 l000147E5
// DataOut: fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000147DB:
	Mem1968[sp_1891 + 8:word32] = r0_1892
	branch r0_1892 <= 0x00000001 l000147E5
// DataOut: fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000147E5:
	Mem1898[sp_1891 - 0x00000004:word32] = 0x00000000
	Mem1901[sp_1891 - 0x00000008:word32] = r6_1867 + 5032
	Mem1904[sp_1891 - 0x0000000C:word32] = r5_1864 + 1515
	word32 sp_1908
	byte ZN_1909
	bool C_1910
	bool V_1911
	bool Z_1912
	bool N_1913
	word32 ap_1914
	word32 r2_1915
	word32 r5_1916
	byte CZN_1917
	byte CVZN_1918
	word32 r6_1919
	word32 r0_1920
	word32 r3_1921
	word32 fp_1922
	word32 r4_1923
	word32 r9_1924
	word32 r10_1925
	word32 r8_1926
	word32 r7_1927
	word32 r1_1928
	byte CZ_1929
	byte VZN_1930
	word32 r11_1931
	call Mem1904[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1889,C_1906,CVZN_1866,CZ_1877,CZN_1865,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1890,N_1861,r0_1892,r1_1876,r10_1873,r11_1888,r2_1863,r3_1869,r4_1871,r5_1864,r6_1867,r7_1875,r8_1874,r9_1872,sp_1902,V_1907,VZN_1878,Z_1894,ZN_1905
		defs: ap_1914,C_1910,CVZN_1918,CZ_1929,CZN_1917,fp_1922,N_1913,r0_1920,r1_1928,r10_1925,r11_1931,r2_1915,r3_1921,r4_1923,r5_1916,r6_1919,r7_1927,r8_1926,r9_1924,sp_1908,V_1911,VZN_1930,Z_1912,ZN_1909
	Mem1933[sp_1908 - 0x00000004:word32] = r0_1920
	Mem1936[sp_1908 - 0x00000008:word32] = r5_1916 + 1515
	Mem1938[sp_1908 - 0x0000000C:word32] = r5_1916
	word32 r2_1939 = Mem1938[r5_1916 + 0x0000C839:word32]
	word32 sp_1943
	byte ZN_1944
	bool C_1945
	bool V_1946
	bool Z_1947
	bool N_1948
	word32 ap_1949
	word32 r2_1950
	word32 r5_1951
	byte CZN_1952
	byte CVZN_1953
	word32 r6_1954
	word32 r0_1955
	word32 r3_1956
	word32 fp_1957
	word32 r4_1958
	word32 r9_1959
	word32 r10_1960
	word32 r8_1961
	word32 r7_1962
	word32 r1_1963
	byte CZ_1964
	byte VZN_1965
	word32 r11_1966
	call r2_1939 + 2 (retsize: 4; depth: 4)
		uses: ap_1914,C_1941,CVZN_1918,CZ_1929,CZN_1917,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1922,N_1913,r0_1920,r1_1928,r10_1925,r11_1931,r2_1939,r3_1921,r4_1923,r5_1916,r6_1919,r7_1927,r8_1926,r9_1924,sp_1937,V_1942,VZN_1930,Z_1912,ZN_1940
		defs: ap_1949,C_1945,CVZN_1953,CZ_1964,CZN_1952,fp_1957,N_1948,r0_1955,r1_1963,r10_1960,r11_1966,r2_1950,r3_1956,r4_1958,r5_1951,r6_1954,r7_1962,r8_1961,r9_1959,sp_1943,V_1946,VZN_1965,Z_1947,ZN_1944
// DataOut: fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000147E4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001477E:
	word32 sp_1740 = sp_1631 - 0x00000004
	Mem1741[sp_1740:word32] = 0x00000000
	Mem1744[sp_1740 - 0x00000004:word32] = r6_1625 + 4925
	Mem1747[sp_1740 - 0x00000008:word32] = r5_1628 + 1515
	word32 sp_1751
	byte ZN_1752
	bool C_1753
	bool V_1754
	bool Z_1755
	bool N_1756
	word32 ap_1757
	word32 r2_1758
	word32 r5_1759
	byte CZN_1760
	byte CVZN_1761
	word32 r6_1762
	word32 r0_1763
	word32 r3_1764
	word32 fp_1765
	word32 r4_1766
	word32 r9_1767
	word32 r10_1768
	word32 r8_1769
	word32 r7_1770
	word32 r1_1771
	byte CZ_1772
	byte VZN_1773
	word32 r11_1774
	call Mem1747[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1709,C_1749,CVZN_1701,CZ_1692,CZN_1702,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1708,N_1705,r0_1706,r1_1693,r10_1696,r11_1690,r2_1704,r3_1699,r4_1698,r5_1703,r6_1700,r7_1694,r8_1695,r9_1697,sp_1745,V_1750,VZN_1691,Z_1711,ZN_1748
		defs: ap_1757,C_1753,CVZN_1761,CZ_1772,CZN_1760,fp_1765,N_1756,r0_1763,r1_1771,r10_1768,r11_1774,r2_1758,r3_1764,r4_1766,r5_1759,r6_1762,r7_1770,r8_1769,r9_1767,sp_1751,V_1754,VZN_1773,Z_1755,ZN_1752
	Mem1776[sp_1751 - 0x00000004:word32] = r0_1763
	Mem1779[sp_1751 - 0x00000008:word32] = r5_1759 + 1515
	Mem1781[sp_1751 - 0x0000000C:word32] = r5_1759
	word32 r2_1782 = Mem1781[r5_1759 + 0x0000C839:word32]
	word32 sp_1786
	byte ZN_1787
	bool C_1788
	bool V_1789
	bool Z_1790
	bool N_1791
	word32 ap_1792
	word32 r2_1793
	word32 r5_1794
	byte CZN_1795
	byte CVZN_1796
	word32 r6_1797
	word32 r0_1798
	word32 r3_1799
	word32 fp_1800
	word32 r4_1801
	word32 r9_1802
	word32 r10_1803
	word32 r8_1804
	word32 r7_1805
	word32 r1_1806
	byte CZ_1807
	byte VZN_1808
	word32 r11_1809
	call r2_1782 + 2 (retsize: 4; depth: 4)
		uses: ap_1757,C_1784,CVZN_1761,CZ_1772,CZN_1760,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1765,N_1756,r0_1763,r1_1771,r10_1768,r11_1774,r2_1782,r3_1764,r4_1766,r5_1759,r6_1762,r7_1770,r8_1769,r9_1767,sp_1780,V_1785,VZN_1773,Z_1755,ZN_1783
		defs: ap_1792,C_1788,CVZN_1796,CZ_1807,CZN_1795,fp_1800,N_1791,r0_1798,r1_1806,r10_1803,r11_1809,r2_1793,r3_1799,r4_1801,r5_1794,r6_1797,r7_1805,r8_1804,r9_1802,sp_1786,V_1789,VZN_1808,Z_1790,ZN_1787
// DataOut: fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014808:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

fn0001325E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>



void fn00014812(word32 r4, word32 r5, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r4 r5 r8
// LiveOut:
// Trashed: CVZN ap r0 r10 r11 r2 r3 r6 r7 r9 sp
// Preserved:
fn00014812_entry:
// DataOut: fp r4 r5 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00014812:
	branch (uint32) Mem0[r4 + 0x0000C65E:word16] >=u 0x0000000B l00014844
// DataOut: fp r4 r5 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00014844:
// DataOut: fp r3 r4 r5 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 r11:0x00000000 r2:<invalid>
// LocalsOut: fp(32)

l00014838:
// DataOut: fp r3 r4 r5 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 r11:0x00000000 r2:<invalid>
// LocalsOut: fp(32)

l00014847:
	word32 sp_34
	byte CVZN_35
	byte ZN_36
	bool C_37
	bool V_38
	word32 r11_39
	bool Z_40
	bool N_41
	word32 r4_42
	word32 r2_43
	byte CZN_44
	word32 r3_45
	word32 r6_46
	word32 r9_48
	word32 ap_49
	word32 r8_50
	byte VZN_52
	word32 r7_53
	word32 r0_54
	word32 r5_55
	word32 fp_207
	word32 r10_203
	call Mem0[0x000192BC:word32] + 2 (retsize: 4; depth: 52)
		uses: ap_21,C_32,CZN_7,dwLoc2C_26,dwLoc30_30,fp,r10_17,r11_3,r2_22,r3_10,r4,r6_13,r8,r9_20,sp_27,V_33,ZN_31
		defs: ap_49,C_37,CVZN_35,CZN_44,fp_51,N_41,r0_54,r10_47,r11_39,r2_43,r3_45,r4_42,r5_55,r6_46,r7_53,r8_50,r9_48,sp_34,V_38,VZN_52,Z_40,ZN_36
	branch ap_49 != 0x00000006 l000148AC
// DataOut: ap fp r10 r4 r5 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 r11:0x00000000 r2:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l000148AC:
	branch ap_49 != 0x00000008 l000148D0
// DataOut: ap fp r10 r4 r5 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>
// LocalsOut: fp(32)

l000148D0:
	branch ap_49 <u 0x0000000B l000148EA
// DataOut: fp r10 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>
// LocalsOut: fp(32)

l000148D5:
	word32 sp_190
	byte CVZN_191
	byte ZN_192
	bool C_193
	bool V_194
	word32 r11_195
	bool Z_196
	bool N_197
	word32 r4_198
	word32 r2_199
	byte CZN_200
	word32 r3_201
	word32 r6_202
	word32 r9_204
	word32 ap_205
	word32 r8_206
	byte VZN_208
	word32 r7_209
	word32 r0_210
	word32 r5_211
	call Mem0[0x000192D0:word32] + 2 (retsize: 4; depth: 64)
		uses: ap_49,C_188,CVZN_35,CZN_175,dwLoc2C_26,dwLoc30_30,dwLoc34_180,dwLoc38_183,dwLoc3C_186,fp_51,N_41,r0_54,r10_47,r11_39,r2_43,r3_45,r4_42,r5_55,r6_46,r7_53,r8_50,r9_48,sp_184,V_189,VZN_52,Z_164,ZN_187
		defs: ap_205,C_193,CVZN_191,CZN_200,fp_207,N_197,r0_210,r10_203,r11_195,r2_199,r3_201,r4_198,r5_211,r6_202,r7_209,r8_206,r9_204,sp_190,V_194,VZN_208,Z_196,ZN_192
// DataOut: fp r10 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l000148B1:
	Mem171[fp_207 + -34:byte] = Mem0[r8_50 + 5320 + (uint32) ((word16) ((uint32) Mem0[r4_42 + 0x0000C65C:word16] >> 1 & ~0xFFFFFFFC)):byte]
// DataOut: fp r10 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l00014875:
	word32 r3_127
	branch ((uint32) Mem0[r4_42 + 0x0000C65C:word16] & 0x00000002) == 0x00000000 l00014888
// DataOut: fp r10 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l00014888:
	r3_127 = DPB(r3_45, 0x34, 0)
// DataOut: fp r10 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l00014880:
	r3_127 = DPB(r3_45, 0x38, 0)
// DataOut: fp r10 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l0001488B:
	word32 r2_134
	Mem129[fp_207 + -36:byte] = (byte) r3_127
	word32 r2_130 = (uint32) Mem129[r4_42 + 0x0000C65C:word16]
	branch (r2_130 & 0x00000004) == 0x00000000 l000148A0
// DataOut: fp r10 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l000148A0:
	r2_134 = DPB(r2_130, 0x32, 0)
// DataOut: fp r10 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l0001489A:
	r2_134 = DPB(r2_130, 0x33, 0)
// DataOut: fp r10 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l000148A3:
	Mem136[fp_207 + -34:byte] = (byte) r2_134
// DataOut: fp r10 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l000148EA:
	word32 ap_79 = 0x00000000
	word32 r2_80 = fp_207 + -32
// DataOut: ap fp r10 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -60(fp):fp + -36 -56(fp):r5 + 236 -52(fp):<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l000148F0:
	Mem87[r2_80:byte] = 0x20
	r2_80 = r2_80 + 0x00000001
	ap_79 = ap_79 + 0x00000001
	branch ap_79 <= 0x0000000E l000148F0
// DataOut: ap fp r10 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -60(fp):fp + -36 -56(fp):r5 + 236 -52(fp):<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l000148F9:
	Mem92[fp_207 + -17:byte] = 0x00
	word32 r0_96 = (uint32) (word16) r10_203
	branch r0_96 > 0x0000000F l0001492E
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -60(fp):fp + -36 -56(fp):r5 + 236 -52(fp):<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l0001492E:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> -60(fp):fp + -36 -56(fp):r5 + 236 -52(fp):<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l0001490C_1:
	word32 sp_101
	byte CVZN_102
	byte ZN_103
	bool C_104
	bool V_105
	word32 r11_106
	bool Z_107
	bool N_108
	word32 r4_109
	word32 r2_110
	byte CZN_111
	word32 r3_112
	word32 r6_113
	word32 r10_114
	word32 r9_115
	word32 ap_116
	word32 r8_117
	word32 fp_118
	byte VZN_119
	word32 r7_120
	word32 r0_121
	word32 r5_122
	call 0x00014910 + r0_96 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_89,C_98,CVZN_90,CZN_72,dwLoc2C_26,dwLoc30_30,dwLoc34_59,dwLoc38_60,dwLoc3C_61,fp_66,N_74,r0_96,r10_69,r11_76,r2_93,r3_71,r4_73,r5_62,r6_70,r7_95,r8_67,r9_68,sp_78,V_99,VZN_65,Z_75,ZN_97
		defs: ap_116,C_104,CVZN_102,CZN_111,fp_118,N_108,r0_121,r10_114,r11_106,r2_110,r3_112,r4_109,r5_122,r6_113,r7_120,r8_117,r9_115,sp_101,V_105,VZN_119,Z_107,ZN_103
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> -60(fp):fp + -36 -56(fp):r5 + 236 -52(fp):<invalid> -48(fp):fp + -37 -44(fp):<invalid>

fn00014812_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> -60(fp):fp + -36 -56(fp):r5 + 236 -52(fp):<invalid> -48(fp):fp + -37 -44(fp):<invalid>



word32 fn00015106(word32 r3, word32 r4, word32 ap, word32 fp, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r3 r4
// LiveOut: ap fp r0 r5 r6 r8 sp
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r5 r6 r7 r8 r9 sp
// Preserved:
fn00015106_entry:
// DataOut: ap fp r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00015106:
	word32 r5_341
	word32 r1_6 = (uint32) Mem0[Mem0[ap + 4:word32]:word16]
	word32 r2_23 = (uint32) Mem0[Mem0[ap + 8:word32]:word16]
	int16 v15_16 = (int16) (r1_6 >> 5 & ~0xFFFFFFF0)
	word32 r0_31 = r2_23 >> 5 & ~0xFFFFFFC0
	word32 sp_2 = fp - 0x00000008
	word32 r11_13 = DPB(r11, (int16) ((r1_6 >> 9 & ~0xFFFFFF80) + 0x00000050), 0)
	word32 r10_18 = DPB(r10, v15_16, 0)
	word32 r9_21 = DPB(r9, (word16) r1_6 & ~0xFFE0, 0)
	word32 r8_29 = DPB(r8, (int16) (r2_23 >> 11 & ~0xFFFFFFE0), 0)
	word32 r7_331 = DPB(r7, (int16) r0_31, 0)
	word32 r6_332 = DPB(r6, (word16) ((r2_23 & ~0xFFFFFFE0) * 0x00000002), 0)
	word32 r2_39 = (uint32) v15_16
	branch r2_39 == 0x00000000 l00015189
// DataOut: ap fp r10 r11 r2 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00015184:
	branch r2_39 <=u 0x0000000C l000151A0
// DataOut: ap fp r10 r11 r2 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid>
// LocalsOut: fp(32)

l000151A0:
	r5_341 = r3 + 5461 + (r2_39 - 0x00000001 << 2)
// DataOut: ap fp r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid>

l00015189:
	byte CVZN_318
	byte ZN_319
	bool C_320
	bool V_321
	word32 r0_323
	word32 r1_324
	word32 r2_325
	byte VZN_326
	bool Z_333
	byte CZN_334
	byte CZ_335
	word32 fp_337
	word32 r5_338
	bool N_340
	call Mem0[0x000192D0:word32] + 2 (retsize: 4; depth: 24)
		uses: ap,C_308,CVZN,CZ,CZN,dwLoc0C_298,dwLoc10_302,dwLoc14_306,fp,N,r0_31,r1_24,r10_18,r11_13,r2_39,r3,r4,r5,r6_38,r7_34,r8_29,r9_21,sp_303,V_309,VZN,Z_41,ZN_307
		defs: ap_322,C_320,CVZN_318,CZ_335,CZN_334,fp_337,N_340,r0_323,r1_324,r10_328,r11_327,r2_325,r3_336,r4_339,r5_338,r6_332,r7_331,r8_330,r9_329,sp_317,V_321,VZN_326,Z_333,ZN_319
	r5_341 = fp_337 + -8
// DataOut: ap fp r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid>

l000151AC:
	word32 ap_135
	word32 fp_150
	branch Mem0[r4 + 36:word32] <= 0x00000009 l000151DC
// DataOut: ap fp r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l000151DC:
	branch Mem0[r4 + 72:word32] == 0x00000000 l0001520C
// DataOut: ap fp r10 r11 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l0001520C:
	word32 sp_210 = sp_2 - 0x00000004
	Mem212[sp_210:uint32] = (uint32) (word16) r7_331
	Mem215[sp_210 - 0x00000004:uint32] = (uint32) (word16) r8_29
	word32 r1_216 = 0x00000000
	word32 r0_217 = (uint32) (word16) r11_13
	branch 0x00000064 == 0x00000000 l00015234
// DataOut: ap fp r0 r1 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l0001521E:
	branch 0x00000063 == 0x00000000 l00015239
// DataOut: ap fp r0 r1 r3 r5 r6 r8 r9 sp
// DataOut (flags): ZN
// SymbolicIn: sp:<invalid> r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l00015223:
	branch true l00015234
// DataOut: ap fp r0 r1 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l00015234:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l00015225:
	branch 0x00000064 == r0_217 l00015239
// DataOut: ap fp r0 r1 r3 r5 r6 r8 r9 sp
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l0001522A:
	branch 0x00000064 >u r0_217 l0001522F
// DataOut: ap fp r0 r1 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l0001522C:
	r1_216 = 0xFFFFFF9C
// DataOut: ap fp r0 r1 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l0001522F:
	r1_216 = r1_216 + r0_217
// DataOut: ap fp r1 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l00015239:
	Mem244[sp_210 - 0x00000008:uint32] = (uint32) (word16) r1_216
	Mem246[sp_210 - 0x0000000C:word32] = r5_341
	Mem249[sp_210 - 0x00000010:uint32] = (uint32) (word16) r9_21
	Mem252[sp_210 - 0x00000014:word32] = r3 + 5113
	Mem255[sp_210 - 0x00000018:word32] = Mem252[ap + 16:word32]
	word32 sp_259
	byte CVZN_260
	byte ZN_261
	bool C_262
	bool V_263
	word32 r0_265
	word32 r1_266
	word32 r2_267
	byte VZN_268
	word32 r11_269
	word32 r10_270
	word32 r9_271
	word32 r8_272
	word32 r7_273
	word32 r6_274
	bool Z_275
	byte CZN_276
	byte CZ_277
	word32 r3_278
	word32 r5_280
	word32 r4_281
	bool N_282
	call Mem255[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_67,C_257,CVZN_239,CZ_237,CZN_232,dwLoc0C_44,dwLoc10_45,dwLoc14_46,fp_66,N_236,r0_217,r1_241,r10_57,r11_58,r2_218,r3_50,r4_48,r5_49,r6_53,r7_54,r8_55,r9_56,sp_253,V_258,VZN_240,Z_235,ZN_256
		defs: ap_264,C_262,CVZN_260,CZ_277,CZN_276,fp_279,N_282,r0_265,r1_266,r10_270,r11_269,r2_267,r3_278,r4_281,r5_280,r6_274,r7_273,r8_272,r9_271,sp_259,V_263,VZN_268,Z_275,ZN_261
// DataOut: ap fp r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l000151E1:
	word32 sp_158 = sp_2 - 0x00000004
	Mem160[sp_158:uint32] = (uint32) (word16) r6_332
	Mem163[sp_158 - 0x00000004:uint32] = (uint32) (word16) r7_331
	Mem166[sp_158 - 0x00000008:uint32] = (uint32) (word16) r8_29
	Mem169[sp_158 - 0x0000000C:uint32] = (uint32) (word16) r9_21
	Mem172[sp_158 - 0x00000010:uint32] = (uint32) (word16) r10_18
	word32 r0_173 = (uint32) (word16) r11_13
	Mem176[sp_158 - 0x00000014:word32] = r0_173 + 0x0000076C
	Mem179[sp_158 - 0x00000018:word32] = r3 + 5159
	Mem182[sp_158 - 0x0000001C:word32] = Mem179[ap + 16:word32]
	word32 sp_186
	byte CVZN_187
	byte ZN_188
	bool C_189
	bool V_190
	word32 r0_192
	word32 r1_193
	word32 r2_194
	byte VZN_195
	word32 r11_196
	word32 r10_197
	word32 r9_198
	word32 r8_199
	word32 r7_200
	word32 r6_201
	bool Z_202
	byte CZN_203
	byte CZ_204
	word32 r3_205
	word32 r5_207
	word32 r4_208
	bool N_209
	call Mem182[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_67,C_184,CVZN_62,CZ_51,CZN_68,dwLoc0C_44,dwLoc10_45,dwLoc14_46,fp_66,N_47,r0_173,r1_61,r10_57,r11_58,r2_60,r3_50,r4_48,r5_49,r6_53,r7_54,r8_55,r9_56,sp_180,V_185,VZN_59,Z_155,ZN_183
		defs: ap_191,C_189,CVZN_187,CZ_204,CZN_203,fp_206,N_209,r0_192,r1_193,r10_197,r11_196,r2_194,r3_205,r4_208,r5_207,r6_201,r7_200,r8_199,r9_198,sp_186,V_190,VZN_195,Z_202,ZN_188
// DataOut: ap fp r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l000151B2:
	word32 sp_103 = sp_2 - 0x00000004
	Mem105[sp_103:uint32] = (uint32) (word16) r6_332
	Mem108[sp_103 - 0x00000004:uint32] = (uint32) (word16) r7_331
	Mem111[sp_103 - 0x00000008:uint32] = (uint32) (word16) r8_29
	Mem114[sp_103 - 0x0000000C:uint32] = (uint32) (word16) r9_21
	Mem116[sp_103 - 0x00000010:word32] = r5_341
	word32 r0_117 = (uint32) (word16) r11_13
	Mem120[sp_103 - 0x00000014:word32] = r0_117 + 0x0000076C
	Mem123[sp_103 - 0x00000018:word32] = r3 + 5135
	Mem126[sp_103 - 0x0000001C:word32] = Mem123[ap + 16:word32]
	word32 sp_130
	byte CVZN_131
	byte ZN_132
	bool C_133
	bool V_134
	word32 r0_136
	word32 r1_137
	word32 r2_138
	byte VZN_139
	word32 r11_140
	word32 r10_141
	word32 r9_142
	word32 r8_143
	word32 r7_144
	word32 r6_145
	bool Z_146
	byte CZN_147
	byte CZ_148
	word32 r3_149
	word32 r5_151
	word32 r4_152
	bool N_153
	call Mem126[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_67,C_128,CVZN_62,CZ_51,CZN_68,dwLoc0C_44,dwLoc10_45,dwLoc14_46,fp_66,N_47,r0_117,r1_61,r10_57,r11_58,r2_60,r3_50,r4_48,r5_49,r6_53,r7_54,r8_55,r9_56,sp_124,V_129,VZN_59,Z_52,ZN_127
		defs: ap_135,C_133,CVZN_131,CZ_148,CZN_147,fp_150,N_153,r0_136,r1_137,r10_141,r11_140,r2_138,r3_149,r4_152,r5_151,r6_145,r7_144,r8_143,r9_142,sp_130,V_134,VZN_139,Z_146,ZN_132
// DataOut: ap fp r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l0001524F:
	word32 sp_94 = fp_150 - 0x00000004
	*spOut = sp_94
	word32 fp_95
	*fpOut = Mem0[sp_94 + 0x00000010:word32]
	word32 ap_96
	*apOut = Mem0[sp_94 + 0x0000000C:word32]
	return Mem0[ap_135 + 16:word32]
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

fn00015106_exit:
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>



word32 fn00015256(word32 r0, word32 r2, word32 r4, word32 r6, word32 ap, word32 fp, word32 pc, ptr32 & r2Out, ptr32 & r4Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r2 r4 r6
// LiveOut: ap fp r0 r2 r4 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
fn00015256_entry:
	*r2Out = r2
// DataOut: ap fp pc r0 r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00015256:
	word32 r0_100
	word32 r5_10
	word32 v8_5 = Mem0[r2 + 0x0000C5FB:word32] - 0x00000001
	Mem6[r2 + 0x0000C5FB:word32] = v8_5
	branch v8_5 < 0x00000000 l0001527C
// DataOut: ap fp pc r0 r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001527C:
	word32 r3_167
	word32 r5_168
	word32 sp_171
	r0_100 = fn0000D69A(r0, r4, r6, ap, fp, pc, out r2, out r3_167, out r5_168, out ap, out fp, out sp_171)
	r5_10 = r0_100
// DataOut: ap fp pc r0 r2 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l00015268:
	r0_100 = Mem6[r2 + 0x0000C5F7:word32]
	Mem156[r2 + 0x0000C5F7:word32] = Mem6[r2 + 0x0000C5F7:word32] + 0x00000001
	r5_10 = (uint32) Mem156[r0_100:byte]
// DataOut: ap fp pc r0 r2 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l00015286:
	word32 r7_107 = r5_10 + 0x00000001
	word32 r4_101
	*r4Out = 0x00000000
// DataOut: ap fp pc r0 r2 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r1:<invalid>

l0001528C:
	word32 r5_138
	word32 v16_44 = Mem6[r2 + 0x0000C5FB:word32] - 0x00000001
	Mem45[r2 + 0x0000C5FB:word32] = v16_44
	branch v16_44 < 0x00000000 l000152A8
// DataOut: ap fp pc r0 r2 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r6:<invalid> r1:<invalid>

l000152A8:
	word32 r3_144
	word32 r5_145
	word32 sp_148
	r5_138 = fn0000D69A(r0_100, r4_101, r6, ap, fp, pc, out r2, out r3_144, out r5_145, out ap, out fp, out sp_148)
// DataOut: ap fp pc r2 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r6:<invalid> r1:<invalid>

l00015294:
	word32 r0_135 = Mem45[r2 + 0x0000C5F7:word32]
	Mem137[r2 + 0x0000C5F7:word32] = Mem45[r2 + 0x0000C5F7:word32] + 0x00000001
	r5_138 = (uint32) Mem137[r0_135:byte]
// DataOut: ap fp pc r2 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r6:<invalid> r1:<invalid>

l000152B2:
	word32 r6_56 = r5_138 & ~0xFFFFFFF0
	word32 r0_59 = (uint32) SLICE(r5_138 & ~0xFFFFFF0F, ui28, 4)
	r6 = r6_56 + 0x00000001
	word32 r3_104 = r0_59 + 0x00000001
	branch r0_59 + 0x00000001 + r4_101 <=u Mem45[ap + 8:word32] l000152DE
// DataOut: ap fp pc r2 r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r6:<invalid>

l000152DE:
	word32 r1_94 = Mem45[ap + 4:word32]
// DataOut: ap fp pc r1 r2 r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r2:<invalid> r1:<invalid>

l000152E4:
	Mem103[r1_94:word32] = r6_56 + 0x00000001
	r0_100 = r4_101
	r4_101 = r4_101 + 0x00000001
	*r4Out = r4_101
	r3_104 = r3_104 - 0x00000001
	branch r3_104 != 0x00000000 l000152E4
// DataOut: ap fp pc r0 r1 r2 r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l000152F1:
	r7_107 = r7_107 - 0x00000001
	branch r7_107 != 0x00000000 l0001528C
// DataOut: ap fp pc r0 r2 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l000152F5:
	word32 r3_115
	branch r4_101 == Mem103[ap + 8:word32] l00015300
// DataOut: fp pc r2 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l00015300:
	r3_115 = DPB(r3_104, 0x00, 0)
// DataOut: fp pc r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l000152FB:
	r3_115 = DPB(r3_104, 0x04, 0)
// DataOut: fp pc r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l00015302:
	word32 sp_121 = fp - 0x00000004
	*spOut = sp_121
	word32 fp_122
	*fpOut = Mem103[sp_121 + 0x00000010:word32]
	word32 ap_123
	*apOut = Mem103[sp_121 + 0x0000000C:word32]
	return (int32) (int8) r3_115
// DataOut: ap fp pc r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l000152DA:
	word32 sp_90 = fp - 0x00000004
	*spOut = sp_90
	word32 fp_91
	*fpOut = Mem45[sp_90 + 0x00000010:word32]
	word32 ap_92
	*apOut = Mem45[sp_90 + 0x0000000C:word32]
	return 0x00000004
// DataOut: ap fp pc r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r2:<invalid> r1:<invalid>

fn00015256_exit:
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r2:<invalid> r1:<invalid>



void fn0001530A(word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001530A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001530A_entry:
// DataOut: ap
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001530A:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00015896(word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00015896_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00015896_entry:
// DataOut: ap
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00015896:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00015E22(word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00015E22_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00015E22_entry:
// DataOut: ap
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00015E22:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000162E6(word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000162E6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000162E6_entry:
// DataOut: ap
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000162E6:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000167AA(word32 r2, word32 r4, word32 r6, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp pc r2 r4 r6
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000167AA_entry:
// DataOut: fp pc r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000167AA:
	word32 r0_11
	Mem4[fp + -24:word32] = 0x00000007
	branch Mem4[r4 + 0x0000C5FB:word32] + Mem4[r4 + 132:word32] <= 0x00030D40 l000167DC
// DataOut: fp pc r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000167DC:
	r0_11 = DPB(r0, 0x07, 0)
// DataOut: fp pc r0 r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid>
// LocalsOut: fp(32)

l000167D4:
	r0_11 = DPB(r0, 0x08, 0)
// DataOut: fp pc r0 r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid>
// LocalsOut: fp(32)

l000167DF:
	Mem13[fp + -28:int32] = (int32) (int8) r0_11
	Mem15[r4 + 0x0000C819:word32] = 0x00000000
	word32 ap_16 = (uint32) Mem15[r4 + 0x0000C640:word16]
	branch (ap_16 & 0x00000004) != 0x00000000 l000167F7
// DataOut: ap fp pc r0 r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid> r0:<invalid>
// LocalsOut: fp(32)

l000167F7:
	Mem392[fp + -20:word32] = 0x00000009
	word32 r2_402
	word32 r4_403
	word32 ap_404
	word32 fp_405
	word32 sp_406
	word32 r0_407 = fn00015256(r0_11, r2, r4, r6, ap_16, fp, pc, out r2_402, out r4_403, out ap_404, out fp_405, out sp_406)
	branch r0_407 == 0x00000000 l00016812
// DataOut: ap fp pc r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid> r0:<invalid>

l00016812:
	Mem422[sp_406 - 0x00000004:word32] = fp_405 + -20
	Mem425[sp_406 - 0x00000008:word32] = fp_405 + -8
	Mem428[sp_406 - 0x00000010:word64] = 0x0000000000000000
	Mem431[sp_406 - 0x00000014:uint32] = 0x00000100
	Mem434[sp_406 - 0x00000018:uint32] = 0x00000100
	Mem437[sp_406 - 0x0000001C:word32] = fp_405 + -1052
	word32 r2_441
	word32 r3_442
	word32 r4_443
	word32 r5_444
	word32 r6_445
	word32 r11_446
	word32 ap_447
	word32 fp_448
	word32 sp_449
	word32 r0_450 = fn0001878E(r0_407, ap_404, fp_405, out r2_441, out r3_442, out r4_443, out r5_444, out r6_445, out r11_446, out ap_447, out fp_448, out sp_449)
	branch r0_450 == 0x00000000 l00016847
// DataOut: ap fp pc r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016847:
	Mem478[sp_449 - 0x00000004:uint32] = 0x00000040
	Mem481[sp_449 - 0x00000008:word32] = fp_448 + -1052
	word32 r2_485
	word32 r4_486
	word32 ap_487
	word32 fp_488
	word32 sp_489
	word32 r0_490 = fn00015256(r0_450, r2_441, r4_443, r6_445, ap_447, fp_448, pc, out r2_485, out r4_486, out ap_487, out fp_488, out sp_489)
	branch r0_490 == 0x00000000 l0001685D
// DataOut: ap fp pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l0001685D:
	Mem505[sp_489 - 0x00000004:word32] = fp_488 + -24
	Mem508[sp_489 - 0x00000008:word32] = fp_488 + -12
	Mem511[sp_489 - 0x0000000C:word32] = r2_485 + 256
	Mem514[sp_489 - 0x00000010:word32] = r2_485 + 128
	Mem516[sp_489 - 0x00000014:word32] = 0x00000000
	Mem519[sp_489 - 0x00000018:uint32] = 0x00000040
	Mem522[sp_489 - 0x0000001C:word32] = fp_488 + -1052
	word32 r2_526
	word32 r3_527
	word32 r4_528
	word32 r5_529
	word32 r6_530
	word32 r11_531
	word32 sp_534
	word32 fp_533
	word32 ap_532
	word32 r0_535 = fn0001878E(r0_490, ap_487, fp_488, out r2_526, out r3_527, out r4_528, out r5_529, out r6_530, out r11_531, out ap_532, out fp_533, out sp_534)
	branch r0_535 == 0x00000000 l0001689E
// DataOut: ap fp pc r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l0001689E:
	Mem574[sp_534 - 0x00000004:uint32] = 0x00000040
	Mem577[sp_534 - 0x00000008:word32] = fp_533 + -1052
	word32 r2_581
	word32 r4_582
	word32 ap_583
	word32 fp_584
	word32 sp_585
	word32 r0_586 = fn00015256(r0_535, r2_526, r4_528, r6_530, ap_532, fp_533, pc, out r2_581, out r4_582, out ap_583, out fp_584, out sp_585)
	branch r0_586 == 0x00000000 l000168B4
// DataOut: fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168B4:
	word32 fp_604
	word32 sp_603
	word32 ap_599 = (uint32) Mem577[r4_582 + 0x0000C640:word16]
	branch (ap_599 & 0x00000002) == 0x00000000 l00016928
// DataOut: ap fp r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016928:
	Mem785[sp_585 - 0x00000004:word32] = fp_584 + -28
	Mem788[sp_585 - 0x00000008:word32] = fp_584 + -16
	Mem791[sp_585 - 0x0000000C:word32] = r2_581 + 256
	Mem794[sp_585 - 0x00000010:word32] = r2_581 + 384
	Mem796[sp_585 - 0x00000014:word32] = 0x00000000
	Mem799[sp_585 - 0x00000018:uint32] = 0x00000040
	Mem802[sp_585 - 0x0000001C:word32] = fp_584 + -1052
	word32 r2_806
	word32 r3_807
	word32 r4_808
	word32 r5_809
	word32 r6_810
	word32 r11_811
	word32 sp_814
	word32 ap_812
	word32 r0_815 = fn0001878E(r0_586, ap_599, fp_584, out r2_806, out r3_807, out r4_808, out r5_809, out r6_810, out r11_811, out ap_812, out fp_604, out sp_814)
	branch r0_815 == 0x00000000 l00016973
// DataOut: ap fp r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016973:
	Mem863[sp_814 - 0x00000004:word32] = Mem802[fp_604 + -28:word32]
	Mem866[sp_814 - 0x00000008:word32] = Mem863[fp_604 + -24:word32]
	Mem869[sp_814 - 0x0000000C:word32] = Mem866[fp_604 + -20:word32]
	Mem872[sp_814 - 0x00000010:word32] = Mem869[fp_604 + -16:word32]
	Mem875[sp_814 - 0x00000014:word32] = Mem872[fp_604 + -12:word32]
	Mem878[sp_814 - 0x00000018:word32] = Mem875[fp_604 + -8:word32]
	fn00015896(ap_812)
	sp_603 = sp_814 - 0x00000018
// DataOut: fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l0001694C:
	branch r0_815 != 0x00000001 l0001695B
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016951:
	Mem854[sp_814 - 0x00000004:word32] = Mem802[fp_604 + -16:word32]
	ap_812 = fn00018BF6(ap_812, fp_604, out fp_604, out sp_814)
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l0001695B:
	Mem829[sp_814 - 0x00000004:word32] = Mem802[fp_604 + -12:word32]
	word32 fp_833
	word32 sp_834
	word32 ap_835 = fn00018BF6(ap_812, fp_604, out fp_833, out sp_834)
	Mem838[sp_834 - 0x00000004:word32] = Mem829[fp_833 + -8:word32]
	word32 fp_842
	word32 sp_843
	fn00018BF6(ap_835, fp_833, out fp_842, out sp_843)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168BF:
	Mem682[sp_585 - 0x00000004:word32] = fp_584 + -28
	Mem685[sp_585 - 0x00000008:word32] = fp_584 + -16
	Mem688[sp_585 - 0x0000000C:word32] = r2_581 + 256
	Mem691[sp_585 - 0x00000010:word32] = r2_581 + 512
	Mem693[sp_585 - 0x00000014:word32] = 0x00000000
	Mem696[sp_585 - 0x00000018:uint32] = 0x00000040
	Mem699[sp_585 - 0x0000001C:word32] = fp_584 + -1052
	word32 r2_703
	word32 r3_704
	word32 r4_705
	word32 r5_706
	word32 r6_707
	word32 r11_708
	word32 sp_711
	word32 ap_709
	word32 r0_712 = fn0001878E(r0_586, ap_599, fp_584, out r2_703, out r3_704, out r4_705, out r5_706, out r6_707, out r11_708, out ap_709, out fp_604, out sp_711)
	branch r0_712 == 0x00000000 l0001690A
// DataOut: ap fp r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l0001690A:
	Mem760[sp_711 - 0x00000004:word32] = Mem699[fp_604 + -28:word32]
	Mem763[sp_711 - 0x00000008:word32] = Mem760[fp_604 + -24:word32]
	Mem766[sp_711 - 0x0000000C:word32] = Mem763[fp_604 + -20:word32]
	Mem769[sp_711 - 0x00000010:word32] = Mem766[fp_604 + -16:word32]
	Mem772[sp_711 - 0x00000014:word32] = Mem769[fp_604 + -12:word32]
	Mem775[sp_711 - 0x00000018:word32] = Mem772[fp_604 + -8:word32]
	fn0001530A(ap_709)
	sp_603 = sp_711 - 0x00000018
// DataOut: fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l0001698D:
	word32 sp_605 = sp_603 - 0x00000004
	Mem607[sp_605:word32] = Mem577[fp_604 + -16:word32]
	word32 sp_611
	byte ZN_612
	bool C_613
	bool V_614
	word32 fp_615
	word32 r4_616
	word32 ap_617
	byte CVZN_618
	byte CZN_619
	word32 r0_620
	byte VZN_621
	bool Z_622
	bool N_623
	word32 r3_624
	word32 r2_625
	word32 r6_626
	word32 pc_627
	word32 r5_628
	word32 r11_629
	call ap_599 + 2 (retsize: 4; depth: 4)
		uses: ap_599,C_609,CVZN,CZN_8,dwLoc0420_395,dwLoc0424_398,fp_604,N,pc,r0_586,r11_531,r2_581,r3_587,r4_582,r5_529,r6_530,sp_605,V_610,VZN,Z_589,ZN_608
		defs: ap_617,C_613,CVZN_618,CZN_619,fp_615,N_623,pc_627,r0_620,r11_629,r2_625,r3_624,r4_616,r5_628,r6_626,sp_611,V_614,VZN_621,Z_622,ZN_612
	Mem632[sp_611 - 0x00000004:word32] = Mem607[fp_615 + -12:word32]
	word32 sp_636
	byte ZN_637
	bool C_638
	bool V_639
	word32 fp_640
	word32 r4_641
	word32 ap_642
	byte CVZN_643
	byte CZN_644
	word32 r0_645
	byte VZN_646
	bool Z_647
	bool N_648
	word32 r3_649
	word32 r2_650
	word32 r6_651
	word32 pc_652
	word32 r5_653
	word32 r11_654
	call ap_617 + 2 (retsize: 4; depth: 4)
		uses: ap_617,C_634,CVZN_618,CZN_619,dwLoc0420_395,dwLoc0424_398,fp_615,N_623,pc_627,r0_620,r11_629,r2_625,r3_624,r4_616,r5_628,r6_626,sp_630,V_635,VZN_621,Z_622,ZN_633
		defs: ap_642,C_638,CVZN_643,CZN_644,fp_640,N_648,pc_652,r0_645,r11_654,r2_650,r3_649,r4_641,r5_653,r6_651,sp_636,V_639,VZN_646,Z_647,ZN_637
	Mem657[sp_636 - 0x00000004:word32] = Mem632[fp_640 + -8:word32]
	word32 sp_661
	byte ZN_662
	bool C_663
	bool V_664
	word32 fp_665
	word32 r4_666
	word32 ap_667
	byte CVZN_668
	byte CZN_669
	word32 r0_670
	byte VZN_671
	bool Z_672
	bool N_673
	word32 r3_674
	word32 r2_675
	word32 r6_676
	word32 pc_677
	word32 r5_678
	word32 r11_679
	call ap_642 + 2 (retsize: 4; depth: 4)
		uses: ap_642,C_659,CVZN_643,CZN_644,dwLoc0420_395,dwLoc0424_398,fp_640,N_648,pc_652,r0_645,r11_654,r2_650,r3_649,r4_641,r5_653,r6_651,sp_655,V_660,VZN_646,Z_647,ZN_658
		defs: ap_667,C_663,CVZN_668,CZN_669,fp_665,N_673,pc_677,r0_670,r11_679,r2_675,r3_674,r4_666,r5_678,r6_676,sp_661,V_664,VZN_671,Z_672,ZN_662
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168E3:
	branch r0_712 != 0x00000001 l000168F2
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168E8:
	Mem751[sp_711 - 0x00000004:word32] = Mem699[fp_604 + -16:word32]
	ap_709 = fn00018BF6(ap_709, fp_604, out fp_604, out sp_711)
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168F2:
	Mem726[sp_711 - 0x00000004:word32] = Mem699[fp_604 + -12:word32]
	word32 fp_730
	word32 sp_731
	word32 ap_732 = fn00018BF6(ap_709, fp_604, out fp_730, out sp_731)
	Mem735[sp_731 - 0x00000004:word32] = Mem726[fp_730 + -8:word32]
	word32 fp_739
	word32 sp_740
	fn00018BF6(ap_732, fp_730, out fp_739, out sp_740)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168B0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016881:
	branch r0_535 != 0x00000001 l00016890
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016886:
	Mem565[sp_534 - 0x00000004:word32] = Mem522[fp_533 + -12:word32]
	ap_532 = fn00018BF6(ap_532, fp_533, out fp_533, out sp_534)
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016890:
	Mem549[sp_534 - 0x00000004:word32] = Mem522[fp_533 + -8:word32]
	word32 fp_553
	word32 sp_554
	fn00018BF6(ap_532, fp_533, out fp_553, out sp_554)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> r11:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1128(fp):<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016859:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016834:
	branch r0_450 != 0x00000001 l00016843
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016839:
	Mem469[sp_449 - 0x00000004:word32] = Mem437[fp_448 + -8:word32]
	word32 fp_473
	word32 sp_474
	fn00018BF6(ap_447, fp_448, out fp_473, out sp_474)
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016843:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> r11:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1092(fp):<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l0001680E:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1060(fp):fp + -1052 -1056(fp):0x00000100

l000167F4:
// DataOut: ap fp pc r0 r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid> r0:<invalid>
// LocalsOut: fp(32)

l000169AC:
	word32 r2_75
	word32 r4_76
	word32 ap_77
	word32 fp_78
	word32 sp_79
	word32 r0_80 = fn00015256(r0_11, r2, r4, r6, ap_16, fp, pc, out r2_75, out r4_76, out ap_77, out fp_78, out sp_79)
	branch r0_80 == 0x00000000 l000169C2
// DataOut: ap fp pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid> r0:<invalid>

l000169C2:
	Mem100[sp_79 - 0x00000004:word32] = fp_78 + -24
	Mem103[sp_79 - 0x00000008:word32] = fp_78 + -12
	Mem106[sp_79 - 0x0000000C:word32] = r2_75 + 256
	Mem108[sp_79 - 0x00000010:word32] = r2_75
	Mem110[sp_79 - 0x00000014:word32] = 0x00000000
	Mem113[sp_79 - 0x00000018:uint32] = 0x00000040
	Mem116[sp_79 - 0x0000001C:word32] = fp_78 + -1052
	word32 r2_120
	word32 r3_121
	word32 r4_122
	word32 r5_123
	word32 r6_124
	word32 r11_125
	word32 ap_126
	word32 fp_127
	word32 sp_128
	word32 r0_129 = fn0001878E(r0_80, ap_77, fp_78, out r2_120, out r3_121, out r4_122, out r5_123, out r6_124, out r11_125, out ap_126, out fp_127, out sp_128)
	branch r0_129 == 0x00000000 l000169F7
// DataOut: ap fp pc r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1060(fp):fp + -1052 -1056(fp):0x00000040

l000169F7:
	Mem157[sp_128 - 0x00000004:uint32] = 0x00000040
	Mem160[sp_128 - 0x00000008:word32] = fp_127 + -1052
	word32 r2_164
	word32 r4_165
	word32 ap_166
	word32 fp_167
	word32 sp_168
	word32 r0_169 = fn00015256(r0_129, r2_120, r4_122, r6_124, ap_126, fp_127, pc, out r2_164, out r4_165, out ap_166, out fp_167, out sp_168)
	branch r0_169 == 0x00000000 l00016A0D
// DataOut: fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A0D:
	word32 ap_196
	word32 fp_195
	word32 sp_194
	word32 ap_182 = (uint32) Mem160[r4_165 + 0x0000C640:word16]
	branch (ap_182 & 0x00000002) == 0x00000000 l00016A70
// DataOut: ap fp r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A70:
	Mem305[sp_168 - 0x00000004:word32] = fp_167 + -28
	Mem308[sp_168 - 0x00000008:word32] = fp_167 + -16
	Mem311[sp_168 - 0x0000000C:word32] = r2_164 + 256
	Mem314[sp_168 - 0x00000010:word32] = r2_164 + 384
	Mem316[sp_168 - 0x00000014:word32] = 0x00000000
	Mem319[sp_168 - 0x00000018:uint32] = 0x00000040
	Mem322[sp_168 - 0x0000001C:word32] = fp_167 + -1052
	word32 r2_326
	word32 r3_327
	word32 r4_328
	word32 r5_329
	word32 r6_330
	word32 r11_331
	word32 sp_334
	word32 r0_335 = fn0001878E(r0_169, ap_182, fp_167, out r2_326, out r3_327, out r4_328, out r5_329, out r6_330, out r11_331, out ap_196, out fp_195, out sp_334)
	branch r0_335 == 0x00000000 l00016AB1
// DataOut: ap fp r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016AB1:
	Mem374[sp_334 - 0x00000004:word32] = Mem322[fp_195 + -28:word32]
	Mem377[sp_334 - 0x00000008:word32] = Mem374[fp_195 + -24:word32]
	Mem380[sp_334 - 0x0000000C:word32] = Mem377[fp_195 + -16:word32]
	Mem383[sp_334 - 0x00000010:word32] = Mem380[fp_195 + -12:word32]
	fn000162E6(ap_196)
	sp_194 = sp_334 - 0x00000010
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 384 -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A94:
	branch r0_335 != 0x00000001 l00016AA3
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 384 -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A99:
	Mem365[sp_334 - 0x00000004:word32] = Mem322[fp_195 + -16:word32]
	ap_196 = fn00018BF6(ap_196, fp_195, out fp_195, out sp_334)
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 384 -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016AA3:
	Mem349[sp_334 - 0x00000004:word32] = Mem322[fp_195 + -12:word32]
	word32 fp_353
	word32 sp_354
	fn00018BF6(ap_196, fp_195, out fp_353, out sp_354)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 384 -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A18:
	Mem217[sp_168 - 0x00000004:word32] = fp_167 + -28
	Mem220[sp_168 - 0x00000008:word32] = fp_167 + -16
	Mem223[sp_168 - 0x0000000C:word32] = r2_164 + 256
	Mem226[sp_168 - 0x00000010:word32] = r2_164 + 512
	Mem228[sp_168 - 0x00000014:word32] = 0x00000000
	Mem231[sp_168 - 0x00000018:uint32] = 0x00000040
	Mem234[sp_168 - 0x0000001C:word32] = fp_167 + -1052
	word32 r2_238
	word32 r3_239
	word32 r4_240
	word32 r5_241
	word32 r6_242
	word32 r11_243
	word32 sp_246
	word32 r0_247 = fn0001878E(r0_169, ap_182, fp_167, out r2_238, out r3_239, out r4_240, out r5_241, out r6_242, out r11_243, out ap_196, out fp_195, out sp_246)
	branch r0_247 == 0x00000000 l00016A59
// DataOut: ap fp r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A59:
	Mem286[sp_246 - 0x00000004:word32] = Mem234[fp_195 + -28:word32]
	Mem289[sp_246 - 0x00000008:word32] = Mem286[fp_195 + -24:word32]
	Mem292[sp_246 - 0x0000000C:word32] = Mem289[fp_195 + -16:word32]
	Mem295[sp_246 - 0x00000010:word32] = Mem292[fp_195 + -12:word32]
	fn00015E22(ap_196)
	sp_194 = sp_246 - 0x00000010
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 512 -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016AC5:
	Mem199[sp_194 - 0x00000004:word32] = Mem160[fp_195 + -16:word32]
	word32 fp_203
	word32 sp_204
	word32 ap_205 = fn00018BF6(ap_196, fp_195, out fp_203, out sp_204)
	Mem208[sp_204 - 0x00000004:word32] = Mem199[fp_203 + -12:word32]
	word32 fp_212
	word32 sp_213
	fn00018BF6(ap_205, fp_203, out fp_212, out sp_213)
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):<invalid> -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016AD9:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:<invalid> r2:<invalid> r0:0x00000000 fp:<invalid> ap:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):<invalid> -1108(fp):r2 + 256 -1104(fp):<invalid> -1100(fp):<invalid> -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):<invalid> -1080(fp):<invalid> -1076(fp):<invalid> -1072(fp):r2 + 256 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):fp + -1052 -1056(fp):<invalid>

l00016A3C:
	branch r0_247 != 0x00000001 l00016A4B
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 512 -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A41:
	Mem277[sp_246 - 0x00000004:word32] = Mem234[fp_195 + -16:word32]
	ap_196 = fn00018BF6(ap_196, fp_195, out fp_195, out sp_246)
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 512 -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A4B:
	Mem261[sp_246 - 0x00000004:word32] = Mem234[fp_195 + -12:word32]
	word32 fp_265
	word32 sp_266
	fn00018BF6(ap_196, fp_195, out fp_265, out sp_266)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 512 -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A09:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l000169E4:
	branch r0_129 != 0x00000001 l000169F3
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l000169E9:
	Mem148[sp_128 - 0x00000004:word32] = Mem116[fp_127 + -12:word32]
	word32 fp_152
	word32 sp_153
	fn00018BF6(ap_126, fp_127, out fp_152, out sp_153)
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l000169F3:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> r11:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1092(fp):<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l000169BE:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1060(fp):fp + -1052 -1056(fp):0x00000040

fn000167AA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> fp:<invalid> r2:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):<invalid> -1108(fp):r2 + 256 -1104(fp):<invalid> -1100(fp):<invalid> -1096(fp):fp + -1052 -1092(fp):<invalid> -1088(fp):fp + -1052 -1084(fp):<invalid> -1080(fp):<invalid> -1076(fp):<invalid> -1072(fp):r2 + 256 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):fp + -1052 -1056(fp):<invalid>



void fn000173CA(word32 r0, word32 r3, word32 r4, word32 r10, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r10 r3 r4
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000173CA_entry:
// DataOut: ap fp r0 r10 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000173CA:
	Mem6[Mem6[ap + 4:word32]:word32] = 0x00000000
	Mem9[Mem9[ap + 8:word32]:word32] = 0x00000000
	Mem12[r3 + 1511:word32] = fp + -25
	word32 sp_168 = fp - 0x0000001C
	word32 r6_163 = 0x00000000
	branch 0x00000000 <u (uint32) Mem12[r3 + 0x0000C688:word16] l00017403
// DataOut: ap fp r0 r10 r11 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00017403:
// DataOut: ap fp r0 r10 r11 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r6:0x00000000 r11:0x00000000 r8:0x00000000 r2:<invalid>

l00017414:
	word32 sp_171 = sp_168 - 0x00000004
	Mem172[sp_171:word32] = 0x00000004
	Mem175[sp_171 - 0x00000004:word32] = r3 + 152
	word32 r2_179
	word32 r3_180
	word32 r5_181
	word32 r7_182
	word32 ap_183
	word32 fp_184
	word32 sp_185
	word32 r0_186 = fn0000D5BE(r0, r4, r6_163, ap, fp, out r2_179, out r3_180, out r5_181, out r7_182, out ap_183, out fp_184, out sp_185)
	branch r0_186 != 0x00000000 l00017429
// DataOut: ap fp r0 r10 r11 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017429:
	Mem199[sp_185 - 0x00000004:word32] = 0x00000004
	Mem202[sp_185 - 0x00000008:word32] = r3_180 + 0x0000C634
	Mem205[sp_185 - 0x0000000C:word32] = r3_180 + 152
	word32 sp_209
	byte CVZN_210
	byte ZN_211
	bool C_212
	bool V_213
	word32 r6_214
	bool Z_215
	bool N_216
	word32 r11_217
	word32 ap_218
	word32 fp_219
	word32 r3_220
	word32 r8_221
	word32 r2_222
	byte CZN_223
	word32 r0_224
	word32 r7_225
	word32 r10_226
	word32 r9_227
	word32 r5_228
	word32 r4_229
	byte VZN_230
	call Mem205[0x000192D8:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_183,C_207,CVZN_164,CZN_165,fp_184,N_162,r0_186,r10_159,r11_166,r2_179,r3_180,r4_157,r5_181,r6_163,r7_182,r8_160,r9_158,sp_203,V_208,VZN_156,Z_188,ZN_206
		defs: ap_218,C_212,CVZN_210,CZN_223,fp_219,N_216,r0_224,r10_226,r11_217,r2_222,r3_220,r4_229,r5_228,r6_214,r7_225,r8_221,r9_227,sp_209,V_213,VZN_230,Z_215,ZN_211
	branch r0_224 == 0x00000000 l0001748E
// DataOut: ap fp r0 r10 r11 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001748E:
	word32 r3_376
	word32 r5_377
	word32 r7_378
	word32 ap_379
	word32 fp_380
	word32 sp_381
	word32 r0_382 = fn00011C0A(r0_224, r4_229, r6_214, ap_218, fp_219, out r3_376, out r5_377, out r7_378, out ap_379, out fp_380, out sp_381)
	branch r0_382 == 0x00000000 l0001749A
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001749A:
	Mem391[sp_381 - 0x00000004:word32] = 0x00000002
	Mem394[sp_381 - 0x00000008:uint32] = (uint32) Mem391[r3_376 + 0x0000C670:word16]
	byte CVZN_399
	byte ZN_400
	bool C_401
	bool V_402
	word32 r6_403
	bool Z_404
	bool N_405
	word32 r11_406
	word32 ap_407
	word32 fp_408
	word32 r8_410
	word32 r2_411
	byte CZN_412
	word32 r0_413
	word32 r7_414
	word32 r10_415
	word32 r9_416
	word32 r5_417
	word32 r4_418
	byte VZN_419
	word32 r3_409
	word32 sp_398
	call r9_227 + 2 (retsize: 4; depth: 4)
		uses: ap_379,C_396,CVZN_210,CZN_223,fp_380,N_216,r0_382,r10_226,r11_217,r2_222,r3_376,r4_229,r5_377,r6_214,r7_378,r8_221,r9_227,sp_392,V_397,VZN_230,Z_384,ZN_395
		defs: ap_407,C_401,CVZN_399,CZN_412,fp_408,N_405,r0_413,r10_415,r11_406,r2_411,r3_409,r4_418,r5_417,r6_403,r7_414,r8_410,r9_416,sp_398,V_402,VZN_419,Z_404,ZN_400
	branch r0_413 == 0x00000000 l000174B3
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174AA:
	branch r0_413 <= 0x00000001 l000174B3
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174B3:
	branch Mem394[r3_409 + 0x0000C627:word32] == 0x00000000 l000174CE
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174BB:
	Mem889[sp_398 - 0x00000004:word32] = Mem394[r3_409 + 0x0000C627:word32]
	byte CVZN_894
	byte ZN_895
	bool C_896
	bool V_897
	word32 r6_898
	bool Z_899
	bool N_900
	word32 r11_901
	word32 ap_902
	word32 fp_903
	word32 r8_905
	word32 r2_906
	byte CZN_907
	word32 r0_908
	word32 r7_909
	word32 r10_910
	word32 r9_911
	word32 r5_912
	word32 r4_913
	byte VZN_914
	call Mem889[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_407,C_891,CVZN_399,CZN_424,fp_408,N_405,r0_413,r10_415,r11_425,r2_411,r3_409,r4_418,r5_417,r6_403,r7_414,r8_410,r9_416,sp_887,V_892,VZN_419,Z_427,ZN_890
		defs: ap_902,C_896,CVZN_894,CZN_907,fp_903,N_900,r0_908,r10_910,r11_901,r2_906,r3_904,r4_913,r5_912,r6_898,r7_909,r8_905,r9_911,sp_893,V_897,VZN_914,Z_899,ZN_895
	Mem916[r3_409 + 0x0000C627:word32] = 0x00000000
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174CE:
	word32 sp_432 = sp_398 - 0x00000004
	Mem433[sp_432:word32] = 0x00000003
	Mem436[sp_432 - 0x00000004:uint32] = (uint32) Mem433[r3_409 + 0x0000C672:word16]
	byte CVZN_441
	byte ZN_442
	bool C_443
	bool V_444
	bool Z_446
	bool N_447
	word32 r11_448
	word32 r2_453
	byte CZN_454
	word32 r7_456
	word32 r10_457
	byte VZN_461
	word32 r5_459
	word32 r9_458
	word32 r8_452
	call r9_416 + 2 (retsize: 4; depth: 4)
		uses: ap_407,C_438,CVZN_399,CZN_424,fp_408,N_405,r0_413,r10_415,r11_425,r2_411,r3_430,r4_418,r5_417,r6_403,r7_414,r8_410,r9_416,sp_434,V_439,VZN_419,Z_427,ZN_437
		defs: ap_449,C_443,CVZN_441,CZN_454,fp_450,N_447,r0_455,r10_457,r11_448,r2_453,r3_451,r4_460,r5_459,r6_445,r7_456,r8_452,r9_458,sp_440,V_444,VZN_461,Z_446,ZN_442
	branch r0 == 0x00000000 l000174E7
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174DE:
	branch r0 <= 0x00000001 l000174E7
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174E7:
	branch Mem436[r3 + 108:word32] != 0x00000000 l0001754B
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174EC:
	r0 = Mem436[r3 + 144:word32] - 0x00000004
	r6_163 = 0x00000000
	word32 r2_746 = r0 + 0x00000004
	branch Mem436[r0 + 0x00000004:word32] == 0x00000000 l0001751B
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174FC:
	word32 sp_833 = sp_168 - 0x00000004
	Mem835[sp_833:word32] = Mem436[r3 + 16:word32]
	Mem838[sp_833 - 0x00000004:word32] = Mem835[r2_746:word32]
	Mem841[sp_833 - 0x00000008:word32] = r3 + 0x0000C701
	byte CVZN_846
	byte ZN_847
	bool C_848
	bool V_849
	bool Z_851
	bool N_852
	word32 r11_853
	word32 r2_858
	byte CZN_859
	word32 r7_861
	word32 r10_862
	byte VZN_866
	call r5_459 + 2 (retsize: 4; depth: 4)
		uses: ap_449,C_843,CVZN_441,CZN_466,fp_450,N_447,r0_744,r10_457,r11_467,r2_830,r3_831,r4_460,r5_459,r6_745,r7_456,r8_452,r9_458,sp_839,V_844,VZN_461,Z_748,ZN_842
		defs: ap_854,C_848,CVZN_846,CZN_859,fp_855,N_852,r0_860,r10_862,r11_853,r2_858,r3_856,r4_865,r5_864,r6_850,r7_861,r8_857,r9_863,sp_845,V_849,VZN_866,Z_851,ZN_847
	branch r0 == 0x00000000 l00017514
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:0x00000000 r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017514:
	r2_746 = r2_858 + 0x00000004
	branch Mem841[r2_858 + 0x00000004:word32] != 0x00000000 l000174FC
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:0x00000000 r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001750E:
	r6_163 = 0x00000001
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:0x00000000 r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001751B:
	branch r6_163 == 0x00000000 l0001754B
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001751F:
	word32 r2_773 = Mem436[r3 + 148:word32] - 0x00000004
	word32 r2_774 = r2_773 + 0x00000004
	branch Mem436[r2_773 + 0x00000004:word32] == 0x00000000 l0001754B
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001752C:
	word32 sp_782 = sp_168 - 0x00000004
	Mem784[sp_782:word32] = Mem436[r3 + 16:word32]
	Mem787[sp_782 - 0x00000004:word32] = Mem784[r2_774:word32]
	Mem790[sp_782 - 0x00000008:word32] = r3 + 0x0000C701
	byte CVZN_795
	byte ZN_796
	bool C_797
	bool V_798
	bool Z_800
	bool N_801
	word32 r11_802
	word32 r2_807
	byte CZN_808
	word32 r7_810
	word32 r10_811
	word32 r5_813
	byte VZN_815
	call r5_459 + 2 (retsize: 4; depth: 4)
		uses: ap_768,C_792,CVZN_762,CZN_763,fp_767,N_760,r0_765,r10_755,r11_764,r2_779,r3_780,r4_752,r5_753,r6_761,r7_756,r8_758,r9_754,sp_788,V_793,VZN_751,Z_776,ZN_791
		defs: ap_803,C_797,CVZN_795,CZN_808,fp_804,N_801,r0_809,r10_811,r11_802,r2_807,r3_805,r4_814,r5_813,r6_799,r7_810,r8_806,r9_812,sp_794,V_798,VZN_815,Z_800,ZN_796
	branch r0 == 0x00000000 l00017544
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017544:
	r2_774 = r2_807 + 0x00000004
	branch Mem790[r2_807 + 0x00000004:word32] != 0x00000000 l0001752C
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001753E:
	r6_163 = 0x00000000
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001754B:
	branch Mem436[r3 + 108:word32] != 0x00000000 l00017554
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017550:
	branch r6_163 == 0x00000000 l000175C4
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017554:
	word32 sp_580 = sp_168 - 0x00000004
	Mem582[sp_580:word32] = r3 + 0x0000C701
	byte CVZN_587
	byte ZN_588
	bool C_589
	bool V_590
	bool Z_592
	bool N_593
	word32 r11_594
	word32 r2_599
	byte CZN_600
	word32 r7_602
	word32 r10_603
	word32 r4_606
	byte VZN_607
	word32 r5_605
	call Mem582[0x000192C4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_489,C_584,CVZN_483,CZN_484,fp_488,N_481,r0_486,r10_476,r11_485,r2_478,r3_480,r4_473,r5_474,r6_482,r7_477,r8_479,r9_475,sp_580,V_585,VZN_472,Z_491,ZN_583
		defs: ap_595,C_589,CVZN_587,CZN_600,fp_596,N_593,r0_601,r10_603,r11_594,r2_599,r3_597,r4_606,r5_605,r6_591,r7_602,r8_598,r9_604,sp_586,V_590,VZN_607,Z_592,ZN_588
	r4 = DPB(r4_606, 0x00, 0)
	branch r0 == 0x00000000 l0001759B
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017567:
	r0 = r0 - 0x00000001
	branch Mem582[r3 + 0x0000C701 + (r0 - 0x00000001):byte] == 0x2F l00017599
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017576:
	r0 = Mem582[r3 + 1511:word32]
	branch Mem582[r0 + 12:word32] != 0x00000000 l0001759B
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017580:
	Mem704[sp_168 - 0x00000004:word32] = 0x0000002F
	Mem707[sp_168 - 0x00000008:word32] = r3 + 0x0000C701
	byte CVZN_712
	byte ZN_713
	bool C_714
	bool V_715
	bool Z_717
	bool N_718
	word32 r11_719
	word32 r2_724
	byte CZN_725
	word32 r7_727
	word32 r10_728
	byte VZN_732
	call Mem707[0x00019260:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_595,C_709,CVZN_587,CZN_671,fp_596,N_593,r0_698,r10_603,r11_594,r2_670,r3_597,r4_609,r5_605,r6_591,r7_602,r8_598,r9_604,sp_705,V_710,VZN_607,Z_700,ZN_708
		defs: ap_720,C_714,CVZN_712,CZN_725,fp_721,N_718,r0_726,r10_728,r11_719,r2_724,r3_722,r4_731,r5_730,r6_716,r7_727,r8_723,r9_729,sp_711,V_715,VZN_732,Z_717,ZN_713
	branch r0 != 0x00000000 l0001759B
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017593:
	branch (byte) r2_724 != 0x5C l0001759B
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017599:
	r4 = DPB(r4, (byte) r4 + 0x01, 0)
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001759B:
	branch (int32) (int8) r4 != 0x00000000 l000175C4
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175A0:
	word32 sp_636 = sp_168 - 0x00000004
	Mem638[sp_636:uint32] = (uint32) Mem582[r3 + 0x0000C660:word16]
	Mem641[sp_636 - 0x00000004:uint32] = (uint32) Mem638[r3 + 0x0000C662:word16]
	r0 = fn0000BC8A(r0, r5_605, ap, fp, out r3, out r4, out r6_163, out r8_452, out ap, out fp, out sp_168)
	word32 r2_653 = Mem641[ap + 4:word32]
	branch Mem641[r2_653:word32] >=u r0 l000175C1
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175BE:
	Mem664[r2_653:word32] = r0
// DataOut: ap fp r0 r10 r11 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r7:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175C1:
	Mem661[Mem661[ap + 8:word32]:word32] = Mem641[ap + 8:word32] + 0x00000001
// DataOut: ap fp r0 r10 r11 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r7:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175C4:
	branch Mem436[r3 + 0x0000C674:word16] == 0x0000 l000175E5
// DataOut: ap fp r0 r10 r11 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175CC:
	word32 sp_539 = sp_168 - 0x00000004
	Mem540[sp_539:word32] = 0x00000000
	Mem543[sp_539 - 0x00000004:uint32] = (uint32) Mem540[r3 + 0x0000C674:word16]
	byte CVZN_548
	byte ZN_549
	bool C_550
	bool V_551
	bool Z_553
	bool N_554
	word32 r11_555
	word32 r2_560
	byte CZN_561
	word32 r7_563
	word32 r10_564
	word32 r9_565
	word32 r5_566
	byte VZN_568
	call r9_458 + 2 (retsize: 4; depth: 4)
		uses: ap_511,C_545,CVZN_505,CZN_506,fp_510,N_503,r0_508,r10_498,r11_507,r2_500,r3_502,r4_495,r5_496,r6_504,r7_499,r8_501,r9_497,sp_541,V_546,VZN_494,Z_513,ZN_544
		defs: ap_556,C_550,CVZN_548,CZN_561,fp_557,N_554,r0_562,r10_564,r11_555,r2_560,r3_558,r4_567,r5_566,r6_552,r7_563,r8_559,r9_565,sp_547,V_551,VZN_568,Z_553,ZN_549
	branch r0 == 0x00000000 l000175E5
// DataOut: ap fp r0 r10 r11 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175DC:
	branch r0 <= 0x00000001 l000175E5
// DataOut: ap fp r0 r10 r11 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175E5:
	branch r8_452 + 0x00000001 >=u (uint32) Mem436[r3 + 0x0000C688:word16] l000175F6
// DataOut: ap fp r0 r10 r11 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175F3:
// DataOut: ap fp r0 r10 r11 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175E4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174E6:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174B2:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017499:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017440:
	Mem237[sp_209 - 0x00000004:uint32] = 0x00000401
	Mem239[sp_209 - 0x00000008:word32] = r8_221
	Mem241[sp_209 - 0x0000000C:word32] = r7_225
	Mem244[sp_209 - 0x00000010:word32] = r3_220 + 1515
	word32 sp_248
	byte CVZN_249
	byte ZN_250
	bool C_251
	bool V_252
	word32 r6_253
	bool Z_254
	bool N_255
	word32 r11_256
	word32 ap_257
	word32 fp_258
	word32 r3_259
	word32 r8_260
	word32 r2_261
	byte CZN_262
	word32 r0_263
	word32 r7_264
	word32 r10_265
	word32 r9_266
	word32 r5_267
	word32 r4_268
	byte VZN_269
	call Mem244[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_218,C_246,CVZN_210,CZN_223,fp_219,N_216,r0_224,r10_226,r11_217,r2_222,r3_220,r4_229,r5_228,r6_214,r7_225,r8_221,r9_227,sp_242,V_247,VZN_230,Z_232,ZN_245
		defs: ap_257,C_251,CVZN_249,CZN_262,fp_258,N_255,r0_263,r10_265,r11_256,r2_261,r3_259,r4_268,r5_267,r6_253,r7_264,r8_260,r9_266,sp_248,V_252,VZN_269,Z_254,ZN_250
	Mem271[sp_248 - 0x00000004:word32] = r0_263
	Mem274[sp_248 - 0x00000008:word32] = r3_259 + 1515
	Mem276[sp_248 - 0x0000000C:word32] = r3_259
	word32 r2_277 = Mem276[r3_259 + 0x0000C839:word32]
	word32 sp_281
	byte CVZN_282
	byte ZN_283
	bool C_284
	bool V_285
	word32 r6_286
	bool Z_287
	bool N_288
	word32 r11_289
	word32 ap_290
	word32 fp_291
	word32 r3_292
	word32 r8_293
	word32 r2_294
	byte CZN_295
	word32 r0_296
	word32 r7_297
	word32 r10_298
	word32 r9_299
	word32 r5_300
	word32 r4_301
	byte VZN_302
	call r2_277 + 2 (retsize: 4; depth: 4)
		uses: ap_257,C_279,CVZN_249,CZN_262,fp_258,N_255,r0_263,r10_265,r11_256,r2_277,r3_259,r4_268,r5_267,r6_253,r7_264,r8_260,r9_266,sp_275,V_280,VZN_269,Z_254,ZN_278
		defs: ap_290,C_284,CVZN_282,CZN_295,fp_291,N_288,r0_296,r10_298,r11_289,r2_294,r3_292,r4_301,r5_300,r6_286,r7_297,r8_293,r9_299,sp_281,V_285,VZN_302,Z_287,ZN_283
	Mem305[sp_281 - 0x00000004:uint32] = 0x00000401
	Mem307[sp_281 - 0x00000008:word32] = r10_298
	Mem310[sp_281 - 0x0000000C:word32] = r3_292 + 1515
	word32 sp_314
	byte CVZN_315
	byte ZN_316
	bool C_317
	bool V_318
	word32 r6_319
	bool Z_320
	bool N_321
	word32 r11_322
	word32 ap_323
	word32 fp_324
	word32 r3_325
	word32 r8_326
	word32 r2_327
	byte CZN_328
	word32 r0_329
	word32 r7_330
	word32 r10_331
	word32 r9_332
	word32 r5_333
	word32 r4_334
	byte VZN_335
	call Mem310[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_290,C_312,CVZN_282,CZN_295,fp_291,N_288,r0_296,r10_298,r11_289,r2_294,r3_292,r4_301,r5_300,r6_286,r7_297,r8_293,r9_299,sp_308,V_313,VZN_302,Z_287,ZN_311
		defs: ap_323,C_317,CVZN_315,CZN_328,fp_324,N_321,r0_329,r10_331,r11_322,r2_327,r3_325,r4_334,r5_333,r6_319,r7_330,r8_326,r9_332,sp_314,V_318,VZN_335,Z_320,ZN_316
	Mem337[sp_314 - 0x00000004:word32] = r0_329
	Mem340[sp_314 - 0x00000008:word32] = r3_325 + 1515
	Mem342[sp_314 - 0x0000000C:word32] = r3_325
	word32 r2_343 = Mem342[r3_325 + 0x0000C839:word32]
	word32 sp_347
	byte CVZN_348
	byte ZN_349
	bool C_350
	bool V_351
	word32 r6_352
	bool Z_353
	bool N_354
	word32 r11_355
	word32 ap_356
	word32 fp_357
	word32 r3_358
	word32 r8_359
	word32 r2_360
	byte CZN_361
	word32 r0_362
	word32 r7_363
	word32 r10_364
	word32 r9_365
	word32 r5_366
	word32 r4_367
	byte VZN_368
	call r2_343 + 2 (retsize: 4; depth: 4)
		uses: ap_323,C_345,CVZN_315,CZN_328,fp_324,N_321,r0_329,r10_331,r11_322,r2_343,r3_325,r4_334,r5_333,r6_319,r7_330,r8_326,r9_332,sp_341,V_346,VZN_335,Z_320,ZN_344
		defs: ap_356,C_350,CVZN_348,CZN_361,fp_357,N_354,r0_362,r10_364,r11_355,r2_360,r3_358,r4_367,r5_366,r6_352,r7_363,r8_359,r9_365,sp_347,V_351,VZN_368,Z_353,ZN_349
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017425:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017400:
// DataOut: ap fp r0 r11 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r6:0x00000000 r11:0x00000000 r8:0x00000000 r2:<invalid>

l000175F6:
	word32 sp_56 = sp_168 - 0x00000004
	Mem57[sp_56:word32] = 0x00000004
	Mem60[sp_56 - 0x00000004:word32] = r3 + 152
	word32 r2_64
	word32 r3_65
	word32 r5_66
	word32 r7_67
	word32 ap_68
	word32 fp_69
	word32 sp_70
	word32 r0_71 = fn0000D5BE(r0, r4, r6_163, ap, fp, out r2_64, out r3_65, out r5_66, out r7_67, out ap_68, out fp_69, out sp_70)
	branch r0_71 != 0x00000000 l0001760B
// DataOut: ap fp r0 r11 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001760B:
	Mem84[sp_70 - 0x00000004:word32] = 0x00000004
	Mem87[sp_70 - 0x00000008:word32] = r3_65 + 0x0000C639
	Mem90[sp_70 - 0x0000000C:word32] = r3_65 + 152
	word32 sp_94
	byte CVZN_95
	byte ZN_96
	bool C_97
	bool V_98
	word32 r6_99
	bool Z_100
	bool N_101
	word32 r11_102
	word32 ap_103
	word32 fp_104
	word32 r3_105
	word32 r8_106
	word32 r2_107
	byte CZN_108
	word32 r0_109
	word32 r7_110
	word32 r10_111
	word32 r9_112
	word32 r5_113
	word32 r4_114
	byte VZN_115
	call Mem90[0x000192D8:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_68,C_92,CVZN_49,CZN_50,fp_69,N_47,r0_71,r10_44,r11_51,r2_64,r3_65,r4_42,r5_66,r6_48,r7_67,r8_45,r9_43,sp_88,V_93,VZN_41,Z_73,ZN_91
		defs: ap_103,C_97,CVZN_95,CZN_108,fp_104,N_101,r0_109,r10_111,r11_102,r2_107,r3_105,r4_114,r5_113,r6_99,r7_110,r8_106,r9_112,sp_94,V_98,VZN_115,Z_100,ZN_96
	branch r0_109 == 0x00000000 l0001764D
// DataOut: ap fp r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001764D:
	branch Mem90[Mem90[ap_103 + 8:word32]:word32] != 0x00000000 l0001765A
// DataOut: fp r11
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017652:
	branch r11_102 > 0x00000001 l0001765A
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017657:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001765A:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017622:
	Mem122[sp_94 - 0x00000004:uint32] = 0x00000401
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017607:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

fn000173CA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -100(fp):r3 -96(fp):r3 + 1515 -92(fp):r0 -88(fp):r3 + 1515 -84(fp):r10 -80(fp):0x00000401 -76(fp):r3 -72(fp):r3 + 1515 -68(fp):r0 -64(fp):r3 + 1515 -60(fp):r7 -56(fp):0x00000000 -52(fp):0x00000401 -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004



word32 fn00017662(word32 ap, word32 fp, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: r0 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn00017662_entry:
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017662:
	branch Mem0[ap + 4:word32] != 0x00000000 l0001766D
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001766D:
	word32 r4_46 = Mem0[ap + 4:word32]
	branch r4_46 >u 0x001E8480 l0001767D
// DataOut: ap fp r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0001767D:
	word32 r1_111 = 0x00000000
	branch true l00017694
// DataOut: ap fp r0 r1 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l00017694:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:0x000003E8

l0001768B:
	branch 0x000003E8 >u r4_46 l00017699
// DataOut: ap fp r1 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:0x000003E8

l00017690:
	r1_111 = 0x00000001
// DataOut: ap fp r1 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:0x000003E8

l00017699:
	word32 r5_134
	word32 r3_124 = Mem0[ap + 8:word32]
	branch r4_46 <u r3_124 l000176D0
// DataOut: fp r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:0x000003E8

l000176D0:
	word32 r3_166 = r3_124 - r4_46 + (uint32) SLICE(r1_111, ui31, 1)
	word32 r1_167 = 0x00000000
	branch r1_111 >= 0x00000000 l000176F0
// DataOut: fp r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:0x000003E8 r6:<invalid> r3:<invalid>

l000176F0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176E5:
	branch r1_111 >u r3_166 l000176F5
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176EA:
	r1_167 = 0x00000001
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176F5:
	r5_134 = -r1_167
// DataOut: fp r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176A5:
	word32 r2_145 = r4_46 - r3_124 + (uint32) SLICE(r1_111, ui31, 1)
	word32 r1_146 = 0x00000000
	branch r1_111 >= 0x00000000 l000176C4
// DataOut: fp r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:0x000003E8 r6:<invalid> r3:<invalid>

l000176C4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176BB:
	branch r1_111 >u r2_145 l000176C9
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176C0:
	r1_146 = 0x00000001
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176C9:
	r5_134 = r1_146
// DataOut: fp r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176F8:
	return r5_134
// DataOut: r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid> r5:<invalid>

l0001767A:
// DataOut: ap fp r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l000176FC:
	word32 r5_107
	word32 r3_51 = Mem0[ap + 8:word32]
	branch r4_46 <u r3_51 l0001773C
// DataOut: fp r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l0001773C:
	word32 r3_95 = (r3_51 - r4_46) * 0x000003E8 + (uint32) SLICE(r4_46, ui31, 1)
	word32 r1_106 = 0x00000000
	branch r4_46 >= 0x00000000 l00017764
// DataOut: fp r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid>

l00017764:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r0:<invalid> r1:0x00000000 r2:<invalid>

l00017758:
	branch r4_46 >u r3_95 l00017769
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r0:<invalid> r1:0x00000000 r2:<invalid>

l0001775D:
	r1_106 = 0x00000001
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r0:<invalid> r1:0x00000000 r2:<invalid>

l00017769:
	r5_107 = -r1_106
// DataOut: fp r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r2:<invalid>

l00017708:
	word32 r2_73 = (r4_46 - r3_51) * 0x000003E8 + (uint32) SLICE(r4_46, ui31, 1)
	word32 r1_74 = 0x00000000
	branch r4_46 >= 0x00000000 l00017730
// DataOut: fp r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid>

l00017730:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r1:0x00000000

l00017725:
	branch r4_46 >u r2_73 l00017735
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r1:0x00000000

l0001772A:
	r1_74 = 0x00000001
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r1:0x00000000

l00017735:
	r5_107 = r1_74
// DataOut: fp r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r1:<invalid>

l0001776C:
	return r5_107
// DataOut: r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r5:<invalid>

l0001766A:
	return 0x00000000
// DataOut: r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

fn00017662_exit:
// DataOut: r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r5:<invalid>



word32 fn00017772(word32 r2, word32 ap, word32 fp, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2
// LiveOut: ap fp r0 sp
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn00017772_entry:
// DataOut: ap fp r10 r2 r5 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017772:
	word32 r2_15
	word32 r3_16
	word32 ap_17
	word32 fp_18
	word32 sp_19
	word32 r0_20 = fn00010892(ap, fp, out r2_15, out r3_16, out ap_17, out fp_18, out sp_19)
	Mem23[sp_19 - 0x00000004:word32] = 0x00000000
	Mem25[sp_19 - 0x00000008:word32] = r0_20
	word32 sp_29
	byte CVZN_30
	byte ZN_31
	bool C_32
	bool V_33
	word32 r2_34
	word32 r0_35
	word32 ap_36
	word32 r3_37
	word32 fp_38
	call Mem25[0x000192C4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_21,C_27,dwLoc08_6,dwLoc0C_9,fp_18,r0_20,r2_15,r3_16,sp_24,V_28,ZN_26
		defs: ap_36,C_32,CVZN_30,fp_38,r0_35,r2_34,r3_37,sp_29,V_33,ZN_31
	Mem40[sp_29 - 0x00000004:word32] = r0_35
	Mem42[sp_29 - 0x00000008:word32] = ap_36
	Mem44[sp_29 - 0x0000000C:word32] = r2_34
	word32 ap_45 = Mem44[r2_34 + 0x0000C839:word32]
	word32 sp_49
	byte CVZN_50
	byte ZN_51
	bool C_52
	bool V_53
	word32 r2_54
	word32 r0_55
	word32 ap_56
	word32 r3_57
	word32 fp_58
	call ap_45 + 2 (retsize: 4; depth: 4)
		uses: ap_45,C_47,CVZN_30,dwLoc08_6,dwLoc0C_9,fp_38,r0_35,r2_34,r3_37,sp_43,V_48,ZN_46
		defs: ap_56,C_52,CVZN_50,fp_58,r0_55,r2_54,r3_57,sp_49,V_53,ZN_51
	Mem60[sp_49 - 0x00000004:word32] = 0x00000000
	Mem62[sp_49 - 0x00000008:word32] = 0x00000001
	Mem65[sp_49 - 0x0000000C:word32] = r3_57 + 18
	Mem67[sp_49 - 0x00000010:word32] = r2_54
	word32 ap_68 = Mem67[r2_54 + 0x0000C839:word32]
	word32 sp_72
	byte CVZN_73
	byte ZN_74
	bool C_75
	bool V_76
	word32 r2_77
	word32 r0_78
	word32 ap_79
	word32 r3_80
	word32 fp_81
	call ap_68 + 2 (retsize: 4; depth: 4)
		uses: ap_68,C_70,CVZN_50,dwLoc08_6,dwLoc0C_9,fp_58,r0_55,r2_54,r3_57,sp_66,V_71,ZN_69
		defs: ap_79,C_75,CVZN_73,fp_81,r0_78,r2_77,r3_80,sp_72,V_76,ZN_74
	word32 sp_82
	*spOut = fp_81 - 0x00000004
	word32 fp_83
	*fpOut = Mem67[fp_81 + 0x0000000C:word32]
	word32 ap_84
	*apOut = Mem67[fp_81 + 0x00000008:word32]
	return r0_78
// DataOut: ap fp r0 r10 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00017772_exit:
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> fp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> -48(fp):r2 -44(fp):r3 + 18 -40(fp):0x00000001 -36(fp):0x00000000 -32(fp):r2 -28(fp):r0 -24(fp):r0 -20(fp):r0 -16(fp):0x00000000 -12(fp):r2 + 0x0000C701 -8(fp):r2 + 1515



void fn000177CA(word32 r6, word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000177CA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000177CA_entry:
// DataOut: ap r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000177CA:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00017C2E(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00017C2E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00017C2E_entry:
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017C2E:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word32 fn00017DEE(word32 r0, word32 r3, word32 r5, word32 r6, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r11Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r3 r5 r6
// LiveOut: fp r0 r11 r2 r3 r4 r5 r6
// Trashed: CVZN ap fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00017DEE_entry:
	*r3Out = r3
	*r11Out = r11
	*r4Out = r4
	*r6Out = r6
	*r5Out = r5
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017DEE:
	word32 sp_2 = fp + -1160
	branch Mem0[r3 + 0x0000C81D:word32] == 0x00000000 l00017E0C
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017E0C:
	word32 r0_107 = 0x00000000
	word32 r2_108 = fp + -1156
// DataOut: ap fp pc r0 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160
// LocalsOut: fp(32)

l00017E14:
	Mem115[r2_108:word32] = 0x00000008
	r2_108 = r2_108 + 0x00000004
	r0_107 = r0_107 + 0x00000001
	branch r0_107 <= 0x0000008F l00017E14
// DataOut: ap fp pc r0 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E22:
	branch r0_107 >= 0x00000100 l00017E3D
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E2B:
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E2C:
	Mem313[fp + -1156:word32] = 0x00000009
	r0_107 = r0_107 + 0x00000001
	branch r0_107 < 0x00000100 l00017E2C
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E3D:
	branch r0_107 >= 0x00000118 l00017E59
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E46:
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E48:
	Mem306[fp + -1156:word32] = 0x00000007
	r0_107 = r0_107 + 0x00000001
	branch r0_107 < 0x00000118 l00017E48
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E59:
	branch r0_107 >= 0x00000120 l00017E75
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E62:
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E64:
	Mem296[fp + -1156:word32] = 0x00000008
	r0_107 = r0_107 + 0x00000001
	branch r0_107 < 0x00000120 l00017E64
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E75:
	Mem136[r3 + 0x0000C825:word32] = 0x00000007
	word32 r2_161
	word32 r3_162
	word32 r4_163
	word32 r5_164
	word32 r6_165
	word32 r11_166
	word32 ap_167
	word32 fp_168
	word32 sp_169
	word32 r0_170 = fn0001878E(r0_107, ap, fp, out r2_161, out r3_162, out r4_163, out r5_164, out r6_165, out r11_166, out ap_167, out fp_168, out sp_169)
	branch r0_170 == 0x00000000 l00017EAF
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>

l00017EAF:
	word32 r0_184 = 0x00000000
	word32 r2_185 = fp_168 + 0xFFFFFB7C
// DataOut: ap fp pc r0 r2 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> ap:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r6:<invalid> r7:<invalid> r4:<invalid> -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825

l00017EB8:
	Mem192[r2_185:word32] = 0x00000005
	r2_185 = r2_185 + 0x00000004
	r0_184 = r0_184 + 0x00000001
	branch r0_184 <= 0x0000001D l00017EB8
// DataOut: ap fp pc r0 r2 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> ap:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r6:<invalid> r7:<invalid> r4:<invalid> -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825

l00017EC2:
	Mem197[r3_162 + 0x0000C829:word32] = 0x00000005
	Mem200[sp_169 - 0x00000004:word32] = r3_162 + 0x0000C829
	Mem203[sp_169 - 0x00000008:word32] = r3_162 + 0x0000C821
	Mem206[sp_169 - 0x0000000C:word32] = r5_164 + 260
	Mem209[sp_169 - 0x00000010:word32] = r5_164 + 200
	Mem211[sp_169 - 0x00000014:word32] = 0x00000000
	Mem213[sp_169 - 0x00000018:word32] = 0x0000001E
	Mem216[sp_169 - 0x0000001C:word32] = fp_168 + -1156
	word32 r2_220
	word32 r4_222
	word32 r5_223
	word32 r6_224
	word32 r11_225
	r0 = fn0001878E(r0_184, ap_167, fp_168, out r2_220, out r3, out r4_222, out r5_223, out r6_224, out r11_225, out ap, out fp, out sp_2)
	r6 = r0
	*r6Out = r6
	branch r0 <= 0x00000001 l00017F1F
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> ap:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r6:<invalid> r7:<invalid> r4:<invalid> -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825

l00017EF4:
	word32 r4_234 = Mem216[r3 + 0x0000C81D:word32]
	*r4Out = r4_234
	word32 ap_235 = r4_234
	branch r4_234 == 0x00000000 l00017F15
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r7:<invalid> r4:<invalid> -1216(fp):fp + -1156 -1212(fp):0x0000001E -1208(fp):0x00000000 -1204(fp):r5 + 200 -1200(fp):r5 + 260 -1196(fp):r3 + 0x0000C821 -1192(fp):r3 + 0x0000C829 -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825

l00017F00:
	word32 ap_262 = ap_235 - 0x00000006
	word32 sp_264 = sp_2 - 0x00000004
	Mem265[sp_264:word32] = ap_262
	byte ZN_270
	bool C_271
	bool V_272
	bool Z_274
	word32 r0_275
	bool N_276
	word32 r2_278
	byte CVZN_279
	byte CZN_280
	word32 r5_281
	word32 ap_282
	word32 r4_284
	word32 r11_285
	call Mem265[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_262,C_267,CVZN_195,CZN_231,dwLoc048C_139,dwLoc0490_142,dwLoc0494_145,dwLoc0498_148,dwLoc049C_151,dwLoc04A0_154,dwLoc04A4_157,fp_227,N_133,r0_229,r11_225,r2_263,r3_221,r4_234,r5_223,r6_230,sp_264,V_268,Z_237,ZN_266
		defs: ap_282,C_271,CVZN_279,CZN_280,fp_277,N_276,r0_275,r11_285,r2_278,r3_273,r4_284,r5_281,r6_283,sp_269,V_272,Z_274,ZN_270
	ap_235 = r2_278
	branch r2_278 != 0x00000000 l00017F00
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r4:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r7:<invalid> -1216(fp):fp + -1156 -1212(fp):0x0000001E -1208(fp):0x00000000 -1204(fp):r5 + 200 -1200(fp):r5 + 260 -1196(fp):r3 + 0x0000C821 -1192(fp):r3 + 0x0000C829 -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825

l00017F15:
	Mem252[r3 + 0x0000C81D:word32] = 0x00000000
	word32 fp_258
	*fpOut = Mem252[fp + 0x0000000C:word32]
	return r6
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r4:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r7:<invalid> -1216(fp):fp + -1156 -1212(fp):0x0000001E -1208(fp):0x00000000 -1204(fp):r5 + 200 -1200(fp):r5 + 260 -1196(fp):r3 + 0x0000C821 -1192(fp):r3 + 0x0000C829 -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825

l00017EA8:
	Mem176[r3_162 + 0x0000C81D:word32] = 0x00000000
	word32 fp_182
	*fpOut = Mem176[fp_168 + 0x0000000C:word32]
	return r0_170
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> ap:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r6:<invalid> r7:<invalid> r4:<invalid> -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825

l00017E09:
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160

l00017F1F:
	word32 sp_59 = sp_2 - 0x00000004
	Mem61[sp_59:word32] = Mem0[r3 + 0x0000C829:word32]
	Mem64[sp_59 - 0x00000004:word32] = Mem61[r3 + 0x0000C825:word32]
	Mem67[sp_59 - 0x00000008:word32] = Mem64[r3 + 0x0000C821:word32]
	Mem70[sp_59 - 0x0000000C:word32] = Mem67[r3 + 0x0000C81D:word32]
	fn000177CA(r6, ap)
	word32 r2_74
	*r2Out = 0x00000000
	branch r0 == 0x00000000 l00017F46
// DataOut: fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r7:<invalid> r4:<invalid> -1216(fp):fp + -1156 -1212(fp):0x0000001E -1208(fp):0x00000000 -1204(fp):r5 + 200 -1200(fp):r5 + 260 -1196(fp):r3 + 0x0000C821 -1192(fp):r3 + 0x0000C829 -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825
// Terminates process

l00017F44:
	*r2Out = 0x00000001
// DataOut: fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: r2:0x00000000 -1216(fp):fp + -1156 -1212(fp):0x0000001E -1208(fp):0x00000000 -1204(fp):r5 + 200 -1200(fp):r5 + 260 -1196(fp):r3 + 0x0000C821 -1192(fp):r3 + 0x0000C829 -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1164(fp):<invalid>

l00017F46:
	word32 fp_86
	*fpOut = Mem70[fp + 0x0000000C:word32]
	return r2_74
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: r2:<invalid> -1216(fp):fp + -1156 -1212(fp):0x0000001E -1208(fp):0x00000000 -1204(fp):r5 + 200 -1200(fp):r5 + 260 -1196(fp):r3 + 0x0000C821 -1192(fp):r3 + 0x0000C829 -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1164(fp):<invalid>

fn00017DEE_exit:
// DataOut: fp r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r0:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r11:<invalid> r6:<invalid> r4:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r7:<invalid> -1216(fp):fp + -1156 -1212(fp):0x0000001E -1208(fp):0x00000000 -1204(fp):r5 + 200 -1200(fp):r5 + 260 -1196(fp):r3 + 0x0000C821 -1192(fp):r3 + 0x0000C829 -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1164(fp):<invalid>



word32 fn00017F4E(word32 r0, word32 r4, word32 r5, word32 r6, word32 r11, word32 ap, word32 fp, word32 pc, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r11Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r11 r4 r5 r6
// LiveOut: fp r0 r11 r2 r3 r4 r5 r6
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00017F4E_entry:
	*r5Out = r5
	*r6Out = r6
	*r11Out = r11
// DataOut: ap fp pc r0 r11 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017F4E:
	word32 sp_100 = fp + -1344
	word32 r3_5 = Mem0[r5 + 0x0000C831:word32]
	*r3Out = r3_5
	word32 r2_52 = Mem0[r5 + 0x0000C835:word32]
	*r2Out = r2_52
	branch r2_52 >=u 0x00000005 l00017FB9
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00017F74:
	word32 v10_579 = Mem0[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem580[r5 + 0x0000C5FB:word32] = v10_579
	branch v10_579 < 0x00000000 l00017F90
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017F90:
	r0 = fn0000D69A(r0, r4, r6, ap, fp, pc, out r2_52, out r3_5, out r5, out ap, out fp, out sp_100)
	*r6Out = r0
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017F7C:
	word32 r4_610 = Mem580[r5 + 0x0000C5F7:word32]
	Mem612[r5 + 0x0000C5F7:word32] = Mem580[r5 + 0x0000C5F7:word32] + 0x00000001
	*r6Out = (uint32) Mem612[r4_610:byte]
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017F9A:
	word32 r4_593
	*r4Out = r6
	branch r6 != 0xFFFFFFFF l00017FAA
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017FAA:
	r4 = __ashift(r6, r2_52)
	r3_5 = r3_5 | r4
	*r3Out = r3_5
	r2_52 = r2_52 + 0x00000008
	*r2Out = r2_52
	branch r2_52 <u 0x00000005 l00017F74
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017FB9:
	word32 r4_503 = r3_5 & ~0xFFFFFFE0
	Mem63[sp_100 + 32:word32] = r4_503 + 0x00000101
	word32 r3_506 = (uint32) SLICE(r3_5, ui27, 5)
	*r3Out = r3_506
	word32 r2_505 = r2_52 - 0x00000005
	*r2Out = r2_505
	branch r2_505 >=u 0x00000005 l0001801D
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017FD7:
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00017FD8:
	word32 v17_516 = Mem63[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem517[r5 + 0x0000C5FB:word32] = v17_516
	branch v17_516 < 0x00000000 l00017FF4
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00017FF4:
	r0 = fn0000D69A(r0, r4_503, r6, ap, fp, pc, out r2_505, out r3_506, out r5, out ap, out fp, out sp_100)
	*r6Out = r0
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00017FE0:
	word32 r4_547 = Mem517[r5 + 0x0000C5F7:word32]
	Mem549[r5 + 0x0000C5F7:word32] = Mem517[r5 + 0x0000C5F7:word32] + 0x00000001
	*r6Out = (uint32) Mem549[r4_547:byte]
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00017FFE:
	word32 r4_530
	*r4Out = r6
	branch r6 != 0xFFFFFFFF l0001800E
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l0001800E:
	r4_503 = __ashift(r6, r2_505)
	r3_506 = r3_506 | r4_503
	*r3Out = r3_506
	r2_505 = r2_505 + 0x00000008
	*r2Out = r2_505
	branch r2_505 <u 0x00000005 l00017FD8
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l0001801D:
	word32 r4_438 = r3_506 & ~0xFFFFFFE0
	*r4Out = r4_438
	Mem83[sp_100 + 28:word32] = r4_438 + 0x00000001
	word32 r3_441 = (uint32) SLICE(r3_506, ui27, 5)
	*r3Out = r3_441
	word32 r2_440 = r2_505 - 0x00000005
	*r2Out = r2_440
	branch r2_440 >=u 0x00000004 l0001807D
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00018037:
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l00018038:
	word32 v25_451 = Mem83[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem452[r5 + 0x0000C5FB:word32] = v25_451
	branch v25_451 < 0x00000000 l00018054
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l00018054:
	r0 = fn0000D69A(r0, r4_438, r6, ap, fp, pc, out r2_440, out r3_441, out r5, out ap, out fp, out sp_100)
	*r6Out = r0
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l00018040:
	word32 r4_484 = Mem452[r5 + 0x0000C5F7:word32]
	Mem486[r5 + 0x0000C5F7:word32] = Mem452[r5 + 0x0000C5F7:word32] + 0x00000001
	*r6Out = (uint32) Mem486[r4_484:byte]
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001805E:
	word32 r4_465
	*r4Out = r6
	branch r6 != 0xFFFFFFFF l0001806E
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001806E:
	r4_438 = __ashift(r6, r2_440)
	*r4Out = r4_438
	r3_441 = r3_441 | r4_438
	*r3Out = r3_441
	r2_440 = r2_440 + 0x00000008
	*r2Out = r2_440
	branch r2_440 <u 0x00000004 l00018038
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001807D:
	word32 r8_103 = r3_441 & ~0xFFFFFFF0
	word32 r8_104 = r8_103 + 0x00000004
	word32 r3_105 = (uint32) SLICE(r3_441, ui28, 4)
	*r3Out = r3_105
	word32 r2_106 = r2_440 - 0x00000004
	*r2Out = r2_106
	branch Mem83[sp_100 + 32:word32] >u 0x00000120 l000180A0
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001809A:
	branch Mem83[sp_100 + 28:word32] <=u 0x00000020 l000180A4
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180A4:
	word32 r7_127 = 0x00000000
	branch r8_103 == 0x00000004 l0001811B
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180AA:
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:0x00000000 r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180B4:
	branch r2_106 >=u 0x00000003 l000180FD
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180B9:
// DataOut: fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180BC:
	word32 r4_375
	word32 v30_363 = Mem83[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem364[r5 + 0x0000C5FB:word32] = v30_363
	branch v30_363 < 0x00000000 l000180D8
// DataOut: fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180D8:
	byte ZN_411
	bool C_412
	bool V_413
	byte CZN_417
	byte CVZN_418
	bool N_419
	word32 r4_420
	bool Z_422
	word32 ap_425
	byte VZN_426
	byte CZ_428
	word32 r11_430
	word32 r10_431
	word32 pc_432
	call r6 + 2 (retsize: 4; depth: 4)
		uses: ap_362,C_358,CVZN_365,CZ_346,CZN_351,fp_361,N_366,pc_342,r0_356,r10_343,r11_344,r2_352,r3_353,r4_350,r5_354,r6_349,r7_345,r8_347,sp_360,V_359,VZN_348,Z_355,ZN_357
		defs: ap_425,C_412,CVZN_418,CZ_428,CZN_417,fp_424,N_419,pc_432,r0_423,r10_431,r11_430,r2_416,r3_415,r4_420,r5_414,r6_421,r7_429,r8_427,sp_410,V_413,VZN_426,Z_422,ZN_411
	*r4Out = r0
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180C4:
	word32 ap_403 = Mem364[r5 + 0x0000C5F7:word32]
	Mem405[r5 + 0x0000C5F7:word32] = Mem364[r5 + 0x0000C5F7:word32] + 0x00000001
	*r4Out = (uint32) Mem405[ap_403:byte]
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180DE:
	branch r4_375 != 0xFFFFFFFF l000180EE
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180EE:
	ap = __ashift(r4_375, r2_106)
	r3_105 = r3_105 | ap
	*r3Out = r3_105
	r2_106 = r2_106 + 0x00000008
	*r2Out = r2_106
	branch r2_106 <u 0x00000003 l000180BC
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180FD:
	Mem332[fp + -1300:word32] = r3_105 & ~0xFFFFFFF8
	*r3Out = (uint32) SLICE(r3_105, ui29, 3)
	*r2Out = r2_106 - 0x00000003
	r7_127 = r7_127 + 0x00000001
	branch r7_127 <u r8_104 l000180B4
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001811B:
	branch r7_127 >=u 0x00000013 l00018130
// DataOut: ap fp pc r0 r11 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l00018120:
	Mem280[fp + -1300:word32] = 0x00000000
	r7_127 = r7_127 + 0x00000001
	branch r7_127 <u 0x00000013 l00018120
// DataOut: ap fp pc r0 r11 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l00018130:
	Mem158[fp + -16:word32] = 0x00000007
	word32 sp_159 = sp_100 - 0x00000004
	Mem161[sp_159:word32] = fp + -16
	Mem164[sp_159 - 0x00000004:word32] = fp + -8
	Mem167[sp_159 - 0x0000000C:word64] = 0x0000000000000000
	Mem169[sp_159 - 0x00000010:word32] = 0x00000013
	Mem171[sp_159 - 0x00000014:word32] = 0x00000013
	Mem174[sp_159 - 0x00000018:word32] = fp + -1300
	word32 r2_178
	word32 r3_179
	word32 r4_180
	word32 r5_181
	word32 r6_182
	word32 r11_183
	word32 ap_184
	word32 fp_185
	word32 sp_186
	word32 r0_187 = fn0001878E(r0, ap, fp, out r2_178, out r3_179, out r4_180, out r5_181, out r6_182, out r11_183, out ap_184, out fp_185, out sp_186)
	word32 r8_188 = r0_187
	branch Mem174[fp_185 + -16:word32] != 0x00000000 l00018156
// DataOut: fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l00018153:
	r8_188 = 0x00000001
// DataOut: fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r5:<invalid> r10:<invalid> r9:<invalid> r1:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l00018156:
	branch r8_188 == 0x00000000 l00018181
// DataOut: fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r5:<invalid> r10:<invalid> r9:<invalid> r1:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l00018181:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r5:<invalid> r10:<invalid> r9:<invalid> r1:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l0001815A:
	branch r8_188 != 0x00000001 l0001817D
// DataOut: fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r5:<invalid> r10:<invalid> r9:<invalid> r1:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l0001815F:
	word32 r6_225 = Mem174[fp_185 + -8:word32]
	*r6Out = r6_225
	word32 ap_226 = r6_225
	branch r6_225 == 0x00000000 l0001817D
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r5:<invalid> r10:<invalid> r9:<invalid> r1:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l00018168:
	word32 ap_233 = ap_226 - 0x00000006
	word32 sp_235 = sp_186 - 0x00000004
	Mem236[sp_235:word32] = ap_233
	byte ZN_241
	bool C_242
	bool V_243
	word32 r5_244
	word32 r3_245
	word32 r2_246
	byte CZN_247
	byte CVZN_248
	bool N_249
	word32 r4_250
	word32 r6_251
	bool Z_252
	word32 r0_253
	word32 ap_255
	byte VZN_256
	byte CZ_258
	word32 r7_259
	word32 r11_260
	word32 r10_261
	word32 pc_262
	call Mem236[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_233,C_238,CVZN_142,CZ_136,CZN_198,fp_185,N_141,pc_132,r0_187,r10_133,r11_183,r2_178,r3_179,r4_234,r5_181,r6_225,r7_155,r8_193,sp_235,V_239,VZN_138,Z_228,ZN_237
		defs: ap_255,C_242,CVZN_248,CZ_258,CZN_247,fp_254,N_249,pc_262,r0_253,r10_261,r11_260,r2_246,r3_245,r4_250,r5_244,r6_251,r7_259,r8_257,sp_240,V_243,VZN_256,Z_252,ZN_241
	ap_226 = r4_250
	branch r4_250 != 0x00000000 l00018168
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r5:<invalid> r10:<invalid> r9:<invalid> r1:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l0001817D:
	word32 fp_223
	*fpOut = Mem174[fp_185 + 0x0000000C:word32]
	return r8_188
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r5:<invalid> r10:<invalid> r9:<invalid> r1:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l000180EA:
	word32 fp_395
	*fpOut = Mem364[fp + 0x0000000C:word32]
	return 0x00000001
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180A0:
	word32 fp_117
	*fpOut = Mem83[fp + 0x0000000C:word32]
	return 0x00000001
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001806A:
	word32 fp_474
	*fpOut = Mem452[fp + 0x0000000C:word32]
	return 0x00000001
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001800A:
	word32 fp_539
	*fpOut = Mem517[fp + 0x0000000C:word32]
	return 0x00000001
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00017FA6:
	word32 fp_602
	*fpOut = Mem580[fp + 0x0000000C:word32]
	return 0x00000001
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

fn00017F4E_exit:
// DataOut: fp r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r7:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>



word32 fn000185AE(word32 r0, word32 r4, word32 r5, word32 r6, word32 r11, word32 ap, word32 fp, word32 pc, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r11 r4 r5 r6
// LiveOut: ap fp r0 r11 r2 r3 r4 r5 r6 sp
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000185AE_entry:
	*r4Out = r4
	*r5Out = r5
	*r11Out = r11
	*r6Out = r6
// DataOut: ap fp pc r0 r11 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000185AE:
	word32 r3_191 = Mem0[r4 + 0x0000C831:word32]
	*r3Out = r3_191
	word32 r2_190 = Mem0[r4 + 0x0000C835:word32]
	*r2Out = r2_190
	branch r2_190 >=u 0x00000001 l00018611
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l000185CB:
// DataOut: ap fp pc r0 r11 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid>

l000185CC:
	word32 v11_200 = Mem0[r4 + 0x0000C5FB:word32] - 0x00000001
	Mem201[r4 + 0x0000C5FB:word32] = v11_200
	branch v11_200 < 0x00000000 l000185E8
// DataOut: ap fp pc r0 r11 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000185E8:
	word32 r5_238
	word32 sp_241
	*r5Out = fn0000D69A(r0, r4, r6, ap, fp, pc, out r2_190, out r3_191, out r5_238, out ap, out fp, out sp_241)
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000185D4:
	word32 r0_229 = Mem201[r4 + 0x0000C5F7:word32]
	Mem231[r4 + 0x0000C5F7:word32] = Mem201[r4 + 0x0000C5F7:word32] + 0x00000001
	*r5Out = (uint32) Mem231[r0_229:byte]
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000185F2:
	branch r5 != 0xFFFFFFFF l00018602
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018602:
	r0 = __ashift(r5, r2_190)
	r3_191 = r3_191 | r0
	*r3Out = r3_191
	r2_190 = r2_190 + 0x00000008
	*r2Out = r2_190
	branch r2_190 <u 0x00000001 l000185CC
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018611:
	Mem57[Mem57[ap + 4:word32]:word32] = r3_191 & ~0xFFFFFFFE
	word32 r3_131 = (uint32) SLICE(r3_191, ui31, 1)
	*r3Out = r3_131
	word32 r2_130 = r2_190 - 0x00000001
	*r2Out = r2_130
	branch r2_130 >=u 0x00000002 l0001866D
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018626:
// DataOut: ap fp pc r0 r11 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018628:
	word32 v18_140 = Mem57[r4 + 0x0000C5FB:word32] - 0x00000001
	Mem141[r4 + 0x0000C5FB:word32] = v18_140
	branch v18_140 < 0x00000000 l00018644
// DataOut: ap fp pc r0 r11 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018644:
	word32 r5_179
	word32 sp_182
	*r5Out = fn0000D69A(r0, r4, r6, ap, fp, pc, out r2_130, out r3_131, out r5_179, out ap, out fp, out sp_182)
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018630:
	word32 r0_170 = Mem141[r4 + 0x0000C5F7:word32]
	Mem172[r4 + 0x0000C5F7:word32] = Mem141[r4 + 0x0000C5F7:word32] + 0x00000001
	*r5Out = (uint32) Mem172[r0_170:byte]
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l0001864E:
	branch r5 != 0xFFFFFFFF l0001865E
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l0001865E:
	r0 = __ashift(r5, r2_130)
	r3_131 = r3_131 | r0
	*r3Out = r3_131
	r2_130 = r2_130 + 0x00000008
	*r2Out = r2_130
	branch r2_130 <u 0x00000002 l00018628
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l0001866D:
	word32 r3_75 = (uint32) SLICE(r3_131, ui30, 2)
	*r3Out = r3_75
	Mem78[r4 + 0x0000C831:word32] = r3_75
	word32 r2_76 = r2_130 - 0x00000002
	*r2Out = r2_76
	Mem80[r4 + 0x0000C835:word32] = r2_76
	word32 r6_74 = r3_131 & ~0xFFFFFFFC
	*r6Out = r6_74
	branch r6_74 != 0x00000002 l00018696
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018696:
	branch r6_74 != 0x00000000 l000186A0
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000186A0:
	branch r6_74 != 0x00000001 l000186AB
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000186AB:
	word32 sp_122 = fp - 0x00000004
	*spOut = sp_122
	word32 fp_123
	*fpOut = Mem80[sp_122 + 0x00000010:word32]
	word32 ap_124
	*apOut = Mem80[sp_122 + 0x0000000C:word32]
	return 2
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000186A5:
	word32 r2_108
	word32 r3_109
	word32 r4_110
	word32 r5_111
	word32 r6_112
	word32 r11_113
	word32 fp_114
	word32 r0_115 = fn00017DEE(r0, r3_75, r5, r6_74, ap, fp, out r2_108, out r3_109, out r4_110, out r5_111, out r6_112, out r11_113, out fp_114)
	word32 sp_116
	*spOut = fp_114 - 0x00000004
	word32 fp_117
	*fpOut = Mem80[fp_114 + 0x0000000C:word32]
	word32 ap_118
	*apOut = Mem80[fp_114 + 0x00000008:word32]
	return r0_115
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l0001869A:
	fn00017C2E(r4)
	word32 sp_102 = fp - 0x00000004
	*spOut = sp_102
	word32 fp_103
	*fpOut = Mem80[sp_102 + 0x00000010:word32]
	word32 ap_104
	*apOut = Mem80[sp_102 + 0x0000000C:word32]
	return r0
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018690:
	word32 r2_86
	word32 r3_87
	word32 r4_88
	word32 r5_89
	word32 r6_90
	word32 r11_91
	word32 fp_92
	word32 r0_93 = fn00017F4E(r0, r4, r5, r6_74, r11, ap, fp, pc, out r2_86, out r3_87, out r4_88, out r5_89, out r6_90, out r11_91, out fp_92)
	word32 sp_94
	*spOut = fp_92 - 0x00000004
	word32 fp_95
	*fpOut = Mem80[fp_92 + 0x0000000C:word32]
	word32 ap_96
	*apOut = Mem80[fp_92 + 0x00000008:word32]
	return r0_93
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l0001865A:
	word32 sp_160 = fp - 0x00000004
	*spOut = sp_160
	word32 fp_161
	*fpOut = Mem141[sp_160 + 0x00000010:word32]
	word32 ap_162
	*apOut = Mem141[sp_160 + 0x0000000C:word32]
	return 0x00000001
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000185FE:
	word32 sp_220 = fp - 0x00000004
	*spOut = sp_220
	word32 fp_221
	*fpOut = Mem201[sp_220 + 0x00000010:word32]
	word32 ap_222
	*apOut = Mem201[sp_220 + 0x0000000C:word32]
	return 0x00000001
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

fn000185AE_exit:
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid>



void fn000186B2(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 r11, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r11 r2 r4 r5 r6
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000186B2_entry:
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000186B2:
	Mem4[r2 + 0x0000C82D:word32] = 0x00000000
	Mem7[r2 + 0x0000C831:word64] = 0x0000000000000000
	word32 sp_2 = fp - 0x00000008
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000186CC:
	Mem33[r2 + 0x0000C819:word32] = 0x00000000
	Mem36[sp_2 - 0x00000004:word32] = fp + -8
	word32 r3_42
	r0 = fn000185AE(r0, r4, r5, r6, r11, ap, fp, pc, out r2, out r3_42, out r4, out r5, out r6, out r11, out ap, out fp, out sp_2)
	branch r0 == 0x00000000 l000186DF
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -12(fp):fp + -8

l000186DF:
	branch Mem36[r2 + 0x0000C819:word32] <=u r3_42 l000186EF
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -12(fp):fp + -8

l000186E8:
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -12(fp):fp + -8

l000186EF:
	branch Mem36[fp + -8:word32] == 0x00000000 l000186CC
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -12(fp):fp + -8

l000186F4:
	branch Mem36[r2 + 0x0000C6C5:word32] == 0x00000000 l00018710
// DataOut: ap fp r0 r2 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -12(fp):fp + -8

l00018710:
	Mem104[sp_2 - 0x00000004:word32] = 0x00000000
	Mem107[sp_2 - 0x00000008:word32] = Mem104[r2 + 0x0000C82D:word32]
	Mem110[sp_2 - 0x0000000C:word32] = r2 + 1515
	fn0000B072(r0, r2, r6, ap, fp)
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -12(fp):fp + -8

l000186FC:
	Mem95[sp_2 - 0x00000004:word32] = Mem36[r2 + 0x0000C82D:word32]
	Mem98[sp_2 - 0x00000008:word32] = r2 + 1515
	fn0001084A(r2, ap, fp)
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -12(fp):fp + -8

l00018723:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r8:<invalid> r11:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -24(fp):r2 + 1515 -20(fp):<invalid> -16(fp):<invalid> -12(fp):fp + -8

l000186DE:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -12(fp):fp + -8

fn000186B2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r1:<invalid> r11:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -24(fp):r2 + 1515 -20(fp):<invalid> -16(fp):<invalid> -12(fp):fp + -8



word32 fn0001872A(word32 r3, word32 fp, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r3
// LiveOut: ap fp r0 sp
// Trashed: CVZN ap fp r0 r2 r4 sp
// Preserved:
fn0001872A_entry:
// DataOut: fp pc r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001872A:
	word32 sp_105 = fp - 0x0000000C
	branch Mem0[r3 + 0x0000C81D:word32] == 0x00000000 l00018787
// DataOut: fp pc r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001873C:
	word32 r4_30 = Mem0[r3 + 0x0000C821:word32]
	word32 ap_118 = r4_30
	branch r4_30 == 0x00000000 l0001875D
// DataOut: ap fp pc r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C

l00018748:
	word32 ap_98 = ap_118 - 0x00000006
	word32 sp_100 = sp_105 - 0x00000004
	Mem101[sp_100:word32] = ap_98
	byte CVZN_106
	byte ZN_107
	bool C_108
	bool V_109
	bool Z_111
	word32 r4_112
	word32 ap_113
	word32 r2_114
	word32 r0_115
	bool N_116
	call Mem101[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_98,C_103,CVZN,fp,N,r0,r2_99,r3,r4_30,sp_100,V_104,Z_33,ZN_102
		defs: ap_113,C_108,CVZN_106,fp_117,N_116,r0_115,r2_114,r3_110,r4_112,sp_105,V_109,Z_111,ZN_107
	ap_118 = r2_114
	branch r2_114 != 0x00000000 l00018748
// DataOut: ap fp pc r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid>

l0001875D:
	word32 r4_45 = Mem0[r3 + 0x0000C81D:word32]
	word32 ap_46 = r4_45
	branch r4_45 == 0x00000000 l00018781
// DataOut: ap fp pc r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid>

l00018769:
// DataOut: ap fp pc r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid>

l0001876C:
	word32 ap_71 = ap_46 - 0x00000006
	word32 sp_73 = sp_105 - 0x00000004
	Mem74[sp_73:word32] = ap_71
	byte CVZN_79
	byte ZN_80
	bool C_81
	bool V_82
	bool Z_84
	word32 r4_85
	word32 ap_86
	word32 r2_87
	word32 r0_88
	bool N_89
	call Mem74[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_71,C_76,CVZN_40,fp_44,N_42,r0_41,r2_72,r3_39,r4_45,sp_73,V_77,Z_48,ZN_75
		defs: ap_86,C_81,CVZN_79,fp_90,N_89,r0_88,r2_87,r3_83,r4_85,sp_78,V_82,Z_84,ZN_80
	ap_46 = r2_87
	branch r2_87 != 0x00000000 l0001876C
// DataOut: ap fp pc r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid>

l00018781:
	Mem61[r3 + 0x0000C81D:word64] = 0x0000000000000000
// DataOut: fp pc r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid>

l00018787:
	word32 sp_24 = fp - 0x00000004
	*spOut = sp_24
	word32 fp_25
	*fpOut = Mem0[sp_24 + 0x00000010:word32]
	word32 ap_26
	*apOut = Mem0[sp_24 + 0x0000000C:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid>

fn0001872A_exit:
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:0x00000000 fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> -16(fp):<invalid>



word32 fn0001878E(word32 r0, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0
// LiveOut: ap fp r0 r11 r2 r3 r4 r5 r6 sp
// Trashed: CVZN ap fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0001878E_entry:
// DataOut: ap fp pc r0 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -05C4(32)

l0001878E:
	branch Mem0[ap + 8:word32] <=u 0x00000100 l000187B4
// DataOut: ap fp pc r0 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -05C4(32)

l000187B4:
// DataOut: ap fp pc r0 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1488 r2:fp + -140 -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32)

l000187A7:
// DataOut: ap fp pc r0 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1488 r2:fp + -140 -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32)

l000187B7:
	word32 sp_26
	byte ZN_27
	bool C_28
	bool V_29
	word32 fp_30
	word32 r2_31
	byte CVZN_32
	word32 ap_33
	byte CZN_34
	byte CZ_35
	word32 r3_36
	word32 r11_37
	bool Z_38
	bool N_39
	word32 r0_40
	word32 r10_41
	byte VZN_42
	word32 r9_43
	word32 r5_44
	word32 r8_45
	word32 r6_46
	word32 r7_47
	word32 r4_48
	call Mem0[0x0001927C:word32] + 2 (retsize: 4; depth: 1504)
		uses: ap,C_24,CZ_10,CZN_9,dwLoc05AC_6,dwLoc05B4_14,dwLoc05D4_17,dwLoc05D8_19,dwLoc05DC_22,fp,r2_4,r3_12,sp_20,V_25,ZN_23
		defs: ap_33,C_28,CVZN_32,CZ_35,CZN_34,fp_30,N_39,r0_40,r10_41,r11_37,r2_31,r3_36,r4_48,r5_44,r6_46,r7_47,r8_45,r9_43,sp_26,V_29,VZN_42,Z_38,ZN_27
	word32 r2_49 = Mem0[ap_33 + 4:word32]
	word32 r11_50 = Mem0[ap_33 + 8:word32]
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1488 r2:<invalid> r3:<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000187D4:
	word32 r3_56
	*r3Out = Mem0[r2_49:word32]
	Mem58[fp_30 + -72:word32] = Mem0[fp_30 + -72:word32] + 0x00000001
	r2_49 = r2_49 + 0x00000004
	*r2Out = r2_49
	r11_50 = r11_50 - 0x00000001
	*r11Out = r11_50
	branch r11_50 != 0x00000000 l000187D4
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000187E2:
	branch Mem58[fp_30 + -72:word32] != Mem58[ap_33 + 8:word32] l000187F2
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000187F2:
	word32 r10_127 = 1
// DataOut: ap fp pc r0 r10 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000187F8:
	branch Mem58[fp_30 + -72 + r10_127 * 4:word32] != 0x00000000 l00018805
// DataOut: ap fp pc r0 r10 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000187FE:
	r10_127 = r10_127 + 0x00000001
	branch r10_127 <=u 0x00000010 l000187F8
// DataOut: ap fp pc r0 r10 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018805:
	word32 r2_140 = Mem58[ap_33 + 28:word32]
	branch Mem58[r2_140:word32] >=u r10_127 l00018814
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018811:
	Mem738[r2_140:word32] = r10_127
// DataOut: ap fp pc r0 r10 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018814:
	word32 r11_144 = 0x00000010
	*r11Out = r11_144
	branch 0x00000010 == 0x00000000 l00018826
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018819:
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:0x00000010 r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l0001881C:
	branch Mem58[fp_30 + -72 + r11_144 * 4:word32] != 0x00000000 l00018826
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018822:
	r11_144 = r11_144 - 0x00000001
	*r11Out = r11_144
	branch r11_144 != 0x00000000 l0001881C
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018826:
	word32 r2_156 = Mem58[ap_33 + 28:word32]
	*r2Out = r2_156
	branch Mem58[r2_156:word32] <=u r11_144 l00018836
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018833:
	Mem721[r2_156:word32] = r11_144
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018836:
	word32 dwLoc05D8_162 = __ashift(0x00000001, r10_127)
	branch r10_127 >=u r11_144 l00018859
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05D8(32) Local -05DC(32)

l00018840:
	word32 v31_703 = dwLoc05D8_162 - Mem58[(fp_30 + -72) + r10_127 * 4:word32]
	branch v31_703 >= 0x00000000 l0001884C
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05D8(32) Local -05DC(32)

l0001884C:
	r10_127 = r10_127 + 0x00000001
	dwLoc05D8_162 = v31_703 << 1
	branch r10_127 <u r11_144 l00018840
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05D8(32) Local -05DC(32)

l00018859:
	word32 v32_171 = dwLoc05D8_162 - Mem58[(fp_30 + -72) + r11_144 * 4:word32]
	branch v32_171 >= 0x00000000 l00018865
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05D8(0) Local -05DC(32)

l00018865:
	Mem183[fp_30 + -72:word32] = Mem58[fp_30 + -72:word32] + v32_171
	Mem186[fp_30 + -1420:word32] = 0x00000000
	word32 r10_184 = 0x00000000
	word32 r2_188 = fp_30 + 0xFFFFFFBC
	word32 r5_190 = fp_30 + 0xFFFFFA78
	word32 r11_191 = r11_144 - 0x00000001
	branch r11_191 == 0x00000000 l00018892
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018886:
	r10_685 = r10_184
	r11_686 = r11_191
	r5_687 = r5_190
	r2_688 = r2_188
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:fp + 0xFFFFFFBC r3:fp + -1424 r11:<invalid> r10:0x00000000 r9:<invalid> r5:fp + 0xFFFFFA78 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018888:
	word32 r10_685
	word32 r11_686
	word32 r5_687
	word32 r2_688
	r10_685 = r10_685 + Mem186[r2_688:word32]
	Mem693[r5_687:word32] = r10_685
	r2_688 = r2_688 + 0x00000004
	r5_687 = r5_687 + 0x00000004
	r11_686 = r11_686 - 0x00000001
	branch r11_686 != 0x00000000 l00018888
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:fp + -1424 r11:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018892:
	byte ZN_206
	bool C_207
	bool V_208
	word32 r2_210
	byte CVZN_211
	byte CZN_213
	byte CZ_214
	word32 r11_216
	bool Z_217
	bool N_218
	word32 r0_219
	word32 r10_220
	byte VZN_221
	word32 r8_224
	word32 r6_225
	word32 r7_226
	word32 r4_227
	word32 r3_215
	word32 r5_223
	word32 ap_212
	word32 r9_222
	word32 fp_209
	word32 sp_205
	call Mem186[0x0001927C:word32] + 2 (retsize: 4; depth: 1516)
		uses: ap_33,C_203,CVZN_192,CZ_158,CZN_168,dwLoc05AC_6,dwLoc05B4_14,dwLoc05B8,dwLoc05BC,dwLoc05C0,dwLoc05C8,dwLoc05D0_155,dwLoc05D4_17,dwLoc05D8_172,dwLoc05DC_22,dwLoc05E0_196,dwLoc05E4_198,dwLoc05E8_201,fp_30,N_174,r0_40,r10_184,r11_191,r2_188,r3_189,r4_48,r5_190,r6_46,r7_47,r8_45,r9_139,sp_199,V_204,VZN_128,Z_193,ZN_202
		defs: ap_212,C_207,CVZN_211,CZ_214,CZN_213,fp_209,N_218,r0_219,r10_220,r11_216,r2_210,r3_215,r4_227,r5_223,r6_225,r7_226,r8_224,r9_222,sp_205,V_208,VZN_221,Z_217,ZN_206
	word32 r2_228 = Mem186[ap_212 + 4:word32]
	word32 r11_229 = 0x00000000
// DataOut: ap fp pc r0 r11 r2 r4 r5 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:fp + -1424 r11:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000188AC:
	r2_228 = r2_228 + 0x00000004
	word32 r10_240 = Mem186[r2_228:word32]
	branch r10_240 == 0x00000000 l000188C2
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):0x00000480 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000188B1:
	r3_215 = Mem186[fp_209 + -1424 + r10_240 * 4:word32]
	Mem676[fp_209 + -1424:word32] = Mem186[fp_209 + -1424:word32] + 0x00000001
	Mem678[fp_209 + -1356:word32] = r11_229
// DataOut: ap fp pc r0 r11 r2 r4 r5 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):0x00000480 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000188C2:
	r11_229 = r11_229 + 0x00000001
	branch r11_229 <u Mem186[ap_212 + 8:word32] l000188AC
// DataOut: ap fp pc r0 r11 r2 r4 r5 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):0x00000480 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000188CA:
	Mem255[ap_212 + 8:word32] = Mem186[fp_209 + -1424 + (fp + -72) * 4:word32]
	Mem258[fp_209 + -1424:word32] = 0x00000000
	Mem265[dwLoc05C4 + -4:word32] = 0x00000000
	Mem268[fp_209 + -204:word32] = 0x00000000
	word32 r11_256
	*r11Out = 0x00000000
	word32 r8_259 = fp_209 + -1356
	word32 v48_260 = -0x00000001
	word32 r2_263
	*r2Out = dwLoc05C4
	word32 r6_266 = 0x00000000
	*r6Out = r6_266
	branch r9_222 <= fp + -72 l00018904
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):0x00000480 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05B8(32) Local -05C4(0) Local -05DC(0)

l00018904:
// DataOut: ap fp pc r0 r11 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05B8(32) Local -05C4(0) Local -05DC(0)

l00018914:
	word32 v56_315 = Mem268[fp_209 + -72 + r9_222 * 4:word32]
	word32 r2_317
	*r2Out = v56_315
	branch v56_315 != 0x00000000 l00018928
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05B8(32) Local -05C4(0) Local -05D8(8) Local -05DC(0)

l00018928:
	branch r9_222 > Mem268[Mem268[(fp + 0xFFFFFA3C) + v48_260 * 4:word32]:word32] l0001893A
// DataOut: ap fp pc r0 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: Local -05D8(8)

l0001893A:
// DataOut: ap fp pc r0 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018940:
	word32 r4_454
	word32 r2_443 = Mem268[sp_205 + 48:word32]
	Mem445[sp_205 + 48:word32] = Mem268[sp_205 + 48:word32] + 0x00000001
	word32 r6_446 = r6_266 + Mem445[Mem445[(sp_205 + 36) + r2_443 * 4:word32]:word32]
	Mem448[sp_205 + 44:word32] = Mem445[sp_205 + 12:word32] - r6_446
	word32 r3_450 = Mem448[sp_205 + 40:word32]
	branch Mem448[sp_205 + 44:word32] <=u Mem448[Mem448[r3_450:word32]:word32] l00018968
// DataOut: ap fp pc r0 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018968:
	r4_454 = Mem448[sp_205 + 44:word32]
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018960:
	r4_454 = Mem448[Mem448[r3_450:word32]:word32]
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l0001896C:
	Mem458[sp_205 + 44:word32] = r4_454
	word32 r10_459 = r9_222 - r6_446
	Mem462[sp_205 + 52:word32] = __ashift(0x00000001, r10_459)
	branch Mem462[sp_205 + 52:word32] <=u Mem462[sp_205 + 32:word32] l000189C2
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018986:
	Mem639[sp_205 + 52:word32] = Mem462[sp_205 + 52:word32] - (Mem462[sp_205 + 16:word32] + 0x00000001)
	word32 r3_642 = (r9_222 << 2) + (fp_209 + -72)
	r10_459 = r10_459 + 0x00000001
	branch r10_459 + 0x00000001 >=u Mem639[sp_205 + 44:word32] l000189C2
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189A2:
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:fp + -72 -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189A4:
	Mem654[sp_205 + 52:word32] = Mem639[sp_205 + 52:word32] << 1
	r3_642 = r3_642 + 0x00000004
	branch Mem654[sp_205 + 52:word32] <=u Mem654[r3_642:word32] l000189C2
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:fp + -72 -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189B6:
	Mem661[sp_205 + 52:word32] = Mem654[sp_205 + 52:word32] - Mem654[r3_642:word32]
	r10_459 = r10_459 + 0x00000001
	branch r10_459 <u Mem661[sp_205 + 44:word32] l000189A4
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:fp + -72 -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189C2:
	branch r6_446 + r10_459 <=u Mem462[sp_205 + 28:word32] l000189D7
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189CC:
	branch r6_446 >=u Mem462[sp_205 + 28:word32] l000189D7
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189D2:
	r10_459 = Mem462[sp_205 + 28:word32] - r6_446
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189D7:
	Mem478[sp_205 + 44:word32] = __ashift(0x00000001, r10_459)
	Mem481[Mem481[sp_205 + 36:word32]:word32] = r10_459
	word32 r2_482 = Mem481[sp_205 + 44:word32] + 0x00000001
	word32 sp_483 = sp_205 - 0x00000004
	Mem485[sp_483:word32] = r2_482 * 0x00000006
	byte ZN_488
	bool C_489
	bool V_490
	word32 r2_492
	byte CVZN_493
	byte CZN_495
	byte CZ_496
	word32 r3_497
	word32 r11_498
	bool Z_499
	bool N_500
	word32 r0_501
	word32 r10_502
	byte VZN_503
	word32 r7_508
	word32 r4_509
	call Mem485[sp_483 + 28:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_442,C_471,CVZN_486,CZ_474,CZN_473,dwLoc05AC_6,dwLoc05B4_14,dwLoc05B8_261,dwLoc05BC_271,dwLoc05C0_307,dwLoc05C4,dwLoc05C8_423,dwLoc05D0_309,dwLoc05D4_17,dwLoc05D8_319,dwLoc05DC_22,dwLoc05E0_252,dwLoc05E4_198,dwLoc05E8_201,fp_441,N_438,r0_436,r10_476,r11_428,r2_482,r3_469,r4_468,r5_430,r6_446,r7_425,r8_431,r9_432,sp_483,V_475,VZN_434,Z_437,ZN_470
		defs: ap_494,C_489,CVZN_493,CZ_496,CZN_495,fp_491,N_500,r0_501,r10_502,r11_498,r2_492,r3_497,r4_509,r5_505,r6_507,r7_508,r8_506,r9_504,sp_487,V_490,VZN_503,Z_499,ZN_488
	branch r0_501 != 0x00000000 l00018A21
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018A21:
	Mem592[r2_492:word32] = Mem485[sp_205 + 44:word32] + 0x00000001 + 0x00007BE9
	Mem594[Mem594[ap_212 + 24:word32]:word32] = r0_501 + 0x00000006
	Mem596[ap_212 + 24:word32] = r0_501 + 2
	Mem598[Mem598[ap_212 + 24:word32]:word32] = 0x00000000
	word32 r2_600 = Mem598[sp_205 + 48:word32]
	Mem602[fp_209 + -204:word32] = r0_501 + 0x00000006
	branch r2_600 == 0x00000000 l00018AA3
// DataOut: ap fp pc r0 r10 r11 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AA3:
	branch r9_222 <= r6_266 + Mem602[Mem602[(sp_205 + 36) + Mem602[sp_205 + 48:word32] * 4:word32]:word32] l00018AB5
// DataOut: ap fp pc r0 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 + 0x00000006 r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AB2:
// DataOut: ap fp pc r0 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 + 0x00000006 r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018A55:
	Mem608[fp_209 + -1424:word32] = 0x00000000
	Mem612[fp_209 + -1429:byte] = Mem608[Mem608[sp_205 + 36 + (Mem608[sp_205 + 48:word32] - 0x00000001) * 4:word32]:byte]
	Mem615[fp_209 + -1430:int8] = (int8) (r10_502 + 0x00000010)
	Mem617[fp_209 + -1428:word32] = r0_501 + 0x00000006
	__ashift(0x00000001, r6_266)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 + 0x00000006 r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189F7:
	branch Mem485[sp_205 + 48:word32] == 0x00000000 l00018A1D
// DataOut: fp pc r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189FC:
	word32 r4_543 = Mem485[fp_209 + -204:word32]
	*r4Out = r4_543
	word32 r2_544 = r4_543
	*r2Out = r2_544
	branch r4_543 == 0x00000000 l00018A1D
// DataOut: fp pc r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018A06:
// DataOut: fp pc r11 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018A08:
	word32 r2_554 = r2_544 - 0x00000006
	word32 sp_556 = sp_205 - 0x00000004
	Mem557[sp_556:word32] = r2_554
	byte ZN_562
	bool C_563
	bool V_564
	word32 r2_566
	byte CVZN_567
	word32 ap_568
	byte CZN_569
	byte CZ_570
	word32 r3_571
	word32 r11_572
	bool Z_573
	bool N_574
	word32 r0_575
	word32 r10_576
	byte VZN_577
	word32 r9_578
	word32 r5_579
	word32 r8_580
	word32 r6_581
	word32 r7_582
	word32 r4_583
	call Mem557[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_494,C_559,CVZN_493,CZ_496,CZN_495,dwLoc05AC_6,dwLoc05B4_14,dwLoc05B8_261,dwLoc05BC_271,dwLoc05C0_307,dwLoc05C4,dwLoc05C8_423,dwLoc05D0_309,dwLoc05D4_17,dwLoc05D8_319,dwLoc05DC_22,dwLoc05E0_252,dwLoc05E4_198,dwLoc05E8_201,fp_491,N_500,r0_501,r10_502,r11_498,r2_554,r3_555,r4_543,r5_505,r6_507,r7_510,r8_506,r9_504,sp_556,V_560,VZN_503,Z_546,ZN_558
		defs: ap_568,C_563,CVZN_567,CZ_570,CZN_569,fp_565,N_574,r0_575,r10_576,r11_572,r2_566,r3_571,r4_583,r5_579,r6_581,r7_582,r8_580,r9_578,sp_561,V_564,VZN_577,Z_573,ZN_562
	r2_544 = r3_571
	*r2Out = r2_544
	branch r3_571 != 0x00000000 l00018A08
// DataOut: fp pc r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> -1520(fp):<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018A1D:
	word32 sp_540 = fp_209 - 0x00000004
	*spOut = sp_540
	word32 fp_541
	*fpOut = Mem485[sp_540 + 0x00000010:word32]
	word32 ap_542
	*apOut = Mem485[sp_540 + 0x0000000C:word32]
	return 0x00000003
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> -1520(fp):<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018937:
// DataOut: ap fp r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AB5:
	Mem354[fp_209 + -1429:int8] = (int8) (r9_222 - r6_266)
	branch r8_259 <u (fp_209 + -1356) + (Mem354[Mem354[sp_205 + 8:word32]:word32] << 2) l00018AD8
// DataOut: ap fp r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AD8:
	word32 r4_380 = Mem354[r8_259:word32]
	word32 r0_381 = Mem354[ap_212 + 12:word32]
	branch r4_380 >=u r0_381 l00018B0C
// DataOut: ap fp r0 r4 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018B0C:
	Mem412[fp_209 + -1430:byte] = Mem354[Mem354[ap_212 + 20:word32] + (r4_380 - r0_381) * 2:byte]
	Mem418[fp_209 + -1428:word16] = Mem412[Mem412[ap_212 + 16:word32] + (Mem412[r8_259:word32] - r0_381) * 2:word16]
// DataOut: r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AE4:
	word32 r5_388
	branch r4_380 >=u 0x00000100 l00018AF4
// DataOut: fp r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AF4:
	r5_388 = DPB(r5_223, 0x0F, 0)
// DataOut: fp r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AED:
	r5_388 = DPB(r5_223, 0x10, 0)
// DataOut: fp r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AF7:
	Mem390[fp_209 + -1430:byte] = (byte) r5_388
	Mem394[fp_209 + -1428:word16] = Mem390[r8_259:word16]
// DataOut: r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AD0:
	Mem376[fp_209 + -1430:byte] = 0x63
// DataOut: r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018B2A:
	Mem372[sp_205 + 52:word32] = __ashift(0x00000001, r9_222 - r6_266)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018925:
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05B8(32) Local -05C4(0) Local -05DC(0)

l00018BCF:
	r9_222 = r9_222 + 0x00000001
	branch r9_222 > fp + -72 l00018BDA
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05B8(32) Local -05C4(0) Local -05DC(0)

l00018BD7:
// DataOut: ap fp pc r0 r11 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05B8(32) Local -05C4(0) Local -05DC(0)

l00018901:
// DataOut: ap fp pc r11 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: Local -05C4(0) Local -05DC(0)

l00018BDA:
	Mem282[Mem282[ap_212 + 28:word32]:word32] = Mem268[dwLoc05C4:word32]
	word32 r3_284
	*r3Out = DPB(r3_215, 0x00, 0)
	branch 0x00000000 == 0x00000000 l00018BEE
// DataOut: fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: Local -05DC(0)

l00018BE6:
	branch fp == 0xFFFFFFB7 l00018BEE
// DataOut: fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018BEC:
	*r3Out = DPB(r3_215, 0x01, 0)
// DataOut: fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018BEE:
	word32 sp_297
	*spOut = fp_209 - 0x00000004
	word32 fp_298
	*fpOut = Mem282[fp_209 + 0x0000000C:word32]
	word32 ap_299
	*apOut = Mem282[fp_209 + 0x00000008:word32]
	return (int32) (int8) r3_284
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018861:
	word32 sp_179
	*spOut = fp_30 - 0x00000004
	word32 fp_180
	*fpOut = Mem58[fp_30 + 0x0000000C:word32]
	word32 ap_181
	*apOut = Mem58[fp_30 + 0x00000008:word32]
	return 0x00000002
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018848:
	word32 sp_711
	*spOut = fp_30 - 0x00000004
	word32 fp_712
	*fpOut = Mem58[fp_30 + 0x0000000C:word32]
	word32 ap_713
	*apOut = Mem58[fp_30 + 0x00000008:word32]
	return 0x00000002
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000187E9:
	Mem108[Mem108[ap_33 + 24:word32]:word32] = 0x00000000
	Mem110[Mem110[ap_33 + 28:word32]:word32] = 0x00000000
	word32 sp_116
	*spOut = fp_30 - 0x00000004
	word32 fp_117
	*fpOut = Mem110[fp_30 + 0x0000000C:word32]
	word32 ap_118
	*apOut = Mem110[fp_30 + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

fn0001878E_exit:
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1520(fp):<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78



word32 fn00018BF6(word32 ap, word32 fp, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp sp
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn00018BF6_entry:
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018BF6:
	word32 sp_2 = fp - 0x00000004
	word32 r2_28 = Mem0[ap + 4:word32]
	branch r2_28 == 0x00000000 l00018C15
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00018BFF:
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid>

l00018C00:
	word32 r2_30 = r2_28 - 0x00000006
	word32 sp_32 = sp_2 - 0x00000004
	Mem33[sp_32:word32] = r2_30
	byte CVZN_40
	word32 ap_41
	word32 r2_42
	byte ZN_43
	bool C_44
	bool V_45
	bool Z_46
	word32 r3_47
	word32 r0_48
	bool N_49
	call Mem33[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap,C_35,CVZN,fp,N,r0,r2_30,r3_31,sp_32,V_36,Z_7,ZN_34
		defs: ap_41,C_44,CVZN_40,fp_50,N_49,r0_48,r2_42,r3_47,sp_39,V_45,Z_46,ZN_43
	r2_28 = r3_47
	branch r3_47 != 0x00000000 l00018C00
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> -8(fp):<invalid>

l00018C15:
	word32 sp_23 = fp - 0x00000004
	*spOut = sp_23
	word32 fp_24
	*fpOut = Mem0[sp_23 + 0x00000010:word32]
	return Mem0[sp_23 + 0x0000000C:word32]
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> -8(fp):<invalid>

fn00018BF6_exit:
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r0:0x00000000 fp:<invalid> ap:<invalid> r3:<invalid> -8(fp):<invalid>



word32 fn00018C3A(word32 r0, word32 ap, word32 fp, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0
// LiveOut: ap fp r0 sp
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00018C3A_entry:
// DataOut: ap fp r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018C3A:
	word32 r10_216 = Mem0[0x0001934C:word32]
	word32 r2_6 = Mem0[ap + 4:word32]
	Mem8[ap + 4:word32] = Mem0[ap + 4:word32] + 0x00000001
	word32 sp_159 = fp - 0x00000004
	word32 r4_202 = (uint32) Mem8[r2_6:byte]
	branch r4_202 != 0x00000000 l00018C60
// DataOut: ap fp r0 r10 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018C60:
	branch r4_202 != 0x0000003F l00018C86
// DataOut: ap fp r0 r10 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018C86:
	branch r4_202 != 0x0000002A l00018CBE
// DataOut: ap fp r0 r10 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018CBE:
	branch r4_202 == 0x0000005B l00018CCA
// DataOut: ap fp r0 r10 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018CCA:
	branch (uint32) Mem8[Mem8[ap + 8:word32]:byte] != 0x00000000 l00018CD3
// DataOut: ap fp r0 r10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018CD3:
	word32 r5_472 = Mem8[ap + 4:word32]
	word32 r6_1014 = DPB(r6, 0x01, 0)
	word32 r2_475 = (uint32) Mem8[r5_472:byte]
	branch r2_475 == 0x00000021 l00018CED
// DataOut: ap fp r0 r10 r2 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018CE2:
	branch r2_475 == 0x0000005E l00018CED
// DataOut: ap fp r0 r10 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:DPB(r6, 0x01, 0)

l00018CEB:
	r6_1014 = DPB(r6, 0x00, 0)
// DataOut: ap fp r0 r10 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:DPB(r6, 0x01, 0)

l00018CED:
	word32 r8_482 = (int32) (int8) r6_1014
	Mem484[ap + 4:word32] = r8_482 + r5_472
	word32 r7_485 = Mem484[ap + 4:word32]
	word32 r3_1003 = 0x00000000
	branch Mem484[r7_485:byte] == 0x00 l00018D2B
// DataOut: ap fp r0 r10 r3 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid>

l00018CFF:
// DataOut: ap fp r0 r10 r3 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:0x00000000

l00018D00:
	branch r3_1003 == 0x00000000 l00018D08
// DataOut: ap fp r0 r10 r3 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D08:
	word32 r2_999 = (uint32) Mem484[r7_485:byte]
	branch r2_999 != 0x0000005C l00018D1C
// DataOut: ap fp r0 r10 r2 r3 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D1C:
	branch r2_999 == 0x0000005D l00018D2B
// DataOut: ap fp r0 r10 r3 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D14:
	r3_1003 = 0x00000001
// DataOut: ap fp r0 r10 r3 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D04:
	r3_1003 = 0x00000000
// DataOut: ap fp r0 r10 r3 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D25:
	r7_485 = r7_485 + 0x00000001
	branch Mem484[r7_485:byte] != 0x00 l00018D00
// DataOut: ap fp r0 r10 r3 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D2B:
	branch (uint32) Mem484[r7_485:byte] == 0x0000005D l00018D3A
// DataOut: ap fp r0 r10 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D3A:
	word32 r5_509 = Mem484[ap + 4:word32]
	word32 r4_508 = 0x00000000
	word32 r3_511 = 0x00000000
	branch (uint32) Mem484[r5_509:byte] != 0x0000002D l00018D4C
// DataOut: ap fp r0 r10 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D4A:
	r3_511 = 0x00000001
// DataOut: ap fp r0 r10 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:0x00000000 r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:0x00000000

l00018D4C:
	word32 r9_517 = r3_511
	branch r5_509 <u r7_485 l00018D57
// DataOut: ap fp r0 r10 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:0x00000000 r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D57:
	word32 r11_580 = ap + 12
	word32 r6_581 = Mem484[0x00019298:word32]
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:0x00000000 r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid>

l00018D64:
	branch r9_517 != 0x00000000 l00018D7C
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D68:
	branch (uint32) Mem484[Mem484[ap + 4:word32]:byte] != 0x0000005C l00018D7C
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D7C:
	branch r9_517 != 0x00000000 l00018D94
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D80:
	r0 = Mem484[ap + 4:word32]
	branch (uint32) Mem484[r0:byte] != 0x0000002D l00018D94
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D94:
	branch Mem484[r11_580:word32] == 0x00000000 l00018DC0
// DataOut: ap fp r0 r10 r11 r4 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DC0:
	r3_511 = DPB(r3_511, Mem484[Mem484[ap + 8:word32]:byte], 0)
// DataOut: ap fp r0 r10 r11 r3 r4 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D98:
	word32 r1_889
	word32 r3_883 = (uint32) Mem484[Mem484[ap + 8:word32]:byte]
	word32 r2_884 = r3_883 & ~0xFFFFFF80
	branch (Mem484[r10_216 + r2_884 * 4:word32] & 0x00000001) == 0x00000000 l00018DB8
// DataOut: ap fp r0 r10 r11 r3 r4 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DB8:
	r1_889 = DPB(r1, (int8) r3_883, 0)
// DataOut: ap fp r0 r1 r10 r11 r4 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DAC:
	word32 sp_914 = sp_159 - 0x00000004
	Mem916[sp_914:int32] = (int32) (int8) r3_883
	byte CVZN_920
	byte ZN_922
	bool C_923
	bool V_924
	word32 r2_926
	bool Z_928
	bool N_930
	byte CZN_931
	word32 r5_934
	byte VZN_936
	word32 r9_939
	word32 r1_941
	byte CZ_942
	call r6_581 + 2 (retsize: 4; depth: 4)
		uses: ap_604,C_918,CVZN_600,CZ_585,CZN_641,dwLoc08,dwLoc0C,dwLoc10,fp_603,N_597,r0_643,r1_586,r10_593,r11_587,r2_884,r3_883,r4_596,r5_592,r6_591,r7_589,r8_590,r9_588,sp_914,V_887,VZN_917,Z_645,ZN_885
		defs: ap_925,C_923,CVZN_920,CZ_942,CZN_931,fp_933,N_930,r0_932,r1_941,r10_921,r11_940,r2_926,r3_929,r4_927,r5_934,r6_935,r7_938,r8_937,r9_939,sp_919,V_924,VZN_936,Z_928,ZN_922
	r1_889 = DPB(r1_941, (int8) r0, 0)
// DataOut: ap fp r0 r1 r10 r11 r4 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DBB:
	r3_511 = DPB(r3_883, (byte) r1_889, 0)
// DataOut: ap fp r0 r10 r11 r3 r4 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DC4:
	r1 = Mem484[ap + 4:word32]
	word32 r5_666 = (uint32) (byte) r3_511
	branch (uint32) Mem484[r1 + 0x00000001:byte] == 0x0000002D l00018E4B
// DataOut: ap fp r0 r1 r10 r11 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DD7:
	branch r4_508 == 0x00000000 l00018DE0
// DataOut: ap fp r1 r10 r11 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DE0:
	r0 = (uint32) Mem484[r1:byte]
// DataOut: ap fp r0 r1 r10 r11 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DDB:
	r0 = r4_508
// DataOut: ap fp r0 r1 r10 r11 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DE3:
	word32 r4_704 = r0
	word32 r2_705 = (uint32) Mem484[r1:byte]
	branch r0 >u r2_705 l00018E4B
// DataOut: ap fp r0 r10 r11 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DEE:
	r3_511 = Mem484[r11_580:word32]
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DF4:
	branch r3_511 == 0x00000000 l00018E18
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E18:
	r1 = r4_704
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DF8:
	r0 = r4_704 & ~0xFFFFFF80
	branch (Mem484[r10_216 + r0 * 4:word32] & 0x00000001) == 0x00000000 l00018E10
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E10:
	r2_705 = DPB(r2_705, (int8) r4_704, 0)
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E05:
	word32 sp_833 = sp_159 - 0x00000004
	Mem835[sp_833:int32] = (int32) (int8) r4_704
	byte CVZN_839
	byte ZN_841
	bool C_842
	bool V_843
	word32 r2_845
	bool Z_847
	bool N_849
	byte CZN_850
	byte VZN_855
	word32 r9_858
	word32 r1_860
	byte CZ_861
	call r6_581 + 2 (retsize: 4; depth: 4)
		uses: ap_732,C_837,CVZN_728,CZ_713,CZN_723,dwLoc08,dwLoc0C,dwLoc10,fp_731,N_725,r0_805,r1_714,r10_721,r11_715,r2_726,r3_727,r4_724,r5_720,r6_719,r7_717,r8_718,r9_716,sp_833,V_808,VZN_836,Z_734,ZN_806
		defs: ap_844,C_842,CVZN_839,CZ_861,CZN_850,fp_852,N_849,r0_851,r1_860,r10_840,r11_859,r2_845,r3_848,r4_846,r5_853,r6_854,r7_857,r8_856,r9_858,sp_838,V_843,VZN_855,Z_847,ZN_841
	r2_705 = DPB(r2_845, (int8) r0, 0)
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E13:
	r1 = (int32) (int8) r2_705
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E1B:
	branch r1 != r5_666 l00018E40
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E40:
	r4_704 = r4_704 + 0x00000001
	r0 = (uint32) Mem484[Mem484[ap + 4:word32]:byte]
	branch r4_704 <=u r0 l00018DF4
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E4B:
	r9_517 = 0x00000000
	r4_508 = 0x00000000
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E20:
	word32 r2_766
	branch r8_482 == 0x00000000 l00018E28
// DataOut: ap fp r0 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E28:
	word32 sp_782 = sp_159 - 0x00000004
	Mem784[sp_782:word32] = Mem484[ap + 12:word32]
	Mem787[sp_782 - 0x00000004:word32] = Mem784[ap + 8:word32] + 0x00000001
	Mem790[sp_782 - 0x00000008:word32] = r7_485 + 0x00000001
	word32 ap_792
	word32 sp_794
	r2_766 = fn00018C3A(r0, ap, fp, out ap_792, out fp, out sp_794)
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E24:
	r2_766 = 0x00000000
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E3C:
	word32 sp_774 = fp - 0x00000004
	*spOut = sp_774
	word32 fp_775
	*fpOut = Mem484[sp_774 + 0x00000010:word32]
	word32 ap_776
	*apOut = Mem484[sp_774 + 0x0000000C:word32]
	return r2_766
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018D8C:
	r0 = r0 - 0x00000001
	r4_508 = (uint32) Mem484[r0 - 0x00000001:byte]
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D75:
	r9_517 = 0x00000001
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E4F:
	Mem631[ap + 4:word32] = Mem484[ap + 4:word32] + 0x00000001
	branch Mem631[ap + 4:word32] >=u r7_485 l00018E5B
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E58:
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D54:
// DataOut: ap fp r0 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:0x00000000 r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid>

l00018E5B:
	word32 r2_546
	branch r8_482 == 0x00000000 l00018E78
// DataOut: ap fp r0 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E78:
	r2_546 = 0x00000000
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E5F:
	word32 sp_557 = sp_159 - 0x00000004
	Mem559[sp_557:word32] = Mem484[ap + 12:word32]
	Mem562[sp_557 - 0x00000004:word32] = Mem559[ap + 8:word32] + 0x00000001
	Mem565[sp_557 - 0x00000008:word32] = r7_485 + 0x00000001
	word32 ap_567
	word32 sp_569
	r2_546 = fn00018C3A(r0, ap, fp, out ap_567, out fp, out sp_569)
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E7A:
	word32 sp_554 = fp - 0x00000004
	*spOut = sp_554
	word32 fp_555
	*fpOut = Mem484[sp_554 + 0x00000010:word32]
	word32 ap_556
	*apOut = Mem484[sp_554 + 0x0000000C:word32]
	return r2_546
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018D37:
	word32 sp_505
	*spOut = fp - 0x00000004
	word32 fp_506
	*fpOut = Mem484[fp + 0x0000000C:word32]
	word32 ap_507
	*apOut = Mem484[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018CD0:
	word32 sp_469
	*spOut = fp - 0x00000004
	word32 fp_470
	*fpOut = Mem8[fp + 0x0000000C:word32]
	word32 ap_471
	*apOut = Mem8[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018CC7:
// DataOut: ap fp r0 r10 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018E7E:
	branch r4_202 != 0x0000005C l00018E96
// DataOut: ap fp r0 r10 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018E87:
	word32 r2_443 = Mem8[ap + 4:word32]
	Mem445[ap + 4:word32] = Mem8[ap + 4:word32] + 0x00000001
	r4_202 = (uint32) Mem445[r2_443:byte]
	branch r4_202 != 0x00000000 l00018E96
// DataOut: ap fp r0 r10 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018E96:
	word32 r5_215
	branch Mem8[ap + 12:word32] == 0x00000000 l00018EC4
// DataOut: ap fp r0 r10 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018EC4:
	r5_215 = DPB(r5, (byte) r4_202, 0)
// DataOut: ap fp r0 r10 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018E9B:
	word32 r5_369 = (uint32) (byte) r4_202
	word32 r2_370 = r5_369 & ~0xFFFFFF80
	branch (Mem8[r10_216 + r2_370 * 4:word32] & 0x00000001) == 0x00000000 l00018EBC
// DataOut: ap fp r0 r10 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018EBC:
	r3 = DPB(r3, (int8) r5_369, 0)
// DataOut: ap fp r0 r10 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid>

l00018EAB:
	byte CVZN_407
	byte ZN_409
	bool C_410
	bool V_411
	word32 r2_413
	bool Z_415
	word32 r3_416
	bool N_417
	byte CZN_418
	word32 r6_422
	byte VZN_423
	word32 r8_424
	word32 r7_425
	word32 r9_426
	word32 r11_427
	word32 r1_428
	byte CZ_429
	call Mem8[0x00019298:word32] + 2 (retsize: 4; depth: 12)
		uses: ap,C_405,CVZN,CZ,CZN_199,dwLoc08_403,dwLoc0C,dwLoc10,fp,N,r0,r1,r10_4,r11,r2_370,r3,r4_202,r5_369,r6,r7,r8,r9,sp_401,V_373,VZN_404,Z_205,ZN_371
		defs: ap_412,C_410,CVZN_407,CZ_429,CZN_418,fp_420,N_417,r0_419,r1_428,r10_408,r11_427,r2_413,r3_416,r4_414,r5_421,r6_422,r7_425,r8_424,r9_426,sp_406,V_411,VZN_423,Z_415,ZN_409
	r3 = DPB(r3_416, (int8) r0, 0)
// DataOut: ap fp r0 r10 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid>

l00018EBF:
	r5_215 = DPB(r5_369, (byte) r3, 0)
// DataOut: ap fp r0 r10 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018EC7:
	word32 r4_243
	branch Mem8[ap + 12:word32] == 0x00000000 l00018EF8
// DataOut: ap fp r0 r10 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018EF8:
	r4_243 = DPB(r4_202, Mem8[Mem8[ap + 8:word32]:byte], 0)
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018ECC:
	word32 r3_316
	word32 r4_296 = (uint32) Mem8[Mem8[ap + 8:word32]:byte]
	word32 r2_297 = r4_296 & ~0xFFFFFF80
	branch (Mem8[r10_216 + r2_297 * 4:word32] & 0x00000001) == 0x00000000 l00018EF0
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018EF0:
	r3_316 = DPB(r3, (int8) r4_296, 0)
// DataOut: ap fp r0 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018EE0:
	word32 sp_327 = sp_159 - 0x00000004
	Mem329[sp_327:int32] = (int32) (int8) r4_296
	byte CVZN_333
	word32 r10_334
	byte ZN_335
	bool C_336
	bool V_337
	word32 r2_339
	bool Z_341
	word32 r3_342
	bool N_343
	byte CZN_344
	word32 r6_348
	byte VZN_349
	word32 r8_350
	word32 r7_351
	word32 r9_352
	word32 r11_353
	word32 r1_354
	byte CZ_355
	call Mem329[0x00019298:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_228,C_331,CVZN_224,CZ_208,CZN_218,dwLoc08_221,dwLoc0C,dwLoc10,fp_227,N_220,r0_225,r1_209,r10_216,r11_210,r2_297,r3_223,r4_296,r5_215,r6_214,r7_212,r8_213,r9_211,sp_327,V_300,VZN_330,Z_230,ZN_298
		defs: ap_338,C_336,CVZN_333,CZ_355,CZN_344,fp_346,N_343,r0_345,r1_354,r10_334,r11_353,r2_339,r3_342,r4_340,r5_347,r6_348,r7_351,r8_350,r9_352,sp_332,V_337,VZN_349,Z_341,ZN_335
	r3_316 = DPB(r3_342, (int8) r0, 0)
// DataOut: ap fp r0 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018EF3:
	r4_243 = DPB(r4_296, (byte) r3_316, 0)
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018EFC:
	word32 r2_258
	branch (byte) r5_215 != (byte) r4_243 l00018F18
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018F18:
	r2_258 = 0x00000000
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018F01:
	word32 sp_268 = sp_159 - 0x00000004
	Mem270[sp_268:word32] = Mem8[ap + 12:word32]
	Mem272[ap + 8:word32] = Mem270[ap + 8:word32] + 0x00000001
	Mem275[sp_268 - 0x00000004:word32] = Mem272[ap + 8:word32]
	Mem278[sp_268 - 0x00000008:word32] = Mem275[ap + 4:word32]
	word32 ap_282
	word32 sp_284
	r2_258 = fn00018C3A(r0, ap, fp, out ap_282, out fp, out sp_284)
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018F1A:
	word32 sp_265 = fp - 0x00000004
	*spOut = sp_265
	word32 fp_266
	*fpOut = Mem8[sp_265 + 0x00000010:word32]
	word32 ap_267
	*apOut = Mem8[sp_265 + 0x0000000C:word32]
	return r2_258
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018E93:
	word32 sp_456
	*spOut = fp - 0x00000004
	word32 fp_457
	*fpOut = Mem445[fp + 0x0000000C:word32]
	word32 ap_458
	*apOut = Mem445[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018C8B:
	branch (uint32) Mem8[Mem8[ap + 4:word32]:byte] != 0x00000000 l00018C95
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018C95:
	branch Mem8[Mem8[ap + 8:word32]:byte] == 0x00 l00018CBA
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018C9A:
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018C9C:
	word32 sp_162 = sp_159 - 0x00000004
	Mem164[sp_162:word32] = Mem8[ap + 12:word32]
	Mem167[sp_162 - 0x00000004:word32] = Mem164[ap + 8:word32]
	Mem170[sp_162 - 0x00000008:word32] = Mem167[ap + 4:word32]
	r0 = fn00018C3A(r0, ap, fp, out ap, out fp, out sp_159)
	branch r0 == 0x00000000 l00018CB2
// DataOut: ap fp r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018CB2:
	Mem191[ap + 8:word32] = Mem170[ap + 8:word32] + 0x00000001
	branch Mem191[Mem191[ap + 8:word32]:byte] != 0x00 l00018C9C
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018CBA:
	word32 sp_152 = fp - 0x00000004
	*spOut = sp_152
	word32 fp_153
	*fpOut = Mem8[sp_152 + 0x00000010:word32]
	word32 ap_154
	*apOut = Mem8[sp_152 + 0x0000000C:word32]
	return 0x00000002
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018CAE:
	word32 sp_187
	*spOut = fp - 0x00000004
	word32 fp_188
	*fpOut = Mem170[fp + 0x0000000C:word32]
	word32 ap_189
	*apOut = Mem170[fp + 0x00000008:word32]
	return r0
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018C91:
	word32 sp_138
	*spOut = fp - 0x00000004
	word32 fp_139
	*fpOut = Mem8[fp + 0x0000000C:word32]
	word32 ap_140
	*apOut = Mem8[fp + 0x00000008:word32]
	return 0x00000001
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018C65:
	word32 r2_117
	branch Mem8[Mem8[ap + 8:word32]:byte] == 0x00 l00018C80
// DataOut: ap fp r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018C80:
	r2_117 = 0x00000000
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018C6D:
	word32 ap_113
	word32 sp_115
	r2_117 = fn00018C3A(r0, ap, fp, out ap_113, out fp, out sp_115)
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018C82:
	word32 sp_96 = fp - 0x00000004
	*spOut = sp_96
	word32 fp_97
	*fpOut = Mem8[sp_96 + 0x00000010:word32]
	word32 ap_98
	*apOut = Mem8[sp_96 + 0x0000000C:word32]
	return r2_117
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018C50:
	word32 r3_45 = 0x00000000
	branch (uint32) Mem8[Mem8[ap + 8:word32]:byte] != 0x00000000 l00018C5C
// DataOut: fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018C5A:
	r3_45 = 0x00000001
// DataOut: fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r3:0x00000000

l00018C5C:
	word32 sp_58
	*spOut = fp - 0x00000004
	word32 fp_59
	*fpOut = Mem8[fp + 0x0000000C:word32]
	word32 ap_60
	*apOut = Mem8[fp + 0x00000008:word32]
	return r3_45
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r3:<invalid>

fn00018C3A_exit:
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn00018F22(word32 ap, word32 fp, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 sp
// Trashed: CVZN ap fp r0 r1 sp
// Preserved:
fn00018F22_entry:
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018F22:
	branch Mem0[Mem0[ap + 4:word32]:byte] == 0x00 l00018F5E
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00018F2A:
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l00018F2C:
	word32 r0_44 = Mem0[ap + 4:word32]
	byte v11_45 = Mem0[r0_44:byte]
	branch v11_45 != 0x5C l00018F48
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F39:
	branch Mem0[r0_44 + 0x00000001:byte] == 0x00 l00018F48
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F48:
	branch v11_45 == 0x25 l00018F52
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F4D:
	branch v11_45 != 0x2A l00018F56
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F52:
	word32 fp_71
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_72
	*apOut = Mem0[fp + 0x00000008:word32]
	return 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F3F:
	Mem83[ap + 4:word32] = r0_44 + 0x00000001
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F56:
	Mem53[ap + 4:word32] = Mem0[ap + 4:word32] + 0x00000001
	branch Mem53[Mem53[ap + 4:word32]:byte] != 0x00 l00018F2C
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F5E:
	word32 fp_35
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_36
	*apOut = Mem0[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

fn00018F22_exit:
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>



void fn00018F66()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00018F66_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00018F66_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018F66:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00018FA9()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00018FA9_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00018FA9_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018FA9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0001902B()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001902B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001902B_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001902B:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



