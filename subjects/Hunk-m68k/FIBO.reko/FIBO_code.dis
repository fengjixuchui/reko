void fn00001000(word32 d0, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] d0:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5
// Preserved: a7 d7
fn00001000_entry:
l00001000:
l0000100A:
	word32 a6_9 = Mem0[0x00000004<p32>:word32]
	word32 d2_102 = d0
	word32 a2_290 = a0
	branch Mem0[a6_9 + 20<i32>:word16] >=u 0x24<16> l00001036
l00001020:
	word32 a0_13 = 0x00003E94<p32>
	word32 d0_16 = 0xC<u32>
l00001030:
	Mem19[a0_13:word32] = 0<32>
	a0_13 = a0_13 + 4<i32>
	d0_16 = d0_16 - 1<32>
	branch d0_16 != 0<32> l00001030
l00001036:
	Mem30[0x00003E94<p32>:word32] = fp
	Mem34[0x00003E98<p32>:word32] = a6_9
	word32 d0_36 = FindTask(0<32>)
	word32 d0_112 = OpenLibrary(0x000012BC<p32>, 0<i32>)
	branch d0_112 == 0<32> l00001226
l00001226:
	Alert(0x38007<32>)
l00001056:
	word32 d4_74
	Mem67[0x00003E9C<p32>:word32] = d0_112
	branch Mem67[d0_36 + 172<i32>:word32] != 0<32> l00001066
l00001066:
	word32 a0_73 = a0
	d4_74 = 3<i32>
l0000106A:
	branch Mem67[a0_703:byte] != 0x20<8> l00001072
l00001070:
	d4_74 = SEQ(SLICE(d4_74, word16, 16), SLICE(d4_74, word16, 0) + 1<16>)
l00001072:
	a0_73 = a0_703 + 1<i32>
	a0_703 = a0_73
	branch Mem67[a0_703:byte] != 0<8> l0000106A
l00001060:
	d4_74 = 2<i32>
	d2_102 = 8<i32>
l00001076:
	word32 d0_100 = d4_74 << 2<32>
	word32 d0_107 = d0_100 + d2_102
	word32 d1_111 = 0x10001<32>
	d0_112 = AllocMem(d0_107 + 0x11<32>, 0x10001<32>)
	branch d0_112 == 0<32> l0000123E
l0000123E:
	CloseLibrary(Mem67[0x00003E9C<p32>:word32])
	Alert(0x10000<32>)
l0000125C:
	branch Mem153[d0_36 + 172<i32>:word32] != 0<32> l00001268
l00001262:
	fn00001214(d0_36)
	fn0000126C(d0_112)
l00001268:
	return
l00001096:
	word32 dwLoc0C_554
	word32 a0_447
	Mem169[d0_112:word32] = d0_107 + 0x11<32>
	Mem173[d0_112 + 12<i32>:word32] = d4_74 - 1<32>
	Mem177[d0_112 + 8<i32>:word32] = d0_112 + 16<i32> + d0_100
	Mem179[0<32>:word32] = 0<32>
	word32 d0_180 = Mem179[d0_36 + 172<i32>:word32]
	branch d0_180 == 0<32> l00001190
l00001190:
	fn00001214(d0_36)
	Mem187[0x00003EA0<p32>:word32] = d0_180
	Mem189[0x00003EA4<p32>:word32] = d0_180
	Mem194[0<32>:word32] = 0<32>
	dwLoc0C_554 = d0_180
	word32 d0_197 = Mem194[d0_180 + 36<i32>:word32]
	branch d0_197 == 0<32> l000011B6
l000011AE:
	Enable()
l000011B6:
	Supervisor(d0_112)
	Mem209[d0_112 + 4<i32>:word32] = d0_197
	branch d0_197 != 0<32> l000011D2
l000011D2:
	Mem214[0x00003EA8<p32>:word32] = d0_197
	Mem216[0x00003EAC<p32>:word32] = d0_197
	Mem218[0x00003EB0<p32>:word32] = d0_197
	Mem221[d0_36 + 156<i32>:word32] = d0_197
	Mem223[d0_36 + 160<i32>:word32] = d0_197
	word32 d0_227 = Mem223[(d0_197 << 2<32>) + 8<i32>:word32]
	branch d0_227 == 0<32> l000011F4
l000011F0:
	Mem231[d0_36 + 164<i32>:word32] = d0_227
l000011F4:
l000011CC:
l000011CE_thunk_fn0000127C:
	word32 a5_699
	word32 a1_698
	word32 d1_697
	fn0000127C(20<i32>, out d1_697, out a1_698, out a5_699)
	return
l000010B6:
	word32 d0_252 = Mem179[(d0_180 << 2<32>) + 16<i32>:word32]
	word32 a1_255 = Mem179[d0_112 + 8<i32>:word32]
	word32 a0_260 = (d0_252 << 2<32>) + 1<i32>
	word32 d0_262 = (uint32) (uint8) Mem179[d0_252 << 2<32>:byte]
	Mem263[a0_260 + d0_262:byte] = 0<8>
	Mem265[d0_112 + 16<i32>:word32] = a0_260
	word32 a6_266 = d0_112 + 20<i32>
	word32 d3_267 = 1<i32>
	word32 a0_272 = a0 + d2_102
l000010DA:
	a0_272 = a0_272 - 1<i32>
	branch Mem265[a0_272:byte] >u 0x20<8> l000010E2
l000010DE_1:
	word16 v37_280 = SLICE(d2_102, word16, 0)
	d2_102 = SEQ(SLICE(d2_102, word16, 16), v37_280 - 1<i16>)
	branch v37_280 != 0<16> l000010DA
l000010E2:
	Mem285[a0_272 + 1<i32>:byte] = 0<8>
l000010E6:
	byte v40_292 = Mem291[a2_290:byte]
	a2_290 = a2_290 + 1<i32>
	d1_111 = SEQ(SLICE(d1_111, word24, 8), v40_292)
	branch v40_292 == 0<8> l00001148
l000010EA:
	branch v40_292 == 0x20<8> l000010E6
l000010F0:
	branch v40_292 == 9<8> l000010E6
l000010F6:
	branch d3_267 - Mem291[d0_112 + 12<i32>:word32] == 0<32> l00001148
l000010FC:
	Mem313[a6_266:word32] = a1_255
	a6_266 = a6_266 + 4<i32>
	d3_267 = SEQ(SLICE(d3_267, word16, 16), SLICE(d3_267, word16, 0) + 1<16>)
	branch v40_292 == 0x22<8> l0000111A
l0000111A:
	byte v71_324 = Mem323[a2_290:byte]
	word24 v72_327 = SLICE(d1_111, word24, 8)
	a2_290 = a2_290 + 1<i32>
	d1_111 = SEQ(v72_327, v71_324)
	branch v71_324 == 0<8> l00001148
l0000111E:
	branch v71_324 == 0x22<8> l00001116
l00001124:
	branch v71_324 != 0x2A<8> l00001144
l0000112A:
	byte v75_337 = Mem323[a2_290:byte]
	a2_290 = a2_290 + 1<i32>
	d1_111 = SEQ(v72_327, v75_337)
	branch (v75_337 & 0xDF<8>) != 0x4E<8> l0000113C
l0000113C:
	branch (v75_337 & 0xDF<8>) != 0x45<8> l00001144
l00001142:
	d1_111 = 27<i32>
l00001138:
	d1_111 = 10<i32>
l00001144:
	Mem362[a1_255:byte] = SLICE(d1_111, byte, 0)
	a1_255 = a1_255 + 1<i32>
l00001106:
	Mem366[a1_255:byte] = v40_292
	a1_255 = a1_255 + 1<i32>
l00001108:
	byte v50_371 = Mem370[a2_290:byte]
	a2_290 = a2_290 + 1<i32>
	d1_111 = SEQ(SLICE(d1_111, word24, 8), v50_371)
	branch v50_371 == 0<8> l00001148
l00001148:
	Mem380[a1_255:byte] = 0<8>
	Mem385[a6_266:word32] = 0<32>
	execPrivate4()
	Mem416[0x00003EA8<p32>:word32] = d0_262
	execPrivate5()
	Mem418[0x00003EAC<p32>:word32] = d0_262
	dwLoc0C_554 = d0_112 + 16<i32>
	dwLoc10 = d3_267
	branch Mem418[Mem418[0x00003E98<p32>:word32] + 20<i32>:word16] <u 0x24<16> l0000117A
l00001172:
	word32 v92_428 = Mem418[d0_36 + 224<i32>:word32]
	Mem429[0x00003EB0<p32>:word32] = v92_428
	branch v92_428 != 0<32> l0000117E
l0000117A:
	Mem435[0x00003EB0<p32>:word32] = d0_262
l0000117E:
	branch Mem439[d0_36 + 8<i32>:byte] != 0xD<8> l000011F8
l000011F8:
	a0_447 = Mem445[d0_36 + 58<i32>:word32]
l00001186:
	word32 a0_450 = Mem439[d0_36 + 176<i32>:word32]
	a0_447 = a0_450 + 4<i32> - Mem439[a0_450:word32]
l00001202:
	Mem461[0x00003EBC<p32>:word32] = a0_447
	Mem469[0x00003EC0<p32>:word32] = fp - 16<i32>
	fn00001354(dwLoc10, dwLoc0C_554)
l00001212_thunk_fn0000127C:
	word32 a1_701
	word32 d1_700
	word32 a5_702
	fn0000127C(0<i32>, out d1_700, out a1_701, out a5_702)
	return
fn00001000_exit:
l0000110C:
	branch v50_371 == 0x20<8> l00001116
l00001116:
	Mem501[a1_255:byte] = 0<8>
	a1_255 = a1_255 + 1<i32>
l00001112:
	Mem508[a1_255:byte] = v50_371
	a1_255 = a1_255 + 1<i32>


void fn00001214(word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: a7
fn00001214_entry:
l00001214:
	WaitPort(a3 + 92<i32>)
	GetMsg(a3 + 92<i32>)
	return
fn00001214_exit:


void fn0000126C(word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31]
// LiveOut:
// Trashed: a1
// Preserved: a7
fn0000126C_entry:
l0000126C:
	Forbid()
	ReplyMsg(a2)
	return
fn0000126C_exit:


word32 fn00001278(word32 dwArg04, ptr32 & d1Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: a1 a5 d0 d1
// Trashed: CVZN a1 a2 a4 a5 a6 d0 d1 d2
// Preserved: a7
fn00001278_entry:
l00001278:
l00001278_thunk_fn0000127C:
	word32 a1_6
	word32 a5_9
	word32 d1_13
	word32 d0_12 = fn0000127C(dwArg04, out d1_13, out a1_6, out a5_9)
	d1Out = d1_13
	a1Out = a1_6
	a5Out = a5_9
	return d0_12
fn00001278_exit:


word32 fn0000127C(word32 d2, ptr32 & d1Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d2:[0..31]
// LiveOut: a1 a5 d0 d1
// Trashed: CVZN a1 a2 a4 a5 a6 a7 d0 d1
// Preserved:
fn0000127C_entry:
l0000127C:
	word32 a7_6 = Mem0[0x00003E94<p32>:word32]
	word32 v7_11 = Mem0[a7_6 - 4<i32>:word32]
	word32 v5_8 = Mem0[a7_6 - 8<i32>:word32]
	word32 d1_14 = Mem0[v7_11 + 4<i32>:word32]
	branch d1_14 == 0<32> l0000129E
l00001296:
	execPrivate1()
l0000129E:
	CloseLibrary(Mem0[0x00003E9C<p32>:word32])
	branch v5_8 == 0<32> l000012B0
l000012AE:
	fn0000126C(v5_8)
l000012B0:
	FreeMem(v7_11, Mem0[v7_11:word32])
	d1Out = d1_14
	a1Out = v7_11
	a5Out = v7_11
	return d2
fn0000127C_exit:


word32 fn000012D0(word32 dwArg04, ptr32 & d1Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: a1 a5 d0 d1
// Trashed: CVZNX a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7 d2
fn000012D0_entry:
l000012D0:
	branch 0x3FDC<32> == 0<32> l00001308
l000012E2:
	word32 d2_16 = 1<i32>
	branch Mem11[0x00003FE0<p32>:word32] == 0<32> l000012F6
l000012EA:
	d2_16 = d2_16 + 1<32>
	branch Mem11[0x00003FDC<p32> + (d2_16 << 2<32>):word32] != 0<32> l000012EA
l000012F6:
	word32 d2_33 = d2_16 - 1<32>
	branch d2_33 == 0<32> l00001308
l000012FA:
	word32 d0_38 = d2_33 << 2<32>
	call Mem11[0x00003FDC<p32> + d0_38:word32] (retsize: 4;)
		uses: d0:d0_38,Stack +0014:dwArg04
	d2_33 = d2_33 - 1<32>
	branch d2_33 != 0<32> l000012FA
l00001308:
	word32 a1_59
	word32 a5_62
	word32 d1_65
	word32 d0_64 = fn00001278(dwArg04, out d1_65, out a1_59, out a5_62)
	d1Out = d1_65
	a1Out = a1_59
	a5Out = a5_62
	return d0_64
fn000012D0_exit:


word32 fn0000131C(word32 dwArg04, ptr32 & d1Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: a1 a5 d0 d1
// Trashed: CVZN a1 a4 a5 a6 d0 d1
// Preserved: X a2 a3 a7
fn0000131C_entry:
l0000131C:
	branch Mem8[0x00003EC4<p32>:word32] != 0<32> l0000134E
l00001328:
	word32 a3_13 = Mem8[0x00003FEC<p32>:word32]
	Mem16[0x00003EC4<p32>:word32] = 1<i32>
	branch a3_13 == 0<32> l00001346
l0000133A:
	call Mem16[a3_13 + 4<i32>:word32] (retsize: 4;)
		uses: d0:a3_26,Stack +0010:dwArg04
	a3_13 = Mem16[a3_13:word32]
	branch a3_13 != 0<32> l0000133A
l00001346:
	d0 = fn000012D0(dwArg04, out d1, out a1, out a5)
l0000134E:
	d1Out = d1
	a1Out = a1
	a5Out = a5
	return d0
fn0000131C_exit:


void fn00001354(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7
fn00001354_entry:
l00001354:
	word32 a3_17 = 0x00003FD4<p32>
	branch 0x3FD0<32> == 0<32> l00001372
l00001366:
	branch Mem8[0x00003FD4<p32>:word32] == 0<32> l00001372
l0000136A:
	call Mem8[a3_17:word32] (retsize: 4;)
		uses: Stack +0010:dwArg04,Stack +0014:dwArg08
	a3_17 = a3_17 + 4<i32>
	branch Mem8[a3_17:word32] != 0<32> l0000136A
l00001372:
	word32 a5_90
	word32 d1_88
	word32 a1_89
	fn0000131C(fn00001390(), out d1_88, out a1_89, out a5_90)
	return
fn00001354_exit:


word32 fn00001390()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0
// Trashed: CVZNX a0 a1 a4 a5 a6 d0 d1
// Preserved: a7 d2 d3
fn00001390_entry:
l00001390:
	word32 a1_14
	word32 d1_16
	fn00002BDC(fn00003E04(0x00001438<p32>, out d1_16, out a1_14), d1_16, a1_14, 0x00001458<p32>)
	word32 dwLoc1C_128 = 0x00001438<p32>
	word32 d2_102 = 1<i32>
l000013F4:
	branch d2_102 - dwLoc0C <= 0<32> l000013BA
l000013BA:
	word32 a1_48
	word32 d1_50
	fn00002BDC(fn00003E04(0x00001410<p32>, out d1_50, out a1_48), d1_50, a1_48, 0x00001420<p32>)
	fn00001498(fn0000145C(dwLoc08), 0x00001424<p32>)
	dwLoc1C_128 = 0x00001410<p32>
	d2_102 = d2_102 + 1<32>
l000013FA:
	Mem105[0<32>:word32] = 0<32>
	word32 d1_148
	word32 a1_149
	word32 a5_150
	return fn0000131C(dwLoc1C_128, out d1_148, out a1_149, out a5_150)
fn00001390_exit:


word32 fn0000145C(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: d0
// Trashed: CVZNX d0 d1
// Preserved: a7 d2
fn0000145C_entry:
l0000145C:
	word32 d0_12
	branch dwArg04 <= 2<i32> l0000148C
l0000148C:
	d0_12 = 1<i32>
l0000146C:
	d0_12 = fn0000145C(dwArg04 - 1<32>) + fn0000145C(dwArg04 - 2<32>)
l0000148E:
	return d0_12
fn0000145C_exit:


void fn00001498(word32 d0, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn00001498_entry:
l00001498:
	fn000014B4(d0, Mem10[0x00003FF4<p32>:word32], dwArg04, fp + 8<i32>)
	return
fn00001498_exit:


void fn000014B4(word32 d0, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4 d5 d6 d7
fn000014B4_entry:
l000014B4:
	word32 a7_1968 = fp + -112<i32>
	word32 d3_1482 = dwArg0C
	word32 a5_1579 = dwArg04
	word32 a4_1925 = dwArg08
	word32 d6_1480 = 0<i32>
	branch Mem36[dwArg08:byte] == 0<8> l00001DFA
l000014D0:
	branch Mem46[a4_1925:byte] != 0x25<8> l00001DD4
l00001DD4:
	word32 a7_51 = a7_1968 - 4<i32>
	Mem54[a7_51:word32] = a5_1579
	Mem64[a7_51 - 4<i32>:word32] = (int32) (int16) (int8) SEQ(SLICE(d0, word24, 8), Mem54[a4_1925:byte])
	a4_1925 = a4_1925 + 1<i32>
	word32 a0_66
	d0 = fn00001E34(Mem64[a7_51 - 4<i32>:word32], Mem64[a7_51:word32], out a0_66, out a5_1579)
	a7_1968 = a7_51 + 4<i32>
	branch d0 != 0xFFFFFFFF<32> l00001DF2
l00001DF2:
	d6_1480 = d6_1480 + 1<32>
l00001DEE:
l000014D8:
	Mem85[a7_1968 + 64<i32>:word32] = 0<32>
	Mem87[a7_1968 + 72<i32>:word32] = 0<32>
	Mem91[a7_1968 + 102<i32>:word32] = 0<32>
	word32 d5_256 = -1<i32>
	word32 d4_376 = 105<i32>
	word32 a3_1270 = a7_1968 + 76<i32>
	word32 d7_1024 = 0<i32>
	word32 a2_135 = a4_1925 + 1<i32>
	word32 d2_1005 = Mem91[a7_1968 + 72<i32>:word32]
l000014F6:
	word32 d1_103 = 0<i32>
l000014F8:
	word32 a7_99 = a7_1968 - 4<i32>
	Mem102[a7_99:word32] = d0
	d0 = Mem102[a7_99:word32]
	branch Mem102[0x00001E0C<p32> + d1_103:byte] - Mem102[a2_135:byte] != 0<8> l0000151C
l0000151C:
	d1_103 = d1_103 + 1<32>
	branch d1_103 <u 5<32> l000014F8
l0000150A:
	Mem121[a7_99:word32] = d1_103
	word32 d1_123 = 1<i32> << d1_103
	d0 = d1_123
	d1_103 = Mem121[a7_99:word32]
	d2_1005 = d2_1005 | d1_123
	a2_135 = a2_135 + 1<i32>
l00001526:
	branch d1_103 <u 5<32> l000014F6
l0000152E:
	word32 a0_1447
	word32 d0_159
	Mem143[a7_1968 + 72<i32>:word32] = d2_1005
	branch Mem143[a2_135:byte] != 0x2A<8> l0000156C
l0000156C:
	a0_1447 = 0x000028B1<p32> + (SEQ(SLICE(d0, word24, 8), Mem143[a2_135:byte]) & 0xFF<32>)
	word32 d0_158 = (uint32) (uint8) Mem143[a0_1447:byte]
	d0_159 = d0_158 & 4<32>
	branch (d0_158 & 4<32>) == 0<32> l000015D8
l00001588:
	d2_1005 = Mem143[a7_1968 + 64<i32>:word32]
l0000158C:
	Mem171[a7_1968 - 4<i32>:word32] = d3_1482
	word32 d1_177 = __swap(10<i32>) *u SLICE(d2_1005, word16, 0)
	word32 d1_185 = SEQ(SLICE(__swap(SEQ(SLICE(d1_177, word16, 16), SLICE(d1_177 + __swap(d2_1005) *u 0xA<16>, word16, 0))), word16, 16), 0<16>)
	word32 d0_186 = SLICE(d2_1005, word16, 0) *u 10<i32> + d1_185
	a2_135 = a2_135 + 1<i32>
	a0_1447 = 0x000028B1<p32> + (SEQ(SLICE(d0_186, word24, 8), Mem171[a2_135:byte]) & 0xFF<32>)
	word32 d1_196 = (int32) (int16) (int8) SEQ(SLICE(d1_185, word24, 8), Mem171[a2_135:byte])
	word32 d0_210 = (uint32) (uint8) Mem171[a0_1447:byte]
	d3_1482 = Mem171[a7_1968 - 4<i32>:word32]
	d1_103 = d1_196 - 0x30<32>
	d2_1005 = d1_196 - 0x30<32> + d0_186
	d0_159 = d0_210 & 4<32>
	branch (d0_210 & 4<32>) != 0<32> l0000158C
l000015D4:
	Mem217[a7_1968 + 64<i32>:word32] = d2_1005
l00001538:
	d0_159 = d3_1482 + 3<32> >>u 2<32> << 2<32>
	word32 v37_232 = Mem143[d0_159:word32]
	Mem233[a7_1968 + 44<i32>:word32] = v37_232
	a2_135 = a2_135 + 1<i32>
	d3_1482 = d0_159 + 4<32>
	a0_1447 = d0_159 + 4<32>
	branch v37_232 >= 0<32> l00001564
l00001564:
	Mem237[a7_1968 + 64<i32>:word32] = Mem233[a7_1968 + 44<i32>:word32]
l00001550:
	Mem240[a7_1968 + 72<i32>:word32] = Mem233[a7_1968 + 72<i32>:word32] | 4<32>
	d0_159 = -Mem240[a7_1968 + 44<i32>:word32]
	Mem245[a7_1968 + 64<i32>:word32] = d0_159
l000015D8:
	branch Mem248[a2_135:byte] != 0x2E<8> l0000166C
l000015E0:
	a2_135 = a2_135 + 1<i32>
	branch Mem248[a2_135:byte] != 0x2A<8> l00001606
l00001606:
	a0_1447 = 0x000028B1<p32> + (SEQ(SLICE(d0_159, word24, 8), Mem248[a2_135:byte]) & 0xFF<32>)
	word32 d0_267 = (uint32) (uint8) Mem248[a0_1447:byte]
	d5_256 = 0<i32>
	d0_159 = d0_267 & 4<32>
	branch (d0_267 & 4<32>) == 0<32> l0000166C
l00001624:
	word32 a7_275 = a7_1968 - 4<i32>
	Mem278[a7_275:word32] = d2_1005
	word32 d1_284 = __swap(10<i32>) *u SLICE(d5_256, word16, 0)
	word32 d1_292 = SEQ(SLICE(__swap(SEQ(SLICE(d1_284, word16, 16), SLICE(d1_284 + __swap(d5_256) *u 0xA<16>, word16, 0))), word16, 16), 0<16>)
	word32 d0_293 = SLICE(d5_256, word16, 0) *u 10<i32> + d1_292
	a2_135 = a2_135 + 1<i32>
	a0_1447 = 0x000028B1<p32> + (SEQ(SLICE(d0_293, word24, 8), Mem278[a2_135:byte]) & 0xFF<32>)
	word32 d1_303 = (int32) (int16) (int8) SEQ(SLICE(d1_292, word24, 8), Mem278[a2_135:byte])
	word32 d0_317 = (uint32) (uint8) Mem278[a0_1447:byte]
	d2_1005 = Mem278[a7_275:word32]
	d1_103 = d1_303 - 0x30<32>
	d5_256 = d1_303 - 0x30<32> + d0_293
	d0_159 = d0_317 & 4<32>
	branch (d0_317 & 4<32>) != 0<32> l00001624
l000015E8:
	d0_159 = d3_1482 + 3<32> >>u 2<32> << 2<32>
	word32 v45_333 = Mem248[d0_159:word32]
	Mem335[a7_1968 + 44<i32>:word32] = v45_333
	a2_135 = a2_135 + 1<i32>
	d3_1482 = d0_159 + 4<32>
	a0_1447 = d0_159 + 4<32>
	branch v45_333 < 0<32> l0000166C
l00001600:
	d5_256 = Mem335[a7_1968 + 44<i32>:word32]
l0000166C:
	word32 a7_1465 = a7_1968
	branch Mem341[a2_135:byte] == 0x68<8> l00001690
l00001672:
	branch Mem341[a2_135:byte] == 0x6C<8> l00001690
l00001678:
	branch Mem341[a2_135:byte] == 0x4C<8> l00001690
l0000167E:
	branch Mem341[a2_135:byte] == 0x6A<8> l00001690
l00001684:
	branch Mem341[a2_135:byte] == 0x7A<8> l00001690
l0000168A:
	branch Mem341[a2_135:byte] != 0x74<8> l00001696
l00001690:
	a2_135 = a2_135 + 1<i32>
	d4_376 = (int32) (int16) (int8) (uint32) (uint8) Mem341[a2_135:byte]
l00001696:
	branch d4_376 != 0x68<32> l000016A8
l0000169E:
	branch Mem341[a2_135:byte] != 0x68<8> l000016A8
l000016A4:
	d4_376 = 2<i32>
	a2_135 = a2_135 + 1<i32>
l000016A8:
	branch d4_376 != 0x6C<32> l000016BA
l000016B0:
	branch Mem341[a2_135:byte] != 0x6C<8> l000016BA
l000016B6:
	d4_376 = 1<i32>
	a2_135 = a2_135 + 1<i32>
l000016BA:
	branch d4_376 != 0x6A<32> l000016C4
l000016C2:
	d4_376 = 1<i32>
l000016C4:
	branch d4_376 != 0x7A<32> l000016CE
l000016CC:
	d4_376 = 108<i32>
l000016CE:
	branch d4_376 != 0x74<32> l000016D8
l000016D6:
	d4_376 = 105<i32>
l000016D8:
	word32 d5_1481
	byte v100_428 = Mem341[a2_135:byte]
	word32 a2_1892 = a2_135 + 1<i32>
	word32 d1_1068 = SEQ(SLICE(d1_103, word24, 8), v100_428)
	word32 d0_1471 = SEQ(SLICE(d0_159, word24, 8), v100_428)
	branch v100_428 == 0x25<8> l00001B60
l00001B60:
	Mem465[a7_1968 + 102<i32>:word32] = 1<32>
	a3_1270 = 0x00001E08<p32>
	d5_1481 = 0<i32>
l000016E4:
	branch v100_428 == 0x58<8> l00001732
l000016EA:
	branch v100_428 == 0x63<8> l00001AE0
l00001AE0:
	branch d4_376 != 0x6C<32> l00001AFC
l00001AFC:
	d0_1471 = d3_1482 + 3<32> >>u 2<32> << 2<32>
	Mem510[a3_1270:byte] = Mem341[d0_1471 + 3<32>:byte]
l00001AE8:
	d0_1471 = d3_1482 + 3<32> >>u 2<32> << 2<32>
	Mem521[a3_1270:byte] = Mem341[d0_1471 + 3<32>:byte]
l00001B0E:
	a0_1447 = (d3_1482 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d3_1482 = (d3_1482 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	Mem525[a7_1968 + 102<i32>:word32] = 1<32>
	d5_1481 = 0<i32>
l000016F2:
	branch v100_428 == 0x64<8> l00001732
l000016F8:
	branch v100_428 == 0x69<8> l00001732
l000016FE:
	Mem535[a7_1968 + 44<i32>:byte] = v100_428
	branch v100_428 == 0x6E<8> l00001B72
l00001B72:
	branch d4_376 != 1<32> l00001B94
l00001B94:
	branch d4_376 != 0x6C<32> l00001BB2
l00001BB2:
	branch d4_376 != 0x68<32> l00001BD0
l00001BD0:
	branch d4_376 != 2<32> l00001BEE
l00001BEE:
	d0_1471 = d3_1482 + 3<32> >>u 2<32> << 2<32>
	a0_1447 = Mem535[d0_1471:word32]
	Mem575[a0_1447:word32] = d6_1480
l00001BD8:
	d0_1471 = d3_1482 + 3<32> >>u 2<32> << 2<32>
	a0_1447 = Mem535[d0_1471:word32]
	Mem587[a0_1447:byte] = SLICE(d6_1480, byte, 0)
l00001BBA:
	d0_1471 = d3_1482 + 3<32> >>u 2<32> << 2<32>
	a0_1447 = Mem535[d0_1471:word32]
	Mem599[a0_1447:word16] = SLICE(d6_1480, word16, 0)
l00001B9C:
	d0_1471 = d3_1482 + 3<32> >>u 2<32> << 2<32>
	a0_1447 = Mem535[d0_1471:word32]
	Mem611[a0_1447:word32] = d6_1480
l00001B7A:
	d0_1471 = d3_1482 + 3<32> >>u 2<32> << 2<32>
	a0_1447 = Mem535[d0_1471:word32]
	Mem623[a0_1447 + 4<i32>:word32] = d6_1480
	Mem624[a0_1447:word32] = 0<32>
l00001C02:
	d3_1482 = (d3_1482 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	Mem631[a7_1968 + 64<i32>:word32] = 0<32>
	d5_1481 = 0<i32>
l0000170A:
	branch Mem535[a7_1968 + 44<i32>:byte] <=u 0x70<8> l00001732
l00001718:
	byte v117_646 = Mem535[a7_1968 + 44<i32>:byte]
	branch v117_646 == 0x73<8> l00001B1C
l00001B1C:
	d0_1471 = d3_1482 + 3<32> >>u 2<32> << 2<32>
	a3_1270 = Mem535[d0_1471:word32]
	Mem662[a7_1968 + 102<i32>:word32] = 0<32>
	d3_1482 = d0_1471 + 4<32>
	a0_1447 = d0_1471 + 4<32>
	word32 a1_661 = a3_1270
	branch d5_256 == 0<32> l00001B3E
l00001B38:
	branch d5_256 - Mem662[a7_1968 + 102<i32>:word32] <=u 0<32> l00001B5A
l00001B3E:
	branch Mem662[a3_1270:byte] == 0<8> l00001B5A
l00001B42:
	d0_1471 = Mem662[a7_1968 + 102<i32>:word32]
l00001B46:
	d0_1471 = d0_1471 + 1<32>
	a1_661 = a1_661 + 1<i32>
	branch d5_256 <=u 0<32> l00001B52
l00001B4E:
	branch d5_256 - d0_1471 <=u 0<32> l00001B56
l00001B52:
	branch Mem662[a1_661:byte] != 0<8> l00001B46
l00001B56:
	Mem719[a7_1968 + 102<i32>:word32] = d0_1471
l00001B5A:
	d5_1481 = 0<i32>
l00001724:
	branch v117_646 == 0x75<8> l00001732
l0000172A:
	branch v117_646 != 0x78<8> l00001C0A
l00001C0A:
	branch v100_428 != 0<8> l00001C10
l00001C0E:
	a2_1892 = a2_1892 - 1<i32>
l00001C10:
	d0_1471 = a2_1892 - a4_1925
	Mem756[a7_1968 + 102<i32>:word32] = d0_1471
	Mem758[a7_1968 + 64<i32>:word32] = 0<32>
	a3_1270 = a4_1925
	d5_1481 = 0<i32>
l00001732:
	branch v100_428 != 0x70<8> l00001744
l00001738:
	Mem772[a7_1968 + 72<i32>:word32] = Mem770[a7_1968 + 72<i32>:word32] | 1<32>
	d4_376 = 108<i32>
	d1_1068 = 120<i32>
l00001744:
	word32 d3_1050
	word32 a7_1020
	branch SLICE(d1_1068, byte, 0) == 0x64<8> l00001752
l0000174A:
	branch SLICE(d1_1068, byte, 0) != 0x69<8> l0000189C
l0000189C:
	branch d4_376 != 1<32> l000018C0
l000018C0:
	branch d4_376 != 0x6C<32> l000018E2
l000018E2:
	word32 d0_796 = d3_1482 + 3<32> >>u 2<32> << 2<32>
	Mem804[a7_1968 + 60<i32>:word32] = Mem801[d0_796:word32]
	Mem805[a7_1968 + 56<i32>:word32] = 0<32>
	d3_1050 = d0_796 + 4<32>
l000018C8:
	word32 d0_813 = d3_1482 + 3<32> >>u 2<32> << 2<32>
	Mem819[a7_1968 + 60<i32>:word32] = Mem801[d0_813:word32]
	Mem820[a7_1968 + 56<i32>:word32] = 0<32>
	d3_1050 = d0_813 + 4<32>
l000018A4:
	word32 d0_828 = d3_1482 + 3<32> >>u 2<32> << 2<32>
	Mem834[a7_1968 + 60<i32>:word32] = Mem801[d0_828 + 4<32>:word32]
	Mem836[a7_1968 + 56<i32>:word32] = Mem834[d0_828:word32]
	d3_1050 = d0_828 + 8<32>
l000018FA:
	branch d4_376 != 0x68<32> l00001916
l00001902:
	word16 v262_844 = Mem843[a7_1968 + 62<i32>:word16]
	word32 a7_848 = a7_1968 - 4<i32>
	Mem851[a7_848:word32] = d1_1068
	Mem857[a7_848 + 64<i32>:word32] = (uint32) (uint16) v262_844
	Mem858[a7_848 + 60<i32>:word32] = 0<32>
	d1_1068 = Mem858[a7_848:word32]
l00001916:
	branch d4_376 != 2<32> l00001932
l0000191E:
	byte v277_869 = Mem868[a7_1968 + 63<i32>:byte]
	word32 a7_873 = a7_1968 - 4<i32>
	Mem876[a7_873:word32] = d1_1068
	Mem882[a7_873 + 64<i32>:word32] = (uint32) (uint8) v277_869
	Mem883[a7_873 + 60<i32>:word32] = 0<32>
	d1_1068 = Mem883[a7_873:word32]
l00001932:
	word32 d0_891 = Mem890[a7_1968 + 72<i32>:word32] & 1<i32>
	Mem894[a7_1968 + 44<i32>:byte] = SLICE(d1_1068, byte, 0)
	a7_1020 = a7_1968
	branch d0_891 == 0<32> l000019D0
l00001942:
	branch SLICE(d1_1068, byte, 0) != 0x6F<8> l0000197E
l00001948:
	branch d5_256 != 0<32> l00001972
l0000194C:
	word32 a7_911 = a7_1968 - 4<i32>
	Mem913[a7_911:word32] = d0_891
	Mem916[a7_911 - 4<i32>:word32] = d1_1068
	word32 d0_917 = Mem916[a7_911 + 64<i32>:word32]
	word32 d1_918 = Mem916[a7_911 + 60<i32>:word32]
	Mem935[a7_911 - 8<i32>:word32] = d2_1005
	d2_1005 = Mem935[a7_911 - 8<i32>:word32]
	d1_1068 = Mem935[a7_911 - 4<i32>:word32]
	d0_891 = Mem935[a7_911:word32]
	branch d1_918 - (d0_917 <u 0<32>) == 0<32> l0000197E
l00001972:
	Mem975[a7_1968 + 106<i32>:byte] = 0x30<8>
	d7_1024 = 1<32>
l0000197E:
	a7_1020 = a7_1968
	branch SLICE(d1_1068, byte, 0) == 0x78<8> l0000198E
l00001984:
	Mem984[a7_1968 + 44<i32>:byte] = SLICE(d1_1068, byte, 0)
	branch SLICE(d1_1068, byte, 0) != 0x58<8> l000019D0
l0000198E:
	Mem991[a7_1968 + 44<i32>:byte] = SLICE(d1_1068, byte, 0)
	word32 a7_992 = a7_1968 - 4<i32>
	Mem997[a7_992:word32] = d0_891
	Mem1000[a7_992 - 4<i32>:word32] = d1_1068
	word32 d0_1001 = Mem1000[a7_992 + 64<i32>:word32]
	word32 d1_1002 = Mem1000[a7_992 + 60<i32>:word32]
	Mem1008[a7_992 - 8<i32>:word32] = d2_1005
	word32 d1_1017 = Mem1008[a7_992 - 4<i32>:word32]
	a7_1020 = a7_992 + 4<i32>
	branch d1_1002 - (d0_1001 <u 0<32>) == 0<32> l000019D0
l000019B8:
	Mem1028[a7_992 + 110<i32> + d7_1024:byte] = 0x30<8>
	word32 d7_1026 = d7_1024 + 1<32>
	Mem1033[a7_992 + 110<i32> + d7_1026:byte] = SLICE(d1_1017, byte, 0)
	Mem1035[a7_992 + 48<i32>:byte] = SLICE(d1_1017, byte, 0)
	d7_1024 = d7_1026 + 1<32>
l00001752:
	word32 d0_1062
	branch d4_376 != 1<32> l00001778
l00001778:
	branch d4_376 != 0x6C<32> l000017A4
l000017A4:
	word32 d0_1048 = d3_1482 + 3<32> >>u 2<32> << 2<32>
	word32 d0_1053 = Mem801[d0_1048:word32]
	Mem1056[a7_1968 + 52<i32>:word32] = d0_1053
	word32 a7_1057 = a7_1968 - 4<i32>
	Mem1060[a7_1057:word32] = d1_1068
	Mem1065[a7_1057 + 52<i32>:word32] = d0_1053 >> 31<i32>
	word32 v235_1066 = Mem1065[a7_1057:word32]
	d3_1050 = d0_1048 + 4<32>
	d0_1062 = d0_1053 >> 31<i32>
	d1_1068 = v235_1066
	branch d4_376 != 0x68<32> l000017EA
l000017CE:
	word16 v237_1072 = Mem1065[a7_1057 + 58<i32>:word16]
	Mem1077[a7_1057:word32] = v235_1066
	word32 d1_1081 = (int32) (int16) SEQ(SLICE(v235_1066, word16, 16), v237_1072)
	Mem1083[a7_1057 + 56<i32>:word32] = d1_1081
	Mem1086[a7_1057 - 4<i32>:word32] = SEQ(SLICE(d0_1053 >> 31<i32>, word16, 16), v237_1072)
	Mem1091[a7_1057 + 52<i32>:word32] = d1_1081 >> 31<i32>
	d1_1068 = Mem1091[a7_1057 - 4<i32>:word32]
	d0_1062 = Mem1091[a7_1057:word32]
l000017EA:
	branch d4_376 != 2<32> l00001810
l000017F2:
	byte v248_1105 = Mem1104[a7_1968 + 55<i32>:byte]
	word32 a7_1109 = a7_1968 - 4<i32>
	Mem1112[a7_1109:word32] = d1_1068
	word32 d1_1117 = (int32) (int16) (int8) SEQ(SLICE(d1_1068, word24, 8), v248_1105)
	Mem1119[a7_1109 + 56<i32>:word32] = d1_1117
	Mem1122[a7_1109 - 4<i32>:word32] = SEQ(SLICE(d0_1062, word24, 8), v248_1105)
	Mem1127[a7_1109 + 52<i32>:word32] = d1_1117 >> 31<i32>
	d1_1068 = Mem1127[a7_1109 - 4<i32>:word32]
	d0_1062 = Mem1127[a7_1109:word32]
l00001780:
	word32 d0_1138 = d3_1482 + 3<32> >>u 2<32> << 2<32>
	word32 d0_1142 = Mem801[d0_1138:word32]
	Mem1144[a7_1968 + 52<i32>:word32] = d0_1142
	word32 a7_1145 = a7_1968 - 4<i32>
	Mem1147[a7_1145:word32] = d1_1068
	Mem1152[a7_1145 + 52<i32>:word32] = d0_1142 >> 31<i32>
	d3_1050 = d0_1138 + 4<32>
	d0_1062 = d0_1142 >> 31<i32>
	d1_1068 = Mem1152[a7_1145:word32]
l0000175A:
	d0_1062 = d3_1482 + 3<32> >>u 2<32> << 2<32>
	Mem1166[a7_1968 + 52<i32>:word32] = Mem801[d0_1062 + 4<32>:word32]
	Mem1168[a7_1968 + 48<i32>:word32] = Mem1166[d0_1062:word32]
	d3_1050 = d0_1062 + 8<32>
l00001810:
	Mem1173[a7_1968 + 44<i32>:byte] = SLICE(d1_1068, byte, 0)
	word32 a7_1174 = a7_1968 - 4<i32>
	Mem1177[a7_1174:word32] = d0_1062
	Mem1180[a7_1174 - 4<i32>:word32] = d1_1068
	word32 d0_1181 = Mem1180[a7_1174 + 56<i32>:word32]
	word32 d1_1182 = Mem1180[a7_1174 + 52<i32>:word32]
	Mem1188[a7_1174 - 8<i32>:word32] = d2_1005
	a7_1020 = a7_1174 + 4<i32>
	branch d1_1182 - (d0_1181 <u 0<32>) >= 0<32> l0000185A
l0000185A:
	byte v163_1202 = Mem1188[a7_1174 + 48<i32>:byte]
	branch (Mem1188[a7_1174 + 76<i32>:word32] & 16<i32>) == 0<32> l00001874
l00001874:
	branch (Mem1188[a7_1174 + 76<i32>:word32] & 8<i32>) == 0<32> l00001888
l0000187C:
	Mem1225[a7_1174 + 110<i32>:byte] = 0x20<8>
	d7_1024 = 1<32>
l00001866:
	Mem1232[a7_1174 + 110<i32>:byte] = 0x2B<8>
	d7_1024 = 1<32>
l00001888:
	Mem1237[a7_1174 + 64<i32>:word32] = Mem1235[a7_1174 + 56<i32>:word32]
	Mem1239[a7_1174 + 60<i32>:word32] = Mem1237[a7_1174 + 52<i32>:word32]
	Mem1242[a7_1174 + 48<i32>:byte] = v163_1202
l0000183A:
	Mem1248[a7_1174 + 110<i32>:byte] = 0x2D<8>
	d7_1024 = 1<32>
	a7_1020 = Mem1248[a7_1174 + 0x40<32>:word32]
l000019D0:
	byte v151_1266 = Mem1265[a7_1020 + 44<i32>:byte]
	a3_1270 = a7_1020 + 98<i32>
	branch v151_1266 == 0x78<8> l000019E4
l000019DE:
	branch v151_1266 != 0x58<8> l000019EE
l000019EE:
	branch v151_1266 != 0x6F<8> l000019FE
l000019FE:
	Mem1281[a7_1020 + 48<i32>:word32] = 0xA<32>
l000019F4:
	Mem1284[a7_1020 + 48<i32>:word32] = 8<32>
l00001A06:
	Mem1289[a7_1020 + 44<i32>:word32] = Mem1287[a7_1020 + 48<i32>:word32]
l000019E4:
	Mem1293[a7_1020 + 44<i32>:word32] = 0x10<32>
l00001A0C:
	word32 a6_1305
	Mem1298[a7_1020 + 108<i32>:word32] = Mem1296[a7_1020 + 44<i32>:word32]
	branch v151_1266 == 0x58<8> l00001A1E
l00001A1E:
	a6_1305 = 0x00001E24<p32>
l00001A18:
	a6_1305 = 0x00001E14<p32>
l00001A22:
	Mem1310[a7_1020 + 44<i32>:word32] = a6_1305
	Mem1326[a7_1020 + 124<i32>:word32] = d3_1050
	Mem1340[a7_1020 + 68<i32>:word32] = d5_256
	Mem1359[a7_1020 + 48<i32>:word32] = d6_1480
	Mem1367[a7_1020 + 98<i32>:word32] = d7_1024
	word32 v187_1368 = a7_1020 + 56<i32>
	word32 d6_1369 = Mem1367[v187_1368:word32]
	word32 d7_1371 = Mem1367[v187_1368 + 4<i32>:word32]
	word32 d3_1373 = Mem1367[a7_1020 + 102<i32>:word32]
	word32 a1_1375 = Mem1367[a7_1020 + 44<i32>:word32]
l00001A44:
	word32 d1_1378 = Mem1377[a7_1020 + 108<i32>:word32]
	word32 a7_1383 = a7_1020 - 4<i32>
	Mem1385[a7_1383:word32] = d1_1378 >> 31<i32>
	Mem1388[a7_1383 - 4<i32>:word32] = d1_1378
	Mem1392[a7_1383 - 8<i32>:word32] = a1_1375
	Mem1395[a7_1383 - 12<i32>:word32] = d1_1378
	Mem1397[a7_1383 - 16<i32>:word32] = d1_1378 >> 31<i32>
	Mem1400[a7_1383 - 20<i32>:word32] = d7_1371
	Mem1403[a7_1383 - 24<i32>:word32] = d6_1369
	word32 d1_1406 = fn0000279C(Mem1403[a7_1383 - 24<i32>:word32], Mem1403[a7_1383 - 20<i32>:word32], Mem1403[a7_1383 - 16<i32>:word32], Mem1403[a7_1383 - 12<i32>:word32])
	word32 v191_1414 = Mem1403[a7_1383 - 8<i32>:word32]
	word32 d1_1419 = Mem1403[a7_1383 - 4<i32>:word32]
	word32 d0_1421 = Mem1403[a7_1383:word32]
	a3_1270 = a3_1270 - 1<i32>
	Mem1428[a3_1270:byte] = Mem1403[v191_1414 + d1_1406:byte]
	Mem1431[a7_1383:word32] = d0_1421
	Mem1434[a7_1383 - 4<i32>:word32] = d1_1419
	Mem1437[a7_1383 - 8<i32>:word32] = v191_1414
	Mem1440[a7_1383 - 12<i32>:word32] = d1_1419
	Mem1442[a7_1383 - 16<i32>:word32] = d0_1421
	Mem1444[a7_1383 - 20<i32>:word32] = d7_1371
	Mem1446[a7_1383 - 24<i32>:word32] = d6_1369
	word32 d1_1450
	word32 d0_1449 = fn00002454(Mem1446[a7_1383 - 24<i32>:word32], Mem1446[a7_1383 - 20<i32>:word32], Mem1446[a7_1383 - 16<i32>:word32], Mem1446[a7_1383 - 12<i32>:word32], out d1_1450, out a0_1447)
	a1_1375 = Mem1446[a7_1383 - 8<i32>:word32]
	d6_1369 = d0_1449
	d7_1371 = d1_1450
	a7_1465 = a7_1383 + 4<i32>
	d3_1373 = d3_1373 + 1<32>
	d0_1471 = d1_1450
	branch d0_1449 - (d1_1450 <u 0<32>) != 0<32> l00001A44
l00001AB2:
	Mem1478[a7_1383 + 106<i32>:word32] = d3_1373
	d7_1024 = Mem1478[a7_1383 + 102<i32>:word32]
	d6_1480 = Mem1478[a7_1383 + 52<i32>:word32]
	d5_1481 = Mem1478[a7_1383 + 72<i32>:word32]
	d3_1482 = Mem1478[a7_1383 + 128<i32>:word32]
	branch d5_1481 != 0xFFFFFFFF<32> l00001AD4
l00001AD4:
	Mem1487[a7_1383 + 76<i32>:word32] = Mem1478[a7_1383 + 76<i32>:word32] & 0xFFFFFFFD<32>
l00001ACE:
	d5_1481 = 0<i32>
l00001C20:
	branch d5_1481 - Mem1496[a7_1465 + 102<i32>:word32] >u 0<32> l00001C2E
l00001C2E:
	Mem1502[a7_1465 + 44<i32>:word32] = d5_1481
l00001C26:
	Mem1505[a7_1465 + 44<i32>:word32] = Mem1496[a7_1465 + 102<i32>:word32]
l00001C32:
	word32 a7_1508 = a7_1465 - 4<i32>
	Mem1516[a7_1508:word32] = d0_1471
	Mem1531[a7_1508 + 52<i32>:word32] = Mem1516[a7_1508 + 48<i32>:word32] + d7_1024
	Mem1537[a7_1508:word32] = Mem1531[a7_1508:word32]
	word32 d0_1541 = Mem1537[a7_1508:word32]
	branch Mem1537[a7_1508 + 52<i32>:word32] - Mem1537[a7_1508 + 68<i32>:word32] <u 0<32> l00001C56
l00001C56:
	Mem1546[a7_1508:word32] = d0_1541
	Mem1551[a7_1508 + 48<i32>:word32] = Mem1546[a7_1508 + 68<i32>:word32] - Mem1546[a7_1508 + 52<i32>:word32]
l00001C50:
	Mem1556[a7_1508 + 48<i32>:word32] = 0<32>
l00001C66:
	Mem1564[a7_1465 + 48<i32>:word32] = Mem1562[a7_1465 + 44<i32>:word32]
	word32 d0_1566 = Mem1564[a7_1465 + 72<i32>:word32] & 2<i32>
	branch d0_1566 == 0<32> l00001CA8
l00001C74:
	word32 d2_1571 = 0<i32>
	branch d7_1024 == 0<32> l00001CA8
l00001C7A:
	word32 a7_1578 = a7_1465 - 4<i32>
	Mem1581[a7_1578:word32] = a5_1579
	Mem1593[a7_1578 - 4<i32>:word32] = (int32) (int16) (int8) SEQ(SLICE(d0_1566, word24, 8), Mem1581[a7_1578 + 110<i32> + d2_1571:byte])
	d0_1566 = fn00001E34(Mem1593[a7_1578 - 4<i32>:word32], Mem1593[a7_1578:word32], out a0_1447, out a5_1579)
	branch d0_1566 != 0xFFFFFFFF<32> l00001CA0
l00001CA0:
	d2_1571 = d2_1571 + 1<32>
	d6_1480 = d6_1480 + 1<32>
	branch d7_1024 - d2_1571 >u 0<32> l00001C7A
l00001CA8:
	branch (Mem1619[a7_1465 + 72<i32>:word32] & 4<i32>) != 0<32> l00001CFA
l00001CB0:
	word32 d2_1625 = 0<i32>
	branch Mem1619[a7_1465 + 48<i32>:word32] == 0<32> l00001CFA
l00001CB8:
	word32 d4_1630 = Mem1619[a7_1465 + 72<i32>:word32]
	word32 a4_1632 = Mem1619[a7_1465 + 48<i32>:word32]
l00001CC0:
	word32 a0_1647
	word32 a7_1634 = a7_1465 - 4<i32>
	Mem1637[a7_1634:word32] = a5_1579
	branch (d4_1630 & 2<i32>) == 0<32> l00001CCE
l00001CCE:
	a0_1647 = SEQ(SLICE(a0_1447, word16, 16), 0x20<16>)
l00001CC8:
	a0_1647 = SEQ(SLICE(a0_1447, word16, 16), 0x30<16>)
l00001CD2:
	Mem1654[a7_1465 - 8<i32>:word32] = a0_1647
	branch fn00001E34(Mem1654[a7_1465 - 8<i32>:word32], Mem1654[a7_1465 - 4<i32>:word32], out a0_1447, out a5_1579) != 0xFFFFFFFF<32> l00001CEA
l00001CEA:
	d2_1625 = d2_1625 + 1<32>
	d6_1480 = d6_1480 + 1<32>
	branch a4_1632 - d2_1625 >u 0<32> l00001CC0
l00001CF2:
	Mem1683[a7_1634 + 52<i32>:word32] = a4_1632
	Mem1686[a7_1634 + 76<i32>:word32] = d4_1630
l00001CFA:
	word32 d0_1691 = Mem1690[a7_1465 + 72<i32>:word32] & 2<i32>
	branch d0_1691 != 0<32> l00001D36
l00001D02:
	word32 d2_1696 = 0<i32>
	branch d7_1024 == 0<32> l00001D36
l00001D08:
	word32 a7_1706 = a7_1465 - 4<i32>
	Mem1709[a7_1706:word32] = a5_1579
	Mem1721[a7_1706 - 4<i32>:word32] = (int32) (int16) (int8) SEQ(SLICE(d0_1691, word24, 8), Mem1709[a7_1706 + 110<i32> + d2_1696:byte])
	word32 a0_2918
	d0_1691 = fn00001E34(Mem1721[a7_1706 - 4<i32>:word32], Mem1721[a7_1706:word32], out a0_2918, out a5_1579)
	branch d0_1691 != 0xFFFFFFFF<32> l00001D2E
l00001D2E:
	d2_1696 = d2_1696 + 1<32>
	d6_1480 = d6_1480 + 1<32>
	branch d7_1024 - d2_1696 >u 0<32> l00001D08
l00001D36:
	word32 d2_1747 = Mem1746[a7_1465 + 102<i32>:word32]
	branch d5_1481 - Mem1746[a7_1465 + 102<i32>:word32] <=u 0<32> l00001D64
l00001D40:
	word32 a7_1761 = a7_1465 - 4<i32>
	Mem1764[a7_1761:word32] = a5_1579
	Mem1767[a7_1761 - 4<32>:word32] = 0x00000030<p32>
	word32 a0_2919
	d0_1691 = fn00001E34(Mem1767[a7_1761 - 4<32>:word32], Mem1767[a7_1761:word32], out a0_2919, out a5_1579)
	branch d0_1691 != 0xFFFFFFFF<32> l00001D5C
l00001D5C:
	d2_1747 = d2_1747 + 1<32>
	d6_1480 = d6_1480 + 1<32>
	branch d5_1481 - d2_1747 >u 0<32> l00001D40
l00001D64:
	word32 d2_1791 = 0<i32>
	branch Mem1793[a7_1465 + 102<i32>:word32] == 0<32> l00001D9A
l00001D6C:
	word32 a4_1798 = Mem1793[a7_1465 + 102<i32>:word32]
l00001D70:
	word32 a7_1800 = a7_1465 - 4<i32>
	Mem1803[a7_1800:word32] = a5_1579
	Mem1815[a7_1800 - 4<i32>:word32] = (int32) (int16) (int8) SEQ(SLICE(d0_1691, word24, 8), Mem1803[a3_1270 + d2_1791:byte])
	word32 a0_2920
	d0_1691 = fn00001E34(Mem1815[a7_1800 - 4<i32>:word32], Mem1815[a7_1800:word32], out a0_2920, out a5_1579)
	branch d0_1691 != 0xFFFFFFFF<32> l00001D92
l00001D92:
	d2_1791 = d2_1791 + 1<32>
	d6_1480 = d6_1480 + 1<32>
	branch a4_1798 - d2_1791 >u 0<32> l00001D70
l00001D9A:
	d0 = Mem1841[a7_1465 + 72<i32>:word32] & 4<i32>
	branch d0 == 0<32> l00001DD0
l00001DA2:
	word32 d2_1847 = 0<i32>
	branch Mem1841[a7_1465 + 48<i32>:word32] == 0<32> l00001DD0
l00001DAA:
	word32 a3_1852 = Mem1841[a7_1465 + 48<i32>:word32]
l00001DAE:
	word32 a7_1854 = a7_1465 - 4<i32>
	Mem1857[a7_1854:word32] = a5_1579
	Mem1860[a7_1854 - 4<32>:word32] = 0x00000020<p32>
	word32 a0_2921
	d0 = fn00001E34(Mem1860[a7_1854 - 4<32>:word32], Mem1860[a7_1854:word32], out a0_2921, out a5_1579)
	branch d0 != 0xFFFFFFFF<32> l00001DC8
l00001DC8:
	d2_1847 = d2_1847 + 1<32>
	d6_1480 = d6_1480 + 1<32>
	branch a3_1852 - d2_1847 >u 0<32> l00001DAE
l00001DD0:
	a7_1968 = a7_1465
	a4_1925 = a2_1892
l00001DF4:
	branch Mem1927[a4_1925:byte] != 0<8> l000014D0
l00001DFA:
l00001DC4:
l00001D8E:
l00001D56:
l00001D28:
l00001CE4:
l00001C9A:
l00001DFC:
	return
fn000014B4_exit:


word32 fn00001E34(word32 dwArg04, word32 dwArg08, ptr32 & a0Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 a5 d0
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a7 d2
fn00001E34_entry:
l00001E34:
	word32 a0_104
	word32 d1_53
	Mem17[dwArg08 + 24<i32>:word32] = Mem11[dwArg08 + 24<i32>:word32] | 2<i32>
	word32 v13_19 = Mem17[dwArg08 + 20<i32>:word32] - 1<32>
	Mem20[dwArg08 + 20<i32>:word32] = v13_19
	branch v13_19 < 0<32> l00001E78
l00001E50:
	branch dwArg04 != 10<i32> l00001E62
l00001E56:
	branch (Mem20[dwArg08 + 24<i32>:word32] & 0x80<32>) != 0<32> l00001E78
l00001E78:
	word32 a1_43
	d1_53 = fn00001E90(dwArg04, dwArg08, out a0_104, out a1_43, out a5)
l00001E62:
	a0_104 = Mem20[dwArg08 + 4<i32>:word32]
	Mem63[dwArg08 + 4<i32>:word32] = a0_104 + 1<i32>
	Mem66[a0_104:byte] = SLICE(dwArg04, byte, 0)
	d1_53 = (uint32) (uint8) Mem66[a0_104:byte]
l00001E86:
	a0Out = a0_104
	a5Out = a5
	return d1_53
fn00001E34_exit:


word32 fn00001E90(word32 dwArg04, word32 dwArg08, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 a1 a5 d0
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5 d6
fn00001E90_entry:
l00001E90:
	word32 d0_109
	word32 a5_127
	word32 a1_125
	fn00002424(out a1_125, out a5_127)
	branch dwArg08 != 0<32> l00001EAC
l00001EAC:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 73<i32>) == 64<i32> l00001EBE
l00001EBE:
	branch Mem29[dwArg08 + 28<i32>:word32] != 0<32> l00001EDC
l00001EC4:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 4<i32>) == 0<32> l00001ED4
l00001ED4:
	Mem62[dwArg08 + 28<i32>:word32] = 0x400<32>
l00001ECC:
	Mem66[dwArg08 + 28<i32>:word32] = 1<i32>
l00001EDC:
	branch Mem69[dwArg08 + 8<i32>:word32] != 0<32> l00001F1C
l00001F1C:
	branch Mem69[dwArg08:word32] == 0<32> l00001F76
l00001F76:
	d0_109 = 0<i32>
l00001F20:
	word32 d0_101 = Mem69[dwArg08 + 24<i32>:word32] & 0x80<32>
	branch d0_101 == 0<32> l00001F4C
l00001F2C:
	d0_101 = 10<i32>
	branch dwArg04 != 10<i32> l00001F4C
l00001F4C:
	word32 d4_95 = Mem69[dwArg08 + 4<i32>:word32] - Mem69[dwArg08 + 8<i32>:word32]
	execPrivate3()
	branch d4_95 - d0_101 == 0<32> l00001F7A
l00001F6A:
	Mem108[dwArg08 + 24<i32>:word32] = Mem69[dwArg08 + 24<i32>:word32] | 16<i32>
	a0 = dwArg08 + 24<i32>
	d0_109 = -1<i32>
l00001F32:
	word32 a0_112 = Mem69[dwArg08 + 4<i32>:word32]
	Mem116[dwArg08 + 4<i32>:word32] = a0_112 + 1<i32>
	Mem118[a0_112:byte] = SLICE(dwArg04, byte, 0)
	d0_109 = fn00001FA4(dwArg08, out a0, out a1_125, out a5_127)
l00001EE2:
	word32 d4_143
	branch (Mem69[dwArg08 + 24<i32>:word32] & 0x80<32>) == 0<32> l00001EF6
l00001EF6:
	d4_143 = 1<i32>
l00001EF2:
	d4_143 = 2<i32>
l00001EF8:
	word32 d1_161
	word32 d0_160 = fn00002050(d4_143 + Mem69[dwArg08 + 28<i32>:word32], out d1_161, out a0, out a1_125)
	branch d0_160 != 0<32> l00001F12
l00001F12:
	Mem174[dwArg08 + 8<i32>:word32] = d0_160 + 1<i32>
l00001F7A:
	Mem181[dwArg08 + 24<i32>:word32] = Mem179[dwArg08 + 24<i32>:word32] | 2<i32>
	a0 = Mem181[dwArg08 + 8<i32>:word32]
	Mem188[a0:byte] = SLICE(dwArg04, byte, 0)
	word32 a1_189 = Mem188[dwArg08 + 8<i32>:word32]
	Mem192[dwArg08 + 4<i32>:word32] = a1_189 + 1<i32>
	Mem197[dwArg08 + 20<i32>:word32] = Mem192[dwArg08 + 28<i32>:word32] - 1<32>
	a1_125 = a1_189 + 1<i32>
	d0_109 = 0<i32>
l00001F0C:
	d0_109 = -1<i32>
l00001EB8:
	d0_109 = -1<i32>
l00001EA6:
	d0_109 = -1<i32>
l00001F9E:
	a0Out = a0
	a1Out = a1_125
	a5Out = a5_127
	return d0_109
fn00001E90_exit:


word32 fn00001FA4(word32 dwArg04, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: a0 a1 a5 d0
// Trashed: CVZNX a0 a1 a4 a5 d0 d1
// Preserved: a2 a6 a7 d2 d3 d4
fn00001FA4_entry:
l00001FA4:
	word32 d0_153
	word32 a1_21
	word32 a5_23
	fn00002424(out a1_21, out a5_23)
	branch dwArg04 != 0<32> l00001FBA
l00001FBA:
	branch Mem17[dwArg04 + 28<i32>:word32] != 0<32> l00001FD8
l00001FC0:
	branch (Mem17[dwArg04 + 24<i32>:word32] & 4<i32>) == 0<32> l00001FD0
l00001FD0:
	Mem42[dwArg04 + 28<i32>:word32] = 0x400<32>
l00001FC8:
	Mem46[dwArg04 + 28<i32>:word32] = 1<i32>
l00001FD8:
	branch Mem49[dwArg04 + 8<i32>:word32] != 0<32> l00001FE2
l00001FE2:
	word32 d0_55 = Mem49[dwArg04 + 24<i32>:word32] & 2<i32>
	branch d0_55 == 0<32> l00002028
l00001FEA:
	branch Mem49[dwArg04:word32] == 0<32> l00002018
l00002018:
	d0_153 = 0<i32>
l00001FEE:
	word32 d4_68 = Mem49[dwArg04 + 4<i32>:word32] - Mem49[dwArg04 + 8<i32>:word32]
	execPrivate3()
	branch d4_68 - d0_55 == 0<32> l0000201C
l0000201C:
	Mem78[dwArg04 + 4<i32>:word32] = Mem49[dwArg04 + 8<i32>:word32]
	Mem80[dwArg04 + 20<i32>:word32] = Mem78[dwArg04 + 28<i32>:word32]
l00002028:
	Mem87[dwArg04 + 24<i32>:word32] = Mem85[dwArg04 + 24<i32>:word32] & -4<i32>
	a0 = dwArg04 + 24<i32>
	d0_153 = 0<i32>
l0000200C:
	Mem93[dwArg04 + 24<i32>:word32] = Mem49[dwArg04 + 24<i32>:word32] | 16<i32>
	a0 = dwArg04 + 24<i32>
	d0_153 = -1<i32>
l00001FDE:
	d0_153 = 0<i32>
l00001FB6:
	d0_153 = -1<i32>
l00002032:
	a0Out = a0
	a1Out = a1_21
	a5Out = a5_23
	return d0_153
fn00001FA4_exit:


word32 fn00002050(word32 dwArg04, ptr32 & d1Out, ptr32 & a0Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: a0 a1 d0 d1
// Trashed: CVZN a0 a1 d0 d1
// Preserved: X a7 d2
fn00002050_entry:
l00002050:
	word32 d0_106
	branch dwArg04 != 0<32> l0000205E
l0000205E:
	branch Mem5[0x00003ECC<p32>:word32] != 0<32> l00002082
l00002066:
	word32 a0_13 = Mem5[0x00003EC8<p32>:word32]
	Mem21[0<32>:word32] = 0<32>
	Mem36[0x00003ECC<p32>:word32] = fn00002344(dwLoc10, a0_13, a0_13, out d1, out a0, out a1)
l00002082:
	branch Mem39[0x00003ECC<p32>:word32] != 0<32> l0000208E
l0000208E:
	word32 d0_58 = fn00002220(Mem51[0x00003ECC<p32>:word32], dwArg04 + 4<i32>, out d1, out a0)
	a1 = d0_58
	branch d0_58 != 0<32> l000020AC
l000020AC:
	Mem72[d0_58:word32] = dwArg04
	a0 = d0_58 + 4<i32>
	d0_106 = d0_58 + 4<i32>
l000020A8:
	d0_106 = 0<i32>
l0000208A:
	d0_106 = 0<i32>
l0000205A:
	d0_106 = 0<i32>
l000020B4:
	d1Out = d1
	a0Out = a0
	a1Out = a1
	return d0_106
fn00002050_exit:


void fn000020BC(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn000020BC_entry:
l000020BC:
	branch dwArg04 == 0<32> l000020E6
l000020C6:
	branch Mem0[0x00003ECC<p32>:word32] == 0<32> l000020E6
l000020CE:
	fn00002184(Mem23[0x00003ECC<p32>:word32], dwArg04 - 4<i32>, Mem0[dwArg04 - 4<i32>:word32] + 4<i32>)
l000020E6:
	return
fn000020BC_exit:


void fn00002184(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2
fn00002184_entry:
l00002184:
	branch Mem20[Mem20[0x00003E98<p32>:word32] + 20<i32>:word16] <u 0x27<16> l000021B4
l000021B4:
	branch dwArg04 == 0<32> l00002218
l000021B8:
	branch dwArg08 == 0<32> l00002218
l000021BC:
	word32 a3_36 = dwArg08 + -12<i32>
	branch dwArg0C - Mem20[dwArg04 + 20<i32>:word32] >=u 0<32> l000021FE
l000021C8:
	word32 a2_40 = dwArg04
l000021CA:
	a2_40 = Mem20[a2_40:word32]
	branch Mem20[a2_40:word32] == 0<32> l00002218
l000021D0:
	branch Mem20[a2_40 + 8<i32>:byte] == 0<8> l000021CA
l000021D6:
	branch dwArg08 - Mem20[a2_40 + 20<i32>:word32] <u 0<32> l000021CA
l000021DC:
	branch dwArg08 - Mem20[a2_40 + 24<i32>:word32] >=u 0<32> l000021CA
l000021E2:
	Deallocate(a2_40, dwArg08, dwArg0C)
	branch Mem20[a2_40 + 28<i32>:word32] - Mem20[dwArg04 + 16<i32>:word32] != 0<32> l00002218
l000021FC:
	a3_36 = a2_40
l000021FE:
	Remove(a3_36)
	word32 a3_74 = a3_36 - 4<i32>
	FreeMem(a3_74, Mem20[a3_74:word32])
l000021A2:
	FreePooled(dwArg08, dwArg04)
l00002218:
	return
fn00002184_exit:


word32 fn00002220(word32 dwArg04, word32 dwArg08, ptr32 & d1Out, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4
fn00002220_entry:
l00002220:
	word32 d0_158
	word32 a0_115 = Mem26[0x00003E98<p32>:word32]
	branch Mem26[a0_115 + 20<i32>:word16] <u 0x27<16> l0000224C
l0000224C:
	word32 a3_120 = 0<32>
	branch dwArg04 == 0<32> l0000233C
l00002254:
	branch dwArg08 == 0<32> l0000233C
l0000225A:
	branch dwArg08 - Mem26[dwArg04 + 20<i32>:word32] >=u 0<32> l0000230E
l0000230E:
	d1 = Mem26[dwArg04 + 12<i32>:word32]
	word32 d0_50 = AllocMem(dwArg08 + 16<i32>, d1)
	a3_120 = d0_50
	branch d0_50 == 0<32> l0000233C
l00002328:
	Mem56[d0_50:word32] = dwArg08 + 16<i32>
	AddTail(dwArg04, d0_50 + 4<i32>)
	Mem62[d0_50 + 12<i32>:word32] = 0<32>
	a0_115 = dwArg04
	a3_120 = d0_50 + 16<i32>
l00002262:
	word32 a5_162 = Mem26[dwArg04:word32]
l00002264:
	branch Mem26[a5_162:word32] == 0<32> l00002286
l00002286:
	word32 d3_77 = Mem26[dwArg04 + 16<i32>:word32] + 40<i32>
	d1 = Mem26[dwArg04 + 12<i32>:word32]
	word32 d0_82 = AllocMem(d3_77, d1)
	a3_120 = d0_82
	branch d0_82 == 0<32> l0000233C
l000022A4:
	Mem88[d0_82:word32] = d3_77
	Mem91[d0_82 + 12<i32>:byte] = 0xA<8>
	Mem95[d0_82 + 20<i32>:word32] = d0_82 + 40<i32>
	Mem97[d0_82 + 24<i32>:word32] = d0_82 + 40<i32>
	Mem99[Mem97[d0_82 + 20<i32>:word32]:word32] = 0<32>
	word32 a2_100 = Mem99[d0_82 + 20<i32>:word32]
	Mem103[a2_100 + 4<i32>:word32] = Mem99[dwArg04 + 16<i32>:word32]
	Mem106[d0_82 + 32<i32>:word32] = Mem103[a2_100 + 4<i32>:word32]
	Mem110[d0_82 + 28<i32>:word32] = Mem106[d0_82 + 32<i32>:word32] + Mem106[d0_82 + 20<i32>:word32]
	AddHead(dwArg04, d0_82 + 4<i32>)
	a0_115 = d0_82 + 4<i32>
	a3_120 = Allocate(d0_82 + 4<i32>, dwArg08)
l00002268:
	branch Mem26[a5_162 + 8<i32>:byte] == 0<8> l00002282
l0000226E:
	word32 d0_128 = Allocate(a5_162, dwArg08)
	a0_115 = a5_162
	a3_120 = d0_128
	branch d0_128 != 0<32> l000022F2
l000022F2:
	branch (Mem135[dwArg04 + 12<i32>:word32] & 0x10000<32>) == 0<32> l0000233C
l000022FE:
	word32 a2_142 = a3_120
	word32 d2_145 = dwArg08 + 7<32> >>u 3<32>
l00002304:
	Mem148[a2_142:word32] = 0<32>
	word32 a2_149 = a2_142 + 4<i32>
	Mem150[a2_149:word32] = 0<32>
	a2_142 = a2_149 + 4<i32>
	d2_145 = d2_145 - 1<32>
	branch d2_145 != 0<32> l00002304
l0000230C:
l0000233C:
	d0_158 = a3_120
l00002282:
	a5_162 = Mem26[a5_162:word32]
l0000223A:
	a0_115 = dwArg04
	d0_158 = AllocPooled(dwArg08, dwArg04)
l0000233E:
	d1Out = d1
	a0Out = a0_115
	return d0_158
fn00002220_exit:


word32 fn00002344(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & d1Out, ptr32 & a0Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: a0 a1 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a6 a7 d2 d3
fn00002344_entry:
l00002344:
	word32 d0_51
	word32 a0_17 = Mem14[0x00003E98<p32>:word32]
	branch Mem14[a0_17 + 20<i32>:word16] <u 0x27<16> l00002372
l00002372:
	a1 = 0<32>
	branch dwArg08 - dwArg0C <u 0<32> l000023AC
l00002378:
	word32 d0_30 = AllocMem(24<i32>, 0<i32>)
	d1 = 0<i32>
	a1 = d0_30
	branch d0_30 == 0<32> l000023AC
l0000238E:
	Mem37[d0_30:word32] = d0_30 + 4<i32>
	Mem38[d0_30 + 4<i32>:word32] = 0<32>
	Mem40[d0_30 + 8<i32>:word32] = d0_30
	Mem42[d0_30 + 12<i32>:word32] = dwArg04
	Mem46[d0_30 + 16<i32>:word32] = dwArg08 + 7<32> & -8<i32>
	Mem48[d0_30 + 20<i32>:word32] = dwArg0C
	a0_17 = d0_30 + 4<i32>
l000023AC:
	d0_51 = a1
l0000235E:
	d1 = dwArg08
	d0_51 = CreatePrivatePool(dwArg04, dwArg08, dwArg0C)
l000023AE:
	d1Out = d1
	a0Out = a0_17
	a1Out = a1
	return d0_51
fn00002344_exit:


void fn000023B4(word32 d0, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a6 a7 d2
fn000023B4_entry:
l000023B4:
	branch Mem11[Mem11[0x00003E98<p32>:word32] + 20<i32>:word16] <u 0x27<16> l000023D8
l000023D8:
	branch dwArg04 == 0<32> l0000241C
l000023DC:
	RemHead(dwArg04)
	word32 a2_24 = d0
	branch d0 == 0<32> l0000240E
l000023EE:
	word32 a2_29 = a2_24 - 4<i32>
	word32 d0_31 = Mem11[a2_29:word32]
	FreeMem(a2_29, d0_31)
	RemHead(dwArg04)
	a2_24 = d0_31
	branch d0_31 != 0<32> l000023EE
l0000240E:
	FreeMem(dwArg04, 24<i32>)
l000023CA:
	DeletePrivatePool(dwArg04)
l0000241C:
	return
fn000023B4_exit:


word32 fn00002424(ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a1 a5 d1
// Trashed: CVZN a1 a4 a5 d0 d1
// Preserved: a6 a7
fn00002424_entry:
l00002424:
	SetSignal(0<i32>, 0x1000<32>)
	word32 d1_21 = 0x1000<32>
	branch 0<32> == 0<32> l0000244E
l00002442:
	fn0000131C(0x00000014<p32>, out d1_21, out a1, out a5)
l0000244E:
	a1Out = a1
	a5Out = a5
	return d1_21
fn00002424_exit:


word32 fn00002454(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & d1Out, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: a0 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn00002454_entry:
l00002454:
	word32 d0_196
	word32 d1_142 = dwArg08
	word32 a0_20 = dwArg08
	word32 d3_166 = dwArg10
	branch dwArg0C != 0<32> l000024AA
l000024AA:
	branch dwArg04 - dwArg0C >=u 0<32> l000024B4
l000024B4:
	word32 d4_29 = 24<i32>
	word32 d6_30 = __rol(dwArg0C, 8<32>)
	branch SLICE(d6_30, byte, 0) != 0<8> l000024D2
l000024BE:
	d4_29 = 16<i32>
	d6_30 = __rol(d6_30, 8<32>)
	branch SLICE(d6_30, byte, 0) != 0<8> l000024D2
l000024C6:
	d4_29 = 8<i32>
	d6_30 = __rol(d6_30, 8<32>)
	branch SLICE(d6_30, byte, 0) != 0<8> l000024D2
l000024CE:
	d4_29 = 0<i32>
	d6_30 = SEQ(SLICE(d6_30, word24, 8), SLICE(dwArg0C, byte, 0))
l000024D2:
	word32 d4_61 = SEQ(SLICE(d4_29, word24, 8), SLICE(d4_29, byte, 0) + Mem17[0x00003ED0<p32> + (int32) ((int16) SEQ(SLICE(d6_30, word16, 16), SLICE(d6_30, word16, 0) & 0xFF<16>)):byte])
	word32 d5_63 = 32<i32> - d4_61
	branch d5_63 != 0<32> l000024F2
l000024F2:
	word32 d1_86
	word32 d2_322
	word32 d0_85 = fn00002558(dwArg04 >>u d4_61, dwArg04 << d5_63 | dwArg08 >>u d4_61, dwArg0C << d5_63 | dwArg10 >>u d4_61, out d1_86, out d2_322)
	word32 d3_72 = dwArg10 << d5_63
	word32 d5_101 = __swap(d0_85)
	word32 d6_103 = __swap(d3_72)
	word32 d3_102 = d3_72 *u SLICE(d5_101, word16, 0)
	word32 d2_107 = __swap(d0_85 *u SLICE(d3_72, word16, 0))
	word16 v34_108 = SLICE(d2_107 + d3_102, word16, 0)
	word16 v35_109 = SLICE(d2_107, word16, 16)
	word32 d4_104 = d0_85 *u SLICE(d6_103, word16, 0)
	word16 v39_116 = SLICE(SEQ(v35_109, v34_108) + d4_104, word16, 0)
	word32 d6_82 = dwArg08 << d5_63
	word32 d2_124 = __swap(SEQ(v35_109, v39_116))
	word32 d5_105 = d5_101 *u SLICE(d6_103, word16, 0)
	a0_20 = d6_82
	d1_142 = d0_85
	word32 v48_134 = d1_86 - ((__swap(SEQ(SLICE(d3_102, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_104, word16, 16), 0<16>))) + SEQ(SLICE(d5_105, word16, 16), (SLICE(d5_105, word16, 0) + (v34_108 <u 0<16>)) + (v39_116 <u 0<16>)))
	branch v48_134 <u 0<32> l0000254E
l00002548:
	branch v48_134 != 0<32> l00002550
l0000254A:
	branch d6_82 - d2_124 >=u 0<32> l00002550
l0000254E:
	d1_142 = d0_85 - 1<32>
l000024E6:
	branch dwArg0C - dwArg04 <u 0<32> l000024EE
l000024EA:
	branch dwArg10 - dwArg08 >u 0<32> l000024AE
l000024EE:
l000024AE:
l0000246C:
	branch dwArg04 - dwArg10 >=u 0<32> l0000247E
l0000247E:
	branch dwArg10 != 0<32> l0000248A
l00002482:
	d3_166 = (int32) (int16) SEQ((uint16) (1<i32> % SLICE(dwArg10, uint16, 0)), (uint16) (1<i32> /u SLICE(dwArg10, uint16, 0)))
l0000248A:
	word32 d1_175
	word32 d2_176
	word32 d0_174 = fn00002558(0<i32>, dwArg04, d3_166, out d1_175, out d2_176)
	word32 d2_321
	word32 d1_320
	d1_142 = fn00002558(d1_175, dwArg08, d2_176, out d1_320, out d2_321)
	d0_196 = d0_174
l00002470:
	word32 d2_319
	word32 d1_318
	d1_142 = fn00002558(dwArg04, dwArg08, dwArg10, out d1_318, out d2_319)
l00002550:
	d0_196 = 0<i32>
l00002552:
	d1Out = d1_142
	a0Out = a0_20
	return d0_196
fn00002454_exit:


word32 fn00002558(word32 d0, word32 d1, word32 d2, ptr32 & d1Out, ptr32 & d2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0 d1 d2
// Trashed: CVZNX d0 d1 d2
// Preserved: a0 a1 a7 d3 d4 d5 d6 d7
fn00002558_entry:
l00002558:
	word32 d7_13 = d2
	branch d2 == 0<32> l00002572
l00002560:
	word32 d6_17 = d1
	word32 d5_19 = d0
	branch d0 != 0<32> l00002580
l00002580:
	word32 d2_22 = __swap(d2)
	branch SLICE(d2_22, word16, 0) != 0<16> l000025A8
l000025A8:
	byte bLoc26_362 = 0<8>
	word32 d0_44 = 0<i32>
	branch d2 < 0<32> l000025C4
l000025BA:
	d6_17 = d6_17 * 2<32>
	d0_44 = SEQ(SLICE(d0_44, word16, 16), SLICE(d0_44, word16, 0) + 1<16>)
	d5_19 = d5_19 * 2<32> + (d6_17 <u 0<32>)
	d7_13 = d7_13 * 2<32>
	branch d7_13 > 0<32> l000025BA
l000025C4:
	word16 v41_64 = SLICE(d0_44, word16, 0)
l000025C6:
	word32 d1_104
	word32 d2_73 = __swap(d5_19)
	word32 d3_74 = __swap(d7_13)
	branch SLICE(d2_73 - d3_74, word16, 0) != 0<16> l000025D8
l000025D8:
	d1_104 = __swap(SEQ(SLICE(__swap(SEQ((uint16) (d5_19 % SLICE(d3_74, uint16, 0)), (uint16) (d5_19 /u SLICE(d3_74, uint16, 0)))), word16, 16), 0<16>))
l000025D2:
	d1_104 = 0xFFFF<32>
l000025E2:
	word32 d6_98 = __swap(SEQ(SLICE(d6_17, word16, 16), 0<16>))
l000025E8:
	word32 d4_113 = __swap(d5_19 - __swap(d7_13) *u SLICE(d1_104, word16, 0))
	word16 wLoc22_442 = SLICE(dwLoc24, word16, 0)
	word32 d2_106 = d1_104 *u SLICE(d7_13, word16, 0)
	word32 d4_121 = SEQ(SLICE(d4_113, word16, 16), SLICE(d6_98, word16, 0))
	branch SLICE(d4_113, word16, 0) != 0<16> l00002608
l00002600:
	branch d2_106 - d4_121 <=u 0<32> l00002608
l00002608:
	word32 d6_133 = __swap(d1_104)
	word32 d3_140 = __swap(d6_133)
	word32 d4_142 = __swap(d7_13)
	word32 d5_141 = d7_13 *u SLICE(d3_140, word16, 0)
	word32 d6_146 = __swap(d6_133 *u SLICE(d7_13, word16, 0))
	word16 v55_147 = SLICE(d6_146 + d5_141, word16, 0)
	word16 v56_148 = SLICE(d6_146, word16, 16)
	word32 d2_143 = d6_133 *u SLICE(d4_142, word16, 0)
	word16 v59_155 = SLICE(SEQ(v56_148, v55_147) + d2_143, word16, 0)
	word32 d3_144 = d3_140 *u SLICE(d4_142, word16, 0)
	word32 d6_178 = d6_17 - __swap(SEQ(v56_148, v59_155))
	word32 d5_181 = d5_19 - ((__swap(SEQ(SLICE(d5_141, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d2_143, word16, 16), 0<16>))) + SEQ(SLICE(d3_144, word16, 16), (SLICE(d3_144, word16, 0) + (v55_147 <u 0<16>)) + (v59_155 <u 0<16>))) - (d6_178 <u 0<32>)
	branch d5_181 >=u 0<32> l00002660
l0000264A:
	d6_178 = d6_178 + SEQ(SLICE(__swap(d7_13), word16, 16), 0<16>)
	d1_104 = d1_104 - 1<32>
	d5_181 = d5_181 + (d6_178 <u 0<32>) + __swap(SEQ(SLICE(d7_13, word16, 16), 0<16>))
l00002660:
	branch bLoc26_362 != 0<8> l0000267C
l0000267C:
	word32 d6_220 = __swap(SEQ(SLICE(d6_178, word16, 16), SLICE(d5_181, word16, 0)))
	d0 = SEQ(SLICE(dwLoc24, word16, 16), SLICE(d1_104, word16, 0))
	word32 d5_221 = __swap(d5_181)
	word16 v82_224 = SLICE(d7_13, word16, 16)
	branch v41_64 == 0<16> l00002696
l0000268C:
	word32 d7_230 = SEQ(v82_224, v41_64 - 1<16>)
l0000268E:
	d5_221 = d5_221 >>u 1<32>
	word16 v86_241 = SLICE(d7_230, word16, 0)
	d6_220 = __rcr(d6_220, 1<32>, SLICE(cond(d5_221), bool, 4))
	d7_230 = SEQ(SLICE(d7_230, word16, 16), v86_241 - 1<i16>)
	branch v86_241 != 0<16> l0000268E
l00002696:
	d1 = d6_220
	d2 = d2_22
l00002666:
	word32 d5_266 = __swap(d5_181)
	word32 d6_267 = __swap(d6_178)
	d5_19 = SEQ(SLICE(d5_266, word16, 16), SLICE(d6_267, word16, 0))
	d6_17 = SEQ(SLICE(d6_267, word16, 16), 0<16>)
	bLoc26_362 = true
	dwLoc24 = SEQ(SLICE(d1_104, word16, 0), wLoc22_442) (alias)
l00002604:
	d1_104 = d1_104 - 1<32>
l00002586:
	word32 d0_281 = __swap(d0)
	word32 d1_282 = __swap(d1)
	word32 d0_285 = SEQ(SLICE(d0_281, word16, 16), SLICE(d1_282, word16, 0))
	word32 d0_295 = SEQ((uint16) (d0_285 % SLICE(d2, uint16, 0)), SLICE(__swap(d1_282), word16, 0))
	d2 = SEQ(SLICE(__swap((uint32) (uint16) (d0_285 /u SLICE(d2, uint16, 0))), word16, 16), (uint16) (d0_295 /u SLICE(d2, uint16, 0)))
	d1 = __swap(SEQ((uint16) (d0_295 % SLICE(d2, uint16, 0)), 0<16>))
	d0 = d2
l00002566:
	branch d1 == 0<32> l0000269E
l0000256C:
	branch d2 - d1 >u 0<32> l0000269E
l00002572:
	d0 = fn00002716(d1, d2, d2, out d1)
l0000269E:
	d1Out = d1
	d2Out = d2
	return d0
fn00002558_exit:


word32 fn000026E4(word32 d2, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZNX d0 d1
// Preserved: a7
fn000026E4_entry:
l000026E4:
	branch dwArg04 > 0<32> l00002704
l00002704:
	branch dwArg08 > 0<32> l00002706_thunk_fn00002716
l00002706_thunk_fn00002716:
	word32 d1_88
	return fn00002716(dwArg04, dwArg08, d2, out d1_88)
l00002708:
	word32 d1_89
	return -fn00002716(dwArg04, -dwArg08, d2, out d1_89)
l000026EE:
	word32 d0_36 = -dwArg04
	branch dwArg08 > 0<32> l000026FC
l000026FC:
	word32 d1_43
	return -fn00002716(d0_36, dwArg08, d2, out d1_43)
l000026F4:
	word32 d1_55
	return fn00002716(d0_36, -dwArg08, d2, out d1_55)
fn000026E4_exit:


word32 fn00002716(word32 d0, word32 d1, word32 d2, ptr32 & d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3
fn00002716_entry:
l00002716:
	word32 d1_22 = __swap(d1)
	word16 v10_9 = SLICE(d1_22, word16, 0)
	word16 v11_10 = SLICE(d2, word16, 16)
	word32 d2_11 = SEQ(v11_10, v10_9)
	branch v10_9 != 0<16> l0000273C
l0000273C:
	word32 d3_18 = 16<i32>
	branch SLICE(d1_22, word16, 0) >=u 0x80<16> l0000274A
l00002746:
	d1_22 = __rol(d1_22, 8<32>)
	d3_18 = 8<32>
l0000274A:
	branch SLICE(d1_22, word16, 0) >=u 0x800<16> l00002754
l00002750:
	d1_22 = __rol(d1_22, 4<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 4<16>)
l00002754:
	branch SLICE(d1_22, word16, 0) >=u 0x2000<16> l0000275E
l0000275A:
	d1_22 = __rol(d1_22, 2<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 2<16>)
l0000275E:
	branch SLICE(d1_22, word16, 0) < 0<16> l00002766
l00002762:
	d1_22 = __rol(d1_22, 1<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 1<16>)
l00002766:
	word32 d0_71 = d0 >>u d3_18
	word32 d2_75 = SEQ(SLICE(__swap(SEQ(v11_10, SLICE(d0, word16, 0))), word16, 16), 0<16>) >>u d3_18
	word16 v53_82 = SLICE(__swap(d3_18), word16, 16)
	uint16 v51_79 = (uint16) (d0_71 /u SLICE(d1_22, uint16, 0))
	word32 d1_90 = __swap(d1_22)
	word32 d3_102 = SEQ(v53_82, v51_79)
	word32 d0_108 = SEQ((uint16) (d0_71 % SLICE(d1_22, uint16, 0)), SLICE(d2_75, word16, 0)) - SEQ(SLICE(d2_75, word16, 16), v51_79) *u SLICE(d1_90, word16, 0)
	branch d0_108 >=u 0<32> l00002788
l00002782:
	d3_102 = SEQ(v53_82, v51_79 - 1<16>)
	d0_108 = d0_108 + d1_90
l00002786:
	branch d0_108 >=u 0<32> l00002786
l00002788:
	d1Out = __swap(__rol(d0_108, __swap(d3_102)))
	return (uint32) (uint16) SLICE(d3_102, word16, 0)
l0000271E:
	word32 d0_134 = __swap(d0)
	word32 d1_135 = __swap(d1_22)
	word16 v14_137 = SLICE(d0_134, word16, 0)
	word32 d2_139 = SEQ(SLICE(__swap(d2_11), word16, 16), v14_137)
	branch v14_137 == 0<16> l0000272C
l00002728:
	uint16 v17_143 = (uint16) (d2_139 /u SLICE(d1_135, uint16, 0))
	d2_139 = SEQ((uint16) (d2_139 % SLICE(d1_135, uint16, 0)), v17_143)
	d0_134 = SEQ(SLICE(d0_134, word16, 16), v17_143)
l0000272C:
	word32 d0_150 = __swap(d0_134)
	word32 d2_154 = SEQ(SLICE(d2_139, word16, 16), SLICE(d0_150, word16, 0))
	uint16 v34_157 = (uint16) (d2_154 /u SLICE(d1_135, uint16, 0))
	d1Out = SEQ(SLICE(d1_135, word16, 16), SLICE(__swap(SEQ((uint16) (d2_154 % SLICE(d1_135, uint16, 0)), v34_157)), word16, 0))
	return SEQ(SLICE(d0_150, word16, 16), v34_157)
fn00002716_exit:


word32 fn0000279C(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6 d7
fn0000279C_entry:
l0000279C:
	word32 d1_171 = dwArg08
	word32 d3_202 = dwArg10
	branch dwArg0C != 0<32> l000027EE
l000027EE:
	branch dwArg04 - dwArg0C <u 0<32> l000028A8
l000027F4:
	word32 d4_32 = 24<i32>
	word32 d6_33 = __rol(dwArg0C, 8<32>)
	branch SLICE(d6_33, byte, 0) != 0<8> l00002812
l000027FE:
	d4_32 = 16<i32>
	d6_33 = __rol(d6_33, 8<32>)
	branch SLICE(d6_33, byte, 0) != 0<8> l00002812
l00002806:
	d4_32 = 8<i32>
	d6_33 = __rol(d6_33, 8<32>)
	branch SLICE(d6_33, byte, 0) != 0<8> l00002812
l0000280E:
	d4_32 = 0<i32>
	d6_33 = SEQ(SLICE(d6_33, word24, 8), SLICE(dwArg0C, byte, 0))
l00002812:
	word32 d4_64 = SEQ(SLICE(d4_32, word24, 8), SLICE(d4_32, byte, 0) + Mem20[0x00003ED0<p32> + (int32) ((int16) SEQ(SLICE(d6_33, word16, 16), SLICE(d6_33, word16, 0) & 0xFF<16>)):byte])
	word32 d5_66 = 32<i32> - d4_64
	branch d5_66 != 0<32> l00002834
l00002834:
	word32 d1_89
	word32 d2_90
	word32 d0_88 = fn00002558(dwArg04 >>u d4_64, dwArg04 << d5_66 | dwArg08 >>u d4_64, dwArg0C << d5_66 | dwArg10 >>u d4_64, out d1_89, out d2_90)
	word32 d3_75 = dwArg10 << d5_66
	word32 d7_104 = __swap(d0_88)
	word32 d6_106 = __swap(d3_75)
	word32 d3_105 = d3_75 *u SLICE(d7_104, word16, 0)
	word32 d2_110 = __swap(d0_88 *u SLICE(d3_75, word16, 0))
	word16 v36_111 = SLICE(d2_110 + d3_105, word16, 0)
	word16 v37_112 = SLICE(d2_110, word16, 16)
	word32 d4_107 = d0_88 *u SLICE(d6_106, word16, 0)
	word16 v40_119 = SLICE(SEQ(v37_112, v36_111) + d4_107, word16, 0)
	word32 d2_127 = __swap(SEQ(v37_112, v40_119))
	word32 d7_108 = d7_104 *u SLICE(d6_106, word16, 0)
	word32 d6_85 = dwArg08 << d5_66
	word32 d3_135 = __swap(SEQ(SLICE(d3_105, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_107, word16, 16), 0<16>)) + SEQ(SLICE(d7_108, word16, 16), (SLICE(d7_108, word16, 0) + (v36_111 <u 0<16>)) + (v40_119 <u 0<16>))
	word32 v49_137 = d1_89 - d2_127
	branch v49_137 <u 0<32> l00002890
l0000288A:
	branch v49_137 != 0<32> l00002894
l0000288C:
	branch d6_85 - d3_135 >=u 0<32> l00002894
l00002890:
	d3_135 = d3_135 - d3_75
	d2_127 = d2_127 - d2_90 - (d3_135 <u 0<32>)
l00002894:
	word32 d6_157 = d6_85 - d3_135
	d1_171 = d1_89 - d2_127 - (d6_157 <u 0<32>) << 32<i32> - d5_66 | d6_157 >>u d5_66
l00002826:
	branch dwArg0C - dwArg04 <u 0<32> l0000282E
l0000282A:
	branch dwArg10 - dwArg08 >u 0<32> l000028A8
l0000282E:
	d1_171 = dwArg08 - dwArg10
l000027B4:
	branch dwArg04 - dwArg10 >=u 0<32> l000027C6
l000027C6:
	branch dwArg10 != 0<32> l000027D2
l000027CA:
	d3_202 = (int32) (int16) SEQ((uint16) (1<i32> % SLICE(dwArg10, uint16, 0)), (uint16) (1<i32> /u SLICE(dwArg10, uint16, 0)))
l000027D2:
	word32 d1_211
	word32 d2_212
	fn00002558(0<i32>, dwArg04, d3_202, out d1_211, out d2_212)
	word32 d2_355
	fn00002558(d1_211, dwArg08, d2_212, out d1_171, out d2_355)
l000027B8:
	word32 d2_354
	fn00002558(dwArg04, dwArg08, dwArg10, out d1_171, out d2_354)
l000028A8:
	return d1_171
fn0000279C_exit:


void fn00002B98(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00002B98_entry:
l00002B98:
	branch dwArg04 == 0<32> l00002BB0
l00002BB0:
	word32 a2_10 = Mem5[0x00003FFC<p32>:word32]
	branch a2_10 == 0<32> l00002BD6
l00002BBA:
	branch (Mem16[a2_10 + 24<i32>:word32] & 2<i32>) == 0<32> l00002BCC
l00002BC2:
	word32 a0_103
	word32 a1_104
	word32 a5_105
	fn00001FA4(a2_10, out a0_103, out a1_104, out a5_105)
l00002BCC:
	a2_10 = Mem41[a2_10 + 12<i32>:word32]
	branch a2_10 != 0<32> l00002BBA
l00002BA4:
	word32 a0_50
	word32 a1_51
	word32 a5_53
	fn00001FA4(dwArg04, out a0_50, out a1_51, out a5_53)
l00002BD6:
	return
fn00002B98_exit:


void fn00002BDC(word32 d0, word32 d1, word32 a1, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] d0:[0..31] d1:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 d0
// Preserved: a7
fn00002BDC_entry:
l00002BDC:
	fn00002C28(d0, d1, a1, Mem10[0x00003FF0<p32>:word32], dwArg04, fp + 8<i32>)
	return
fn00002BDC_exit:


word32 fn00002BF8(byte bArg07, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0007:[0..7] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 d0
// Preserved: a2 a7
fn00002BF8_entry:
l00002BF8:
	word32 d0_10 = dwArg08
	branch dwArg08 == 0<32> l00002C22
l00002C04:
	d0_10 = Mem5[dwArg08 + 4<i32>:word32]
	branch d0_10 - Mem5[dwArg08 + 8<i32>:word32] >=u 0<32> l00002C16
l00002C0E:
	Mem16[Mem5[dwArg08 + 4<i32>:word32]:byte] = bArg07
l00002C16:
	Mem22[dwArg08 + 20<i32>:word32] = Mem20[dwArg08 + 20<i32>:word32] + 1<32>
	Mem25[dwArg08 + 4<i32>:word32] = Mem22[dwArg08 + 4<i32>:word32] - 1<32>
l00002C22:
	return d0_10
fn00002BF8_exit:


void fn00002C28(word32 d0, word32 d1, word32 a1, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] d0:[8..31] d1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZN d0
// Preserved: X a0 a1 a2 a3 a4 a5 a6 a7 d1 d2 d3 d4 d5 d6 d7
fn00002C28_entry:
l00002C28:
	word32 a7_1330 = fp + -120<i32>
	word32 d2_1090 = dwArg0C
	word32 a4_274 = dwArg08
	word32 a2_1014 = dwArg04
	word32 d4_132 = 0<i32>
	word32 d5_1044 = 0<i32>
	branch Mem40[dwArg08:byte] == 0<8> l00003C2A
l00002C4A:
	word32 d3_130
	word32 d3_1850 = 0<i32>
	branch Mem49[a4_274:byte] != 0x25<8> l00003B28
l00003B28:
	word32 d0_63 = (uint32) (uint8) Mem49[0x000028B1<p32> + (SEQ(SLICE(d0, word24, 8), Mem49[a4_274:byte]) & 0xFF<32>):byte]
	d0 = d0_63 & 8<32>
	branch (d0_63 & 8<32>) == 0<32> l00003BB4
l00003BB4:
	word32 d0_111
	word32 a0_70 = a2_1014 + 24<i32>
	Mem72[a0_70:word32] = Mem49[a0_70:word32] | 1<32>
	word32 a0_73 = a2_1014 + 20<i32>
	word32 v126_74 = Mem72[a0_73:word32] - 1<32>
	Mem75[a0_73:word32] = v126_74
	branch v126_74 < 0<32> l00003BE6
l00003BE6:
	word32 a7_79 = a7_1330 - 4<i32>
	Mem81[a7_79:word32] = a2_1014
	word32 a5_5320
	d0_111 = fn00003CCC(Mem81[a7_79:word32], out d1, out a1, out a5_5320)
	Mem94[a7_79 + 48<i32>:word32] = d0_111
l00003BC6:
	a1 = a2_1014 + 4<i32>
	word32 a0_98 = Mem75[a1:word32]
	word32 a7_99 = a7_1330 - 4<i32>
	Mem101[a7_99:word32] = a2_1014
	Mem105[a1:word32] = a0_98 + 1<i32>
	byte v130_109 = Mem105[a0_98:byte]
	a2_1014 = Mem105[a7_99:word32]
	Mem115[a7_99:word32] = d1
	Mem121[a7_99 + 48<i32>:word32] = (uint32) (uint8) v130_109
	d0_111 = SEQ(SLICE(d0_63 & 8<32>, word24, 8), v130_109)
	d1 = Mem121[a7_99:word32]
l00003BF4:
	d0 = (int32) (int16) (int8) SEQ(SLICE(d0_111, word24, 8), Mem127[a4_274:byte])
	d5_1044 = Mem127[a7_1330 + 44<i32>:word32]
	d3_130 = 1<32>
	d4_132 = d4_132 + 1<32>
	branch d0 - Mem127[a7_1330 + 44<i32>:word32] == 0<32> l00003C1E
l00003C08:
	branch d5_1044 == 0xFFFFFFFF<32> l00003C1A
l00003C10:
	word32 a7_148 = a7_1330 - 4<i32>
	Mem151[a7_148:word32] = a2_1014
	Mem154[a7_148 - 4<i32>:word32] = d5_1044
	d0 = fn00002BF8(Mem154[a7_148 - 1<i32>:byte], Mem154[a7_148:word32])
l00003C1A:
	d3_130 = 0<32>
	d4_132 = d4_132 - 1<32>
l00003B44:
	word32 d0_187
	word32 a0_170 = a2_1014 + 24<i32>
	Mem173[a0_170:word32] = Mem171[a0_170:word32] | 1<32>
	word32 a0_174 = a2_1014 + 20<i32>
	word32 v105_175 = Mem173[a0_174:word32] - 1<32>
	Mem176[a0_174:word32] = v105_175
	branch v105_175 < 0<32> l00003B6E
l00003B6E:
	word32 a7_180 = a7_1330 - 4<i32>
	Mem182[a7_180:word32] = a2_1014
	word32 d1_5318
	word32 a5_5319
	d0_187 = fn00003CCC(Mem182[a7_180:word32], out d1_5318, out a1, out a5_5319)
	d1 = d0_187
l00003B56:
	a1 = a2_1014 + 4<i32>
	word32 a0_198 = Mem176[a1:word32]
	word32 a7_199 = a7_1330 - 4<i32>
	Mem201[a7_199:word32] = a2_1014
	Mem205[a1:word32] = a0_198 + 1<i32>
	byte v109_209 = Mem205[a0_198:byte]
	a2_1014 = Mem205[a7_199:word32]
	d0_187 = SEQ(SLICE(d0, word24, 8), v109_209)
	d1 = (uint32) (uint8) v109_209
l00003B7A:
	word32 d0_238 = (uint32) (uint8) Mem235[0x000028B1<p32> + (SEQ(SLICE(d0_187, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte]
	d5_1044 = d1
	d4_132 = d4_132 + 1<32>
	d0 = d0_238 & 8<32>
	branch (d0_238 & 8<32>) != 0<32> l00003B44
l00003B9C:
	branch d1 == 0xFFFFFFFF<32> l00003BAE
l00003BA4:
	word32 a7_248 = a7_1330 - 4<i32>
	Mem251[a7_248:word32] = a2_1014
	Mem254[a7_248 - 4<i32>:word32] = d1
	d0 = fn00002BF8(Mem254[a7_248 - 1<i32>:byte], Mem254[a7_248:word32])
l00003BAE:
	d4_132 = d4_132 - 1<32>
	d3_130 = 1<i32>
l00003C1E:
	a4_274 = a4_274 + 1<i32>
l00002C54:
	Mem277[a7_1330 + 72<i32>:byte] = 0x69<8>
	Mem278[a7_1330 + 73<i32>:byte] = 0<8>
	word32 a3_279 = a4_274 + 1<i32>
	word32 d0_289 = (uint32) (uint8) Mem278[0x000028B1<p32> + (uint32) ((uint8) Mem278[a3_279:byte]):byte]
	word32 d6_1133 = -1<i32>
	d0 = d0_289 & 4<32>
	branch (d0_289 & 4<32>) == 0<32> l00002CD8
l00002C7C:
	word32 d0_305 = (uint32) (uint8) Mem278[0x000028B1<p32> + (uint32) ((uint8) Mem278[a3_279:byte]):byte]
	d6_1133 = 0<i32>
	d0 = d0_305 & 4<32>
	branch (d0_305 & 4<32>) == 0<32> l00002CD8
l00002C96:
	word32 a7_313 = a7_1330 - 4<i32>
	Mem316[a7_313:word32] = d2_1090
	word32 d1_322 = __swap(10<i32>) *u SLICE(d6_1133, word16, 0)
	word32 d0_331 = SLICE(d6_1133, word16, 0) *u 10<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_322, word16, 16), SLICE(d1_322 + __swap(d6_1133) *u 0xA<16>, word16, 0))), word16, 16), 0<16>)
	a3_279 = a3_279 + 1<i32>
	word32 d1_340 = (uint32) (uint8) Mem316[a3_279:byte]
	word32 d0_354 = (uint32) (uint8) Mem316[0x000028B1<p32> + (uint32) ((uint8) Mem316[a3_279:byte]):byte]
	d2_1090 = Mem316[a7_313:word32]
	d1 = d1_340 - 0x30<32>
	d6_1133 = d1_340 - 0x30<32> + d0_331
	d0 = d0_354 & 4<32>
	branch (d0_354 & 4<32>) != 0<32> l00002C96
l00002CD8:
	branch Mem361[a3_279:byte] == 0x68<8> l00002D02
l00002CDE:
	branch Mem361[a3_279:byte] == 0x6C<8> l00002D02
l00002CE4:
	branch Mem361[a3_279:byte] == 0x4C<8> l00002D02
l00002CEA:
	branch Mem361[a3_279:byte] == 0x7A<8> l00002D02
l00002CF0:
	branch Mem361[a3_279:byte] == 0x6A<8> l00002D02
l00002CF6:
	branch Mem361[a3_279:byte] == 0x74<8> l00002D02
l00002CFC:
	branch Mem361[a3_279:byte] != 0x2A<8> l00002D6A
l00002D02:
	d7 = SEQ(SLICE(d7, word24, 8), Mem361[a7_1330 + 73<i32>:byte])
	d1 = SEQ(SLICE(d1, word24, 8), Mem361[a7_1330 + 72<i32>:byte])
l00002D0A:
	branch Mem361[a3_279:byte] != 0x2A<8> l00002D14
l00002D14:
	branch SLICE(d1, byte, 0) != 0x68<8> l00002D24
l00002D1A:
	branch Mem361[a3_279:byte] != 0x68<8> l00002D24
l00002D24:
	branch SLICE(d1, byte, 0) != 0x6C<8> l00002D34
l00002D2A:
	branch Mem361[a3_279:byte] != 0x6C<8> l00002D34
l00002D34:
	d1 = SEQ(SLICE(d1, word24, 8), Mem361[a3_279:byte])
l00002D30:
	d1 = 1<i32>
l00002D20:
	d1 = 2<i32>
l00002D10:
	d7 = 1<i32>
l00002D36:
	a3_279 = a3_279 + 1<i32>
	branch Mem361[a3_279:byte] == 0x68<8> l00002D0A
l00002D3E:
	branch Mem361[a3_279:byte] == 0x6C<8> l00002D0A
l00002D44:
	branch Mem361[a3_279:byte] == 0x4C<8> l00002D0A
l00002D4A:
	branch Mem361[a3_279:byte] == 0x7A<8> l00002D0A
l00002D50:
	branch Mem361[a3_279:byte] == 0x6A<8> l00002D0A
l00002D56:
	branch Mem361[a3_279:byte] == 0x74<8> l00002D0A
l00002D5C:
	branch Mem361[a3_279:byte] == 0x2A<8> l00002D0A
l00002D62:
	Mem463[a7_1330 + 72<i32>:byte] = SLICE(d1, byte, 0)
	Mem469[a7_1330 + 73<i32>:byte] = SLICE(d7, byte, 0)
l00002D6A:
	branch Mem472[a7_1330 + 72<i32>:byte] != 0x6A<8> l00002D78
l00002D72:
	Mem477[a7_1330 + 72<i32>:byte] = 1<8>
l00002D78:
	branch Mem480[a7_1330 + 72<i32>:byte] != 0x74<8> l00002D86
l00002D80:
	Mem485[a7_1330 + 72<i32>:byte] = 0x69<8>
l00002D86:
	branch Mem488[a7_1330 + 72<i32>:byte] != 0x7A<8> l00002D94
l00002D8E:
	Mem493[a7_1330 + 72<i32>:byte] = 0x6C<8>
l00002D94:
	byte v83_500 = Mem499[a3_279:byte]
	word24 v84_506 = SLICE(d7, word24, 8)
	word32 a3_1955 = a3_279 + 1<i32>
	d7 = SEQ(v84_506, v83_500)
	branch v83_500 == 0<8> l00002E0A
l00002D98:
	branch v83_500 == 0x25<8> l00002E0A
l00002D9E:
	branch v83_500 == 0x63<8> l00002E0A
l00002DA4:
	branch v83_500 == 0x6E<8> l00002E0A
l00002DAA:
	branch v83_500 == 0x5B<8> l00002E0A
l00002DB0:
	word32 d0_540
	word32 a0_523 = a2_1014 + 24<i32>
	Mem526[a0_523:word32] = Mem524[a0_523:word32] | 1<32>
	word32 a0_527 = a2_1014 + 20<i32>
	word32 v90_528 = Mem526[a0_527:word32] - 1<32>
	Mem529[a0_527:word32] = v90_528
	branch v90_528 < 0<32> l00002DDA
l00002DDA:
	word32 a7_533 = a7_1330 - 4<i32>
	Mem535[a7_533:word32] = a2_1014
	word32 d1_5316
	word32 a5_5317
	d0_540 = fn00003CCC(Mem535[a7_533:word32], out d1_5316, out a1, out a5_5317)
	d1 = d0_540
l00002DC2:
	a1 = a2_1014 + 4<i32>
	word32 a0_551 = Mem529[a1:word32]
	word32 a7_552 = a7_1330 - 4<i32>
	Mem554[a7_552:word32] = a2_1014
	Mem558[a1:word32] = a0_551 + 1<i32>
	byte v96_562 = Mem558[a0_551:byte]
	a2_1014 = Mem558[a7_552:word32]
	d0_540 = SEQ(SLICE(d0, word24, 8), v96_562)
	d1 = (uint32) (uint8) v96_562
l00002DE6:
	word32 d0_591 = (uint32) (uint8) Mem588[0x000028B1<p32> + (SEQ(SLICE(d0_540, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte]
	d5_1044 = d1
	d4_132 = d4_132 + 1<32>
	d0 = d0_591 & 8<32>
	branch (d0_591 & 8<32>) != 0<32> l00002DB0
l00002E08:
	d3_1850 = 1<i32>
l00002E0A:
	word24 v147_608 = SLICE(d1, word24, 8)
	word32 d1_612 = SEQ(v147_608, v83_500 - 0x25<8>)
	branch v83_500 == 0x25<8> l00003256
l00003256:
	word32 a0_628 = a2_1014 + 24<i32>
	Mem631[a0_628:word32] = Mem629[a0_628:word32] | 1<32>
	word32 a0_632 = a2_1014 + 20<i32>
	word32 v159_633 = Mem631[a0_632:word32] - 1<32>
	Mem634[a0_632:word32] = v159_633
	branch v159_633 < 0<32> l00003288
l00003288:
	word32 a7_640 = a7_1330 - 4<i32>
	Mem642[a7_640:word32] = a2_1014
	word32 a5_5321
	d0 = fn00003CCC(Mem642[a7_640:word32], out d1, out a1, out a5_5321)
	Mem655[a7_640 + 48<i32>:word32] = d0
l00003268:
	a1 = a2_1014 + 4<i32>
	word32 a0_659 = Mem634[a1:word32]
	word32 a7_660 = a7_1330 - 4<i32>
	Mem662[a7_660:word32] = a2_1014
	Mem666[a1:word32] = a0_659 + 1<i32>
	byte v163_670 = Mem666[a0_659:byte]
	a2_1014 = Mem666[a7_660:word32]
	Mem686[a7_660:word32] = d1_612
	Mem692[a7_660 + 48<i32>:word32] = (uint32) (uint8) v163_670
	d0 = SEQ(SLICE(d0, word24, 8), v163_670)
	d1 = Mem692[a7_660:word32]
l00003296:
	d5_1044 = Mem698[a7_1330 + 44<i32>:word32]
	d3_130 = d3_1850 + 1<32>
	d4_132 = d4_132 + 1<32>
	branch Mem698[a7_1330 + 44<i32>:word32] == 0x25<32> l00003B22
l000032AA:
	branch d5_1044 == 0xFFFFFFFF<32> l000032BC
l000032B2:
	word32 a7_735 = a7_1330 - 4<i32>
	Mem738[a7_735:word32] = a2_1014
	Mem741[a7_735 - 4<i32>:word32] = d5_1044
	d0 = fn00002BF8(Mem741[a7_735 - 1<i32>:byte], Mem741[a7_735:word32])
l000032BC:
	d3_130 = d3_130 - 1<32>
	d4_132 = d4_132 - 1<32>
l00002E14:
	branch v83_500 == 0x5B<8> l00002F52
l00002F52:
	Mem761[a7_1330 + 44<i32>:byte] = 0<8>
	branch Mem761[a3_1955:byte] != 0x5E<8> l00002F64
l00002F5C:
	Mem769[a7_1330 + 44<i32>:byte] = 1<8>
	a3_1955 = a3_1955 + 1<i32>
l00002F64:
	Mem773[a7_1330 + 52<i32>:word32] = 0<32>
	byte v544_774 = Mem773[a7_1330 + 44<i32>:byte]
	d7 = SEQ(v84_506, v544_774)
	word32 d1_1027 = Mem773[a7_1330 + 52<i32>:word32]
l00002F70:
	word32 d5_785
	branch v544_774 == 0<8> l00002F7C
l00002F7C:
	d5_785 = 0<i32>
l00002F74:
	d5_785 = 0xFF<32>
l00002F7E:
	Mem796[a7_1330 + 78<i32> + d1_1027:byte] = SLICE(d5_785, byte, 0)
	d1_1027 = d1_1027 + 1<32>
	branch d1_1027 <u 0x20<32> l00002F70
l00002F90:
	Mem820[a7_1330 + 132<i32>:word32] = d2_1090
	Mem823[a7_1330 + 44<i32>:byte] = v544_774
	byte v554_824 = Mem823[a7_1330 + 44<i32>:byte]
l00002F9C:
	branch Mem829[a3_1955:byte] == 0<8> l00003012
l00002FA0:
	byte v556_834 = Mem829[a3_1955:byte]
	a3_1955 = a3_1955 + 1<i32>
	d1_1027 = SEQ(SLICE(d1_1027, word24, 8), v556_834)
	branch Mem829[a3_1955:byte] != 0x2D<8> l00002FB4
l00002FA8:
	branch v556_834 - Mem829[a3_1955 + 1<i32>:byte] >=u 0<8> l00002FB4
l00002FB4:
	d7 = SEQ(SLICE(d7, word24, 8), v556_834)
l00002FAE:
	a3_1955 = a3_1955 + 2<i32>
	d7 = SEQ(SLICE(d7, word24, 8), Mem829[a3_1955 + 1<i32>:byte])
l00002FB6:
	word32 d5_862 = (uint32) (uint8) v556_834
	d0 = (uint32) (uint8) SLICE(d7, byte, 0)
	branch d0 - d5_862 <u 0<32> l0000300C
l00002FC2:
	branch v554_824 == 0<8> l00002FE6
l00002FE6:
	word32 a0_881 = a7_1330 + 78<i32> + (d5_862 >>u 3<32>)
	d1_1027 = (uint32) (uint8) Mem889[a0_881:byte]
	Mem895[a0_881:byte] = SLICE(1<i32> << (d5_862 & 7<i32>) | d1_1027, byte, 0)
l00002FC6:
	word32 a0_900 = a7_1330 + 78<i32> + (d5_862 >>u 3<32>)
	d1_1027 = (uint32) (uint8) Mem889[a0_900:byte]
	Mem914[a0_900:byte] = SLICE(~(1<i32> << (d5_862 & 7<i32>)) & d1_1027, byte, 0)
l00003002:
	d5_862 = d5_862 + 1<32>
	d0 = (uint32) (uint8) SLICE(d7, byte, 0)
	branch d0 - d5_862 >=u 0<32> l00002FC2
l0000300C:
	branch Mem933[a3_1955:byte] != 0x5D<8> l00002F9C
l00003012:
	word32 a6_1164
	d2_1090 = Mem946[a7_1330 + 132<i32>:word32]
	a3_1955 = a3_1955 + 1<i32>
	branch Mem946[a7_1330 + 73<i32>:byte] != 0<8> l00003032
l00003032:
	a6_1164 = 0<32>
l0000301E:
	word32 d0_957 = d2_1090 + 3<32> >>u 2<32>
	d2_1090 = (d0_957 << 2<32>) + 4<32>
	d0 = d0_957 << 2<32>
	a6_1164 = Mem946[d2_1090 + -4<i32>:word32]
l00003034:
	word32 a0_975 = a2_1014 + 24<i32>
	Mem978[a0_975:word32] = Mem946[a0_975:word32] | 1<32>
	word32 a0_979 = a2_1014 + 20<i32>
	word32 v581_980 = Mem978[a0_979:word32] - 1<32>
	Mem981[a0_979:word32] = v581_980
	branch v581_980 < 0<32> l00003066
l00003066:
	word32 a7_985 = a7_1330 - 4<i32>
	Mem987[a7_985:word32] = a2_1014
	word32 a5_5334
	d0 = fn00003CCC(Mem987[a7_985:word32], out d1, out a1, out a5_5334)
	Mem1000[a7_985 + 48<i32>:word32] = d0
l00003046:
	a1 = a2_1014 + 4<i32>
	word32 a0_1004 = Mem981[a1:word32]
	word32 a7_1005 = a7_1330 - 4<i32>
	Mem1007[a7_1005:word32] = a2_1014
	Mem1011[a1:word32] = a0_1004 + 1<i32>
	byte v585_1015 = Mem1011[a0_1004:byte]
	a2_1014 = Mem1011[a7_1005:word32]
	Mem1031[a7_1005:word32] = d1_1027
	Mem1037[a7_1005 + 48<i32>:word32] = (uint32) (uint8) v585_1015
	d0 = SEQ(SLICE(d0, word24, 8), v585_1015)
	d1 = Mem1037[a7_1005:word32]
l00003074:
	d5_1044 = Mem1043[a7_1330 + 44<i32>:word32]
	word32 d3_1057 = d3_1850 + 1<32>
	word32 d4_1070 = d4_132 + 1<32>
	branch Mem1043[a7_1330 + 44<i32>:word32] == 0xFFFFFFFF<32> l00003142
l00003088:
	word32 a7_1076 = a7_1330 - 4<i32>
	Mem1078[a7_1076:word32] = a7_1330 + 78<i32>
	Mem1082[a7_1076 - 4<i32>:word32] = a1
	Mem1084[a7_1076 - 8<32>:word32] = 0x00000008<p32>
	Mem1087[a7_1076 - 0xC<32>:word32] = d5_1044
	d1 = (uint32) (uint8) Mem1087[Mem1087[a7_1076:word32] + fn000026E4(d2_1090, Mem1087[a7_1076 - 0xC<32>:word32], Mem1087[a7_1076 - 8<32>:word32]):byte]
	a1 = Mem1087[a7_1076 - 4<32>:word32]
	d0 = 1<i32> << (d5_1044 & 7<i32>) & d1
	branch d0 == 0<32> l00003142
l000030B8:
	branch d6_1133 - d3_1057 <u 0<32> l00003142
l000030BE:
	byte v601_1149 = Mem1087[a7_1076 + 77<i32>:byte]
	d7 = SEQ(SLICE(d7, word24, 8), v601_1149)
l000030C2:
	branch v601_1149 != 0<8> l000030C8
l000030C6:
	Mem1165[a6_1164:byte] = SLICE(d5_1044, byte, 0)
	a6_1164 = a6_1164 + 1<i32>
l000030C8:
	word32 a0_1170 = a2_1014 + 24<i32>
	Mem1174[a0_1170:word32] = Mem1171[a0_1170:word32] | 1<32>
	word32 a0_1175 = a2_1014 + 20<i32>
	word32 v607_1176 = Mem1174[a0_1175:word32] - 1<32>
	Mem1177[a0_1175:word32] = v607_1176
	branch v607_1176 < 0<32> l000030F2
l000030F2:
	word32 a7_1182 = a7_1330 - 4<i32>
	Mem1184[a7_1182:word32] = a2_1014
	word32 d1_5335
	word32 a5_5336
	d0 = fn00003CCC(Mem1184[a7_1182:word32], out d1_5335, out a1, out a5_5336)
	d1 = d0
l000030DA:
	a1 = a2_1014 + 4<i32>
	word32 a0_1200 = Mem1177[a1:word32]
	word32 a7_1201 = a7_1330 - 4<i32>
	Mem1203[a7_1201:word32] = a2_1014
	Mem1207[a1:word32] = a0_1200 + 1<i32>
	byte v611_1211 = Mem1207[a0_1200:byte]
	a2_1014 = Mem1207[a7_1201:word32]
	d0 = SEQ(SLICE(d0, word24, 8), v611_1211)
	d1 = (uint32) (uint8) v611_1211
l000030FE:
	d5_1044 = d1
	d3_1057 = d3_1057 + 1<32>
	d4_1070 = d4_1070 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l0000313E
l0000310C:
	word32 a7_1237 = a7_1330 - 4<i32>
	Mem1239[a7_1237:word32] = a7_1330 + 78<i32>
	Mem1243[a7_1237 - 4<i32>:word32] = a1
	Mem1245[a7_1237 - 8<32>:word32] = 0x00000008<p32>
	Mem1248[a7_1237 - 0xC<32>:word32] = d1
	d1 = (uint32) (uint8) Mem1248[Mem1248[a7_1237:word32] + fn000026E4(d2_1090, Mem1248[a7_1237 - 0xC<32>:word32], Mem1248[a7_1237 - 8<32>:word32]):byte]
	a1 = Mem1248[a7_1237 - 4<32>:word32]
	d0 = 1<i32> << (d1 & 7<i32>) & d1
	branch d0 == 0<32> l0000313E
l0000313A:
	branch d6_1133 - d3_1057 >=u 0<32> l000030C2
l0000313E:
	Mem1294[a7_1330 + 73<i32>:byte] = v601_1149
l00003142:
	branch d5_1044 == 0xFFFFFFFF<32> l00003154
l0000314A:
	word32 a7_1302 = a7_1330 - 4<i32>
	Mem1308[a7_1302:word32] = a2_1014
	Mem1311[a7_1302 - 4<i32>:word32] = d5_1044
	d0 = fn00002BF8(Mem1311[a7_1302 - 1<i32>:byte], Mem1311[a7_1302:word32])
l00003154:
	d3_130 = d3_1057 - 1<32>
	d4_132 = d4_1070 - 1<32>
	branch Mem1331[a7_1330 + 73<i32>:byte] != 0<8> l00003B22
l00003160:
	branch d3_130 == 0<32> l00003B22
l00003166:
	Mem1348[a6_1164:byte] = 0<8>
	Mem1351[a7_1330 + 60<i32>:word32] = Mem1348[a7_1330 + 60<i32>:word32] + 1<32>
l00002E1C:
	word32 d1_1355 = SEQ(v147_608, v83_500 - 0x63<8>)
	branch v83_500 == 0x63<8> l00002E32
l00002E32:
	branch d6_1133 != 0xFFFFFFFF<32> l00002E3C
l00002E3A:
	d6_1133 = 1<i32>
l00002E3C:
	word32 a1_1369
	branch Mem629[a7_1330 + 73<i32>:byte] != 0<8> l00002E56
l00002E56:
	a1_1369 = 0<32>
l00002E42:
	d0 = d2_1090 + 3<32> >>u 2<32> << 2<32>
	d2_1090 = d0 + 4<32>
	a1_1369 = Mem629[d0:word32]
l00002E58:
	word32 a0_1382 = a2_1014 + 24<i32>
	Mem1385[a0_1382:word32] = Mem629[a0_1382:word32] | 1<32>
	word32 a0_1386 = a2_1014 + 20<i32>
	Mem1388[a0_1386:word32] = Mem1385[a0_1386:word32] - 1<32>
	Mem1393[a7_1330 + 44<i32>:word32] = a1_1369
	branch Mem1393[a0_1386:word32] < 0<32> l00002E90
l00002E90:
	word32 a1_1399 = Mem1393[a7_1330 + 44<i32>:word32]
	word32 a7_1400 = a7_1330 - 4<i32>
	Mem1402[a7_1400:word32] = a2_1014
	Mem1404[a7_1400 + 48<i32>:word32] = a1_1399
	word32 a5_5327
	word32 a1_5326
	d0 = fn00003CCC(Mem1404[a7_1400:word32], out d1, out a1_5326, out a5_5327)
	Mem1417[a7_1400 + 56<i32>:word32] = d0
	Mem1420[a7_1400 + 48<i32>:word32] = Mem1417[a7_1400 + 48<i32>:word32]
l00002E70:
	word32 a1_1423 = a2_1014 + 4<i32>
	word32 a0_1424 = Mem1393[a1_1423:word32]
	word32 a7_1425 = a7_1330 - 4<i32>
	Mem1427[a7_1425:word32] = a2_1014
	Mem1431[a1_1423:word32] = a0_1424 + 1<i32>
	byte v284_1435 = Mem1431[a0_1424:byte]
	a2_1014 = Mem1431[a7_1425:word32]
	Mem1444[a7_1425:word32] = d1_1355
	Mem1450[a7_1425 + 56<i32>:word32] = (uint32) (uint8) v284_1435
	d0 = SEQ(SLICE(d0, word24, 8), v284_1435)
	d1 = Mem1450[a7_1425:word32]
l00002EAE:
	a1 = Mem1456[a7_1330 + 44<i32>:word32]
	d5_1044 = Mem1456[a7_1330 + 52<i32>:word32]
	word32 d3_1462 = d3_1850 + 1<32>
	word32 d4_1466 = d4_132 + 1<32>
	branch Mem1456[a7_1330 + 52<i32>:word32] == 0xFFFFFFFF<32> l00002F26
l00002EC4:
	Mem1472[a7_1330 + 44<i32>:word32] = a1
	branch d6_1133 - d3_1462 <u 0<32> l00002F26
l00002ECC:
	byte v302_1479 = Mem1472[a7_1330 + 73<i32>:byte]
	d7 = SEQ(v84_506, v302_1479)
	word32 a4_1486 = Mem1472[a7_1330 + 44<i32>:word32]
l00002ED4:
	branch v302_1479 != 0<8> l00002EDA
l00002ED8:
	Mem1495[a4_1486:byte] = SLICE(d5_1044, byte, 0)
	a4_1486 = a4_1486 + 1<i32>
l00002EDA:
	word32 a0_1500 = a2_1014 + 24<i32>
	Mem1504[a0_1500:word32] = Mem1501[a0_1500:word32] | 1<32>
	word32 a0_1505 = a2_1014 + 20<i32>
	word32 v310_1506 = Mem1504[a0_1505:word32] - 1<32>
	Mem1507[a0_1505:word32] = v310_1506
	branch v310_1506 < 0<32> l00002F04
l00002F04:
	word32 a7_1512 = a7_1330 - 4<i32>
	Mem1514[a7_1512:word32] = a2_1014
	word32 d1_5328
	word32 a5_5329
	d0 = fn00003CCC(Mem1514[a7_1512:word32], out d1_5328, out a1, out a5_5329)
	d1 = d0
l00002EEC:
	a1 = a2_1014 + 4<i32>
	word32 a0_1530 = Mem1507[a1:word32]
	word32 a7_1531 = a7_1330 - 4<i32>
	Mem1533[a7_1531:word32] = a2_1014
	Mem1537[a1:word32] = a0_1530 + 1<i32>
	byte v314_1541 = Mem1537[a0_1530:byte]
	a2_1014 = Mem1537[a7_1531:word32]
	d0 = SEQ(SLICE(d0, word24, 8), v314_1541)
	d1 = (uint32) (uint8) v314_1541
l00002F10:
	d5_1044 = d1
	d3_1462 = d3_1462 + 1<32>
	d4_1466 = d4_1466 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00002F22
l00002F1E:
	branch d6_1133 - d3_1462 >=u 0<32> l00002ED4
l00002F22:
	Mem1577[a7_1330 + 73<i32>:byte] = v302_1479
l00002F26:
	branch d5_1044 == 0xFFFFFFFF<32> l00002F38
l00002F2E:
	word32 a7_1585 = a7_1330 - 4<i32>
	Mem1591[a7_1585:word32] = a2_1014
	Mem1594[a7_1585 - 4<i32>:word32] = d5_1044
	d0 = fn00002BF8(Mem1594[a7_1585 - 1<i32>:byte], Mem1594[a7_1585:word32])
l00002F38:
	d3_130 = d3_1462 - 1<32>
	d4_132 = d4_1466 - 1<32>
	branch Mem1614[a7_1330 + 73<i32>:byte] != 0<8> l00003B22
l00002F44:
	branch d3_130 == 0<32> l00003B22
l00002F4A:
	Mem1625[a7_1330 + 60<i32>:word32] = Mem1614[a7_1330 + 60<i32>:word32] + 1<32>
l00002E20:
	d1 = SEQ(v147_608, v83_500 - 0x6E<8>)
	branch v83_500 == 0x6E<8> l000032C4
l000032C4:
	branch Mem629[a7_1330 + 73<i32>:byte] != 0<8> l0000335C
l000032CC:
	branch Mem629[a7_1330 + 72<i32>:byte] != 1<8> l000032EE
l000032EE:
	branch Mem629[a7_1330 + 72<i32>:byte] != 0x6C<8> l0000330C
l0000330C:
	branch Mem629[a7_1330 + 72<i32>:byte] != 0x68<8> l0000332A
l0000332A:
	branch Mem629[a7_1330 + 72<i32>:byte] != 2<8> l00003348
l00003348:
	d0 = d2_1090 + 3<32> >>u 2<32> << 2<32>
	Mem1658[Mem629[d0:word32]:word32] = d4_132
	d2_1090 = d0 + 4<32>
l00003332:
	d0 = d2_1090 + 3<32> >>u 2<32> << 2<32>
	Mem1670[Mem629[d0:word32]:byte] = SLICE(d4_132, byte, 0)
	d2_1090 = d0 + 4<32>
l00003314:
	d0 = d2_1090 + 3<32> >>u 2<32> << 2<32>
	Mem1682[Mem629[d0:word32]:word16] = SLICE(d4_132, word16, 0)
	d2_1090 = d0 + 4<32>
l000032F6:
	d0 = d2_1090 + 3<32> >>u 2<32> << 2<32>
	Mem1694[Mem629[d0:word32]:word32] = d4_132
	d2_1090 = d0 + 4<32>
l000032D4:
	d0 = d2_1090 + 3<32> >>u 2<32> << 2<32>
	word32 a0_1704 = Mem629[d0:word32]
	Mem1706[a0_1704 + 4<i32>:word32] = d4_132
	Mem1707[a0_1704:word32] = 0<32>
	d2_1090 = d0 + 4<32>
l0000335C:
	Mem1716[a7_1330 + 60<i32>:word32] = Mem1714[a7_1330 + 60<i32>:word32] + 1<32>
	d3_130 = 1<i32>
l00002E28:
	d1 = SEQ(v147_608, v83_500 - 0x73<8>)
	branch v83_500 == 0x73<8> l00003170
l00003170:
	word32 a5_1727
	branch Mem629[a7_1330 + 73<i32>:byte] != 0<8> l0000318A
l0000318A:
	a5_1727 = 0<32>
l00003176:
	d0 = d2_1090 + 3<32> >>u 2<32> << 2<32>
	d2_1090 = d0 + 4<32>
	a5_1727 = Mem629[d0:word32]
l0000318C:
	branch d5_1044 == 0xFFFFFFFF<32> l00003228
l00003196:
	word32 d0_1765 = (uint32) (uint8) Mem629[0x000028B1<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1044, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_1765 & 8<32>
	branch (d0_1765 & 8<32>) != 0<32> l00003228
l000031B2:
	branch d6_1133 - d3_1850 <u 0<32> l00003228
l000031B6:
	byte v190_1777 = Mem629[a7_1330 + 73<i32>:byte]
	d7 = SEQ(v84_506, v190_1777)
l000031BA:
	branch v190_1777 != 0<8> l000031C0
l000031BE:
	Mem1790[a5_1727:byte] = SLICE(d5_1044, byte, 0)
	a5_1727 = a5_1727 + 1<i32>
l000031C0:
	word32 a0_1795 = a2_1014 + 24<i32>
	Mem1799[a0_1795:word32] = Mem1796[a0_1795:word32] | 1<32>
	word32 a0_1800 = a2_1014 + 20<i32>
	word32 v197_1801 = Mem1799[a0_1800:word32] - 1<32>
	Mem1802[a0_1800:word32] = v197_1801
	branch v197_1801 < 0<32> l000031EA
l000031EA:
	word32 a7_1807 = a7_1330 - 4<i32>
	Mem1809[a7_1807:word32] = a2_1014
	word32 d1_5322
	d0 = fn00003CCC(Mem1809[a7_1807:word32], out d1_5322, out a1, out a5_1727)
	d1 = d0
l000031D2:
	a1 = a2_1014 + 4<i32>
	word32 a0_1825 = Mem1802[a1:word32]
	word32 a7_1826 = a7_1330 - 4<i32>
	Mem1828[a7_1826:word32] = a2_1014
	Mem1832[a1:word32] = a0_1825 + 1<i32>
	byte v201_1836 = Mem1832[a0_1825:byte]
	a2_1014 = Mem1832[a7_1826:word32]
	d0 = SEQ(SLICE(d0, word24, 8), v201_1836)
	d1 = (uint32) (uint8) v201_1836
l000031F6:
	d5_1044 = d1
	d3_1850 = d3_1850 + 1<32>
	d4_132 = d4_132 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00003224
l00003204:
	word32 d0_1871 = (uint32) (uint8) Mem1868[0x000028B1<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_1871 & 8<32>
	branch (d0_1871 & 8<32>) != 0<32> l00003224
l00003220:
	branch d6_1133 - d3_1850 >=u 0<32> l000031BA
l00003224:
	Mem1889[a7_1330 + 73<i32>:byte] = v190_1777
l00003228:
	branch d5_1044 == 0xFFFFFFFF<32> l0000323A
l00003230:
	word32 a7_1897 = a7_1330 - 4<i32>
	Mem1903[a7_1897:word32] = a2_1014
	Mem1906[a7_1897 - 4<i32>:word32] = d5_1044
	d0 = fn00002BF8(Mem1906[a7_1897 - 1<i32>:byte], Mem1906[a7_1897:word32])
l0000323A:
	d3_130 = d3_1850 - 1<32>
	d4_132 = d4_132 - 1<32>
	branch Mem1927[a7_1330 + 73<i32>:byte] != 0<8> l00003B22
l00003246:
	branch d3_130 == 0<32> l00003B22
l0000324C:
	Mem1943[a5_1727:byte] = 0<8>
	Mem1946[a7_1330 + 60<i32>:word32] = Mem1943[a7_1330 + 60<i32>:word32] + 1<32>
l00002E2E:
l00003366:
	Mem1948[a7_1330 + 48<i32>:word32] = 0<32>
	Mem1949[a7_1330 + 44<i32>:word32] = 0<32>
	Mem1950[a7_1330 + 110<i32>:word32] = 0<32>
	branch v83_500 != 0<8> l00003378
l00003376:
	a3_1955 = a3_1955 - 1<i32>
l00003378:
	branch v83_500 != 0x70<8> l00003386
l0000337E:
	Mem1962[a7_1330 + 72<i32>:byte] = 0x6C<8>
	d7 = 120<i32>
l00003386:
	branch d5_1044 != 0x2D<32> l00003394
l0000338E:
	branch SLICE(d7, byte, 0) != 0x75<8> l0000339C
l00003394:
	branch d5_1044 != 0x2B<32> l000033EC
l0000339C:
	branch d6_1133 - d3_1850 <u 0<32> l000033EC
l000033A0:
	Mem1994[a7_1330 + 110<i32>:word32] = d5_1044
	word32 a0_1999 = a2_1014 + 24<i32>
	Mem2001[a0_1999:word32] = Mem1994[a0_1999:word32] | 1<32>
	word32 a0_2002 = a2_1014 + 20<i32>
	word32 v227_2003 = Mem2001[a0_2002:word32] - 1<32>
	Mem2004[a0_2002:word32] = v227_2003
	branch v227_2003 < 0<32> l000033D6
l000033D6:
	word32 a7_2007 = a7_1330 - 4<i32>
	Mem2009[a7_2007:word32] = a2_1014
	word32 a5_5323
	d0 = fn00003CCC(Mem2009[a7_2007:word32], out d1, out a1, out a5_5323)
	Mem2022[a7_2007 + 56<i32>:word32] = d0
l000033B6:
	a1 = a2_1014 + 4<i32>
	word32 a0_2026 = Mem2004[a1:word32]
	word32 a7_2027 = a7_1330 - 4<i32>
	Mem2029[a7_2027:word32] = a2_1014
	Mem2033[a1:word32] = a0_2026 + 1<i32>
	byte v231_2037 = Mem2033[a0_2026:byte]
	a2_1014 = Mem2033[a7_2027:word32]
	Mem2050[a7_2027:word32] = d1
	Mem2056[a7_2027 + 56<i32>:word32] = (uint32) (uint8) v231_2037
	d0 = SEQ(SLICE(d0, word24, 8), v231_2037)
	d1 = Mem2056[a7_2027:word32]
l000033E4:
	d5_1044 = Mem2062[a7_1330 + 52<i32>:word32]
	d3_1850 = d3_1850 + 1<32>
	d4_132 = d4_132 + 1<32>
l000033EC:
	branch SLICE(d7, byte, 0) != 0x69<8> l0000355E
l000033F4:
	branch d5_1044 != 0x30<32> l00003520
l000033FE:
	branch d6_1133 - d3_1850 <u 0<32> l00003520
l00003520:
	word32 d0_2109 = (uint32) (uint8) Mem2102[0x000028B1<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1044, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_2109 & 4<32>
	branch (d0_2109 & 4<32>) != 0<32> l0000355E
l0000353C:
	word32 d0_2124 = (uint32) (uint8) Mem2102[0x000028B1<p32> + (SEQ(SLICE(d0_2109 & 4<32>, word24, 8), SLICE(d5_1044, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_2124 & 0x44<32>
	branch (d0_2124 & 0x44<32>) == 0<32> l0000355E
l00003558:
	branch d6_1133 - d3_1850 <u 0<32> l0000355E
l0000355C:
	d7 = 120<i32>
l00003404:
	word32 d0_2155
	word32 a0_2139 = a2_1014 + 24<i32>
	Mem2141[a0_2139:word32] = Mem2102[a0_2139:word32] | 1<32>
	word32 a0_2142 = a2_1014 + 20<i32>
	word32 v245_2143 = Mem2141[a0_2142:word32] - 1<32>
	Mem2144[a0_2142:word32] = v245_2143
	branch v245_2143 < 0<32> l00003436
l00003436:
	word32 a7_2148 = a7_1330 - 4<i32>
	Mem2150[a7_2148:word32] = a2_1014
	word32 a5_5324
	d0_2155 = fn00003CCC(Mem2150[a7_2148:word32], out d1, out a1, out a5_5324)
	Mem2163[a7_2148 + 56<i32>:word32] = d0_2155
l00003416:
	a1 = a2_1014 + 4<i32>
	word32 a0_2167 = Mem2144[a1:word32]
	word32 a7_2168 = a7_1330 - 4<i32>
	Mem2170[a7_2168:word32] = a2_1014
	Mem2174[a1:word32] = a0_2167 + 1<i32>
	byte v249_2178 = Mem2174[a0_2167:byte]
	a2_1014 = Mem2174[a7_2168:word32]
	Mem2185[a7_2168:word32] = d1
	Mem2191[a7_2168 + 56<i32>:word32] = (uint32) (uint8) v249_2178
	d0_2155 = SEQ(SLICE(d0, word24, 8), v249_2178)
	d1 = Mem2191[a7_2168:word32]
l00003444:
	Mem2199[a7_1330 + 64<i32>:word32] = Mem2197[a7_1330 + 52<i32>:word32]
	word32 d0_2209 = SEQ(SLICE(d0_2155, word24, 8), Mem2199[a7_1330 + 55<i32>:byte])
	word32 d3_2201 = d3_1850 + 1<32>
	d0 = d0_2209 & 0xFF<32>
	branch __btst(Mem2199[0x000028B1<p32> + (int32) ((int16) (d0_2209 & 0xFF<32>)):byte], 0<16>) l0000346A
l00003466:
	d0 = SEQ(SLICE(d0_2209 & 0xFF<32>, word24, 8), SLICE(d0_2209 & 0xFF<32>, byte, 0) | 0x20<8>)
l0000346A:
	branch d0 != 0x78<32> l00003502
l00003474:
	branch d6_1133 - d3_2201 <u 0<32> l00003502
l00003502:
	d7 = 111<i32>
l0000347A:
	word32 d0_2253
	word32 a0_2236 = a2_1014 + 24<i32>
	Mem2239[a0_2236:word32] = Mem2199[a0_2236:word32] | 1<32>
	word32 a0_2240 = a2_1014 + 20<i32>
	word32 v267_2241 = Mem2239[a0_2240:word32] - 1<32>
	Mem2242[a0_2240:word32] = v267_2241
	branch v267_2241 < 0<32> l000034AC
l000034AC:
	word32 a7_2246 = a7_1330 - 4<i32>
	Mem2248[a7_2246:word32] = a2_1014
	word32 a5_5325
	d0_2253 = fn00003CCC(Mem2248[a7_2246:word32], out d1, out a1, out a5_5325)
	Mem2261[a7_2246 + 56<i32>:word32] = d0_2253
l0000348C:
	a1 = a2_1014 + 4<i32>
	word32 a0_2265 = Mem2242[a1:word32]
	word32 a7_2266 = a7_1330 - 4<i32>
	Mem2268[a7_2266:word32] = a2_1014
	Mem2272[a1:word32] = a0_2265 + 1<i32>
	byte v271_2276 = Mem2272[a0_2265:byte]
	a2_1014 = Mem2272[a7_2266:word32]
	Mem2283[a7_2266:word32] = d1
	Mem2289[a7_2266 + 56<i32>:word32] = (uint32) (uint8) v271_2276
	d0_2253 = SEQ(SLICE(d0, word24, 8), v271_2276)
	d1 = Mem2289[a7_2266:word32]
l000034BA:
	Mem2297[a7_1330 + 74<i32>:word32] = Mem2295[a7_1330 + 52<i32>:word32]
	word32 d0_2317 = (uint32) (uint8) Mem2297[0x000028B1<p32> + (SEQ(SLICE(d0_2253, word24, 8), SLICE(d5_1044, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_2317 & 0x44<32>
	branch (d0_2317 & 0x44<32>) == 0<32> l000034E6
l000034E0:
	branch d6_1133 - (d3_2201 + 1<32>) <u 0<32> l000034E6
l000034E4:
	d7 = 120<i32>
l000034E6:
	branch Mem2297[a7_1330 + 74<i32>:word32] == 0xFFFFFFFF<32> l000034FC
l000034F0:
	word32 a7_2334 = a7_1330 - 4<i32>
	Mem2338[a7_2334:word32] = a2_1014
	Mem2342[a7_2334 - 4<i32>:word32] = Mem2338[a7_2334 + 78<i32>:word32]
	d0 = fn00002BF8(Mem2342[a7_2334 - 1<i32>:byte], Mem2342[a7_2334:word32])
l000034FC:
l00003504:
	branch Mem2362[a7_1330 + 64<i32>:word32] == 0xFFFFFFFF<32> l0000351A
l0000350E:
	word32 a7_2368 = a7_1330 - 4<i32>
	Mem2373[a7_2368:word32] = a2_1014
	Mem2377[a7_2368 - 4<i32>:word32] = Mem2373[a7_2368 + 68<i32>:word32]
	d0 = fn00002BF8(Mem2377[a7_2368 - 1<i32>:byte], Mem2377[a7_2368:word32])
l0000351A:
l0000355E:
	word32 d4_2510 = d4_132
	word32 d3_2423 = d3_1850
	branch SLICE(d7, byte, 0) != 0x78<8> l00003692
l00003566:
	branch d5_1044 != 0x30<32> l00003692
l00003570:
	branch d6_1133 - d3_1850 <u 0<32> l00003692
l00003576:
	word32 d0_2450
	word32 a0_2430 = a2_1014 + 24<i32>
	Mem2434[a0_2430:word32] = Mem2431[a0_2430:word32] | 1<32>
	word32 a0_2435 = a2_1014 + 20<i32>
	word32 v347_2436 = Mem2434[a0_2435:word32] - 1<32>
	Mem2437[a0_2435:word32] = v347_2436
	branch v347_2436 < 0<32> l000035A8
l000035A8:
	word32 a7_2443 = a7_1330 - 4<i32>
	Mem2445[a7_2443:word32] = a2_1014
	word32 a5_5330
	d0_2450 = fn00003CCC(Mem2445[a7_2443:word32], out d1, out a1, out a5_5330)
	Mem2458[a7_2443 + 56<i32>:word32] = d0_2450
l00003588:
	a1 = a2_1014 + 4<i32>
	word32 a0_2462 = Mem2437[a1:word32]
	word32 a7_2463 = a7_1330 - 4<i32>
	Mem2465[a7_2463:word32] = a2_1014
	Mem2469[a1:word32] = a0_2462 + 1<i32>
	byte v351_2473 = Mem2469[a0_2462:byte]
	a2_1014 = Mem2469[a7_2463:word32]
	Mem2492[a7_2463:word32] = d1
	Mem2498[a7_2463 + 56<i32>:word32] = (uint32) (uint8) v351_2473
	d0_2450 = SEQ(SLICE(d0, word24, 8), v351_2473)
	d1 = Mem2498[a7_2463:word32]
l000035B6:
	Mem2506[a7_1330 + 64<i32>:word32] = Mem2504[a7_1330 + 52<i32>:word32]
	word32 d0_2517 = SEQ(SLICE(d0_2450, word24, 8), Mem2506[a7_1330 + 55<i32>:byte])
	word32 d3_2508 = d3_1850 + 1<32>
	word32 d4_2512 = d4_132 + 1<32>
	d0 = d0_2517 & 0xFF<32>
	branch __btst(Mem2506[0x000028B1<p32> + (int32) ((int16) (d0_2517 & 0xFF<32>)):byte], 0<16>) l000035DC
l000035D8:
	d0 = SEQ(SLICE(d0_2517 & 0xFF<32>, word24, 8), SLICE(d0_2517 & 0xFF<32>, byte, 0) | 0x20<8>)
l000035DC:
	branch d0 != 0x78<32> l00003678
l000035E6:
	branch d6_1133 - d3_2508 <u 0<32> l00003678
l000035EC:
	word32 d0_2559
	word32 a0_2542 = a2_1014 + 24<i32>
	Mem2545[a0_2542:word32] = Mem2506[a0_2542:word32] | 1<32>
	word32 a0_2546 = a2_1014 + 20<i32>
	word32 v368_2547 = Mem2545[a0_2546:word32] - 1<32>
	Mem2548[a0_2546:word32] = v368_2547
	branch v368_2547 < 0<32> l0000361E
l0000361E:
	word32 a7_2552 = a7_1330 - 4<i32>
	Mem2554[a7_2552:word32] = a2_1014
	word32 a5_5331
	d0_2559 = fn00003CCC(Mem2554[a7_2552:word32], out d1, out a1, out a5_5331)
	Mem2567[a7_2552 + 56<i32>:word32] = d0_2559
l000035FE:
	a1 = a2_1014 + 4<i32>
	word32 a0_2571 = Mem2548[a1:word32]
	word32 a7_2572 = a7_1330 - 4<i32>
	Mem2574[a7_2572:word32] = a2_1014
	Mem2578[a1:word32] = a0_2571 + 1<i32>
	byte v372_2582 = Mem2578[a0_2571:byte]
	a2_1014 = Mem2578[a7_2572:word32]
	Mem2589[a7_2572:word32] = d1
	Mem2595[a7_2572 + 56<i32>:word32] = (uint32) (uint8) v372_2582
	d0_2559 = SEQ(SLICE(d0, word24, 8), v372_2582)
	d1 = Mem2595[a7_2572:word32]
l0000362C:
	Mem2603[a7_1330 + 74<i32>:word32] = Mem2601[a7_1330 + 52<i32>:word32]
	word32 d0_2620 = (uint32) (uint8) Mem2603[0x000028B1<p32> + (SEQ(SLICE(d0_2559, word24, 8), Mem2603[a7_1330 + 55<i32>:byte]) & 0xFF<32>):byte]
	d3_2423 = d3_2508 + 1<32>
	d4_2510 = d4_2512 + 1<32>
	d0 = d0_2620 & 0x44<32>
	branch (d0_2620 & 0x44<32>) == 0<32> l0000365E
l00003654:
	branch d6_1133 - (d3_2508 + 1<32>) <u 0<32> l0000365E
l0000365E:
	branch Mem2603[a7_1330 + 74<i32>:word32] == 0xFFFFFFFF<32> l00003674
l00003668:
	word32 a7_2635 = a7_1330 - 4<i32>
	Mem2639[a7_2635:word32] = a2_1014
	Mem2643[a7_2635 - 4<i32>:word32] = Mem2639[a7_2635 + 78<i32>:word32]
	d0 = fn00002BF8(Mem2643[a7_2635 - 1<i32>:byte], Mem2643[a7_2635:word32])
l00003674:
l00003678:
	branch Mem2662[a7_1330 + 64<i32>:word32] == 0xFFFFFFFF<32> l0000368E
l00003682:
	word32 a7_2667 = a7_1330 - 4<i32>
	Mem2671[a7_2667:word32] = a2_1014
	Mem2675[a7_2667 - 4<i32>:word32] = Mem2671[a7_2667 + 68<i32>:word32]
	d0 = fn00002BF8(Mem2675[a7_2667 - 1<i32>:byte], Mem2675[a7_2667:word32])
l0000368E:
	d3_2423 = d3_2508 - 1<32>
	d4_2510 = d4_2512 - 1<32>
l00003658:
	d5_1044 = Mem2603[a7_1330 + 74<i32>:word32]
l00003692:
	branch SLICE(d7, byte, 0) == 0x78<8> l0000369E
l00003698:
	branch SLICE(d7, byte, 0) != 0x58<8> l000036A8
l000036A8:
	branch SLICE(d7, byte, 0) != 0x6F<8> l000036B8
l000036B8:
	Mem2714[a7_1330 + 52<i32>:word32] = 0xA<32>
l000036AE:
	Mem2717[a7_1330 + 52<i32>:word32] = 8<32>
l000036C0:
	Mem2722[a7_1330 + 64<i32>:word32] = Mem2720[a7_1330 + 52<i32>:word32]
l0000369E:
	Mem2726[a7_1330 + 64<i32>:word32] = 0x10<32>
l000036C6:
	Mem2731[a7_1330 + 114<i32>:word32] = Mem2729[a7_1330 + 64<i32>:word32]
	word32 d0_2760 = (uint32) (uint8) Mem2731[0x000028B1<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1044, byte, 0)) & 0xFF<32>):byte]
	Mem2790[a7_1330 + 132<i32>:word32] = d2_1090
	Mem2796[a7_1330 + 52<i32>:word32] = d4_2510
	Mem2801[a7_1330 + 74<i32>:byte] = SLICE(d7, byte, 0)
	d0 = d0_2760 & 0x44<32>
	branch (d0_2760 & 0x44<32>) == 0<32> l0000392E
l000036F8:
	branch Mem2801[a7_1330 + 114<i32>:word32] != 0xA<32> l0000372E
l00003702:
	word32 d0_2818 = (uint32) (uint8) Mem2801[0x000028B1<p32> + (SEQ(SLICE(d0_2760 & 0x44<32>, word24, 8), SLICE(d5_1044, byte, 0)) & 0xFF<32>):byte]
	Mem2821[a7_1330 + 132<i32>:word32] = d2_1090
	Mem2823[a7_1330 + 52<i32>:word32] = d4_2510
	Mem2825[a7_1330 + 74<i32>:byte] = SLICE(d7, byte, 0)
	d0 = d0_2818 & 4<32>
	branch (d0_2818 & 4<32>) == 0<32> l0000392E
l0000372E:
	branch Mem2831[a7_1330 + 114<i32>:word32] != 8<32> l0000374E
l00003738:
	Mem2837[a7_1330 + 132<i32>:word32] = d2_1090
	Mem2840[a7_1330 + 52<i32>:word32] = d4_2510
	Mem2843[a7_1330 + 74<i32>:byte] = SLICE(d7, byte, 0)
	branch d5_1044 > 0x37<32> l0000392E
l0000374E:
	Mem2851[a7_1330 + 132<i32>:word32] = d2_1090
	Mem2854[a7_1330 + 52<i32>:word32] = d4_2510
	Mem2866[a7_1330 + 64<i32>:word32] = d6_1133
	Mem2869[a7_1330 + 74<i32>:byte] = SLICE(d7, byte, 0)
	branch d6_1133 - d3_2423 <u 0<32> l0000392E
l00003764:
	d7 = Mem2869[a7_1330 + 114<i32>:word32]
	word32 a4_2881 = Mem2869[a7_1330 + 64<i32>:word32]
l0000376C:
	word32 a7_2886 = a7_1330 - 4<i32>
	Mem2889[a7_2886:word32] = d2_1090
	word32 v419_2893 = Mem2889[a7_2886:word32]
	Mem2898[a7_2886:word32] = d7 >> 31<i32>
	Mem2901[a7_2886 - 4<i32>:word32] = d7
	Mem2905[a7_2886 - 8<i32>:word32] = a1
	Mem2909[a7_2886 - 12<i32>:word32] = Mem2905[a7_2886 + 52<i32>:word32]
	Mem2913[a7_2886 - 16<i32>:word32] = Mem2909[a7_2886 + 48<i32>:word32]
	Mem2916[a7_2886 - 20<i32>:word32] = d7
	Mem2918[a7_2886 - 24<i32>:word32] = d7 >> 31<i32>
	word32 d1_2921
	Mem2932[a7_2886 + 68<i32>:word32] = fn00003C4C(d4_2510, Mem2918[a7_2886 - 24<i32>:word32], Mem2918[a7_2886 - 20<i32>:word32], Mem2918[a7_2886 - 16<i32>:word32], Mem2918[a7_2886 - 12<i32>:word32], out d1_2921)
	Mem2934[a7_2886 + 72<i32>:word32] = d1_2921
	branch ((uint32) (uint8) Mem2934[0x000028B1<p32> + (SEQ(Mem2934[a7_2886 + 1<32>:word24], SLICE(d5_1044, byte, 0)) & 0xFF<32>):byte] & 4<32>) == 0<32> l000037CC
l000037CC:
	d4_2510 = 0<i32>
l000037C2:
	d4_2510 = d5_1044 - 0x30<32>
l000037CE:
	word32 d6_3015
	Mem2967[a7_1330 - 4<i32>:word32] = v419_2893
	Mem2975[a7_1330 - 4<i32>:word32] = Mem2967[a7_1330 - 4<i32>:word32]
	word32 d2_2977 = d4_2510 + Mem2975[a7_1330 + 68<i32>:word32]
	Mem2980[a7_1330 + 48<i32>:word32] = d2_2977
	Mem2986[a7_1330 - 8<i32>:word32] = d3_2423
	word32 d0_2969 = d4_2510 >> 31<i32>
	Mem2992[a7_1330 + 44<i32>:word32] = Mem2986[a7_1330 + 64<i32>:word32] + d0_2969 + (d2_2977 <u 0<32>)
	word32 v441_2993 = Mem2992[a7_1330 - 8<i32>:word32]
	word32 v442_2996 = Mem2992[a7_1330 - 4<i32>:word32]
	branch ((uint32) (uint8) Mem2992[0x000028B1<p32> + (SEQ(SLICE(d0_2969, word24, 8), SLICE(d5_1044, byte, 0)) & 0xFF<32>):byte] & 1<32>) == 0<32> l0000381E
l0000381E:
	d6_3015 = 0<i32>
l00003814:
	d6_3015 = d5_1044 - 0x37<32>
l00003820:
	word32 d2_3074
	Mem3027[a7_1330 - 4<i32>:word32] = v442_2996
	Mem3035[a7_1330 - 4<i32>:word32] = Mem3027[a7_1330 - 4<i32>:word32]
	word32 d2_3037 = d6_3015 + Mem3035[a7_1330 + 48<i32>:word32]
	Mem3040[a7_1330 + 68<i32>:word32] = d2_3037
	Mem3045[a7_1330 - 8<i32>:word32] = v441_2993
	word32 d0_3029 = d6_3015 >> 31<i32>
	Mem3051[a7_1330 + 64<i32>:word32] = Mem3045[a7_1330 + 44<i32>:word32] + d0_3029 + (d2_3037 <u 0<32>)
	word32 v453_3052 = Mem3051[a7_1330 - 8<i32>:word32]
	branch ((uint32) (uint8) Mem3051[0x000028B1<p32> + (SEQ(SLICE(d0_3029, word24, 8), SLICE(d5_1044, byte, 0)) & 0xFF<32>):byte] & 2<32>) == 0<32> l00003870
l00003870:
	d2_3074 = 0<i32>
l00003866:
	d2_3074 = d5_1044 - 0x57<32>
l00003872:
	word32 d0_3135
	Mem3085[a7_1330 - 4<i32>:word32] = d2_3074
	Mem3093[a7_1330 - 4<i32>:word32] = Mem3085[a7_1330 - 4<i32>:word32]
	word32 d2_3095 = d2_3074 + Mem3093[a7_1330 + 68<i32>:word32]
	Mem3098[a7_1330 + 48<i32>:word32] = d2_3095
	Mem3103[a7_1330 - 8<i32>:word32] = v453_3052
	Mem3108[a7_1330 + 44<i32>:word32] = Mem3103[a7_1330 + 64<i32>:word32] + (d2_3074 >> 31<i32>) + (d2_3095 <u 0<32>)
	word32 a0_3119 = a2_1014 + 24<i32>
	word32 v465_3109 = Mem3108[a7_1330 - 8<i32>:word32]
	d2_1090 = Mem3108[a7_1330 - 4<i32>:word32]
	Mem3122[a0_3119:word32] = Mem3108[a0_3119:word32] | 1<i32>
	word32 a0_3123 = a2_1014 + 20<i32>
	word32 v468_3124 = Mem3122[a0_3123:word32] - 1<32>
	Mem3125[a0_3123:word32] = v468_3124
	branch v468_3124 < 0<32> l000038C4
l000038C4:
	Mem3130[a7_1330 - 4<i32>:word32] = a2_1014
	word32 d1_5332
	word32 a5_5333
	d0_3135 = fn00003CCC(Mem3130[a7_1330 - 4<i32>:word32], out d1_5332, out a1, out a5_5333)
	d1 = d0_3135
l000038AC:
	a1 = a2_1014 + 4<i32>
	word32 a0_3146 = Mem3125[a1:word32]
	Mem3149[a7_1330 - 4<i32>:word32] = a2_1014
	Mem3153[a1:word32] = a0_3146 + 1<i32>
	d0_3135 = (uint32) (uint8) Mem3153[a0_3146:byte]
	a2_1014 = Mem3153[a7_1330 - 4<i32>:word32]
	d1 = (uint32) (uint8) SLICE(d0_3135, byte, 0)
l000038D0:
	Mem3172[a7_1330 + 52<i32>:word32] = Mem3170[a7_1330 + 52<i32>:word32] + 1<32>
	word32 d0_3184 = (uint32) (uint8) Mem3172[0x000028B1<p32> + (SEQ(SLICE(d0_3135, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte]
	d5_1044 = d1
	d3_2423 = v465_3109 + 1<32>
	d0 = d0_3184 & 0x44<32>
	branch (d0_3184 & 0x44<32>) == 0<32> l0000392E
l000038F4:
	branch d7 != 0xA<32> l00003918
l000038FC:
	word32 d0_3206 = (uint32) (uint8) Mem3172[0x000028B1<p32> + (SEQ(SLICE(d0_3184 & 0x44<32>, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_3206 & 4<32>
	branch (d0_3206 & 4<32>) == 0<32> l0000392E
l00003918:
	branch d7 != 8<32> l00003928
l00003920:
	branch d1 > 0x37<32> l0000392E
l00003928:
	branch a4_2881 - (v465_3109 + 1<32>) >=u 0<32> l0000376C
l0000392E:
	byte v476_3238 = Mem3235[a7_1330 + 74<i32>:byte]
	d7 = SEQ(SLICE(d7, word24, 8), v476_3238)
	word32 d4_3243 = Mem3235[a7_1330 + 52<i32>:word32]
	d2_1090 = Mem3235[a7_1330 + 132<i32>:word32]
	branch Mem3235[a7_1330 + 110<i32>:word32] == 0<32> l00003962
l00003940:
	branch d3_2423 != 2<32> l00003962
l00003948:
	branch d5_1044 == 0xFFFFFFFF<32> l0000395A
l00003950:
	word32 a7_3259 = a7_1330 - 4<i32>
	Mem3272[a7_3259:word32] = a2_1014
	Mem3275[a7_3259 - 4<i32>:word32] = d5_1044
	d0 = fn00002BF8(Mem3275[a7_3259 - 1<i32>:byte], Mem3275[a7_3259:word32])
l0000395A:
	d3_2423 = d3_2423 - 1<32>
	d4_3243 = d4_3243 - 1<32>
	d5_1044 = Mem3291[a7_1330 + 110<i32>:word32]
l00003962:
	branch d5_1044 == 0xFFFFFFFF<32> l00003974
l0000396A:
	word32 a7_3299 = a7_1330 - 4<i32>
	Mem3303[a7_3299:word32] = a2_1014
	Mem3306[a7_3299 - 4<i32>:word32] = d5_1044
	d0 = fn00002BF8(Mem3306[a7_3299 - 1<i32>:byte], Mem3306[a7_3299:word32])
l00003974:
	d3_130 = d3_2423 - 1<32>
	d4_132 = d4_3243 - 1<32>
	branch Mem3324[a7_1330 + 73<i32>:byte] != 0<8> l00003B22
l00003980:
	branch d3_130 == 0<32> l00003B22
l00003986:
	branch v476_3238 != 0x75<8> l00003A48
l00003A48:
	branch Mem3324[a7_1330 + 110<i32>:word32] != 0x2D<32> l00003A64
l00003A64:
	Mem3344[a7_1330 + 56<i32>:word32] = Mem3324[a7_1330 + 48<i32>:word32]
	Mem3346[a7_1330 + 52<i32>:word32] = Mem3344[a7_1330 + 44<i32>:word32]
l00003A52:
	word32 v528_3348 = a7_1330 + 44<i32>
	d1 = -Mem3324[v528_3348 + 4<i32>:word32]
	d0 = -Mem3324[v528_3348:word32] - (d1 <u 0<32>)
	a7_1330 = Mem3324[a7_1330 + 0x38<32>:word32]
l00003A70:
	word32 a7_3364 = a7_1330 - 4<i32>
	Mem3375[a7_3364:word32] = d0
	Mem3384[a7_3364 + 48<i32>:byte] = Mem3375[a7_3364 + 76<i32>:byte] - 1<8>
	a7_1330 = a7_3364 + 4<i32>
	branch Mem3384[a7_3364 + 48<i32>:byte] == 0<8> l00003A9A
l00003A9A:
	word32 d0_3398 = d2_1090 + 3<32> >>u 2<32>
	d2_1090 = (d0_3398 << 2<32>) + 4<32>
	word32 a0_3404 = Mem3384[d2_1090 + -4<i32>:word32]
	Mem3406[a0_3404 + 4<i32>:word32] = Mem3384[a7_3364 + 60<i32>:word32]
	Mem3408[a0_3404:word32] = Mem3406[a7_3364 + 56<i32>:word32]
	d0 = d0_3398 << 2<32>
l00003A84:
	byte v540_3410 = Mem3384[a7_3364 + 48<i32>:byte] - 1<8>
	Mem3411[a7_3364 + 48<i32>:byte] = v540_3410
	branch v540_3410 == 0<8> l00003AEC
l00003AEC:
	d2_1090 = (d2_1090 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3411[a7_3364 + 60<i32>:word32]
	Mem3425[Mem3411[d2_1090 + -4<i32>:word32]:byte] = SLICE(d0, byte, 0)
l00003A8A:
	byte v541_3427 = Mem3411[a7_3364 + 48<i32>:byte] - 0x66<8>
	Mem3428[a7_3364 + 48<i32>:byte] = v541_3427
	branch v541_3427 == 0<8> l00003AD2
l00003AD2:
	d2_1090 = (d2_1090 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3428[a7_3364 + 60<i32>:word32]
	Mem3442[Mem3428[d2_1090 + -4<i32>:word32]:word16] = SLICE(d0, word16, 0)
l00003A92:
	byte v542_3444 = Mem3428[a7_3364 + 48<i32>:byte] - 4<8>
	Mem3445[a7_3364 + 48<i32>:byte] = v542_3444
	branch v542_3444 == 0<8> l00003AB8
l00003AB8:
	d2_1090 = (d2_1090 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3445[a7_3364 + 60<i32>:word32]
	Mem3459[Mem3445[d2_1090 + -4<i32>:word32]:word32] = d0
l00003A98:
l00003B06:
	d2_1090 = (d2_1090 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3445[a7_3364 + 60<i32>:word32]
	Mem3472[Mem3445[d2_1090 + -4<i32>:word32]:word32] = d0
l0000398E:
	word32 a7_3474 = a7_1330 - 4<i32>
	Mem3476[a7_3474:word32] = d0
	Mem3485[a7_3474 + 56<i32>:byte] = Mem3476[a7_3474 + 76<i32>:byte] - 1<8>
	a7_1330 = a7_3474 + 4<i32>
	branch Mem3485[a7_3474 + 56<i32>:byte] == 0<8> l000039B8
l000039B8:
	word32 d0_3495 = d2_1090 + 3<32> >>u 2<32>
	d2_1090 = (d0_3495 << 2<32>) + 4<32>
	word32 a0_3501 = Mem3485[d2_1090 + -4<i32>:word32]
	Mem3503[a0_3501 + 4<i32>:word32] = Mem3485[a7_3474 + 52<i32>:word32]
	Mem3505[a0_3501:word32] = Mem3503[a7_3474 + 48<i32>:word32]
	d0 = d0_3495 << 2<32>
l000039A2:
	byte v517_3507 = Mem3485[a7_3474 + 56<i32>:byte] - 1<8>
	Mem3508[a7_3474 + 56<i32>:byte] = v517_3507
	branch v517_3507 == 0<8> l00003A10
l00003A10:
	d2_1090 = (d2_1090 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3508[a7_3474 + 52<i32>:word32]
	Mem3522[Mem3508[d2_1090 + -4<i32>:word32]:byte] = SLICE(d0, byte, 0)
l000039A8:
	byte v518_3524 = Mem3508[a7_3474 + 56<i32>:byte] - 0x66<8>
	Mem3525[a7_3474 + 56<i32>:byte] = v518_3524
	branch v518_3524 == 0<8> l000039F4
l000039F4:
	d2_1090 = (d2_1090 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3525[a7_3474 + 52<i32>:word32]
	Mem3539[Mem3525[d2_1090 + -4<i32>:word32]:word16] = SLICE(d0, word16, 0)
l000039B0:
	byte v519_3541 = Mem3525[a7_3474 + 56<i32>:byte] - 4<8>
	Mem3542[a7_3474 + 56<i32>:byte] = v519_3541
	branch v519_3541 == 0<8> l000039D8
l000039D8:
	d2_1090 = (d2_1090 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3542[a7_3474 + 52<i32>:word32]
	Mem3556[Mem3542[d2_1090 + -4<i32>:word32]:word32] = d0
l000039B6:
l00003A2C:
	d2_1090 = (d2_1090 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3542[a7_3474 + 52<i32>:word32]
	Mem3569[Mem3542[d2_1090 + -4<i32>:word32]:word32] = d0
l00003B1E:
	Mem3574[a7_1330 + 60<i32>:word32] = Mem3572[a7_1330 + 60<i32>:word32] + 1<32>
l00003B22:
	a4_274 = a3_1955
l00003C20:
	branch d3_130 == 0<32> l00003C2A
l00003C24:
	branch Mem3657[a4_274:byte] != 0<8> l00002C4A
l00003C2A:
	branch d5_1044 != 0xFFFFFFFF<32> l00003C3C
l00003C32:
	branch false l00003C3C
l00003C3C:
l00003C38:
l00003C40:
	return
fn00002C28_exit:


word32 fn00003C4C(word32 d4, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d4:[16..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn00003C4C_entry:
l00003C4C:
	word32 d0_23 = __swap(dwArg08)
	word32 d1_25 = __swap(dwArg10)
	word32 d4_29 = SEQ(SLICE(d4, word16, 16), SLICE(dwArg08, word16, 0)) *u SLICE(dwArg10, word16, 0)
	word32 d1_32 = d1_25 *u SLICE(d0_23, word16, 0)
	word32 d2_39 = dwArg08 *u SLICE(d1_25, word16, 0) + __swap(SEQ(SLICE(d4_29, word16, 16), SLICE(d4_29, word16, 0) ^ SLICE(d4_29, word16, 0))) + dwArg10 *u SLICE(d0_23, word16, 0)
	branch d2_39 >=u 0<32> l00003C80
l00003C7A:
	d1_32 = d1_32 + 0x10000<32>
l00003C80:
	word32 d2_45 = __swap(d2_39)
	word32 d3_65 = __swap(dwArg0C) *u SLICE(dwArg08, word16, 0)
	word32 d3_71 = __swap(SEQ(SLICE(d3_65, word16, 16), SLICE(d3_65 + __swap(dwArg08) *u SLICE(dwArg0C, word16, 0), word16, 0)))
	word32 d3_83 = __swap(dwArg04) *u SLICE(dwArg10, word16, 0)
	word32 d3_89 = __swap(SEQ(SLICE(d3_83, word16, 16), SLICE(d3_83 + __swap(dwArg10) *u SLICE(dwArg04, word16, 0), word16, 0)))
	d1Out = SEQ(SLICE(d2_45, word16, 16), SLICE(d4_29, word16, 0))
	return (uint32) (uint16) SLICE(d2_45, word16, 0) + d1_32 + (dwArg0C *u SLICE(dwArg08, word16, 0) + SEQ(SLICE(d3_71, word16, 16), SLICE(d3_71, word16, 0) ^ SLICE(d3_71, word16, 0))) + (dwArg04 *u SLICE(dwArg10, word16, 0) + SEQ(SLICE(d3_89, word16, 16), SLICE(d3_89, word16, 0) ^ SLICE(d3_89, word16, 0)))
fn00003C4C_exit:


word32 fn00003CCC(word32 dwArg04, ptr32 & d1Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: a1 a5 d0 d1
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5
fn00003CCC_entry:
l00003CCC:
	word32 d0_161
	word32 a5_279
	word32 a1_116
	word32 d1_118 = fn00002424(out a1_116, out a5_279)
	branch dwArg04 != 0<32> l00003CE4
l00003CE4:
	branch (Mem26[dwArg04 + 24<i32>:word32] & 42<i32>) == 32<i32> l00003CF6
l00003CF6:
	Mem49[dwArg04 + 24<i32>:word32] = Mem26[dwArg04 + 24<i32>:word32] | 1<i32>
	word32 d0_125 = Mem49[dwArg04 + 24<i32>:word32] & 0x200<32>
	branch d0_125 == 0<32> l00003D0E
l00003D08:
	d0_125 = fn00003DC8(out a1_116, out a5_279)
l00003D0E:
	branch Mem49[dwArg04 + 28<i32>:word32] != 0<32> l00003D2C
l00003D14:
	d0_125 = Mem49[dwArg04 + 24<i32>:word32] & 4<i32>
	branch d0_125 == 0<32> l00003D24
l00003D24:
	Mem79[dwArg04 + 28<i32>:word32] = 0x400<32>
l00003D1C:
	Mem83[dwArg04 + 28<i32>:word32] = 1<i32>
	d0_125 = 1<i32>
l00003D2C:
	branch Mem86[dwArg04 + 8<i32>:word32] != 0<32> l00003D68
l00003D32:
	word32 d4_100
	branch (Mem86[dwArg04 + 24<i32>:word32] & 0x80<32>) == 0<32> l00003D46
l00003D46:
	d4_100 = 1<i32>
l00003D42:
	d4_100 = 2<i32>
l00003D48:
	word32 a0_318
	word32 d0_117 = fn00002050(d4_100 + Mem86[dwArg04 + 28<i32>:word32], out d1_118, out a0_318, out a1_116)
	d0_125 = d0_117
	branch d0_117 != 0<32> l00003D60
l00003D60:
	Mem131[dwArg04 + 8<i32>:word32] = d0_117 + 1<i32>
	a1_116 = d0_117 + 1<i32>
l00003D68:
	Mem137[dwArg04 + 4<i32>:word32] = Mem135[dwArg04 + 8<i32>:word32]
	d1_118 = Mem137[dwArg04:word32]
	execPrivate2()
	Mem147[dwArg04 + 20<i32>:word32] = d0_125
	word32 v26_148 = Mem147[dwArg04 + 20<i32>:word32] - 1<32>
	Mem149[dwArg04 + 20<i32>:word32] = v26_148
	branch v26_148 >= 0<32> l00003DAE
l00003DAE:
	word32 a0_153 = Mem149[dwArg04 + 4<i32>:word32]
	Mem157[dwArg04 + 4<i32>:word32] = a0_153 + 1<i32>
	a1_116 = dwArg04 + 4<i32>
	d0_161 = SEQ(SLICE(d0_125, word24, 8), Mem157[a0_153:byte]) & 0xFF<32>
l00003D8C:
	branch Mem149[dwArg04 + 20<i32>:word32] != -1<i32> l00003D9E
l00003D9E:
	Mem172[dwArg04 + 24<i32>:word32] = Mem149[dwArg04 + 24<i32>:word32] | 16<i32>
l00003D94:
	Mem179[dwArg04 + 24<i32>:word32] = Mem149[dwArg04 + 24<i32>:word32] | 8<i32>
l00003DA6:
	Mem184[dwArg04 + 20<i32>:word32] = 0<32>
	d0_161 = -1<i32>
l00003D5C:
	d0_161 = -1<i32>
l00003CF0:
	d0_161 = -1<i32>
l00003CDE:
	d0_161 = -1<i32>
l00003DC2:
	d1Out = d1_118
	a1Out = a1_116
	a5Out = a5_279
	return d0_161
fn00003CCC_exit:


word32 fn00003DC8(ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a1 a5 d0
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00003DC8_entry:
l00003DC8:
	word32 a2_11 = Mem5[0x00003FFC<p32>:word32]
	word32 d0_42 = a2_11
	branch a2_11 == 0<32> l00003E00
l00003DD6:
	branch (Mem12[a2_11 + 24<i32>:word32] & 0x202<32>) != 0x202<32> l00003DF6
l00003DE8:
	branch Mem12[a2_11:word32] == 0<32> l00003DF6
l00003DEC:
	word32 a0_91
	fn00001FA4(a2_11, out a0_91, out a1, out a5)
l00003DF6:
	a2_11 = Mem40[a2_11 + 12<i32>:word32]
	d0_42 = a2_11
	branch a2_11 != 0<32> l00003DD6
l00003E00:
	a1Out = a1
	a5Out = a5
	return d0_42
fn00003DC8_exit:


word32 fn00003E04(word32 dwArg04, ptr32 & d1Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: a1 d0 d1
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a7 d2
fn00003E04_entry:
l00003E04:
	word32 d0_110
	word32 a2_12 = dwArg04
	word32 d2_100 = 0<i32>
	branch Mem11[dwArg04:byte] == 0<8> l00003E84
l00003E12:
	word32 a0_19 = Mem18[0x00003FF4<p32>:word32]
	Mem23[a0_19 + 24<i32>:word32] = Mem18[a0_19 + 24<i32>:word32] | 2<i32>
	word32 v15_25 = Mem23[a0_19 + 20<i32>:word32] - 1<32>
	Mem26[a0_19 + 20<i32>:word32] = v15_25
	word32 d0_21 = 2<i32>
	branch v15_25 < 0<32> l00003E5A
l00003E28:
	branch Mem26[a2_12:byte] != 0xA<8> l00003E40
l00003E2E:
	d0_21 = Mem26[Mem26[0x00003FF4<p32>:word32] + 24<i32>:word32] & 0x80<32>
	branch d0_21 != 0<32> l00003E5A
l00003E5A:
	word32 a5_59
	word32 a0_62
	d1 = fn00001E90((int32) (int16) (int8) SEQ(SLICE(d0_21, word24, 8), Mem46[a2_12:byte]), Mem26[0x00003FF4<p32>:word32], out a0_62, out a1, out a5_59)
l00003E40:
	word32 a1_72 = Mem26[0x00003FF4<p32>:word32]
	word32 a0_74 = Mem26[a1_72 + 4<i32>:word32]
	Mem78[a1_72 + 4<i32>:word32] = a0_74 + 1<i32>
	Mem81[a0_74:byte] = Mem78[a2_12:byte]
	a1 = a1_72 + 4<i32>
	d1 = (uint32) (uint8) Mem81[a0_74:byte]
l00003E72:
	branch d1 != -1<i32> l00003E7C
l00003E7C:
	a2_12 = a2_12 + 1<i32>
	d2_100 = d2_100 + 1<32>
	branch Mem104[a2_12:byte] != 0<8> l00003E12
l00003E84:
	d0_110 = d2_100
l00003E78:
	d0_110 = -1<i32>
l00003E86:
	d1Out = d1
	a1Out = a1
	return d0_110
fn00003E04_exit:


