void __exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_0121_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0800_0121_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0121:
	selector ds_3 = Mem0[0x0800:0x01F8:selector]
	__restorezero(ds_3)
	word16 sp_5
	selector ds_6
	word16 ax_7
	byte SZO_8
	bool C_9
	word16 si_10
	word16 cx_11
	bool D_12
	byte al_13
	byte SCZO_14
	byte ah_15
	bool Z_16
	word16 dx_17
	word16 bp_18
	selector ss_19
	word16 bx_20
	call SEQ(0x0800, Mem0[ds_3:0x05DC:word16]) (retsize: 2; depth: 4)
		uses: ds_3,sp_4
		defs: ah_15,al_13,ax_7,bp_18,bx_20,C_9,cx_11,D_12,ds_6,dx_17,SCZO_14,si_10,sp_5,ss_19,SZO_8,Z_16
	word16 ax_21 = 0x0000
	byte al_22 = 0x00
	byte ah_23 = 0x00
	word16 si_27 = 0x0000
	word16 cx_28 = 0x002F
// DataOut: ah al cx ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_0137:
	al_22 = al_22 + Mem0[ds_6:si_27:byte]
	ah_23 = ah_23 + (al_22 <u 0x00)
	ax_21 = DPB(ax_21, ah_23, 8) (alias)
	si_27 = si_27 + 0x0001
	cx_28 = cx_28 - 0x0001
	branch cx_28 != 0x0000 l0800_0137
// DataOut: ah al ax cx ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ds:<invalid> ax:<invalid> si:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid>

l0800_013F:
	byte al_46 = (byte) (ax_21 - 0x0D37)
	branch ax_21 == 0x0D37 l0800_014F
// DataOut: al ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ds:<invalid> ax:<invalid> si:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid>

l0800_0145:
	fn0800_01DA(al_46, 0x0019, 0x002F, ds_6)
// DataOut: al sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ds:<invalid> ax:<invalid> si:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid>

l0800_014F:
	msdos_terminate(Mem0[ss_19:sp_5 + 0x0002:byte])
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ds:<invalid> ax:<invalid> si:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> bx:0x0002



void fn0800_0162(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds
// LiveOut:
// Trashed: ah al ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: ds sp
fn0800_0162_entry:
// DataOut: cs ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0162:
	word32 es_bx_7 = msdos_get_interrupt_vector(0x00)
	Mem10[ds:0x0074:word16] = (word16) es_bx_7
	Mem11[ds:0x0076:word16] = SLICE(es_bx_7, selector, 16)
	word32 es_bx_14 = msdos_get_interrupt_vector(0x04)
	Mem17[ds:0x0078:word16] = (word16) es_bx_14
	Mem18[ds:0x007A:word16] = SLICE(es_bx_14, selector, 16)
	word32 es_bx_21 = msdos_get_interrupt_vector(0x05)
	Mem24[ds:0x007C:word16] = (word16) es_bx_21
	Mem25[ds:0x007E:word16] = SLICE(es_bx_21, selector, 16)
	word32 es_bx_28 = msdos_get_interrupt_vector(0x06)
	Mem31[ds:0x0080:word16] = (word16) es_bx_28
	Mem32[ds:0x0082:word16] = SLICE(es_bx_28, selector, 16)
	msdos_set_interrupt_vector(0x00, SEQ(cs, 0x0158))
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0162_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:0x2500 Sequence es:bx:<invalid> dx:0x0158 ds:ds -2(fp):ds



void __restorezero(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: ah al ax dh dl ds dx eax edx rax rdx
// Preserved: ds sp
fn0800_01A5_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01A5:
	msdos_set_interrupt_vector(0x00, Mem0[ds:0x0074:segptr32])
	msdos_set_interrupt_vector(0x04, Mem0[ds:0x0078:segptr32])
	msdos_set_interrupt_vector(0x05, Mem0[ds:0x007C:segptr32])
	msdos_set_interrupt_vector(0x06, Mem0[ds:0x0080:segptr32])
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_01A5_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:0x2506 Sequence ds:dx:<invalid> ds:ds -2(fp):ds



word16 fn0800_01DA(byte al, word16 cx, word16 dx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al cx ds dx
// LiveOut: bx
// Trashed: C ah ax bh bl bx eax ebx rax rbx
// Preserved: sp
fn0800_01DA_entry:
// DataOut: al cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_01DA:
	word16 ax_8
	msdos_write_file(0x0002, cx, ds_dx, out ax_8)
	return 0x0002
// DataOut: al bx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_01DA_exit:
// DataOut: bx
// DataOut (flags): 
// SymbolicIn: sp:fp ah:0x40 bx:0x0002



void _abort(byte al, word16 si)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al si ss
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_01E2_entry:
// DataOut: al si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01E2:
	selector ds_5 = Mem0[0x0800:0x01F8:selector]
	word16 bx_7 = fn0800_01DA(al, 0x001E, 0x0056, ds_5)
	__exit()
	Mem14[ds_5:bx_7 + si:byte] = Mem0[ds_5:bx_7 + si:byte] + 0x03
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l0800_01F8_thunk__f3:
	_f3()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: -2(fp):0x0003

fn0800_01E2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -2(fp):0x0003



void fn0800_01E9(byte al, word16 cx, word16 dx, word16 si)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al cx dx si ss
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_01E9_entry:
// DataOut: al cx dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01E9:
	selector ds_3 = Mem0[0x0800:0x01F8:selector]
	word16 bx_7 = fn0800_01DA(al, cx, dx, ds_3)
	__exit()
	Mem14[ds_3:bx_7 + si:byte] = Mem0[ds_3:bx_7 + si:byte] + 0x03
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l0800_01F8_thunk__f3:
	_f3()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: -2(fp):0x0003

fn0800_01E9_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -2(fp):0x0003



void _f3()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: bp sp
_f3_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01FA:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

_f3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp -2(fp):bp



void _f2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: bp sp
_f2_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01FF:
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

_f2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp -2(fp):bp



void fn0800_0222()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: bp sp
fn0800_0222_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0222:
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0222_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp -2(fp):bp



void _f0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: bp sp
_f0_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0245:
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

_f0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp -2(fp):bp



void _main(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
_main_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -000E(16) Local -0010(16)

l0800_0265:
	word16 di_12
	selector es_13
	word16 bx_14 = _printf(ds, 0x0194, out di_12, out es_13)
	_scanf(bx_14, di_12, es_13, ds, 0x01B0)
	word16 di_38
	selector es_39
	_printf(ds, 0x01B4, out di_38, out es_39)
	word16 wLoc08_43 = 0x0000
	word16 wLoc0A_44 = 0x0001
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Local -000E(16)

l0800_02A7:
	branch wLoc08_43 < wLoc04 l0800_029C
// DataOut: ax ds ss
// DataOut (flags): SZO
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> cx:<invalid> dx:<invalid> si:<invalid> al:<invalid> es:<invalid> di:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Local -000E(16)

l0800_02B2:
	branch wLoc08_43 > wLoc04 l0800_02B9
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> cx:<invalid> dx:<invalid> si:<invalid> al:<invalid> es:<invalid> di:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Local -000E(16)

l0800_02B4:
	branch wLoc0A_44 <=u wLoc06 l0800_029C
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> cx:<invalid> dx:<invalid> si:<invalid> al:<invalid> es:<invalid> di:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Local -000E(16)

l0800_029C:
	_f0()
	wLoc0A_44 = wLoc0A_44 + 0x0001
	wLoc08_43 = v16
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> cx:<invalid> dx:<invalid> si:<invalid> al:<invalid> es:<invalid> di:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Local -000E(16)

l0800_02B9:
	word16 di_72
	selector es_73
	_printf(ds, 0x01CE, out di_72, out es_73)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> cx:<invalid> dx:<invalid> si:<invalid> al:<invalid> es:<invalid> di:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

_main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> cx:0x01CE dx:<invalid> si:<invalid> al:<invalid> es:<invalid> di:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> dl:<invalid> cl:0xCE ch:0x01 -16(fp):0x01B4 -14(fp):<invalid> -12(fp):0x01CE -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp



word16 __IOERROR(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax eax rax
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_02C5_entry:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_02C5:
	word16 si_17
	word16 si_11 = wArg02
	branch wArg02 < 0x0000 l0800_02E4
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_02E4:
	si_17 = -wArg02
	branch si_17 >u 0x0023 l0800_02D5
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_02EB:
	Mem44[ds:0x01D8:word16] = 0xFFFF
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_02D0:
	branch wArg02 <=u 0x0058 l0800_02D8
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_02D5:
	si_11 = 0x0057
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_02D8:
	Mem30[ds:0x01D8:word16] = si_11
	si_17 = (int16) Mem30[ds:si_11 + 0x01DA:byte]
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_02F1:
	Mem19[ds:0x0094:word16] = si_17
// DataOut: ax di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_02FB:
	return 0xFFFF
// DataOut: ax di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> al:0xFF ax:0xFFFF -4(fp):si -2(fp):bp

fn0800_02C5_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si al:0xFF ax:0xFFFF -4(fp):si -2(fp):bp



void _exit(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0002(16)
// Terminates process
fn0800_0301_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_0301:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0002(16)

l0800_0310:
	word16 ax_19 = Mem0[ds:0x023E:word16]
	Mem21[ds:0x023E:word16] = Mem0[ds:0x023E:word16] - 0x0001
	branch ax_19 != 0x0000 l0800_0306
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16)

l0800_0306:
	word16 sp_70
	word16 bp_71
	selector ss_72
	word16 ax_73
	byte SZO_75
	bool C_76
	bool Z_77
	word16 cx_78
	word16 bx_79
	byte SCZO_80
	call SEQ(0x0800, Mem21[ds:(Mem21[ds:0x023E:word16] << 0x0001) + 0x05E8:word16]) (retsize: 2; depth: 2)
		uses: ax_22,bp_16,bx_68,C_25,cx_15,ds_13,SCZO_69,sp_17,ss_14,SZO_23,wLoc02_4,Z_24
		defs: ax_73,bp_71,bx_79,C_76,cx_78,ds_74,SCZO_80,sp_70,ss_72,SZO_75,Z_77
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16)

l0800_031B:
	word16 sp_26
	word16 bp_27
	selector ss_28
	word16 ax_29
	selector ds_30
	byte SZO_31
	bool C_32
	bool Z_33
	word16 cx_34
	word16 bx_35
	byte SCZO_36
	call SEQ(0x0800, Mem21[ds:0x0234:word16]) (retsize: 2; depth: 2)
		uses: ax_22,bp_16,bx_12,C_25,cx_15,ds_13,SCZO_11,sp_17,ss_14,SZO_23,wLoc02_4,Z_24
		defs: ax_29,bp_27,bx_35,C_32,cx_34,ds_30,SCZO_36,sp_26,ss_28,SZO_31,Z_33
	word16 sp_37
	word16 bp_38
	selector ss_39
	word16 ax_40
	selector ds_41
	byte SZO_42
	bool C_43
	bool Z_44
	word16 cx_45
	word16 bx_46
	byte SCZO_47
	call SEQ(0x0800, Mem21[ds_30:0x0236:word16]) (retsize: 2; depth: 2)
		uses: ax_29,bp_27,bx_35,C_32,cx_34,ds_30,SCZO_36,sp_26,ss_28,SZO_31,wLoc02_4,Z_33
		defs: ax_40,bp_38,bx_46,C_43,cx_45,ds_41,SCZO_47,sp_37,ss_39,SZO_42,Z_44
	word16 sp_48
	word16 bp_49
	selector ss_50
	word16 ax_51
	selector ds_52
	byte SZO_53
	bool C_54
	bool Z_55
	word16 cx_56
	word16 bx_57
	byte SCZO_58
	call SEQ(0x0800, Mem21[ds_41:0x0238:word16]) (retsize: 2; depth: 2)
		uses: ax_40,bp_38,bx_46,C_43,cx_45,ds_41,SCZO_47,sp_37,ss_39,SZO_42,wLoc02_4,Z_44
		defs: ax_51,bp_49,bx_57,C_54,cx_56,ds_52,SCZO_58,sp_48,ss_50,SZO_53,Z_55
	Mem62[ss_50:sp_48 - 2:word16] = wArg02
	__exit()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 ax:<invalid> bx:<invalid> -2(fp):bp
// Terminates process

fn0800_0301_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> bp:bp -2(fp):bp



void __setargv(byte al, selector ds, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi rax rbp rbx rcx rdi rdx rsi si sil
// Preserved: sp
// Stack args: Stack +0000(16)
fn0800_0336_entry:
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l0800_0336:
	byte al_119
	selector es_251
	Mem3[0x0800:0x0330:word16] = wArg00
	Mem6[0x0800:0x0332:word16] = ds
	word16 si_23 = Mem6[ds:0x008A:word16]
	selector es_8 = Mem6[ds:0x0090:selector]
	word16 ax_13 = DPB(ax, Mem6[ds:0x0080:byte], 0)
	word16 si_102 = si_23 + 0x0002
	word16 cx_25 = 0x0001
	es_251 = es_8
	branch Mem6[ds:0x0092:byte] <u 0x03 l0800_0374
// DataOut: bp bx cx ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0363:
	es_251 = Mem6[ds:0x008C:selector]
	word16 di_252 = si_23 + 0x0002
	byte cl_253 = 0x7F
	word16 cx_254 = 0x007F
	al_119 = 0x00
// DataOut: al bp bx cl cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 es:<invalid> si:<invalid> ah:<invalid> al:<invalid> ax:bx bp:<invalid> dx:0x0081 bx:bx + 0x0002 cx:0x0001
// LocalsOut: fp(16)

l0800_036D:
	branch cx_254 == 0x0000 l0800_036F
// DataOut: al bp bx cl cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 es:<invalid> si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:0x0081 bx:bx + 0x0002 cx:<invalid> di:<invalid> cl:<invalid>
// LocalsOut: fp(16)

l0800_036D_1:
	cx_254 = cx_254 - 0x0001
	di_252 = di_280 + 0x0001
	cl_253 = (byte) cx_254 (alias)
	word16 di_280 = di_252
	branch 0x00 == Mem6[es_251:di_280:byte] l0800_036D
// DataOut: al bp bx cl cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 es:<invalid> si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:0x0081 bx:bx + 0x0002 cx:<invalid> di:<invalid> cl:<invalid>
// LocalsOut: fp(16)

l0800_036F:
	branch cx_254 == 0x0000 l0800_03E7
// DataOut: al bp bx cl es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 es:<invalid> si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:0x0081 bx:bx + 0x0002 cx:<invalid> di:<invalid> cl:<invalid>
// LocalsOut: fp(16)

l0800_0371:
	cx_25 = DPB(cx_254, cl_253 ^ 0x7F, 0) (alias)
// DataOut: bp bx cx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 es:<invalid> si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:0x0081 bx:bx + 0x0002 cx:<invalid> di:<invalid> cl:<invalid>
// LocalsOut: fp(16)

l0800_0374:
	word16 ax_78 = ax_13 + 0x0002 + cx_25
	al_119 = (byte) (ax_78 & 0xFFFE) (alias)
	word16 di_82 = fp - ((ax_78 & 0xFFFE) & 0xFFFE)
	branch di_82 <u 0x0000 l0800_03E7
// DataOut: al bp bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 es:<invalid> si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:0x0081 bx:bx + 0x0002 cx:<invalid> di:<invalid> cl:<invalid>

l0800_0387:
	Mem92[ss:di_82 - 2:word16] = cx_25
	word16 cx_104 = cx_25 - 0x0001
	di_103 = di_82
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp es:<invalid> si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:0x0081 bx:bx + 0x0002 cx:<invalid> di:<invalid> cl:<invalid>

l0800_0393:
	word16 di_103
	branch cx_104 == 0x0000 l0800_0395
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:ss si:<invalid> ah:<invalid> al:<invalid> ax:ss bp:<invalid> dx:0x0081 bx:bx + 0x0002 cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid>

l0800_0395:
	Mem108[ss:di_103:byte] = 0x00
	word16 di_109 = di_103 + 0x0001
	word16 si_112 = 0x0081
	word16 cx_114 = ax_13 + 0x0001
	word16 ax_117 = cx_104
	al_119 = (byte) cx_104 (alias)
	word16 dx_120 = cx_104
	word16 bx_121 = cx_104 + 0x0001
// DataOut: ax bx cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:ss si:<invalid> ah:<invalid> al:<invalid> ax:ss bp:<invalid> dx:0x0081 bx:bx + 0x0002 cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid>

l0800_03A3:
	byte CZ_136 = fn0800_03BF(ax_117, cx_114, dx_120, bx_121, si_112, di_109, ss, es_8, out ax_117, out cx_114, out dx_120, out bx_121, out si_112, out di_109)
	bool C_137 = (bool) CZ_136
	branch CZ_136 l0800_03AF
// DataOut: al ax bx cx di ds dx es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> es:ss si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid>

l0800_03A8:
	branch C_137 l0800_03EA
// DataOut: al ax bx cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:ss si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid>

l0800_03EA:
	word16 cx_186 = Mem108[ss:di_82 - 2:word16] + dx_120
	selector ds_188 = Mem108[0x0800:0x0332:selector]
	Mem189[ds_188:0x0084:word16] = bx_121
	si_102 = di_82
	word16 bp_194 = di_82 - (bx_121 + 0x0001) * 0x0002
	branch bp_194 <u 0x0000 l0800_03E7
// DataOut: al bp cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:ss si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid>

l0800_03E7:
// DataOut: al si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> cl:<invalid> ds:<invalid>

l0800_03E7_thunk__abort:
	_abort(al_119, si_102)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> cl:<invalid> ds:<invalid>

l0800_0401:
	Mem198[ds_188:0x0086:word16] = bp_194
// DataOut: bp cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:ss si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid>

l0800_0407:
	branch cx_186 == 0x0000 l0800_0417
// DataOut: bp cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:ss si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid> -20(fp):fp - 0x0010

l0800_0409:
	Mem234[ss:bp_194:word16] = si_102
	bp_194 = bp_194 + 0x0002
// DataOut: bp cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:ss si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid> -20(fp):fp - 0x0010

l0800_040F:
	byte al_241 = Mem234[ds_188:si_102:byte]
	si_102 = si_102 + 0x0001
	cx_186 = cx_186 - 0x0001
	branch al_241 != 0x00 && cx_186 != 0x0000 l0800_040F
// DataOut: bp cx ds si ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> es:ss si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid> -20(fp):fp - 0x0010

l0800_0415:
	branch al_241 == 0x00 l0800_0407
// DataOut: bp cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:ss si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid> -20(fp):fp - 0x0010

l0800_0417:
	Mem213[ss:bp_194:word16] = 0x0000
	word16 sp_214
	selector ss_215
	selector ds_216
	bool D_217
	selector es_218
	word16 si_219
	byte ah_220
	byte SZO_221
	bool C_222
	byte al_223
	word16 ax_224
	word16 bp_225
	word16 dx_226
	word16 bx_227
	byte SCZO_228
	word16 cx_229
	word16 di_230
	byte cl_231
	bool Z_232
	byte CZ_233
	call Mem213[0x0800:0x0330:word16] (retsize: 2; depth: 2)
		uses: ah_118,al_203,ax_210,bp_209,bx_191,C_212,cl_208,cx_207,CZ_200,D_7,di_171,ds_188,dx_162,es_90,SCZO_201,si_206,sp_197,ss,SZO_211,Z_202
		defs: ah_220,al_223,ax_224,bp_225,bx_227,C_222,cl_231,cx_229,CZ_233,D_217,di_230,ds_216,dx_226,es_218,SCZO_228,si_219,sp_214,ss_215,SZO_221,Z_232
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:ss si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid> -20(fp):fp - 0x0010

fn0800_0336_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp es:ss si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid> -20(fp):<invalid>

l0800_03AA:
	byte CZ_179 = fn0800_03BF(ax_117, cx_114, dx_120, bx_121, si_112, di_109, ss, es_8, out ax_117, out cx_114, out dx_120, out bx_121, out si_112, out di_109)
	C_137 = (bool) CZ_179 (alias)
	branch CZ_179 l0800_03A8
// DataOut: al ax bx cx di ds dx es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> es:ss si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid>

l0800_03AF:
	branch al_119 == 0x20 l0800_03BB
// DataOut: al ax bx cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:ss si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid>

l0800_03B3:
	branch al_119 == 0x0D l0800_03BB
// DataOut: al ax bx cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:ss si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid>

l0800_03B7:
	branch al_119 != 0x09 l0800_03A3
// DataOut: ax bx cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:ss si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid>

l0800_03BB:
	al_119 = 0x00
	ax_117 = DPB(ax_117, 0x00, 0) (alias)
// DataOut: ax bx cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:ss si:<invalid> ah:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid>

l0800_0393_1:
	Mem101[ss:di_103:byte] = Mem92[es_251:si_102:byte]
	si_102 = si_102 + 0x0001
	di_103 = di_103 + 0x0001
	cx_104 = cx_104 - 0x0001
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:ss si:<invalid> ah:<invalid> al:<invalid> ax:ss bp:<invalid> dx:0x0081 bx:bx + 0x0002 cx:<invalid> di:<invalid> ds:<invalid> cl:<invalid>



byte fn0800_03BF(word16 ax, word16 cx, word16 dx, word16 bx, word16 si, word16 di, selector es, selector ds, ptr16 & axOut, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx cx di ds dx es si
// LiveOut: CZ al ax bx cx di dx si
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ah sp
fn0800_03BF_entry:
	*dxOut = dx
	*diOut = di
	*bxOut = bx
	*cxOut = cx
	*siOut = si
// DataOut: ax bx cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_03BF:
	word16 ax_16 = ax
	byte al_4 = (byte) ax
	branch ax == 0x0000 l0800_03CA
// DataOut: ah al bx cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_03C3:
	Mem81[es:di:byte] = al_4
	word16 dx_80
	*dxOut = dx + 0x0001
	word16 di_83
	*diOut = di + 0x0001
	ax_16 = DPB(ax, al_4, 0) (alias)
	branch al_4 != 0x00 l0800_03CA
// DataOut: ah bx cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:ax

l0800_03C9:
	word16 bx_89
	*bxOut = bx + 0x0001
// DataOut: ah bx cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:al

l0800_03CA:
	word16 ax_21
	*axOut = DPB(ax_16, 0x00, 0)
	byte CZ_28 = DPB(CZ, true, 0)
	branch cx == 0x0000 l0800_03E6
// DataOut: al ax bx cx di ds dx es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:al bx:bx + 0x0001

l0800_03D1:
	byte al_48 = Mem0[ds:si:byte]
	byte SCZO_53 = cond(al_48 - 0x22)
	word16 si_49 = si + 0x0001
	*siOut = si_49
	word16 cx_50 = cx - 0x0001
	*cxOut = cx_50
	word16 ax_52
	*axOut = DPB(ax_16, al_48 - 0x22, 0)
	CZ_28 = SCZO_53 (alias)
	branch al_48 == 0x22 l0800_03E6
// DataOut: al ax bx cx di ds dx es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:0x00 ah:ah bx:bx + 0x0001

l0800_03D7:
	word16 ax_59
	*axOut = DPB(ax_16, al_48, 0)
	branch al_48 != 0x5C l0800_03E4
// DataOut: al ax bx cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:si + 0x0001 cx:cx - 0x0001 bx:bx + 0x0001

l0800_03DD:
	branch Mem0[ds:si + 0x0001:byte] != 0x22 l0800_03E4
// DataOut: al ax bx cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:si + 0x0001 cx:cx - 0x0001 bx:bx + 0x0001

l0800_03E2:
	word16 ax_76
	*axOut = DPB(ax_16, Mem0[ds:si + 0x0001:byte], 0)
	si_49 = si + 0x0002
	word16 cx_78
	*cxOut = cx - 0x0002
// DataOut: al ax bx cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:si + 0x0001 cx:cx - 0x0001 bx:bx + 0x0001

l0800_03E4:
	word16 si_67
	*siOut = si_49
	CZ_28 = DPB(SCZO_53, false, 0) (alias)
// DataOut: al ax bx cx di ds dx es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:<invalid> cx:<invalid> bx:bx + 0x0001

l0800_03E6:
	return CZ_28
// DataOut: al ax bx cx di ds dx es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:<invalid> cx:<invalid> bx:bx + 0x0001

fn0800_03BF_exit:
// DataOut: al ax bx cx di dx si
// DataOut (flags): CZ
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:<invalid> cx:<invalid> bx:bx + 0x0001



void __setenvp(word16 si, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ds sp
fn0800_0421_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16)

l0800_0421:
	word16 cx_4 = Mem0[ds:0x008A:word16]
	word16 ax_7 = _malloc(ds, cx_4)
	word16 cx_66 = cx_4
	word16 di_10 = ax_7
	byte al_12 = (byte) ax_7
	branch ax_7 == 0x0000 l0800_0454
// DataOut: al ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0430:
	selector ds_59 = Mem0[ds:0x008C:selector]
	si = 0x0000
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_043A:
	branch cx_66 == 0x0000 l0800_043C
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> di:<invalid> ax:<invalid> es:ds ds:<invalid> si:<invalid> dx:<invalid> bx:<invalid> -4(fp):ds -2(fp):ds
// LocalsOut: fp(16) Local -0002(16)

l0800_043C:
	word16 ax_80 = _malloc(ds, Mem0[ds:0x008E:word16])
	Mem85[ds:0x0088:word16] = ax_80
	word16 di_105 = ax_7
	word16 bx_101 = ax_80
	al_12 = (byte) ax_80 (alias)
	branch ax_80 != 0x0000 l0800_0457
// DataOut: al bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> di:<invalid> ax:<invalid> es:ds ds:<invalid> si:<invalid> dx:<invalid> bx:<invalid> -4(fp):ds -2(fp):ds

l0800_0457:
	word16 cx_106 = 0xFFFF
// DataOut: al ax bx cx di ds es
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> di:<invalid> ax:<invalid> es:ds ds:ds si:<invalid> bx:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):ds

l0800_045C:
	Mem100[ds:bx_101:word16] = di_105
	bx_101 = bx_101 + 0x0002
// DataOut: al ax bx cx di ds es
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> di:<invalid> ax:<invalid> es:ds ds:ds si:<invalid> bx:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):ds

l0800_0461:
	branch cx_106 == 0x0000 l0800_0463
// DataOut: al ax bx cx di ds es
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> di:<invalid> ax:<invalid> es:ds ds:ds si:<invalid> bx:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):ds

l0800_0461_1:
	di_105 = di_105 + 0x0001
	cx_106 = cx_106 - 0x0001
	branch 0x00 == Mem100[ds:di_105:byte] l0800_0461
// DataOut: al ax bx cx di ds es
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> di:<invalid> ax:<invalid> es:ds ds:ds si:<invalid> bx:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):ds

l0800_0463:
	branch Mem100[ds:di_105:byte] != 0x00 l0800_045C
// DataOut: al ax bx cx di ds es
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> di:<invalid> ax:<invalid> es:ds ds:ds si:<invalid> bx:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):ds

l0800_0468:
	Mem111[ds:bx_101:word16] = 0x0000
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> di:<invalid> ax:<invalid> es:ds ds:ds si:<invalid> bx:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):ds

l0800_0454:
// DataOut: al si ss
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> di:<invalid> ax:<invalid> es:ds ds:ds si:<invalid> bx:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_0454_thunk__abort:
	_abort(al_12, si)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> di:<invalid> ax:<invalid> es:ds ds:ds si:<invalid> bx:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_0421_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> di:<invalid> ax:<invalid> es:ds ds:ds si:<invalid> bx:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_043A_1:
	Mem68[ds:di_10:byte] = Mem0[ds_59:si:byte]
	si = si + 0x0001
	di_10 = di_10 + 0x0001
	cx_66 = cx_66 - 0x0001
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> di:<invalid> ax:<invalid> es:ds ds:<invalid> si:<invalid> dx:<invalid> bx:<invalid> -4(fp):ds -2(fp):ds
// LocalsOut: fp(16) Local -0002(16)



void ___pull_free_block(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx eax ebx rax rbx
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_0491_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_0491:
	word16 ax_16 = Mem0[ds:wArg02 + 0x0006:word16]
	Mem17[ds:0x062A:word16] = ax_16
	branch ax_16 != wArg02 l0800_04AB
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_04AB:
	word16 si_30 = Mem17[ds:wArg02 + 0x0004:word16]
	Mem32[ds:Mem17[ds:0x062A:word16] + 0x0004:word16] = si_30
	Mem34[ds:si_30 + 0x0006:word16] = Mem32[ds:0x062A:word16]
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_04A3:
	Mem28[ds:0x062A:word16] = 0x0000
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_04BB:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> si:<invalid> bx:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_0491_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di ax:<invalid> si:si bx:<invalid> -6(fp):di -4(fp):si -2(fp):bp



word16 fn0800_04BF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax eax rax
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_04BF_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_04BF:
	Mem19[ds:wArg02:word16] = Mem0[ds:wArg02:word16] - wArg04
	word16 si_21 = Mem19[ds:wArg02:word16] + wArg02
	Mem24[ds:si_21:word16] = wArg04 + 0x0001
	Mem25[ds:si_21 + 0x0002:word16] = wArg02
	branch Mem25[ds:0x0628:word16] != wArg02 l0800_04E6
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_04E6:
	Mem43[ds:si_21 + wArg04 + 0x0002:word16] = si_21
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_04E0:
	Mem39[ds:0x0628:word16] = si_21
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_04EE:
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_04F5:
	return si_21 + 0x0004
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_04BF_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di ax:<invalid> si:si -6(fp):di -4(fp):si -2(fp):bp



word16 fn0800_04F9(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_04F9_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_04F9:
	word16 ax_30
	word16 ax_21 = ___sbrk(ds, wArg02 & 0xFFFF, 0x0000)
	branch ax_21 != 0xFFFF l0800_051B
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_051B:
	Mem42[ds:ax_21 + 0x0002:word16] = Mem0[ds:0x0628:word16]
	Mem45[ds:ax_21:word16] = wArg02 + 0x0001
	Mem46[ds:0x0628:word16] = ax_21
	ax_30 = Mem46[ds:0x0628:word16] + 0x0004
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> dx:<invalid> cx:0x0000 si:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0517:
	ax_30 = 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> dx:<invalid> cx:0x0000 si:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0533:
	return ax_30
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> dx:<invalid> cx:0x0000 si:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):si -2(fp):bp

fn0800_04F9_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> cx:0x0000 si:si -8(fp):<invalid> -6(fp):0x0000 -4(fp):si -2(fp):bp



word16 fn0800_0536(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_0536_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_0536:
	word16 ax_30
	word16 ax_21 = ___sbrk(ds, wArg02 & 0xFFFF, 0x0000)
	branch ax_21 != 0xFFFF l0800_0558
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_0558:
	Mem40[ds:0x062C:word16] = ax_21
	Mem41[ds:0x0628:word16] = ax_21
	Mem44[ds:ax_21:word16] = wArg02 + 0x0001
	ax_30 = ax_21 + 0x0004
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> dx:<invalid> cx:0x0000 si:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0554:
	ax_30 = 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> dx:<invalid> cx:0x0000 si:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_056D:
	return ax_30
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 ax:<invalid> dx:<invalid> cx:0x0000 si:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):si -2(fp):bp

fn0800_0536_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> cx:0x0000 si:si -8(fp):<invalid> -6(fp):0x0000 -4(fp):si -2(fp):bp



word16 _malloc(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_0570_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_0570:
	word16 ax_102
	branch wArg02 == 0x0000 l0800_0581
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16)

l0800_057C:
	branch wArg02 <=u 0xFFF4 l0800_0585
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_0585:
	word16 ax_49 = wArg02 + 0x000B & 0xFFF8
	branch Mem0[ds:0x062C:word16] != 0x0000 l0800_059D
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_059D:
	word16 si_104 = Mem0[ds:0x062A:word16]
	branch si_104 == 0x0000 l0800_05D8
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_05A7:
	branch Mem0[ds:si_104:word16] <u ax_49 + 0x0028 l0800_05BB
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> si:<invalid> dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_05BB:
	branch Mem0[ds:si_104:word16] <u ax_49 l0800_05CF
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> si:<invalid> dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_05CF:
	si_104 = Mem0[ds:si_104 + 0x0006:word16]
	branch si_104 != Mem0[ds:0x062A:word16] l0800_05A7
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> si:<invalid> dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_05D8:
	ax_102 = fn0800_04F9(ds, ax_49)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> si:<invalid> dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_05C1:
	___pull_free_block(ds, si_104)
	Mem100[ds:si_104:word16] = Mem0[ds:si_104:word16] + 0x0001
	ax_102 = si_104 + 0x0004
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> si:<invalid> dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_05B2:
	ax_102 = fn0800_04BF(ds, si_104, ax_49)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> si:<invalid> dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0596:
	ax_102 = fn0800_0536(ds, ax_49)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0581:
	ax_102 = 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_05DF:
	return ax_102
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> bx:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_0570_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di ax:<invalid> si:si dx:<invalid> cx:<invalid> bx:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp



void ___brk(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_05E3_entry:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_05E3:
	branch wArg02 >=u fp - 0x0102 l0800_05FA
// DataOut: ax di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_05FA:
	Mem22[ds:0x0094:word16] = 0x0008
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:fp - 0x0102 -2(fp):bp

l0800_05F3:
	Mem17[ds:0x009E:word16] = wArg02
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:fp - 0x0102 -2(fp):bp

l0800_0605:
	return
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:fp - 0x0102 -2(fp):bp

fn0800_05E3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:fp - 0x0102 -2(fp):bp



word16 ___sbrk(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_0607_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_0607:
	word16 ax_31
	word16 ax_12 = wArg02 + Mem0[ds:0x009E:word16]
	ui32 dx_cx_18 = SEQ(wArg04 + (ax_12 <u 0x0000), ax_12 + 0x0100)
	word16 cx_22 = (word16) (dx_cx_18 + 0x00000100)
	branch SEQ(SLICE(dx_cx_18 + 0x00000100, word16, 16), cx_22) != 0x00000000 l0800_062E
// DataOut: ax cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0624:
	branch cx_22 >=u fp - 2 l0800_062E
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> cx:<invalid> -2(fp):bp

l0800_062E:
	Mem37[ds:0x0094:word16] = 0x0008
	ax_31 = 0xFFFF
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> cx:<invalid> -2(fp):bp

l0800_0628:
	word16 v13_42 = Mem0[ds:0x009E:word16]
	Mem43[ds:0x009E:word16] = ax_12
	ax_31 = v13_42
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> cx:<invalid> -2(fp):bp

l0800_0639:
	return ax_31
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> dx:<invalid> cx:<invalid> -2(fp):bp

fn0800_0607_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> cx:<invalid> -2(fp):bp



void _brk(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_063B_entry:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_063B:
	___brk(ds, wArg02)
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_0647:
	return
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 cx:<invalid> ax:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_063B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> ax:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_065B(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx eax ebx rax rbx
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_065B_entry:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_065B:
	word16 ax_30
	word16 si_17 = Mem0[ds:wArg02:word16]
	word16 wLoc04_19 = si_17
	branch (Mem0[ds:wArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_067B
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(16)

l0800_067B:
	word16 di_40 = Mem0[ds:wArg02 + 0x000A:word16]
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 bx:<invalid> si:<invalid> ax:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_068E:
	si_17 = si_17 - 0x0001
	branch si_17 != 0x0000 l0800_0683
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 bx:<invalid> si:<invalid> ax:<invalid> di:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_0683:
	di_40 = di_60 + 0x0001
	word16 di_60 = di_40
	branch Mem0[ds:di_60:byte] != 0x0A l0800_068E
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 bx:<invalid> si:<invalid> ax:<invalid> di:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_068B:
	wLoc04_19 = wLoc04_19 + 0x0001
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 bx:<invalid> si:<invalid> ax:<invalid> di:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_0695:
	ax_30 = wLoc04_19
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 bx:<invalid> si:<invalid> ax:<invalid> di:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_0677:
	ax_30 = si_17
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 bx:<invalid> si:<invalid> ax:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_069A:
	return ax_30
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 bx:<invalid> si:<invalid> ax:<invalid> di:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_065B_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> si:si ax:<invalid> di:di -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



void _fseek(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_06A2_entry:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_06A2:
	branch _fflush(ds, wArg02) == 0x0000 l0800_06B7
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_06B7:
	branch wArg08 != 0x0001 l0800_06CD
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_06BD:
	branch Mem0[ds:wArg02:word16] <= 0x0000 l0800_06CD
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_06C2:
	wArg04 = wArg04 - (word16) ((int32) fn0800_065B(ds, wArg02))
	wArg06 = v16
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_06CD:
	Mem64[ds:wArg02 + 0x0002:word16] = Mem0[ds:wArg02 + 0x0002:word16] & 0xFE5F
	Mem67[ds:wArg02:word16] = 0x0000
	Mem69[ds:wArg02 + 0x000A:word16] = Mem67[ds:wArg02 + 0x0008:word16]
	word16 ax_81 = (int16) Mem69[ds:wArg02 + 0x0004:byte]
	word16 dx_85
	word16 ax_86 = _lseek((byte) ax_81, ds, ax_81, wArg04, wArg06, (byte) wArg08, out dx_85)
	branch dx_85 != 0xFFFF l0800_06FF
// DataOut: ax di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> bx:<invalid> Sequence dx:ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_06F5:
	branch ax_86 != 0xFFFF l0800_06FF
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> ah:0x42 dx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_06FF:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> ah:0x42 dx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_06FA:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> ah:0x42 dx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_0701:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_06B2:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0703:
	return
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>

fn0800_06A2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>



void fn0800_075B(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: di si sp
fn0800_075B_entry:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_075B:
	word16 di_16 = 0x0014
	word16 si_17 = 0x0342
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0778:
	di_16 = di_16 - 0x0001
	branch di_16 != 0x0000 l0800_0765
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_0765:
	branch (Mem0[ds:si_17 + 0x0002:word16] & 0x0300) != 0x0300 l0800_0775
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_0770:
	_fflush(ds, si_17)
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_0775:
	si_17 = si_17 + 0x0010
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_077F:
	return
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

fn0800_075B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp di:di si:si ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si



word16 fn0800_0782(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_0782_entry:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_0782:
	branch (Mem0[ds:wArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_0793
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0790:
	fn0800_075B(ds)
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0793:
	word16 ax_35
	word16 v10_16 = Mem0[ds:wArg02 + 0x0006:word16]
	word16 ax_19 = Mem0[ds:wArg02 + 0x0008:word16]
	Mem20[ds:wArg02 + 0x000A:word16] = ax_19
	word16 ax_27 = _read(ds, (int16) Mem20[ds:wArg02 + 0x0004:byte], ax_19, v10_16)
	Mem29[ds:wArg02:word16] = ax_27
	branch ax_27 <= 0x0000 l0800_07B9
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_07B9:
	branch Mem29[ds:wArg02:word16] != 0x0000 l0800_07CC
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> es:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_07CC:
	Mem63[ds:wArg02:word16] = 0x0000
	Mem65[ds:wArg02 + 0x0002:word16] = Mem63[ds:wArg02 + 0x0002:word16] | 0x0010
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> es:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_07BE:
	Mem62[ds:wArg02 + 0x0002:word16] = Mem29[ds:wArg02 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> es:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_07D5:
	ax_35 = 0xFFFF
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> es:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_07AE:
	Mem44[ds:wArg02 + 0x0002:word16] = Mem29[ds:wArg02 + 0x0002:word16] & 0xFFDF
	ax_35 = 0x0000
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> es:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_07DA:
	return ax_35
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> es:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_0782_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> es:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



void _fgetc(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_07F2_entry:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0003(0) Local -000A(16) Local -000E(16) Stack +0002(16)

l0800_07F2:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0003(0) Local -000A(16) Local -000E(16)

l0800_07FC:
	word16 v8_37 = Mem0[ds:wArg02:word16] - 0x0001
	Mem38[ds:wArg02:word16] = v8_37
	branch v8_37 < 0x0000 l0800_080E
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -000A(16) Local -000E(16)

l0800_080E:
	word16 v15_65 = Mem38[ds:wArg02:word16] + 0x0001
	Mem66[ds:wArg02:word16] = v15_65
	branch v15_65 < 0x0000 l0800_0819
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -000A(16) Local -000E(16)

l0800_0812:
	branch (Mem66[ds:wArg02 + 0x0002:word16] & 0x0110) == 0x0000 l0800_0824
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -000A(16) Local -000E(16)

l0800_0824:
	Mem90[ds:wArg02 + 0x0002:word16] = Mem66[ds:wArg02 + 0x0002:word16] | 0x0080
	branch Mem90[ds:wArg02 + 0x0006:word16] == 0x0000 l0800_0842
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -000A(16) Local -000E(16)

l0800_0842:
	branch Mem90[ds:0x04AA:word16] != 0x0000 l0800_0881
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -000A(16) Local -000E(16)

l0800_0849:
	branch 0x0342 != wArg02 l0800_0881
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -000A(16) Local -000E(16)

l0800_0881:
	branch (Mem90[ds:wArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_088B
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -000E(16)

l0800_0888:
	fn0800_075B(ds)
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -000E(16)

l0800_088B:
	word16 ax_122 = (int16) Mem90[ds:wArg02 + 0x0004:byte]
	__read((byte) ax_122, ds, ax_122, fp - 0x0003, 0x0001)
	branch 0xFFFE == 0x0000 l0800_08C9
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -000A(16) Local -000E(16)

l0800_08C9:
	branch bLoc03 != 0x0D l0800_08D6
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> ah:0x3F bx:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):fp - 0x0003 -8(fp):0x0001 -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -000E(16)

l0800_08CF:
	branch (Mem90[ds:wArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_0881
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> ah:0x3F bx:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):fp - 0x0003 -8(fp):0x0001 -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -000E(16)

l0800_08D6:
	Mem156[ds:wArg02 + 0x0002:word16] = Mem90[ds:wArg02 + 0x0002:word16] & 0xFFDF
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> ah:0x3F bx:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):fp - 0x0003 -8(fp):0x0001 -6(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_08A3:
	branch _eof(ds, (int16) Mem90[ds:wArg02 + 0x0004:byte]) == 0x0001 l0800_08B8
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> ah:0x3F bx:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):fp - 0x0003 -8(fp):0x0001 -6(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_08B8:
	Mem150[ds:wArg02 + 0x0002:word16] = Mem90[ds:wArg02 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cx:<invalid> al:0xFF ah:<invalid> bx:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):fp - 0x0003 -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_08B1:
	Mem142[ds:wArg02 + 0x0002:word16] = Mem90[ds:wArg02 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cx:<invalid> al:0xFF ah:<invalid> bx:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):fp - 0x0003 -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_08C4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):fp - 0x0003 -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0850:
	branch _isatty((int16) Mem90[ds:wArg02 + 0x0004:byte]) != 0x0000 l0800_0862
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:0x0342 al:0x42 bx:<invalid> cx:<invalid> dx:<invalid> ah:0x03 es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(0)

l0800_085D:
	Mem207[ds:wArg02 + 0x0002:word16] = Mem90[ds:wArg02 + 0x0002:word16] & 0xFDFF
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(0)

l0800_0862:
	word16 ax_184
	branch (Mem90[ds:wArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_0872
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -0008(16)

l0800_0872:
	ax_184 = 0x0000
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> ax:0x0200 al:0x00 bx:<invalid> cx:<invalid> dx:<invalid> ah:0x02 es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -0008(16)

l0800_086D:
	ax_184 = 0x0001
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> ax:0x0200 al:0x00 bx:<invalid> cx:<invalid> dx:<invalid> ah:0x02 es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -0008(16)

l0800_0874:
	_setvbuf(ds, wArg02, 0x0000, ax_184, 0x0200)
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ah:0x00 es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -000A(16) Local -000E(16)

l0800_082F:
	branch fn0800_0782(ds, wArg02) == 0x0000 l0800_083D
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -000A(16) Local -000E(16)

l0800_083D:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -000A(16) Local -000E(16)

l0800_0837:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0819:
	Mem71[ds:wArg02 + 0x0002:word16] = Mem66[ds:wArg02 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0800:
	Mem60[ds:wArg02 + 0x000A:word16] = Mem38[ds:wArg02 + 0x000A:word16] + 0x0001
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_08E2:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp

fn0800_07F2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si bx:<invalid> al:<invalid> ah:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp



word16 _isatty(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx eax ebx rax rbx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_08F2_entry:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_08F2:
	word16 dx_8
	msdos_ioctl_get_device_info(wArg02, out dx_8)
	return dx_8 & 0x0080
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_08F2_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:dx & 0x0080 -2(fp):bp



void _setvbuf(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_0904_entry:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0904:
	branch Mem0[ds:wArg02 + 0x000E:word16] != wArg02 l0800_0922
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_0916:
	branch wArg06 > 0x0002 l0800_0922
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_091C:
	byte SCZO_55 = cond(wArg08 - 0x7FFF)
	branch wArg08 <=u 0x7FFF l0800_0928
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_0928:
	branch Mem0[ds:0x04AC:word16] != 0x0000 l0800_093E
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_092F:
	branch 0x0352 != wArg02 l0800_093E
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_093E:
	branch Mem0[ds:0x04AA:word16] != 0x0000 l0800_0952
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_0945:
	branch 0x0342 != wArg02 l0800_0952
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_094C:
	Mem159[ds:0x04AA:word16] = 0x0001
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:0x0342 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_0936:
	Mem163[ds:0x04AC:word16] = 0x0001
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:0x0352 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_0952:
	branch Mem0[ds:wArg02:word16] == 0x0000 l0800_0966
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_0957:
	_fseek(ds, wArg02, 0x0000, 0x0000, 0x0001)
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_0966:
	branch (Mem0[ds:wArg02 + 0x0002:word16] & 0x0004) == 0x0000 l0800_0974
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):0x0001 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_096D:
	_free(ds, Mem0[ds:wArg02 + 0x0008:word16])
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):0x0001 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_0974:
	Mem76[ds:wArg02 + 0x0002:word16] = Mem0[ds:wArg02 + 0x0002:word16] & 0xFFF3
	Mem78[ds:wArg02 + 0x0006:word16] = 0x0000
	Mem81[ds:wArg02 + 0x0008:word16] = wArg02 + 0x0005
	Mem82[ds:wArg02 + 0x000A:word16] = wArg02 + 0x0005
	branch wArg06 == 0x0002 l0800_09CE
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_098F:
	branch DPB(SCZO_55, false, 0) l0800_09CE
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_0993:
	Mem100[ds:0x0234:word16] = 0x09D6
	branch wArg04 != 0x0000 l0800_09B7
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_099F:
	word16 ax_121 = _malloc(ds, wArg08)
	wArg04 = ax_121
	branch ax_121 == 0x0000 l0800_09B2
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16)

l0800_09B2:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_09AB:
	Mem130[ds:wArg02 + 0x0002:word16] = Mem100[ds:wArg02 + 0x0002:word16] | 0x0004
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16)

l0800_09B7:
	Mem110[ds:wArg02 + 0x000A:word16] = wArg04
	Mem111[ds:wArg02 + 0x0008:word16] = wArg04
	Mem112[ds:wArg02 + 0x0006:word16] = wArg08
	branch wArg06 != 0x0001 l0800_09CE
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_09C9:
	Mem116[ds:wArg02 + 0x0002:word16] = Mem112[ds:wArg02 + 0x0002:word16] | 0x0008
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_09CE:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_0922:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_09D2:
	return
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

fn0800_0904_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di si:si ax:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>



word16 _read(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_09F7_entry:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0003(8) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_09F7:
	word16 ax_101
	byte al_121 = (byte) (wArg06 + 0x0001)
	branch wArg06 <u 0xFFFF l0800_0A15
// DataOut: al ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0003(8) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0A08:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x0200) == 0x0000 l0800_0A1A
// DataOut: al ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0A1A:
	__read(al_121, ds, wArg02, wArg04, wArg06)
	branch false l0800_0A42
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> si:<invalid> es:ds di:<invalid> al:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):fp - 0x0003 -16(fp):<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -0006(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0A35:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x8000) == 0x0000 l0800_0A48
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> al:0x00 si:<invalid> es:ds di:<invalid> -20(fp):<invalid> -18(fp):fp - 0x0003 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -0006(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0A48:
	word16 cx_108 = 0xFFFF
	word16 si_109 = wArg04
	word16 di_114 = wArg04
// DataOut: bx cx di ds es si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> al:0x00 si:<invalid> es:ds di:<invalid> -20(fp):<invalid> -18(fp):fp - 0x0003 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0A55:
	al_121 = Mem0[ds:si_109:byte]
	si_109 = si_109 + 0x0001
	branch al_121 == 0x1A l0800_0A87
// DataOut: al bx cx di ds es si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> si:<invalid> es:ds di:<invalid> ah:<invalid> dx:<invalid> al:<invalid> -20(fp):<invalid> -18(fp):fp - 0x0003 -16(fp):<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0A87:
	word16 cx_199 = -cx_108
	word16 ax_201 = 0x0000 - (cx_199 == 0x0000)
	word16 dx_211
	_lseek((byte) ax_201, ds, wArg02, cx_199, ax_201, 0x02, out dx_211)
	Mem217[ds:(wArg02 << 0x0001) + 0x0482:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x0482:word16] | 0x0200
// DataOut: bx di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> si:<invalid> es:ds di:<invalid> al:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):fp - 0x0003 -16(fp):<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_0A5A:
	branch al_121 == 0x0D l0800_0A63
// DataOut: al bx cx di ds es si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> si:<invalid> es:ds di:<invalid> al:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):fp - 0x0003 -16(fp):<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0A63:
	cx_108 = cx_108 - 0x0001
	branch cx_108 != 0x0000 l0800_0A55
// DataOut: bx cx di ds es si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> si:<invalid> es:ds di:<invalid> al:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):fp - 0x0003 -16(fp):<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0A65:
	__read((byte) (fp - 0x0003), ds, wArg02, fp - 0x0003, 0x0001)
	Mem191[ds:di_114:byte] = bLoc03
	al_121 = bLoc03
	di_114 = di_114 + 0x0001
// DataOut: al bx di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> si:<invalid> es:ds di:<invalid> al:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):fp - 0x0003 -16(fp):<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0A5E:
	Mem163[ds:di_114:byte] = al_121
	di_114 = di_114 + 0x0001
	cx_108 = cx_108 - 0x0001
	branch cx_108 != 0x0000 l0800_0A55
// DataOut: al bx cx di ds es si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> si:<invalid> es:ds di:<invalid> al:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):fp - 0x0003 -16(fp):<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0A61:
// DataOut: al bx di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> si:<invalid> es:ds di:<invalid> al:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):fp - 0x0003 -16(fp):<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0A7F:
	branch di_114 != wArg04 l0800_0A85
// DataOut: al bx di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> si:<invalid> es:ds di:<invalid> al:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):fp - 0x0003 -16(fp):<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0A85:
// DataOut: bx di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> si:<invalid> es:ds di:<invalid> al:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):fp - 0x0003 -16(fp):<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_0AA7:
	ax_101 = di_114 - wArg04
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> si:<invalid> es:ds di:<invalid> al:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_0A83:
// DataOut: al ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> cx:<invalid> si:<invalid> es:ds di:<invalid> al:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):fp - 0x0003 -16(fp):<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0A42:
	ax_101 = 0xFFFF
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> al:0x00 si:<invalid> es:ds di:<invalid> -20(fp):<invalid> -18(fp):fp - 0x0003 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_0A15:
	ax_101 = 0x0000
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0AAD:
	return ax_101
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 2 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> si:<invalid> es:ds di:<invalid> al:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -2(fp):bp

fn0800_09F7_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> di:di si:si ah:<invalid> cx:<invalid> dx:<invalid> es:ds al:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -2(fp):bp



void __read(byte al, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_0AB3_entry:
// DataOut: al di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0AB3:
	word16 ax_17
	branch msdos_read_file(wArg02, wArg06, SEQ(ds, wArg04), out ax_17) l0800_0AC7
// DataOut: ax di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0AC7:
	__IOERROR(ds, ax_17)
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:0x3F bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):bp

l0800_0AC5:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:0x3F bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):bp

l0800_0ACD:
	return
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ah:0x3F bx:<invalid> cx:<invalid> dx:<invalid> al:0xFF ax:0xFFFF -4(fp):ax -2(fp):bp

fn0800_0AB3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:0x3F bx:<invalid> cx:<invalid> dx:<invalid> al:0xFF ax:0xFFFF -4(fp):ax -2(fp):bp



word16 _write(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_0ACF_entry:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0ACF:
	word16 ax_149
	byte al_16 = (byte) (wArg06 + 0x0001)
	branch wArg06 >=u 0xFFFF l0800_0AE6
// DataOut: al ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0AE6:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x8000) == 0x0000 l0800_0B05
// DataOut: al ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> -144(fp):di -142(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0B05:
	Mem83[ds:(wArg02 << 0x0001) + 0x0482:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0xFDFF
	word16 wLoc86_113 = wArg04
	word16 wLoc8A_110 = wArg06
	word16 si_105 = fp - 0x0084
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> -144(fp):di -142(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0086(16) Local -008A(0) Stack +0002(16) Stack +0006(16)

l0800_0B91:
	branch wLoc8A_110 == 0x0000 l0800_0B9B
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> al:<invalid> dx:<invalid> di:<invalid> ah:<invalid> cx:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16) Local -0086(16) Local -008A(16) Stack +0002(16) Stack +0006(16)

l0800_0B9B:
	word16 di_165 = si_105 - (fp - 0x0084)
	branch DPB(CZ, false, 0) l0800_0BD7
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> al:<invalid> dx:<invalid> di:<invalid> ah:<invalid> cx:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16)

l0800_0BA9:
	word16 ax_189 = __write((byte) (fp - 0x0084), ds, wArg02, fp - 0x0084, di_165)
	branch ax_189 == di_165 l0800_0BD7
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16) Local -008C(0) Stack +0006(16)

l0800_0BD7:
	ax_149 = wArg06
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> di:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> al:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16)

l0800_0BC0:
	branch ax_189 >=u 0x0000 l0800_0BCC
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> di:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> al:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16) Local -008C(16) Stack +0006(16)

l0800_0BCC:
	ax_149 = wArg06 + ax_189 - di_165
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> di:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> al:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16)

l0800_0BC7:
	ax_149 = 0xFFFF
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> di:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> al:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16)

l0800_0BD5:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> di:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> al:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16)

l0800_0B98:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> al:<invalid> dx:<invalid> di:<invalid> ah:<invalid> cx:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16) Local -0086(16) Local -008A(16) Stack +0002(16) Stack +0006(16)

l0800_0B24:
	word16 v20_109 = wLoc8A_110 - 0x0001
	wLoc8A_110 = v20_109
	wLoc86_113 = wLoc86_113 + 0x0001
	byte al_114 = Mem83[ds:wLoc86_113:byte]
	branch al_114 != 0x0A l0800_0B3E
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> al:<invalid> dx:<invalid> di:<invalid> ah:<invalid> cx:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16) Local -0086(16) Local -0087(8) Local -008A(0) Stack +0002(16) Stack +0006(16)

l0800_0B3A:
	Mem160[ds:si_105:byte] = 0x0D
	si_105 = si_105 + 0x0001
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> al:<invalid> dx:<invalid> di:<invalid> ah:<invalid> cx:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16) Local -0086(16) Local -0087(8) Local -008A(0) Stack +0002(16) Stack +0006(16)

l0800_0B3E:
	Mem121[ds:si_105:byte] = al_114
	si_105 = si_105 + 0x0001
	branch si_105 - (fp - 0x0084) < 0x0080 l0800_0B91
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> al:<invalid> dx:<invalid> di:<invalid> ah:<invalid> cx:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16) Local -0086(16) Local -008A(0) Stack +0002(16) Stack +0006(16)

l0800_0B53:
	word16 di_130 = si_105 - (fp - 0x0084)
	word16 ax_141 = __write((byte) (fp - 0x0084), ds, wArg02, fp - 0x0084, di_130)
	branch ax_141 == di_130 l0800_0B8D
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:fp - 0x0084 bx:<invalid> si:<invalid> al:<invalid> dx:<invalid> di:<invalid> ah:<invalid> cx:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16) Local -0086(16) Local -008A(0) Local -008C(0) Stack +0002(16) Stack +0006(16)

l0800_0B8D:
	si_105 = fp - 0x0084
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> al:<invalid> dx:<invalid> di:<invalid> ah:<invalid> cx:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16) Local -0086(16) Local -008A(0) Stack +0002(16) Stack +0006(16)

l0800_0B72:
	branch ax_141 >=u 0x0000 l0800_0B7E
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> al:<invalid> dx:<invalid> di:<invalid> ah:<invalid> cx:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16) Local -008A(16) Local -008C(16) Stack +0006(16)

l0800_0B7E:
	ax_149 = wArg06 - v20_109 + ax_141 - di_130
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> al:<invalid> dx:<invalid> di:<invalid> ah:<invalid> cx:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16)

l0800_0B79:
	ax_149 = 0xFFFF
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> al:<invalid> dx:<invalid> di:<invalid> ah:<invalid> cx:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16)

l0800_0B8B:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> al:<invalid> dx:<invalid> di:<invalid> ah:<invalid> cx:<invalid> -150(fp):<invalid> -148(fp):fp - 0x0084 -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp
// LocalsOut: fp(16)

l0800_0AF3:
	ax_149 = __write(al_16, ds, wArg02, wArg04, wArg06)
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> -144(fp):di -142(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0AE1:
	ax_149 = 0x0000
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> -144(fp):di -142(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0BDC:
	return ax_149
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0090 bp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> di:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> al:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp

fn0800_0ACF_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> al:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):di -142(fp):si -140(fp):<invalid> -138(fp):<invalid> -135(fp):<invalid> -134(fp):<invalid> -132(fp):0x0D -2(fp):bp



word16 __write(byte al, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_0BE2_entry:
// DataOut: al di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0BE2:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x0800) == 0x0000 l0800_0C02
// DataOut: al di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0BF2:
	word16 dx_82
	_lseek(0x00, ds, wArg02, 0x0000, 0x0000, 0x02, out dx_82)
// DataOut: al di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_0C02:
	word16 ax_44
	word16 ax_38
	branch msdos_write_file(wArg02, wArg06, SEQ(ds, wArg04), out ax_38) l0800_0C20
// DataOut: ax di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> ax:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0002 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Stack +0002(16)

l0800_0C20:
	ax_44 = __IOERROR(ds, ax_38)
// DataOut: ax di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> ax:<invalid> ah:0x40 cx:<invalid> dx:<invalid> al:<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0002 -2(fp):bp

l0800_0C11:
	Mem54[ds:(wArg02 << 0x0001) + 0x0482:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x0482:word16] | 0x1000
	ax_44 = ax_38
// DataOut: ax di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> ax:<invalid> ah:0x40 cx:<invalid> dx:<invalid> al:<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0002 -2(fp):bp

l0800_0C26:
	return ax_44
// DataOut: ax di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> al:<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):<invalid> -2(fp):bp

fn0800_0BE2_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> al:<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):<invalid> -2(fp):bp



word16 _lseek(byte al, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, byte bArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: al ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)
fn0800_0C28_entry:
// DataOut: al di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_0C28:
	Mem12[ds:(wArg02 << 0x0001) + 0x0482:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0xFDFF
	word16 ax_18 = DPB(ax, bArg08, 0)
	word16 dx_23
	*dxOut = wArg04
	branch msdos_set_file_position(wArg02, SEQ(wArg06, wArg04), bArg08, SEQ(wArg04, ax_18)) l0800_0C4A
// DataOut: al ax di ds dx si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0C4A:
	__IOERROR(ds, ax_18)
	word16 dx_44
	*dxOut = 0x0000
	ax_18 = 0xFFFF (alias)
// DataOut: al ax di ds dx si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -2(fp):bp

l0800_0C48:
// DataOut: al ax di ds dx si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -2(fp):bp

l0800_0C51:
	return ax_18
// DataOut: al ax di ds dx si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ax:0xFFFF -4(fp):ax -2(fp):bp

fn0800_0C28_exit:
// DataOut: al ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ax:0xFFFF -4(fp):ax -2(fp):bp



void __LONGTOA(selector ds, byte bArg02, byte bArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp di es si sp
// Stack args: Stack +0002(8) Stack +0004(8) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_0C53_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(8) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_0C53:
	word16 di_119 = wArg08
	byte bl_25 = (byte) wArg06
	branch wArg06 >u 0x0024 l0800_0CC1
// DataOut: bl bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(8) Stack +000A(16) Stack +000C(16)

l0800_0C69:
	branch bl_25 <u 0x02 l0800_0CC1
// DataOut: bl bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 di:<invalid> es:ds bx:<invalid> -44(fp):ds -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(8) Stack +000A(16) Stack +000C(16)

l0800_0C6E:
	word16 ax_103 = wArg0A
	word16 cx_145 = wArg0C
	branch wArg0C >= 0x0000 l0800_0C89
// DataOut: ax bl bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 di:<invalid> es:ds bx:<invalid> -44(fp):ds -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(8)

l0800_0C78:
	branch bArg04 == 0x00 l0800_0C89
// DataOut: ax bl bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 di:<invalid> es:ds bx:<invalid> ax:<invalid> cx:<invalid> -44(fp):ds -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_0C7E:
	Mem173[ds:wArg08:byte] = 0x2D
	ax_103 = -wArg0A
	di_119 = wArg08 + 0x0001
	cx_145 = -wArg0C - (ax_103 == 0x0000)
// DataOut: ax bl bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 di:<invalid> es:ds bx:<invalid> ax:<invalid> cx:<invalid> -44(fp):ds -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_0C89:
	word16 si_104 = fp - 0x0024
	branch cx_145 == 0x0000 l0800_0C9D
// DataOut: ax bl bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 di:<invalid> es:ds bx:<invalid> ax:<invalid> cx:<invalid> -44(fp):ds -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_0C8E:
	word32 dx_ax_152 = (uint32) (uint16) cx_145
	word32 dx_ax_158 = SEQ((uint16) (dx_ax_152 % wArg06), ax_103)
	Mem167[ds:si_104:byte] = (byte) (uint16) (dx_ax_158 % wArg06)
	word16 ax_155 = (uint16) (dx_ax_152 /u wArg06)
	cx_145 = ax_155
	ax_103 = (uint16) (dx_ax_158 /u wArg06)
	si_104 = si_104 + 0x0001
	branch ax_155 == 0x0000 l0800_0CA4
// DataOut: ax bl bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 di:<invalid> es:ds bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> -44(fp):ds -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_0CA4:
	branch ax_103 != 0x0000 l0800_0C9D
// DataOut: ax bl bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 di:<invalid> es:ds bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> -44(fp):ds -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_0C9D:
	word32 dx_ax_88 = (uint32) (uint16) ax_103
	Mem96[ds:si_104:byte] = (byte) (uint16) (dx_ax_88 % wArg06)
	ax_103 = (uint16) (dx_ax_88 /u wArg06)
	si_104 = si_104 + 0x0001
// DataOut: ax bl bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 di:<invalid> es:ds bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> -44(fp):ds -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_0CA8:
	word16 cx_113 = 0x0024 - fp + si_104
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 di:<invalid> es:ds bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> -44(fp):ds -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_0CB0:
	byte al_131
	si_104 = si_104 - 0x0001
	byte al_123 = Mem0[ds:si_104:byte]
	branch al_123 >=u 0x0A l0800_0CBB
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 di:<invalid> es:ds bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> -44(fp):ds -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_0CBB:
	al_131 = al_123 - 0x0A + bArg02
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 di:<invalid> es:ds bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> -44(fp):ds -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_0CB7:
	al_131 = al_123 + 0x30
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 di:<invalid> es:ds bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> -44(fp):ds -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_0CBE:
	Mem133[ds:di_119:byte] = al_131
	di_119 = di_119 + 0x0001
	cx_113 = cx_113 - 0x0001
	branch cx_113 != 0x0000 l0800_0CB0
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 di:<invalid> es:ds bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> -44(fp):ds -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_0CC1:
	Mem50[ds:di_119:byte] = 0x00
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 di:<invalid> es:ds bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> -44(fp):ds -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16)

l0800_0CCA:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0028 bp:fp - 2 di:<invalid> es:es bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> -44(fp):ds -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp

fn0800_0C53_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di es:es bx:<invalid> al:<invalid> ax:<invalid> si:si cx:<invalid> dx:<invalid> -44(fp):ds -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp

l0800_0C9B:
// DataOut: ax bl bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 2 di:<invalid> es:ds bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> -44(fp):ds -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)



word16 _eof(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_0D5F_entry:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_0D5F:
	word16 ax_131
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x0200) == 0x0000 l0800_0D78
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_0D78:
	word16 ax_103 = 0x4400
	word16 dx_52
	branch msdos_ioctl_get_device_info(wArg02, out dx_52) l0800_0DC3
// DataOut: ax bx dl ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_0D82:
	branch (dl & 0x80) != 0x00 l0800_0DBF
// DataOut: bx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> ax:0x4400 -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_0D87:
	ax_103 = 0x4201
	branch msdos_set_file_position(wArg02, 0x00000000, 0x01, 0x00004201) l0800_0DC3
// DataOut: ax bx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> ax:0x4400 -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_0D92:
	ax_103 = 0x4202
	branch msdos_set_file_position(wArg02, 0x00000000, 0x02, 0x00004202) l0800_0DC3
// DataOut: ax bx cx ds dx si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> ax:0x4201 cx:0x0000 dx:0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_0DA7:
	ax_103 = 0x4200
	branch msdos_set_file_position(wArg02, 0x00004201, 0x00, 0x42014200) l0800_0DC3
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> ax:0x4202 cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_0DC3:
	ax_131 = __IOERROR(ds, ax_103)
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> ax:<invalid> cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_0DAE:
	branch false l0800_0DBF
// DataOut: ds si
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> ax:0x4200 cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_0DB3:
	branch false l0800_0DBA
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> ax:0x4200 cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_0DB5:
	branch false l0800_0DBF
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> ax:0x4200 cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_0DBF:
	ax_131 = 0x0000
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> ax:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_0DBA:
	ax_131 = 0x0001
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> ax:0x4200 cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_0D72:
	ax_131 = 0x0001
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_0DC9:
	return ax_131
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 bx:<invalid> ax:<invalid> cx:0x0000 dx:<invalid> al:0xFF -10(fp):0x4201 -8(fp):<invalid> -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp

fn0800_0D5F_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:<invalid> cx:0x0000 dx:<invalid> al:0xFF -10(fp):0x4201 -8(fp):<invalid> -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp



word16 _fflush(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_0DCD_entry:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_0DCD:
	word16 ax_102
	branch Mem0[ds:wArg02 + 0x000E:word16] == wArg02 l0800_0DE1
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0DE1:
	branch Mem0[ds:wArg02:word16] < 0x0000 l0800_0E13
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0E13:
	word16 di_71 = Mem0[ds:wArg02 + 0x0006:word16] + Mem0[ds:wArg02:word16]
	Mem74[ds:wArg02:word16] = Mem0[ds:wArg02:word16] - (di_71 + 0x0001)
	word16 ax_78 = Mem74[ds:wArg02 + 0x0008:word16]
	Mem79[ds:wArg02 + 0x000A:word16] = ax_78
	branch _write(ds, (int16) Mem79[ds:wArg02 + 0x0004:byte], ax_78, di_71 + 0x0001) == di_71 + 0x0001 l0800_0E43
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0E32:
	branch (Mem79[ds:wArg02 + 0x0002:word16] & 0x0200) != 0x0000 l0800_0E43
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0E43:
	ax_102 = 0x0000
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0E39:
	Mem99[ds:wArg02 + 0x0002:word16] = Mem79[ds:wArg02 + 0x0002:word16] | 0x0010
	ax_102 = 0xFFFF
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0DE6:
	branch (Mem0[ds:wArg02 + 0x0002:word16] & 0x0008) != 0x0000 l0800_0DF9
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0DED:
	branch Mem0[ds:wArg02 + 0x000A:word16] != wArg02 + 0x0005 l0800_0E0F
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0DF9:
	Mem57[ds:wArg02:word16] = 0x0000
	branch Mem57[ds:wArg02 + 0x000A:word16] != wArg02 + 0x0005 l0800_0E0F
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0E09:
	Mem64[ds:wArg02 + 0x000A:word16] = Mem57[ds:wArg02 + 0x0008:word16]
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0E0F:
	ax_102 = 0x0000
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0DDC:
	ax_102 = 0xFFFF
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0E47:
	return ax_102
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> ax:<invalid> di:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_0DCD_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> di:di al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp



word16 _printf(selector ds, word16 wArg02, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bx di es
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16)
_printf_entry:
	*diOut = di
	*esOut = es
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_0E4B:
	word16 bx_20 = __VPRINTER(fp - 2, ds, fp + 0x0004, wArg02)
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_0E62:
	return bx_20
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 2 ax:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> di:<invalid> si:<invalid> es:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dl:<invalid> -10(fp):fp + 0x0004 -8(fp):<invalid> -6(fp):0x0352 -4(fp):0x0F81 -2(fp):bp

_printf_exit:
// DataOut: bx di es
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> di:<invalid> si:<invalid> es:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dl:<invalid> -10(fp):fp + 0x0004 -8(fp):<invalid> -6(fp):0x0352 -4(fp):0x0F81 -2(fp):bp



void __fputc(selector ds, byte bArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(8) Stack +0004(16)
fn0800_0E64_entry:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16)

l0800_0E64:
	Mem11[ds:wArg04:word16] = Mem0[ds:wArg04:word16] - 0x0001
	_fputc(ds, (byte) (int16) bArg02, wArg04)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_0E7B:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 bx:<invalid> al:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0E64_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> al:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void _fputc(selector ds, byte bArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(8) Stack +0004(16)
fn0800_0E7D_entry:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(8) Stack +0004(16)

l0800_0E7D:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0003(8) Local -000A(16)

l0800_0E8D:
	word16 v9_32 = Mem0[ds:wArg04:word16] + 0x0001
	Mem33[ds:wArg04:word16] = v9_32
	branch v9_32 >= 0x0000 l0800_0EC7
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -000A(16)

l0800_0EC7:
	Mem89[ds:wArg04:word16] = Mem33[ds:wArg04:word16] - 0x0001
	branch (Mem89[ds:wArg04 + 0x0002:word16] & 0x0090) != 0x0000 l0800_0ED7
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -000A(16)

l0800_0ED0:
	branch (Mem89[ds:wArg04 + 0x0002:word16] & 0x0002) != 0x0000 l0800_0EE2
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -000A(16)

l0800_0EE2:
	Mem104[ds:wArg04 + 0x0002:word16] = Mem89[ds:wArg04 + 0x0002:word16] | 0x0100
	branch Mem104[ds:wArg04 + 0x0006:word16] == 0x0000 l0800_0F11
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -000A(16)

l0800_0F11:
	branch bArg02 != 0x0A l0800_0F36
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8)

l0800_0F17:
	branch (Mem104[ds:wArg04 + 0x0002:word16] & 0x0040) != 0x0000 l0800_0F36
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8)

l0800_0F1E:
	word16 ax_189 = (int16) Mem104[ds:wArg04 + 0x0004:byte]
	branch __write((byte) ax_189, ds, ax_189, 0x04E0, 0x0001) != 0x0001 l0800_0F4E
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8)

l0800_0F36:
	word16 ax_171 = (int16) Mem104[ds:wArg04 + 0x0004:byte]
	branch __write((byte) ax_171, ds, ax_171, fp + 0x0002, 0x0001) == 0x0001 l0800_0F5F
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):0x04E0 -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8)

l0800_0F4E:
	branch (Mem104[ds:wArg04 + 0x0002:word16] & 0x0200) != 0x0000 l0800_0F5F
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0001 -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8)

l0800_0F5F:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0001 -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_0F55:
	Mem158[ds:wArg04 + 0x0002:word16] = Mem104[ds:wArg04 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0001 -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_0EED:
	branch Mem104[ds:wArg04:word16] == 0x0000 l0800_0F02
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -000A(16)

l0800_0F02:
	Mem133[ds:wArg04:word16] = 0xFFFF - Mem104[ds:wArg04 + 0x0006:word16]
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -000A(16)

l0800_0EF2:
	branch _fflush(ds, wArg04) == 0x0000 l0800_0F00
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -000A(16)

l0800_0F00:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -000A(16)

l0800_0F0C:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -000A(16)

l0800_0EFB:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_0ED7:
	Mem95[ds:wArg04 + 0x0002:word16] = Mem89[ds:wArg04 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_0E91:
	Mem54[ds:wArg04 + 0x000A:word16] = Mem33[ds:wArg04 + 0x000A:word16] + 0x0001
	Mem56[ds:Mem54[ds:wArg04 + 0x000A:word16] - 0x0001:byte] = bArg02
	branch (Mem56[ds:wArg04 + 0x0002:word16] & 0x0008) == 0x0000 l0800_0EBF
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -000A(16)

l0800_0EA4:
	branch bArg02 == 0x0A l0800_0EB0
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> bx:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -000A(16)

l0800_0EAA:
	branch bArg02 != 0x0D l0800_0EBF
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> bx:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8) Local -000A(16)

l0800_0EB0:
	branch _fflush(ds, wArg04) == 0x0000 l0800_0EBF
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> bx:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0003(8)

l0800_0EBF:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_0EB9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_0F66:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 2 si:<invalid> al:<invalid> bx:<invalid> ah:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp

fn0800_0E7D_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si al:<invalid> bx:<invalid> ah:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -3(fp):<invalid> -2(fp):bp



void __REALCVT()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0800_1044_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_1044:
	word16 sp_4
	selector ds_5
	call Mem0[ds:0x05E0:word16] (retsize: 2; depth: 2)
		uses: ds,sp_1
		defs: ds_5,sp_4
	return
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_1044_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word16 fn0800_1048(word16 di, selector es, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds es
// LiveOut: di
// Trashed: SCZDO al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx rax rbx rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_1048_entry:
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_1048:
	byte dh_8 = SLICE(wArg02, byte, 8)
	Mem20[es:di:byte] = Mem0[ds:(uint16) (dh_8 >>u 0x04) + 0x04E9:byte]
	Mem27[es:di + 0x0001:byte] = Mem20[ds:(uint16) (dh_8 & 0x0F) + 0x04E9:byte]
	byte dl_9 = (byte) wArg02
	Mem32[es:di + 0x0002:byte] = Mem27[ds:(uint16) (dl_9 >>u 0x04) + 0x04E9:byte]
	Mem39[es:di + 0x0003:byte] = Mem32[ds:(uint16) (dl_9 & 0x0F) + 0x04E9:byte]
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_106F:
	return di + 0x0004
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 dx:<invalid> cx:0x0F04 bx:0x04E9 al:<invalid> di:di + 0x000F -2(fp):bp

fn0800_1048_exit:
// DataOut: di
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> cx:0x0F04 bx:0x04E9 al:<invalid> di:di + 0x000F -2(fp):bp



word16 __VPRINTER(word16 bp, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di es si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_1073_entry:
// DataOut: bp bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_1073:
	byte bLoc57_124 = 0x50
// DataOut: bp bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_10CD:
	word16 sp_1027 = fp - 0x00A0
	word16 wLoc98_22 = fp - 0x0056
// DataOut: bp bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x009E bp:fp - 2 -158(fp):di -156(fp):si -90(fp):0x0000 -87(fp):0x50 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -0098(16) Stack +0002(16) Stack +0004(16)

l0800_10D6:
	word16 di_1050 = wLoc98_22
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_10DA:
	word16 si_131 = wArg04
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16)

l0800_10DD:
	byte al_146 = Mem0[ds:si_131:byte]
	si_131 = si_131 + 0x0001
	byte al_148 = al_146
	ax = DPB(ax, al_146, 0) (alias)
	branch al_146 == 0x00 l0800_10F3
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16)

l0800_10F3:
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0)

l0800_10E2:
	branch al_146 == 0x25 l0800_10F6
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16)

l0800_10F6:
	al_148 = Mem0[ds:si_131:byte]
	ax = DPB(ax, al_148, 0) (alias)
	si_131 = si_131 + 0x0001
	branch al_148 == 0x25 l0800_10E6
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008C(16) Stack +0002(16)

l0800_10FF:
	wLoc98_22 = di_1050
	byte ch_1406 = 0x00
	word16 wLoc8E_241 = 0x0000
	word16 wLoc9A_1039 = 0x0000
	byte bLoc8F_1117 = 0x00
	word16 wLoc94_244 = 0xFFFF
	word16 wLoc92_245 = 0xFFFF
// DataOut: al bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_1120:
	word16 ax_262 = DPB(ax, 0x00, 8)
	byte bl_267 = (byte) ax_262
	byte dl_265 = (byte) ax_262
	word16 bx_270 = DPB(ax_262, bl_267 - 0x20, 0)
	branch bl_267 >=u 0x80 l0800_1175
// DataOut: bp bx ch cl dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ax:<invalid> es:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_112E:
	word16 bx_321 = DPB(ax_262, Mem0[ds:bx_270 + 0x04F9:byte], 0)
	word16 ax_322 = bx_321
	branch bx_321 <=u 0x0017 l0800_113C
// DataOut: al ax bp ch cl dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_113C:
	word16 cx_1299
	selector es_1025
	word16 di_1182
	byte bh_1102
	word16 dx_1095
	word16 ax_1111
	byte bLoc95_1104
	word16 dx_1029
	bx = bx_321 << 0x0001
	switch (bx_321) { l0800_1190 l0800_1178 l0800_11D1 l0800_1184 l0800_11F6 l0800_1200 l0800_1242 l0800_124C l0800_125C l0800_11B7 l0800_1291 l0800_126C l0800_1270 l0800_1274 l0800_1316 l0800_13C8 l0800_1369 l0800_1389 l0800_1533 l0800_1560 l0800_1560 l0800_1560 l0800_11A3 l0800_11AD }
// DataOut: bl bp bx ch cl dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_11AD:
	wLoc9A_1039 = wLoc9A_1039 | 0x0020
	ch_1406 = 0x05
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_11A3:
	wLoc9A_1039 = wLoc9A_1039 & 0xFFDF
	ch_1406 = 0x05
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_1533:
	selector es_1380
	word16 di_1379
	wArg04 = si_131
	branch (wLoc9A_1039 & 0x0020) != 0x0000 l0800_154B
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -0098(16) Stack +0002(8) Stack +0004(16)

l0800_154B:
	ptr32 es_di_1396 = Mem0[ds:wArg02:segptr32]
	di_1379 = (word16) es_di_1396 (alias)
	es_1380 = SLICE(es_di_1396, selector, 16) (alias)
	wArg02 = wArg02 + 0x0004
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -0098(16) Stack +0002(16) Stack +0004(16)

l0800_1541:
	di_1379 = Mem0[ds:wArg02:word16]
	word16 sp_1391 = sp_1027 - 2
	Mem1392[ss:sp_1391:word16] = ds
	wArg02 = wArg02 + 0x0002
	es_1380 = Mem1392[ss:sp_1391:selector]
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -0098(16) Stack +0002(16) Stack +0004(16)

l0800_1551:
	word16 ax_1383 = DPB(0x0050, 0x50 - bLoc57_124, 0)
	Mem1386[es_1380:di_1379:word16] = ax_1383
	ax = ax_1383
// DataOut: bp bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -0098(16) Stack +0002(16) Stack +0004(16)

l0800_1389:
	bool Z_1314
	branch (wLoc9A_1039 & 0x0020) != 0x0000 l0800_13A7
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(0) Local -0092(0) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_13A7:
	ptr32 es_di_1357 = Mem0[ds:wArg02:segptr32]
	di_1182 = (word16) es_di_1357 (alias)
	es_1025 = SLICE(es_di_1357, selector, 16) (alias)
	wArg02 = wArg02 + 0x0004
	Z_1314 = (bool) cond(es_1025 | di_1182) (alias)
// DataOut: bp di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(0) Local -0092(0) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_139B:
	word16 di_1342 = Mem0[ds:wArg02:word16]
	word16 sp_1345 = sp_1027 - 2
	Mem1346[ss:sp_1345:word16] = ds
	wArg02 = wArg02 + 0x0002
	es_1025 = Mem1346[ss:sp_1345:selector]
	di_1182 = di_1342
	Z_1314 = (bool) cond(di_1342) (alias)
// DataOut: bp di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(0) Local -0092(0) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_13B1:
	branch Z_1314 l0800_13B8
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(0) Local -0092(0) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_13B3:
	word16 sp_1336 = sp_1027 - 2
	Mem1337[ss:sp_1336:word16] = ds
	es_1025 = Mem1337[ss:sp_1336:selector]
	di_1182 = 0x04E2
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(0) Local -0092(0) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_13B8:
	cx_1299 = fn0800_108C(di_1182, es_1025)
	branch cx_1299 <=u wLoc92_245 l0800_13C5
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(0) Local -0092(16) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_13C1:
	cx_1299 = wLoc92_245
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:0x00 cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(0) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_13C5:
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:0x00 cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(0) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_1369:
	word16 sp_1288 = sp_1027 - 2
	Mem1289[ss:sp_1288:word16] = ss
	wArg02 = wArg02 + 0x0002
	es_1025 = Mem1289[ss:sp_1288:selector]
	sp_1027 = sp_1288 + 2
	di_1182 = fp - 0x0089
	cx_1299 = 0x0001
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(0) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_13C8:
	word16 cx_1212 = wLoc92_245
	branch wLoc92_245 >= 0x0000 l0800_13DD
// DataOut: bp cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_13DA:
	cx_1212 = 0x0006
// DataOut: bp cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_13DD:
	word16 ax_1247
	word16 wLoc06_1241
	word16 sp_1221 = sp_1027 - 2
	Mem1222[ss:sp_1221:word16] = wArg02
	Mem1224[ss:sp_1221 - 2:word16] = cx_1212
	Mem1227[ss:sp_1221 - 4:word16] = fp - 0x0089
	Mem1229[ss:sp_1221 - 6:word16] = ax_262
	Mem1233[ss:sp_1221 - 8:word16] = wLoc9A_1039 & 0x0001
	branch (wLoc9A_1039 & 0x0080) == 0x0000 l0800_1400
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_1400:
	branch (wLoc9A_1039 & 0x0100) == 0x0000 l0800_140F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:fp - 0x0089 bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_140F:
	wLoc06_1241 = 0x0008
	ax_1247 = 0x0006
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:fp - 0x0089 bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_1405:
	ax_1247 = 0x0008
	wLoc06_1241 = 0x000A
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:fp - 0x0089 bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_13F6:
	ax_1247 = 0x0002
	wLoc06_1241 = 0x0004
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:fp - 0x0089 bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_1417:
	Mem1250[ss:sp_1221 - 10:word16] = ax_1247
	__REALCVT()
	Mem1256[ss:sp_1221 - 12:word16] = ss
	wArg02 = wArg02 + wLoc06_1241
	es_1025 = Mem1256[ss:sp_1221 - 12:selector]
	sp_1027 = sp_1221 - 10
	di_1182 = fp - 0x0089
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:fp - 0x0089 bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_1316:
	word16 sp_1152 = sp_1027 - 2
	Mem1153[ss:sp_1152:word16] = Mem0[ds:wArg02:word16]
	word16 bx_1154 = wArg02 + 0x0001
	word16 di_1148 = fp - 0x008A
	wArg02 = bx_1154 + 0x0001
	branch (wLoc9A_1039 & 0x0020) == 0x0000 l0800_1342
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0092(16) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_1333:
	Mem1192[ss:sp_1152 - 2:word16] = Mem1153[ds:bx_1154 + 0x0001:word16]
	Mem1198[ss:sp_1152 - 4:word16] = ss
	selector es_1199 = Mem1198[ss:sp_1152 - 4:selector]
	word16 di_1201 = fn0800_1048(fp - 0x008A, es_1199, ds, wArg00)
	Mem1204[es_1199:di_1201:byte] = 0x3A
	wArg02 = bx_1154 + 0x0003
	di_1148 = di_1201 + 0x0001
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x008A si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0092(16) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_1342:
	Mem1168[ss:sp_1152 - 2:word16] = ss
	es_1025 = Mem1168[ss:sp_1152 - 2:selector]
	word16 di_1172 = fn0800_1048(di_1148, es_1025, ds, wArg00)
	Mem1174[ds:di_1172:byte] = 0x00
	sp_1027 = sp_1152 + 0x0002
	wLoc9A_1039 = wLoc9A_1039 & 0xFFFB
	di_1182 = fp - 0x008A
	branch wLoc92_245 > di_1172 - (fp - 0x008A) l0800_1366
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_1364:
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x008A si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:0x04E9 bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):0x00 -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_1366:
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x008A si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:0x04E9 bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):0x00 -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_1274:
	bh_1102 = 0x10
	bx = DPB(bx_321 << 0x0001, dl_265 + 0xE9, 0) (alias)
// DataOut: bh bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -0092(0) Local -0094(16) Local -0098(16) Local -009A(0) Stack +0002(16)

l0800_1270:
	bh_1102 = 0x0A
	bx = DPB(bx_321 << 0x0001, 0x0A, 8) (alias)
// DataOut: bh bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0092(0) Local -0094(16) Local -0098(16) Local -009A(0) Stack +0002(16)

l0800_126C:
	bh_1102 = 0x08
	bx = DPB(bx_321 << 0x0001, 0x08, 8) (alias)
// DataOut: bh bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -0092(0) Local -0094(16) Local -0098(16) Local -009A(0) Stack +0002(16)

l0800_127A:
	bLoc8F_1117 = 0x00
// DataOut: bh bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0092(0) Local -0094(16) Local -0098(16) Local -009A(0) Stack +0002(16)

l0800_127F:
	bLoc95_1104 = 0x00
	ax_1111 = Mem0[ds:wArg02:word16]
	dx_1095 = 0x0000
// DataOut: ax bh bp bx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0092(0) Local -0094(16) Local -0095(8) Local -0096(8) Local -0098(16) Local -009A(0)

l0800_1291:
	int32 dx_ax_1109 = (int32) Mem0[ds:wArg02:word16]
	bh_1102 = 0x0A
	bx = DPB(bx_321 << 0x0001, 0x0A, 8) (alias)
	bLoc95_1104 = 0x01
	ax_1111 = (word16) dx_ax_1109 (alias)
	dx_1095 = SLICE(dx_ax_1109, word16, 16) (alias)
// DataOut: ax bh bp bx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0092(0) Local -0094(16) Local -0095(8) Local -0096(8) Local -0098(16) Local -009A(0)

l0800_12A2:
	word16 di_977 = wArg02 + 0x0001
	word16 di_1099 = di_977 + 0x0001
	wArg04 = si_131
	branch (wLoc9A_1039 & 0x0010) == 0x0000 l0800_12B3
// DataOut: ax bh bp bx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0092(0) Local -0094(16) Local -0095(8) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0004(16)

l0800_12AF:
	dx_1095 = Mem0[ds:di_977 + 0x0001:word16]
	di_1099 = di_977 + 0x0003
// DataOut: ax bh bp bx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0092(0) Local -0094(16) Local -0095(8) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0004(16)

l0800_12B3:
	wArg02 = di_1099
	di_1182 = fp - 0x0089
	ax = ax_1111
	branch ax_1111 != 0x0000 l0800_12F1
// DataOut: ax bh bp bx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0092(0) Local -0094(16) Local -0095(8) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_12BE:
	branch dx_1095 != 0x0000 l0800_12F1
// DataOut: ax bh bp bx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x0089 si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0092(0) Local -0094(16) Local -0095(8) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_12F1:
	wLoc9A_1039 = wLoc9A_1039 | 0x0004
// DataOut: ax bh bp bx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x0089 si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0092(16) Local -0094(16) Local -0095(8) Local -0096(8) Local -0098(16) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_12C2:
	branch wLoc92_245 != 0x0000 l0800_12F6
// DataOut: ax bh bp bx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x0089 si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0092(16) Local -0094(16) Local -0095(8) Local -0096(8) Local -0098(16) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_12F6:
	word16 sp_1001 = sp_1027 - 2
	Mem1002[ss:sp_1001:word16] = dx_1095
	Mem1004[ss:sp_1001 - 2:word16] = ax_1111
	Mem1006[ss:sp_1001 - 4:word16] = fp - 0x0089
	word16 ax_1008 = (int16) bh_1102
	Mem1010[ss:sp_1001 - 6:word16] = ax_1008
	Mem1014[ss:sp_1001 - 8:word16] = DPB(ax_1008, bLoc95_1104, 0)
	Mem1016[ss:sp_1001 - 10:word16] = bx
	__LONGTOA(ds, bArg00, bArg02, si_131, wArg06, wArg08, wArg0A)
	Mem1024[ss:sp_1001:word16] = ss
	es_1025 = Mem1024[ss:sp_1001:selector]
	sp_1027 = sp_1001 + 2
	dx_1029 = wLoc92_245
	branch wLoc92_245 > 0x0000 l0800_1313
// DataOut: bp di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x0089 si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_1313:
// DataOut: bp di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x0089 si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_1310:
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x0089 si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_1427:
	branch (wLoc9A_1039 & 0x0008) == 0x0000 l0800_1449
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_142F:
	dx_1029 = wLoc94_244
	branch wLoc94_244 <= 0x0000 l0800_1449
// DataOut: bp di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_1437:
	word16 cx_911 = fn0800_108C(di_1182, es_1025)
	branch Mem0[es_1025:di_1182:byte] != 0x2D l0800_1441
// DataOut: bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_1440:
	cx_911 = cx_911 - 0x0001
// DataOut: bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:0x00 cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_1441:
	word16 dx_919 = dx_1029 - cx_911
	branch dx_919 <= 0x0000 l0800_1449
// DataOut: bp di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:0x00 cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_1445:
	wLoc8E_241 = dx_919
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:0x00 cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -008F(8) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_1449:
	branch bLoc8F_1117 == 0x00 l0800_1465
// DataOut: al bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_1451:
	branch Mem0[es_1025:di_1182:byte] == 0x2D l0800_1465
// DataOut: al bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_1457:
	di_1182 = di_1182 - 0x0001
	Mem887[es_1025:di_1182:byte] = bLoc8F_1117
	wLoc8E_241 = v41
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(0) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_1465:
	cx_1299 = fn0800_108C(di_1182, es_1025)
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(0) Local -0094(16) Local -0096(8) Local -0098(16) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_1468:
	wArg04 = si_131
	word16 si_533 = di_1182
	word16 bx_536 = wLoc94_244
	ax = wLoc9A_1039 & 0x0005
	branch ax != 0x0005 l0800_1494
// DataOut: al bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(0) Local -0096(8) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_147E:
	ax = DPB(ax, dl_265, 8) (alias)
	branch dl_265 != 0x6F l0800_1497
// DataOut: ah bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(0) Local -0096(8) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_1497:
	branch dl_265 == 0x78 l0800_14A1
// DataOut: ah bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -0096(8) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_149C:
	branch dl_265 != 0x58 l0800_14B5
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -0096(8) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_14A1:
	word16 v37_824 = wLoc8E_241 - 0x0002
	wLoc9A_1039 = wLoc9A_1039 | 0x0040
	bx_536 = wLoc94_244 - 0x0002
	wLoc8E_241 = v37_824
	branch v37_824 >= 0x0000 l0800_14B5
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -0096(8) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_14AF:
	wLoc8E_241 = 0x0000
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -0096(8) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_1487:
	branch wLoc8E_241 > 0x0000 l0800_1494
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -0096(8) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_148E:
	wLoc8E_241 = 0x0001
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -0096(8) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_1494:
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -0096(8) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_14B5:
	word16 cx_555 = cx_1299 + wLoc8E_241
	branch (wLoc9A_1039 & 0x0002) != 0x0000 l0800_14CD
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -0096(8) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_14C1:
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -0096(8) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_14C9:
	branch bx_536 > cx_555 l0800_14C3
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -0096(8) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_14C3:
	word16 dx_787
	word16 bx_788
	cx_555 = fn0800_1099(0x20, fp - 2, di_1050, ds, out dx_787, out bx_788, out di_1050, out es_1025)
	sp_1027 = sp_1027 + 0xFFFE
	bx_536 = bx_788 - 0x0001
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -0096(8) Local -009A(0) Stack +0002(16) Stack +0004(16)

l0800_14CD:
	branch (wLoc9A_1039 & 0x0040) == 0x0000 l0800_14E1
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Local -0096(8) Stack +0002(16) Stack +0004(16)

l0800_14D5:
	word16 dx_758
	word16 bx_759
	word16 di_760
	selector es_761
	fn0800_1099(0x30, fp - 2, di_1050, ds, out dx_758, out bx_759, out di_760, out es_761)
	word16 dx_765
	cx_555 = fn0800_1099(dl_265, fp - 2, di_760, ds, out dx_765, out bx_536, out di_1050, out es_1025)
	sp_1027 = sp_1027 + 0xFFFC
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -008E(16) Stack +0002(16) Stack +0004(16)

l0800_14E1:
	word16 dx_585 = wLoc8E_241
	branch wLoc8E_241 <= 0x0000 l0800_1510
// DataOut: bp bx cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_14E9:
	byte al_685 = Mem0[es_1025:di_1182:byte]
	word16 cx_679 = cx_555 - wLoc8E_241
	bx_536 = bx_536 - wLoc8E_241
	ax = DPB(ax, al_685, 0) (alias)
	branch al_685 == 0x2D l0800_14FC
// DataOut: al bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_14F4:
	branch al_685 == 0x20 l0800_14FC
// DataOut: al bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_14F8:
	branch al_685 != 0x2B l0800_1503
// DataOut: bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_14FC:
	si_533 = di_1182 + 0x0001
	sp_1027 = sp_1027 + 0xFFFE
	word16 bx_741
	selector es_743
	cx_679 = fn0800_1099(Mem0[ds:di_1182:byte], fp - 2, di_1050, ds, out dx_585, out bx_741, out di_1050, out es_743) - 0x0001
	bx_536 = bx_741 - 0x0001
// DataOut: bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_1503:
	word16 dx_706 = cx_679
	branch dx_585 == 0x0000 l0800_150E
// DataOut: bp bx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_1507:
	sp_1027 = sp_1027 + 0xFFFE
	word16 di_1415 = di_1050
	selector es_731
	branch fn0800_1099(0x30, fp - 2, di_1415, ds, out dx_706, out bx_536, out di_1050, out es_731) != 0x0001 l0800_1507
// DataOut: bp bx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_150E:
	cx_555 = dx_706
// DataOut: bp bx cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_1510:
	branch cx_555 == 0x0000 l0800_1523
// DataOut: bp bx cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_1512:
	bx_536 = bx_536 - cx_555
// DataOut: bp bx cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_1514:
	Mem658[ds:di_1050:byte] = Mem0[ds:si_533:byte]
	byte v42_661 = bLoc57_124 - 0x01
	si_533 = si_533 + 0x0001
	di_1050 = di_1050 + 0x0001
	bLoc57_124 = v42_661
	branch v42_661 > 0x00 l0800_1521
// DataOut: bp bx cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_151E:
	word16 dx_672
	selector es_675
	cx_555 = fn0800_10A1(fp - 2, di_1050, out dx_672, out bx_536, out di_1050, out es_675)
// DataOut: bp bx cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_1521:
	cx_555 = cx_555 - 0x0001
	branch cx_555 != 0x0000 l0800_1514
// DataOut: bp bx cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_1523:
	bx = bx_536
	branch bx_536 <= 0x0000 l0800_1530
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_1527:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_1529:
	sp_1027 = sp_1027 + 0xFFFE
	word16 di_1414 = di_1050
	word16 dx_636
	selector es_639
	branch fn0800_1099(0x20, fp - 2, di_1414, ds, out dx_636, out bx, out di_1050, out es_639) != 0x0001 l0800_1529
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_1530:
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_12C9:
	branch wLoc94_244 == 0x0000 l0800_12EE
// DataOut: bp bx cx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:fp - 0x0089 si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_12D3:
	branch wLoc94_244 == 0xFFFF l0800_12EE
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Local -009A(16) Stack +0002(16) Stack +0004(16)

l0800_12D8:
	byte dl_1076
	ax = wLoc9A_1039 & 0x0008
	branch ax == 0x0000 l0800_12E5
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_12E5:
	dl_1076 = 0x20
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_12E1:
	dl_1076 = 0x30
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_12E7:
	sp_1027 = sp_1027 + 0xFFFE
	word16 di_1416 = di_1050
	word16 dx_1082
	selector es_1085
	branch fn0800_1099(dl_1076, fp - 2, di_1416, ds, out dx_1082, out bx, out di_1050, out es_1085) != 0x0001 l0800_12E7
// DataOut: bp bx di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_12EE:
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> es:<invalid> dl:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16) Stack +0004(16)

l0800_11B7:
	branch ch_1406 >u 0x00 l0800_1200
// DataOut: bp ch cl dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(0) Stack +0002(16)

l0800_11BC:
	branch (wLoc9A_1039 & 0x0002) != 0x0000 l0800_11E5
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_11C4:
	wLoc9A_1039 = wLoc9A_1039 | 0x0008
	ch_1406 = 0x01
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_125C:
	wLoc9A_1039 = wLoc9A_1039 & 0xFFEF | 0x0080
	ch_1406 = 0x05
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_124C:
	wLoc9A_1039 = (wLoc9A_1039 | 0x0100) & 0xFFEF
	ch_1406 = 0x05
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_1242:
	wLoc9A_1039 = wLoc9A_1039 | 0x0010
	ch_1406 = 0x05
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_1200:
	word16 ax_428 = (int16) ((byte) ax_262 - 0x30)
	branch ch_1406 >u 0x02 l0800_1224
// DataOut: al ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_1224:
	branch ch_1406 != 0x04 l0800_11CE
// DataOut: ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_1229:
	wLoc92_245 = ax_428
	ax_322 = wLoc92_245
	branch wLoc92_245 < 0x0000 l0800_11E5
// DataOut: ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_1231:
	word16 ax_466 = wLoc92_245 << 0x0001
	ax_322 = ax_466 * 0x0005
	wLoc92_245 = ax_428 + ax_466 * 0x0005
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_1209:
	ch_1406 = 0x02
	wLoc94_244 = ax_428
	ax_322 = wLoc94_244
	branch wLoc94_244 < 0x0000 l0800_11E5
// DataOut: ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(8) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_1213:
	word16 ax_446 = wLoc94_244 << 0x0001
	ax_322 = ax_446 * 0x0005
	wLoc94_244 = ax_428 + ax_446 * 0x0005
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> ch:0x02 es:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_11F6:
	branch ch_1406 >=u 0x04 l0800_11CE
// DataOut: bp cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_11FB:
	ch_1406 = 0x04
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_1184:
	branch ch_1406 >u 0x00 l0800_1175
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_1189:
	wLoc9A_1039 = wLoc9A_1039 | 0x0002
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_11D1:
	ax_322 = Mem0[ds:wArg02:word16]
	wArg02 = wArg02 + 0x0002
	branch ch_1406 >=u 0x02 l0800_11E8
// DataOut: ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_11E8:
	branch ch_1406 != 0x04 l0800_11CE
// DataOut: ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_11CE:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -0098(16)

l0800_11ED:
	wLoc92_245 = ax_322
	ch_1406 = ch_1406 + 0x01
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_11DF:
	wLoc94_244 = ax_322
	ch_1406 = 0x03
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_11E5:
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> ch:<invalid> es:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_1178:
	branch ch_1406 >u 0x00 l0800_1175
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_117D:
	wLoc9A_1039 = wLoc9A_1039 | 0x0001
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_1190:
	branch ch_1406 >u 0x00 l0800_1175
// DataOut: bp ch cl dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_1175:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -0098(16)

l0800_1195:
	branch bLoc8F_1117 == 0x2B l0800_11A0
// DataOut: bp ch cl dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_119C:
	bLoc8F_1117 = dl_265
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_11A0:
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_111F:
	ax = DPB(ax_322, Mem0[ds:si_131:byte], 0) (alias)
	si_131 = si_131 + 0x0001
// DataOut: al bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> ch:<invalid> es:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(0) Local -008C(16) Local -008E(0) Local -008F(0) Local -0092(16) Local -0094(16) Local -0098(16) Local -009A(8) Stack +0002(16)

l0800_1139:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -0098(16)

l0800_1560:
	word16 si_285 = si_131
	byte al_288 = 0x25
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0)

l0800_156A:
	word16 dx_297
	selector es_300
	fn0800_1099(al_288, fp - 2, di_1050, ds, out dx_297, out bx, out di_1050, out es_300)
	byte al_303 = Mem0[ds:si_285:byte]
	si_285 = si_285 + 0x0001
	al_288 = al_303
	branch al_303 != 0x00 l0800_156A
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0057(0)

l0800_1572:
	branch bLoc57_124 >= 0x50 l0800_157B
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_1578:
	word16 dx_203
	word16 di_205
	selector es_206
	fn0800_10A1(fp - 2, di_1050, out dx_203, out bx, out di_205, out es_206)
// DataOut: bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_157B:
	branch 0x0000 == 0x0000 l0800_1589
// DataOut: bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_1589:
// DataOut: bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_1582:
// DataOut: bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_158E:
	return bx
// DataOut: bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_1073_exit:
// DataOut: bx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_10E6:
	Mem217[ds:di_1050:byte] = al_148
	byte v15_220 = bLoc57_124 - 0x01
	di_1050 = di_1050 + 0x0001
	bLoc57_124 = v15_220
	branch v15_220 > 0x00 l0800_10DD
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16)

l0800_10EE:
	word16 dx_223
	selector es_226
	fn0800_10A1(fp - 2, di_1050, out dx_223, out bx, out di_1050, out es_226)
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> dl:<invalid> -174(fp):ss -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -149(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -139(fp):cl -137(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0057(8) Stack +0002(16)



word16 fn0800_108C(word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di es
// LiveOut: cx
// Trashed: SCZO al ax ch cl cx eax ecx rax rcx
// Preserved: di sp
fn0800_108C_entry:
// DataOut: bp di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_108C:
	word16 cx_13 = 0xFFFF
// DataOut: bp cx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_1092:
	branch cx_13 == 0x0000 l0800_1094
// DataOut: bp cx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> al:0x00 di:<invalid> -2(fp):di

l0800_1092_1:
	di = di_29 + 0x0001
	cx_13 = cx_13 - 0x0001
	word16 di_29 = di
	branch 0x00 == Mem0[es:di_29:byte] l0800_1092
// DataOut: bp cx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> al:0x00 di:<invalid> -2(fp):di

l0800_1094:
	return ~cx_13 - 0x0001
// DataOut: bp cx ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 cx:<invalid> al:0x00 di:<invalid> -2(fp):di

fn0800_108C_exit:
// DataOut: cx
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> al:0x00 di:di -2(fp):di



word16 fn0800_1099(byte al, word16 bp, word16 di, selector ds, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bp di ds ss
// LiveOut: bx cx di dl dx es
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: sp
fn0800_1099_entry:
	*dxOut = dx
	*bxOut = bx
	*esOut = es
// DataOut: al bp bx cx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_1099:
	Mem3[ds:di:byte] = al
	byte v9_9 = Mem3[ss:bp - 0x0055:byte] - 0x01
	Mem10[ss:bp - 0x0055:byte] = v9_9
	word16 di_6
	*diOut = di + 0x0001
	branch v9_9 <= 0x00 l0800_10CC_in_fn0800_1099
// DataOut: bp bx cx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_10CC_in_fn0800_1099:
	return cx
// DataOut: bp bx cx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

l0800_109F_thunk_fn0800_10A1:
	word16 dx_21
	word16 bx_22
	word16 di_23
	selector es_24
	return fn0800_10A1(bp, di + 0x0001, out dx_21, out bx_22, out di_23, out es_24)
// DataOut: bp bx cx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

fn0800_1099_exit:
// DataOut: bx cx di dl dx es
// DataOut (flags): 
// SymbolicIn: sp:fp di:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid>



word16 fn0800_10A1(word16 bp, word16 di, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ss
// LiveOut: bx cx di dl dx es
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: sp
fn0800_10A1_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_10A1:
	word16 sp_29
	word16 bx_30
	selector ss_31
	word16 cx_32
	word16 dx_33
	selector es_34
	word16 bp_35
	word16 ax_36
	word16 di_37
	byte SCZO_38
	byte SZO_39
	bool C_40
	bool Z_41
	call SEQ(0x0800, Mem0[ss:bp + 0x000A:word16]) (retsize: 2; depth: 16)
		uses: ax_19,bp,bx,cx,di_17,dx,es,SCZO_18,sp_27,ss,wLoc02_4,wLoc04_7,wLoc06_10,wLoc08_13,wLoc0A_21,wLoc0C_23,wLoc0E_28
		defs: ax_36,bp_35,bx_30,C_40,cx_32,di_37,dx_33,es_34,SCZO_38,sp_29,ss_31,SZO_39,Z_41
	branch ax_36 != 0x0000 l0800_10BE
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_10B9:
	Mem63[ss_31:bp_35 - 0x0002:word16] = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:di - (bp - 0x0054) -14(fp):<invalid> -12(fp):di - (bp - 0x0054) -10(fp):bp - 0x0054 -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

l0800_10BE:
	Mem46[ss_31:bp_35 - 0x0055:byte] = 0x50
	Mem48[ss_31:bp_35 - 0x0058:word16] = Mem46[ss_31:bp_35 - 0x0058:word16] + di_37
	word16 di_50
	*diOut = bp_35 - 0x0054
	selector es_51
	*esOut = Mem48[ss_31:sp_29:selector]
	word16 dx_53
	*dxOut = Mem48[ss_31:sp_29 + 2:word16]
	word16 cx_55 = Mem48[ss_31:sp_29 + 4:word16]
	word16 bx_57
	*bxOut = Mem48[ss_31:sp_29 + 6:word16]
// DataOut: bp bx cx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:di - (bp - 0x0054) -14(fp):<invalid> -12(fp):di - (bp - 0x0054) -10(fp):bp - 0x0054 -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

l0800_10CC:
	return cx_55
// DataOut: bp bx cx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:bp - 0x0054 es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):di - (bp - 0x0054) -10(fp):bp - 0x0054 -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

fn0800_10A1_exit:
// DataOut: bx cx di dl dx es
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> di:bp - 0x0054 es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):di - (bp - 0x0054) -10(fp):bp - 0x0054 -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx



void fn0800_1596(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx eax ebx rax rbx
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_1596_entry:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_1596:
	branch Mem0[ds:0x062A:word16] == 0x0000 l0800_15C1
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_15C1:
	Mem34[ds:0x062A:word16] = wArg02
	Mem35[ds:wArg02 + 0x0004:word16] = wArg02
	Mem36[ds:wArg02 + 0x0006:word16] = wArg02
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_15A5:
	word16 di_27 = Mem0[ds:Mem0[ds:0x062A:word16] + 0x0006:word16]
	Mem29[ds:Mem0[ds:0x062A:word16] + 0x0006:word16] = wArg02
	Mem30[ds:di_27 + 0x0004:word16] = wArg02
	Mem31[ds:wArg02 + 0x0006:word16] = di_27
	Mem33[ds:wArg02 + 0x0004:word16] = Mem31[ds:0x062A:word16]
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_15CB:
	return
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 bp:fp - 2 si:<invalid> bx:<invalid> di:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_1596_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si bx:<invalid> di:di ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp



void fn0800_15CF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx eax ebx ecx rax rbx rcx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_15CF_entry:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_15CF:
	Mem21[ds:wArg02:word16] = Mem0[ds:wArg02:word16] + Mem0[ds:wArg04:word16]
	branch Mem21[ds:0x0628:word16] != wArg04 l0800_15EE
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_15EE:
	Mem47[ds:Mem21[ds:wArg04:word16] + wArg04 + 0x0002:word16] = wArg02
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_15E8:
	Mem39[ds:0x0628:word16] = wArg02
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_15FB:
	___pull_free_block(ds, wArg04)
	return
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> di:<invalid> ax:<invalid> bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_15CF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si di:di ax:<invalid> bx:<invalid> cx:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



void fn0800_1606(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: si sp
fn0800_1606_entry:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_1606:
	branch Mem0[ds:0x062C:word16] != Mem0[ds:0x0628:word16] l0800_1622
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_1622:
	word16 si_32 = Mem0[ds:Mem0[ds:0x0628:word16] + 0x0002:word16]
	branch (Mem0[ds:si_32:word16] & 0x0001) != 0x0000 l0800_1651
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ax:<invalid> -2(fp):si
// LocalsOut: fp(16)

l0800_1651:
	_brk(ds, Mem0[ds:0x0628:word16])
	Mem61[ds:0x0628:word16] = si_32
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> -2(fp):si

l0800_162F:
	___pull_free_block(ds, si_32)
	branch si_32 != Mem0[ds:0x062C:word16] l0800_1644
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> -2(fp):si
// LocalsOut: fp(16)

l0800_1644:
	Mem55[ds:0x0628:word16] = Mem0[ds:si_32 + 0x0002:word16]
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16)

l0800_163A:
	Mem52[ds:0x0628:word16] = 0x0000
	Mem53[ds:0x062C:word16] = 0x0000
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16)

l0800_164A:
	_brk(ds, si_32)
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):<invalid> -2(fp):si

l0800_1610:
	_brk(ds, Mem0[ds:0x062C:word16])
	Mem28[ds:0x0628:word16] = 0x0000
	Mem29[ds:0x062C:word16] = 0x0000
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ax:<invalid> -2(fp):si

l0800_165D:
	return
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 ax:<invalid> cx:<invalid> bx:<invalid> si:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):si

fn0800_1606_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> cx:<invalid> si:si bx:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):si



void fn0800_165F(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx eax ebx ecx rax rbx rcx
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_165F_entry:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16)

l0800_165F:
	Mem18[ds:wArg02:word16] = Mem0[ds:wArg02:word16] - 0x0001
	word16 si_14 = wArg02
	word16 ax_20 = Mem18[ds:wArg02:word16] + wArg02
	word16 di_22 = Mem18[ds:wArg02 + 0x0002:word16]
	branch (Mem18[ds:di_22:word16] & 0x0001) != 0x0000 l0800_1690
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -000C(16)

l0800_167C:
	branch wArg02 == Mem18[ds:0x062C:word16] l0800_1690
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> ax:<invalid> di:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000C(16)

l0800_1690:
	fn0800_1596(ds, wArg02)
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> ax:<invalid> di:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_1682:
	Mem66[ds:di_22:word16] = Mem18[ds:di_22:word16] + Mem18[ds:wArg02:word16]
	Mem69[ds:ax_20 + 0x0002:word16] = di_22
	si_14 = di_22
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> ax:<invalid> di:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_1695:
	branch (Mem18[ds:ax_20:word16] & 0x0001) != 0x0000 l0800_16A7
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_169E:
	fn0800_15CF(ds, si_14, ax_20)
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_16A7:
	return
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 2 si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_165F_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> di:di cx:<invalid> bx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



void _free(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_16AD_entry:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_16AD:
	branch wArg02 != 0x0000 l0800_16BA
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_16BA:
	branch wArg02 + 0xFFFC != Mem0[ds:0x0628:word16] l0800_16CC
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_16CC:
	fn0800_165F(ds, wArg02 + 0xFFFC)
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_16C7:
	fn0800_1606(ds)
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_16B8:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_16D1:
	return
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 bp:fp - 2 si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_16AD_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



void _scanf(word16 bx, word16 di, selector es, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx di ds es ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16)
_scanf_entry:
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_16D4:
	__scanner(bx, fp - 2, di, es, ds, 0x07F2, 0x1D65, 0x0342, wArg02)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_16F1:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> al:<invalid> cx:<invalid> es:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -12(fp):0x07F2 -10(fp):0x1D65 -8(fp):0x0342 -6(fp):<invalid> -4(fp):fp + 0x0004 -2(fp):bp

_scanf_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> si:<invalid> al:<invalid> cx:<invalid> es:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -12(fp):0x07F2 -10(fp):0x1D65 -8(fp):0x0342 -6(fp):<invalid> -4(fp):fp + 0x0004 -2(fp):bp



word16 __scanner(word16 bx, word16 bp, word16 di, selector es, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp bx di ds es ss
// LiveOut: bp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_16F3_entry:
// DataOut: bp bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0026(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_16F3:
	word16 bp_100 = fp - 2
	word16 wLoc28_1024 = 0x0000
// DataOut: bp bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1721:
	word16 sp_1012 = fp - 0x0032
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0030 bp:fp - 2 -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1723:
	word16 si_165 = wArg08
// DataOut: bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1726:
	byte al_103 = Mem0[ds:si_165:byte]
	word16 si_104 = si_165 + 0x0001
	branch al_103 == 0x00 l0800_1788
// DataOut: al bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1788:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1788_thunk_fn0800_1AEB:
	word16 bp_1202
	fn0800_1AEB(bp_100, out bp_1202)
	return bp_1202
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_172B:
	branch al_103 == 0x25 l0800_178B
// DataOut: al bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_178B:
	word16 wLoc24_386 = 0xFFFF
	byte bLoc2B_1195 = 0x00
	si_399 = si_104
// DataOut: bp ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1794:
	word16 si_399
	si_399 = si_399 + 0x0001
	word16 ax_404 = (int16) Mem0[ds:si_399:byte]
	wArg08 = si_399
	branch ax_404 < 0x0000 l0800_17E6
// DataOut: bp di dil ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_179E:
	word16 bx_426 = DPB(bx, 0x00, 8)
	branch bx_426 <=u 0x0015 l0800_17AE
// DataOut: al ax bp di dil ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_17AE:
	word16 si_1186
	word16 ax_1177
	word16 dx_1180
	bx = bx_426 << 0x0001
	switch (bx_426) { l0800_17E6 l0800_17E6 l0800_17E6 l0800_17E3 l0800_17E9 l0800_17EF l0800_19C8 l0800_1837 l0800_1837 l0800_1841 l0800_1908 l0800_1803 l0800_180F l0800_1809 l0800_1832 l0800_196C l0800_1A06 l0800_1824 l0800_183C l0800_1895 l0800_1816 l0800_181D }
// DataOut: al ax bp bx di dil ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_181D:
	bLoc2B_1195 = bLoc2B_1195 | 0x20
// DataOut: bp ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1816:
	bLoc2B_1195 = bLoc2B_1195 & 0xDF
// DataOut: bp ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1895:
	word16 bp_1187
	word16 ax_1188 = fn0800_1898(bx_426, bp_100, ds, out bp_1187)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1895_thunk_fn0800_1898:
	word16 bp_1192
	fn0800_1898(ax_1188, bp_1187, ds, out bp_1192)
	return bp_1192
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> es:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_183C:
	si_1186 = 0x0010
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1824:
	ax_1177 = wLoc28_1024
	dx_1180 = 0x0000
	branch (bLoc2B_1195 & 0x01) == 0x00 l0800_187E
// DataOut: ax bp bx ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_182F:
// DataOut: bp ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1A06:
	word16 sp_781 = sp_1012 - 2
	Mem782[ss:sp_781:word16] = ss
	es = Mem782[ss:sp_781:selector]
	sp_1012 = sp_781 + 2
	word16 di_785 = fp - 0x0022
	word16 cx_786 = 0x0010
// DataOut: ax bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1A11:
	branch cx_786 == 0x0000 l0800_1A13
// DataOut: ax bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1A13:
	byte al_1173 = Mem782[ds:si_399:byte]
	byte v42_802 = bLoc2B_1195 & 0xEF
	word16 ax_1174 = (word16) al_1173
	word16 si_1176 = si_399 + 0x0001
	byte bLoc2B_1170 = v42_802
	branch al_1173 != 0x5E l0800_1A21
// DataOut: al bp bx ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(8) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1A1C:
	al_1173 = Mem782[ds:si_399 + 0x0001:byte]
	bLoc2B_1170 = v42_802 | 0x10
	ax_1174 = DPB(ax_1174, al_1173, 0) (alias)
	si_1176 = si_399 + 0x0002
// DataOut: al bp bx ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1A21:
	word16 ax_815 = DPB(ax_1174, 0x00, 8)
// DataOut: al ax bp bx ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1A23:
	word16 di_1007 = ax_815 >>u 0x03
	byte ch_833 = 0x01 << (al_1173 & 0x07)
	Mem836[ss:bp_100 - 0x0020 + di_1007:byte] = Mem782[ss:bp_100 - 0x0020 + di_1007:byte] | ch_833
	byte dl_825 = al_1173
// DataOut: bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1A35:
	al_1173 = Mem836[ds:si_1176:byte]
	ax_815 = DPB(ax_815, al_1173, 0) (alias)
	si_1176 = si_1176 + 0x0001
	branch al_1173 == 0x00 l0800_1A60
// DataOut: al ax bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1A60:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1A60_thunk_fn0800_1AFF:
	word16 bp_1167
	fn0800_1AFF(bp_100, psegArg00, wArg02, wArg04, out bp_1167)
	return bp_1167
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1A3A:
	branch al_1173 == 0x5D l0800_1A63
// DataOut: al ax bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1A63:
	word16 v61_896 = wLoc24_1204 & 0x7FFF
	wArg08 = si_1176
	word16 si_1083 = v61_896
	branch (bLoc2B_1170 & 0x01) != 0x00 l0800_1A77
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(0) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1A74:
	di_1007 = fn0800_1708(bp_100, ds, out es)
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(0) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1A77:
	word16 si_929 = si_1083 - 0x0001
	branch si_929 < 0x0000 l0800_1ACA
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(0) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1A7A:
	word16 sp_1026 = sp_1012 - 2
	Mem1027[ss:sp_1026:word16] = es
	Mem1030[ss:sp_1026 - 2:word16] = wArg06
	wLoc28_1024 = wLoc28_1024 + 0x0001
	word16 sp_1031
	byte SCZO_1034
	word16 si_1035
	selector es_1037
	bool D_1038
	byte al_1039
	byte SZO_1041
	bool C_1042
	bool Z_1043
	word16 ax_1044
	word16 cx_1045
	byte SO_1046
	bool S_1047
	word16 bx_1048
	byte bl_1049
	byte bh_1050
	byte CZ_1051
	word16 dx_1052
	byte ah_1053
	byte dl_1054
	byte cl_1055
	byte ch_1056
	call SEQ(0x0800, Mem1030[ss:bp_100 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_907,al_924,ax_928,bh_910,bl_911,bLoc2B_807,bp_927,bx_912,C_926,ch_904,cl_905,cx_922,CZ_909,D_916,di_918,dl_906,ds_915,dx_908,es_917,S_913,SCZO_920,si_929,SO_931,sp_1029,ss_921,SZO_1025,wLoc02_4,wLoc24_897,wLoc26,wLoc28_1024,wLoc2A_44,wLoc2E_10,wLoc30_13,wLoc32_18,Z_914
		defs: ah_1053,al_1039,ax_1044,bh_1050,bl_1049,bp_1032,bx_1048,C_1042,ch_1056,cl_1055,cx_1045,CZ_1051,D_1038,di_1036,dl_1054,ds_1040,dx_1052,es_1037,S_1047,SCZO_1034,si_1035,SO_1046,sp_1031,ss_1033,SZO_1041,Z_1043
	es = Mem1030[ss:sp_1031 + 2:selector]
	sp_1012 = sp_1031 + 4
	branch ax_1044 < 0x0000 l0800_1AD9
// DataOut: ax bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(0) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1AD9:
	branch si_1035 + 0x0001 >= v61_896 l0800_1ADD_thunk_fn0800_1AEB
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: Local -002A(8) Local -002B(0)

l0800_1ADD_thunk_fn0800_1AEB:
	word16 bp_1163
	fn0800_1AEB(bp_100, out bp_1163)
	return bp_1163
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1ADF:
	branch (bLoc2B_1170 & 0x01) != 0x00 l0800_1AE3_thunk_fn0800_1AEB
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: Local -002A(8)

l0800_1AE3_thunk_fn0800_1AEB:
	word16 bp_1161
	fn0800_1AEB(bp_100, out bp_1161)
	return bp_1161
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1AE5:
	Mem1154[es:di_1007:byte] = 0x00
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1AE8_thunk_fn0800_1AEB:
	word16 bp_1159
	fn0800_1AEB(bp_100, out bp_1159)
	return bp_1159
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:0x00 ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1A8A:
	byte ch_1077 = 0x01 << ((byte) ax_1044 & 0x07)
	si_1083 = si_1035
	byte al_1086 = (byte) ax_1044
	bx = ax_1044 >>u 0x03
	branch (Mem1030[ss:bp_100 - 0x0020 + (ax_1044 >>u 0x03):byte] & ch_1077) == 0x00 l0800_1AA7
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(0) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1AA7:
	branch (bLoc2B_1170 & 0x10) == 0x00 l0800_1AB6
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(0) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1A9F:
	branch (bLoc2B_1170 & 0x10) == 0x00 l0800_1AAD
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(0) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1AAD:
	branch (bLoc2B_1170 & 0x01) != 0x00 l0800_1A77
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(0) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1AB3:
	Mem1139[es:di_1007:byte] = al_1086
	di_1007 = di_1007 + 0x0001
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(0) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1AA5:
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(0) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1AB6:
	Mem1093[ss:sp_1031 + 2:word16] = es
	Mem1096[ss:sp_1031:word16] = wArg06
	Mem1098[ss:sp_1031 - 2:word16] = ax_1044
	word16 sp_1099
	byte SCZO_1102
	word16 si_1103
	selector es_1105
	bool D_1106
	byte al_1107
	byte SZO_1109
	bool C_1110
	bool Z_1111
	word16 ax_1112
	word16 cx_1113
	byte SO_1114
	bool S_1115
	byte bl_1117
	byte bh_1118
	byte CZ_1119
	word16 dx_1120
	byte ah_1121
	byte dl_1122
	byte cl_1123
	byte ch_1124
	call SEQ(0x0800, Mem1098[ss:bp_100 + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ah_1088,al_1086,ax_1085,bh_1091,bl_1090,bLoc2B_807,bp_1032,bx_1089,C_1080,ch_1077,cl_1076,cx_1075,CZ_1051,D_1038,di_1036,dl_1054,ds_1040,dx_1052,es_1059,S_1047,SCZO_1034,si_1083,SO_1066,sp_1097,ss_1033,SZO_1078,wLoc02_4,wLoc24_897,wLoc26,wLoc28_1024,wLoc2A_44,wLoc2E_10,wLoc30_13,wLoc32_18,Z_1079
		defs: ah_1121,al_1107,ax_1112,bh_1118,bl_1117,bp_1100,bx_1116,C_1110,ch_1124,cl_1123,cx_1113,CZ_1119,D_1106,di_1104,dl_1122,ds_1108,dx_1120,es_1105,S_1115,SCZO_1102,si_1103,SO_1114,sp_1099,ss_1101,SZO_1109,Z_1111
	es = Mem1098[ss:sp_1099 + 4:selector]
	sp_1012 = sp_1099 + 6
	branch si_1103 + 0x0001 >= v61_896 l0800_1AD3
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1ACA:
	branch (bLoc2B_1170 & 0x01) != 0x00 l0800_1AD6
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(8) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1AD0:
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1AD3:
	Mem990[es:di_1007:byte] = 0x00
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1AD6:
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1A3E:
	branch al_1173 != 0x2D l0800_1A23
// DataOut: al ax bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1A42:
	branch dl_825 >u Mem836[ds:si_1176:byte] l0800_1A23
// DataOut: al ax bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1A46:
	branch Mem836[ds:si_1176:byte] == 0x5D l0800_1A23
// DataOut: al ax bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1A4B:
	byte al_866 = Mem836[ds:si_1176:byte] - dl_825
	si_1176 = si_1176 + 0x0001
	ax_815 = DPB(ax_815, al_866, 0) (alias)
	branch al_866 == 0x00 l0800_1A35
// DataOut: al bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1A50:
	dl_825 = dl_825 + al_866
// DataOut: al bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1A52:
	ch_833 = __rol(ch_833, 0x01)
	di_1007 = di_1007 + ((ch_833 & 0x80) != 0x00)
	Mem887[ss:bp_100 - 0x0020 + di_1007:byte] = Mem836[ss:bp_100 - 0x0020 + di_1007:byte] | ch_833
	al_866 = al_866 - 0x01
	ax_815 = DPB(ax_815, al_866, 0) (alias)
	branch al_866 != 0x00 l0800_1A52
// DataOut: al bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1A5E:
// DataOut: bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1A11_1:
	Mem793[es:di_785:word16] = 0x0000
	di_785 = di_785 + 0x0002
	cx_786 = cx_786 - 0x0001
// DataOut: ax bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(8) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_196C:
	word16 bp_768
	word16 ax_769 = fn0800_196F(bx_426, bp_100, ds, out bp_768)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_196C_thunk_fn0800_196F:
	word16 bp_773
	fn0800_196F(ax_769, bp_768, ds, out bp_773)
	return bp_773
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> es:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1832:
	si_1186 = 0x0008
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1809:
	bLoc2B_1195 = bLoc2B_1195 | 0x04
// DataOut: bp ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_180F:
	bLoc2B_1195 = bLoc2B_1195 | 0x02
// DataOut: bp ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1803:
	bLoc2B_1195 = bLoc2B_1195 | 0x08
// DataOut: bp ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1908:
	word16 sp_683 = sp_1012 - 2
	Mem684[ss:sp_683:word16] = fp - 0x0026
	Mem687[ss:sp_683 - 2:word16] = fp - 0x0028
	Mem693[ss:sp_683 - 4:word16] = wLoc24_1204 & 0x7FFF
	Mem696[ss:sp_683 - 6:word16] = wArg06
	Mem699[ss:sp_683 - 8:word16] = wArg04
	Mem702[ss:sp_683 - 10:word16] = wArg02
	__scantod()
	sp_1012 = sp_683 + 0x0002
	branch wLoc26 <= 0x0000 l0800_1964
// DataOut: bp bx di ds es sp ss
// DataOut (flags): SO
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1964:
	__scanpop()
	branch wLoc26 < 0x0000 l0800_1905
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1905:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1905_thunk_fn0800_1AEB:
	word16 bp_753
	fn0800_1AEB(bp_100, out bp_753)
	return bp_753
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1969:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1969_thunk_fn0800_1AFF:
	word16 bp_751
	fn0800_1AFF(bp_100, psegArg00, wArg02, wArg04, out bp_751)
	return bp_751
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_192C:
	branch (bLoc2B_1195 & 0x01) == 0x00 l0800_1935
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1935:
	word16 ax_727
	word16 di_715 = fn0800_1708(bp_100, ds, out es)
	branch (bLoc2B_1195 & 0x04) == 0x00 l0800_1946
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1946:
	branch (bLoc2B_1195 & 0x08) == 0x00 l0800_1951
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1951:
	ax_727 = 0x0000
// DataOut: ax bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_194C:
	ax_727 = 0x0008
// DataOut: ax bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1941:
	ax_727 = 0x0004
// DataOut: ax bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1953:
	Mem729[ss:sp_683:word16] = ax_727
	Mem731[ss:sp_683 - 2:word16] = di_715
	__scanrslt()
	sp_1012 = sp_683 + 0x0002
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1932:
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_195E:
	__scanpop()
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1841:
	si_1186 = 0x0000
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1837:
	si_1186 = 0x000A
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1844:
	branch (ax_404 & 0x0020) != 0x0000 l0800_184E
// DataOut: bp bx ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_184A:
	bLoc2B_1195 = bLoc2B_1195 | 0x04
// DataOut: bp bx ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_184E:
	word16 sp_621 = sp_1012 - 2
	Mem622[ss:sp_621:word16] = fp - 0x0026
	Mem625[ss:sp_621 - 2:word16] = fp - 0x0028
	Mem631[ss:sp_621 - 4:word16] = wLoc24_1204 & 0x7FFF
	Mem634[ss:sp_621 - 6:word16] = si_1186
	Mem637[ss:sp_621 - 8:word16] = wArg06
	Mem641[ss:sp_621 - 10:word16] = wArg04
	Mem645[ss:sp_621 - 12:word16] = wArg02
	word16 di_650
	ax_1177 = __scantol(si_1186, bx_426 << 0x0001, ds, wArg04, wArg06, si_399, wArg0A, wArg0C, out dx_1180, out bx, out di_650, out es)
	branch wLoc26 <= 0x0000 l0800_188D
// DataOut: ax bp bx di ds dx es sp ss
// DataOut (flags): SO
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_188D:
	branch wLoc26 < 0x0000 l0800_1892
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1892:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1892_thunk_fn0800_1AEB:
	word16 bp_674
	fn0800_1AEB(bp_100, out bp_674)
	return bp_674
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_188F:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_188F_thunk_fn0800_1AFF:
	word16 bp_672
	fn0800_1AFF(bp_100, psegArg00, wArg02, wArg04, out bp_672)
	return bp_672
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1875:
	branch (bLoc2B_1195 & 0x01) != 0x00 l0800_188A
// DataOut: ax bp bx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_187B:
// DataOut: ax bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_187E:
	word16 di_604 = fn0800_1708(bp_100, ds, out es)
	Mem605[es:di_604:word16] = ax_1177
	branch (bLoc2B_1195 & 0x04) == 0x00 l0800_188A
// DataOut: bp bx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> es:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1888:
	Mem613[es:di_604 + 0x0002:word16] = dx_1180
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_188A:
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_19C8:
	branch (bLoc2B_1195 & 0x01) != 0x00 l0800_19D1
// DataOut: al ax bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_19CE:
	fn0800_1708(bp_100, ds, out es)
// DataOut: al ax bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_19D1:
	branch wLoc24_1204 >= 0x0000 l0800_19DB
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_19D8:
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_19DB:
	branch wLoc24_1204 == 0x0000 l0800_19F7
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_19DD:
	word16 sp_513 = sp_1012 - 2
	Mem514[ss:sp_513:word16] = es
	Mem517[ss:sp_513 - 2:word16] = wArg06
	wLoc28_1024 = wLoc28_1024 + 0x0001
	word16 sp_518
	byte SCZO_521
	word16 si_522
	word16 di_523
	selector es_524
	bool D_525
	byte al_526
	byte SZO_528
	bool C_529
	bool Z_530
	word16 ax_531
	word16 cx_532
	byte SO_533
	bool S_534
	byte bl_536
	byte bh_537
	byte CZ_538
	word16 dx_539
	byte ah_540
	byte dl_541
	byte cl_542
	byte ch_543
	call SEQ(0x0800, Mem517[ss:bp_100 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_430,al_428,ax_427,bh_438,bl_437,bLoc2B_389,bp_100,bx_436,C_468,ch_79,cl_80,cx_97,CZ_470,D_91,di_461,dl_390,ds_90,dx_392,es_506,S_467,SCZO_469,si_471,SO_466,sp_516,ss_507,SZO_512,wLoc02_4,wLoc24_388,wLoc28_511,wLoc2A_44,wLoc2E_10,wLoc30_13,wLoc32_18,Z_465
		defs: ah_540,al_526,ax_531,bh_537,bl_536,bp_519,bx_535,C_529,ch_543,cl_542,cx_532,CZ_538,D_525,di_523,dl_541,ds_527,dx_539,es_524,S_534,SCZO_521,si_522,SO_533,sp_518,ss_520,SZO_528,Z_530
	es = Mem517[ss:sp_518 + 2:selector]
	sp_1012 = sp_518 + 4
	branch (bLoc2B_1195 & 0x01) != 0x00 l0800_19F0
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_19EF:
	Mem563[es:di_523:byte] = al_526
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_19F0:
	branch ax_531 < 0x0000 l0800_1A03
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1A03:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1A03_thunk_fn0800_1AEB:
	word16 bp_561
	fn0800_1AEB(bp_100, out bp_561)
	return bp_561
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_19F4:
	branch si_522 > 0x0001 l0800_19DD
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_19F7:
	branch (bLoc2B_1195 & 0x01) != 0x00 l0800_1A00
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_19FD:
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_1A00:
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_17EF:
	wLoc24_386 = ax_404 - 0x0030
	word16 wLoc24_1204 = wLoc24_386
	branch wLoc24_1204 < 0x0000 l0800_1794
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(8) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_17F9:
	wLoc24_386 = ax_404 - 0x0026
// DataOut: bp ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_17E9:
	bLoc2B_1195 = bLoc2B_1195 | 0x01
// DataOut: bp ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0024(16) Local -0026(0) Local -0028(16) Local -002A(16) Local -002B(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_17E3:
// DataOut: al bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_17E6:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_17E6_thunk_fn0800_1AEB:
	word16 bp_422
	fn0800_1AEB(bp_100, out bp_422)
	return bp_422
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_17AB:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_17AB_thunk_fn0800_1AEB:
	word16 bp_433
	fn0800_1AEB(bp_100, out bp_433)
	return bp_433
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_172F:
	word16 sp_159 = sp_1012 - 2
	Mem160[ss:sp_159:word16] = wArg06
	wLoc28_1024 = wLoc28_1024 + 0x0001
	word16 sp_161
	byte SCZO_164
	word16 di_166
	bool D_168
	byte al_169
	byte SZO_171
	bool C_172
	bool Z_173
	word16 ax_174
	word16 cx_175
	byte SO_176
	bool S_177
	byte bl_179
	byte bh_180
	byte CZ_181
	word16 dx_182
	byte ah_183
	byte dl_184
	byte cl_185
	byte ch_186
	call SEQ(0x0800, Mem160[ss:bp_100 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_82,al_149,ax_152,bh_85,bl_86,bLoc2B_147,bp_100,bx_87,C_110,ch_79,cl_80,cx_97,CZ_84,D_91,di_153,dl_81,ds_90,dx_83,es_92,S_88,SCZO_143,si_104,SO_89,sp_159,ss_96,SZO_156,wLoc02_4,wLoc24_146,wLoc28_155,wLoc2A_44,wLoc2E_10,wLoc30_13,wLoc32_18,Z_144
		defs: ah_183,al_169,ax_174,bh_180,bl_179,bp_162,bx_178,C_172,ch_186,cl_185,cx_175,CZ_181,D_168,di_166,dl_184,ds_170,dx_182,es_167,S_177,SCZO_164,si_165,SO_176,sp_161,ss_163,SZO_171,Z_173
	sp_1012 = sp_161 + 2
	word16 ax_189 = ax_174
	branch ax_174 < 0x0000 l0800_1764
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(8) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_173F:
	branch di_166 < 0x0000 l0800_1775
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(8) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1743:
	branch Mem160[ds:di_166 + 0x055A:byte] != 0x01 l0800_1775
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(8) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1775:
	branch ax_174 == di_166 l0800_1726
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(8) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1779:
	Mem234[ss:sp_161:word16] = wArg06
	Mem236[ss:sp_161 - 2:word16] = ax_174
	word16 sp_237
	word16 bp_238
	selector ss_239
	byte SCZO_240
	word16 si_241
	word16 di_242
	selector es_243
	bool D_244
	byte al_245
	selector ds_246
	byte SZO_247
	bool C_248
	bool Z_249
	word16 ax_250
	word16 cx_251
	byte SO_252
	bool S_253
	word16 bx_254
	byte bl_255
	byte bh_256
	byte CZ_257
	word16 dx_258
	byte ah_259
	byte dl_260
	byte cl_261
	byte ch_262
	call SEQ(0x0800, Mem236[ss:bp_100 + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ah_192,al_190,ax_189,bh_180,bl_179,bLoc2B_147,bp_162,bx_178,C_229,ch_186,cl_185,cx_187,CZ_181,D_168,di_226,dl_184,ds_170,dx_182,es_167,S_228,SCZO_230,si_165,SO_194,sp_235,ss_163,SZO_227,wLoc02_4,wLoc24_146,wLoc28_155,wLoc2A_44,wLoc2E_10,wLoc30_13,wLoc32_18,Z_231
		defs: ah_259,al_245,ax_250,bh_256,bl_255,bp_238,bx_254,C_248,ch_262,cl_261,cx_251,CZ_257,D_244,di_242,dl_260,ds_246,dx_258,es_243,S_253,SCZO_240,si_241,SO_252,sp_237,ss_239,SZO_247,Z_249
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1785_thunk_fn0800_1AEB:
	word16 bp_270
	fn0800_1AEB(bp_238, out bp_270)
	return bp_270
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_174A:
	byte bl_300 = (byte) ax_189
	word16 bx_303 = DPB(ax_189, bl_300, 0)
	branch bl_300 < 0x00 l0800_1767
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(8) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_174F:
	branch Mem160[ds:bx_303 + 0x055A:byte] != 0x01 l0800_1767
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(8) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1767:
	word16 sp_308 = sp_1012 - 2
	Mem309[ss:sp_308:word16] = wArg06
	Mem311[ss:sp_308 - 2:word16] = bx_303
	word16 sp_312
	byte SCZO_315
	word16 di_317
	bool D_319
	byte al_320
	byte SZO_322
	bool C_323
	bool Z_324
	word16 ax_325
	word16 cx_326
	byte SO_327
	bool S_328
	byte bl_330
	byte bh_331
	byte CZ_332
	word16 dx_333
	byte ah_334
	byte dl_335
	byte cl_336
	byte ch_337
	call SEQ(0x0800, Mem311[ss:bp_100 + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ah_298,al_296,ax_295,bh_301,bl_302,bLoc2B_147,bp_292,bx_303,C_306,ch_275,cl_276,cx_290,CZ_279,D_284,di_286,dl_277,ds_283,dx_278,es_285,S_305,SCZO_288,si_287,SO_281,sp_310,ss_289,SZO_304,wLoc02_4,wLoc24_146,wLoc28_274,wLoc2A_44,wLoc2E_10,wLoc30_13,wLoc32_18,Z_282
		defs: ah_334,al_320,ax_325,bh_331,bl_330,bp_313,bx_329,C_323,ch_337,cl_336,cx_326,CZ_332,D_319,di_317,dl_335,ds_321,dx_333,es_318,S_328,SCZO_315,si_316,SO_327,sp_312,ss_314,SZO_322,Z_324
	sp_1012 = sp_312 + 4
	wLoc28_1024 = wLoc28_1024 - 0x0001
// DataOut: bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(16) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1756:
	word16 sp_351 = sp_1012 - 2
	Mem352[ss:sp_351:word16] = wArg06
	wLoc28_1024 = wLoc28_1024 + 0x0001
	word16 sp_353
	byte SCZO_356
	word16 si_357
	word16 di_358
	selector es_359
	bool D_360
	byte al_361
	byte SZO_363
	bool C_364
	bool Z_365
	word16 ax_366
	word16 cx_367
	byte SO_368
	bool S_369
	word16 bx_370
	byte bl_371
	byte bh_372
	byte CZ_373
	word16 dx_374
	byte ah_375
	byte dl_376
	byte cl_377
	byte ch_378
	call SEQ(0x0800, Mem352[ss:bp_100 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_298,al_296,ax_295,bh_301,bl_302,bLoc2B_147,bp_292,bx_303,C_306,ch_275,cl_276,cx_290,CZ_279,D_284,di_286,dl_277,ds_283,dx_278,es_285,S_305,SCZO_345,si_287,SO_281,sp_351,ss_289,SZO_349,wLoc02_4,wLoc24_146,wLoc28_348,wLoc2A_44,wLoc2E_10,wLoc30_13,wLoc32_18,Z_346
		defs: ah_375,al_361,ax_366,bh_372,bl_371,bp_354,bx_370,C_364,ch_378,cl_377,cx_367,CZ_373,D_360,di_358,dl_376,ds_362,dx_374,es_359,S_369,SCZO_356,si_357,SO_368,sp_353,ss_355,SZO_363,Z_365
	sp_1012 = sp_353 + 2
	ax_189 = ax_366
	branch ax_366 > 0x0000 l0800_174A
// DataOut: al bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0026(0) Local -0028(8) Local -002A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_1764:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

l0800_1764_thunk_fn0800_1AEB:
	word16 bp_224
	fn0800_1AEB(bp_100, out bp_224)
	return bp_224
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> es:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>

fn0800_16F3_exit:
// DataOut: bp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> al:<invalid> ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):<invalid> -58(fp):<invalid> -56(fp):0x7FFF -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -34(fp):0x0000 -2(fp):bp 8(fp):<invalid>



word16 fn0800_1708(word16 bp, selector ds, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di es
// Trashed: SCZO di dil edi es rdi
// Preserved: sp
fn0800_1708_entry:
// DataOut: al ax bp bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_1708:
	word16 di_5 = Mem0[ss:bp + 0x000C:word16]
	branch (Mem0[ss:bp - 0x0029:byte] & 0x20) == 0x00 l0800_1718
// DataOut: al ax bp bx di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_1718:
	word16 di_26 = Mem0[ds:di_5:word16]
	Mem33[ss:bp + 0x000C:word16] = Mem0[ss:bp + 0x000C:word16] + 0x0002
	selector es_29
	*esOut = ds
	return di_26
// DataOut: al ax bp bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:<invalid>

l0800_1711:
	ptr32 es_di_19 = Mem0[ds:di_5:segptr32]
	Mem23[ss:bp + 0x000C:word16] = Mem0[ss:bp + 0x000C:word16] + 0x0004
	selector es_21
	*esOut = SLICE(es_di_19, selector, 16)
	return (word16) es_di_19
// DataOut: al ax bp bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:<invalid>

fn0800_1708_exit:
// DataOut: di es
// DataOut (flags): 
// SymbolicIn: sp:fp di:<invalid> Sequence es:di:<invalid> es:ds -2(fp):ds



word16 fn0800_1898(word16 ax, word16 bp, selector ds, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds ss
// LiveOut: ax bp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi es esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: sp
fn0800_1898_entry:
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_1898:
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_1898_thunk_fn0800_1B06:
	word16 bp_5
	return fn0800_1B06(ax, bp, ds, out bp_5)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_1898_exit:
// DataOut: ax bp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid>



void fn0800_18AF(word16 ax, word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ss
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx es esi esp rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_18AF_entry:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_18AF:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_18AF_thunk_fn0800_1B2C:
	fn0800_1B2C(ax, bp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_18AF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid> ch:<invalid> dl:<invalid>



void fn0800_18CF(word16 ax, word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ss
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx es esi esp rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_18CF_entry:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_18CF:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_18CF_thunk_fn0800_1B2C:
	fn0800_1B2C(ax, bp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_18CF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid> ch:<invalid> dl:<invalid>



word16 fn0800_196F(word16 ax, word16 bp, selector ds, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds ss
// LiveOut: ax bp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi es esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: sp
fn0800_196F_entry:
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_196F:
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_196F_thunk_fn0800_1B06:
	word16 bp_5
	return fn0800_1B06(ax, bp, ds, out bp_5)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_196F_exit:
// DataOut: ax bp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid>



word16 fn0800_1AEB(word16 bp, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut: ax bp
// Trashed: SCZO ah al ax bp bpl ch cl cx di dil eax ebp ecx edi es esi esp rax rbp rcx rdi rsi rsp si sil sp spl
// Preserved: sp
fn0800_1AEB_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_1AEB:
	word16 sp_11
	selector ss_12
	word16 bp_13
	word16 ax_14
	word16 cx_15
	byte SCZO_16
	bool C_17
	selector es_18
	word16 di_19
	word16 si_20
	call SEQ(0x0800, Mem0[ss:bp + 0x0006:word16]) (retsize: 2; depth: 6)
		uses: ax_8,bp,sp_9,ss,wLoc02_7,wLoc04_10
		defs: ax_14,bp_13,C_17,cx_15,di_19,es_18,SCZO_16,si_20,sp_11,ss_12
	Mem28[ss_12:bp_13 - 0x0028:word16] = Mem0[ss_12:bp_13 - 0x0028:word16] - (Mem0[ss_12:bp_13 - 0x0028:word16] <u 0x0001)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_1AFB_thunk_fn0800_1AFF:
	word16 bp_33
	return fn0800_1AFF(bp_13, psegArg00, wArg02, wArg04, out bp_33)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> -4(fp):0xFFFF -2(fp):<invalid>

fn0800_1AEB_exit:
// DataOut: ax bp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid> -4(fp):0xFFFF -2(fp):<invalid>



word16 fn0800_1AFF(word16 bp, selector psegArg00, word16 wArg02, word16 wArg04, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut: ax bp
// Trashed: ah al ax bp bpl di dil eax ebp edi es esi esp rax rbp rdi rsi rsp si sil sp spl
// Preserved:
fn0800_1AFF_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_1AFF:
	word16 ax_8 = Mem0[ss:bp - 0x0028:word16]
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_1B8C:
	word16 bp_15
	*bpOut = Mem0[ss:bp:word16]
	return ax_8
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 es:<invalid> ax:<invalid>

fn0800_1AFF_exit:
// DataOut: ax bp
// DataOut (flags): 
// SymbolicIn: sp:bp + 2 es:<invalid> ax:<invalid> di:<invalid> si:<invalid> bp:<invalid>



word16 fn0800_1B06(word16 ax, word16 bp, selector ds, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds ss
// LiveOut: ax bp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi es esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: sp
fn0800_1B06_entry:
	word16 sp_1 = fp
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_1B06:
	Mem9[ss:bp - 0x0026:word16] = Mem0[ss:bp - 0x0026:word16] + 0x0001
	word16 sp_12 = sp_1 - 2
	Mem13[ss:sp_12:word16] = Mem9[ss:bp + 0x0008:word16]
	word16 sp_14
	byte SZO_17
	word16 cx_18
	word16 ax_19
	bool C_20
	byte al_21
	bool S_22
	word16 bx_23
	selector ds_24
	byte SCZO_25
	bool Z_26
	call SEQ(0x0800, Mem13[ss:bp + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: bp_4,sp_12,ss_5,SZO_10
		defs: al_21,ax_19,bp_16,bx_23,C_20,cx_18,ds_24,S_22,SCZO_25,sp_14,ss_15,SZO_17,Z_26
	sp_1 = sp_14 + 2
	byte al_30 = (byte) ax_19
	branch ax_19 <= 0x0000 l0800_1B27
// DataOut: al ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -2(fp):<invalid>

l0800_1B27:
	branch ax_19 == 0x0000 l0800_1B21
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -2(fp):<invalid>

l0800_1B29:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -2(fp):<invalid>

l0800_1B2A_thunk_fn0800_1AEB:
	word16 bp_83
	return fn0800_1AEB(bp, out bp_83)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -2(fp):<invalid>

l0800_1B14:
	word16 ax_68 = DPB(ax_19, al_30, 0)
	branch al_30 < 0x00 l0800_1B21
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -2(fp):<invalid>

l0800_1B18:
	branch Mem13[ds_24:ax_68 + 0x055A:byte] == 0x01 l0800_1B06
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -2(fp):<invalid>

l0800_1B21:
	word16 sp_54
	selector ss_55
	word16 bp_56
	byte SZO_57
	word16 cx_58
	word16 ax_59
	bool C_60
	byte al_61
	bool S_62
	word16 bx_63
	selector ds_64
	byte SCZO_65
	bool Z_66
	call Mem13[ss:sp_14 + 2:word16] + 0x0003 (retsize: 2; depth: 2)
		uses: al_30,ax_29,bp_16,bx_23,C_34,cx_52,ds_24,S_33,SCZO_53,sp_51,ss_15,SZO_31,Z_32
		defs: al_61,ax_59,bp_56,bx_63,C_60,cx_58,ds_64,S_62,SCZO_65,sp_54,ss_55,SZO_57,Z_66
	return ax_59
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -2(fp):<invalid>

fn0800_1B06_exit:
// DataOut: ax bp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid> -2(fp):<invalid>



void fn0800_1B2C(word16 ax, word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ss
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx es esi esp rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_1B2C_entry:
	word16 sp_1 = fp
// DataOut: ax bp sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_1B2C:
	word16 dx_142 = 0x0000
	word16 cx_128 = 0x0004
	byte cl_113 = 0x04
// DataOut: ax bp cl cx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_1B31:
	word16 v8_28 = Mem0[ss:bp - 0x0022:word16] - 0x0001
	Mem29[ss:bp - 0x0022:word16] = v8_28
	branch v8_28 < 0x0000 l0800_1B7B
// DataOut: ax bp cl cx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_1B7B:
// DataOut: bp cl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_1B36:
	word16 sp_85 = sp_1 - 2
	Mem86[ss:sp_85:word16] = dx_142
	Mem88[ss:sp_85 - 2:word16] = cx_128
	Mem90[ss:bp - 0x0026:word16] = Mem88[ss:bp - 0x0026:word16] + 0x0001
	Mem94[ss:sp_85 - 4:word16] = Mem90[ss:bp + 0x0008:word16]
	word16 sp_95
	word16 dx_96
	byte SCZO_97
	word16 cx_98
	byte SZO_101
	byte SO_102
	word16 ax_103
	bool C_104
	byte cl_105
	byte ch_106
	byte al_107
	byte dl_108
	bool Z_109
	call SEQ(0x0800, Mem94[ss:bp + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: al_15,ax_18,bp_20,C_17,ch_22,cl_16,cx_23,dl_24,dx_25,SCZO_26,SO_31,sp_93,ss_19,SZO_91,Z_14
		defs: al_107,ax_103,bp_99,C_104,ch_106,cl_105,cx_98,dl_108,dx_96,SCZO_97,SO_102,sp_95,ss_100,SZO_101,Z_109
	word16 cx_112 = Mem94[ss:sp_95 + 2:word16]
	cl_113 = (byte) cx_112 (alias)
	word16 dx_115 = Mem94[ss:sp_95 + 4:word16]
	sp_1 = sp_95 + 6
	byte al_119 = (byte) ax_103
	branch ax_103 <= 0x0000 l0800_1B7D
// DataOut: al ax bp cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_1B48:
	cl_113 = cl_113 - 0x01
	word16 cx_123 = DPB(cx_112, cl_113 - 0x01, 0)
	branch cl_113 < 0x01 l0800_1B7D
// DataOut: al ax bp cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_1B4C:
	byte ch_127 = al_119 - 0x30
	cx_128 = DPB(cx_123, al_119 - 0x30, 8) (alias)
	branch al_119 <u 0x30 l0800_1B7D
// DataOut: ax bp ch cl cx dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_1B53:
	branch al_119 <u 0x3A l0800_1B6F
// DataOut: ax bp ch cl cx dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x30 dl:<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_1B58:
	byte ch_144 = al_119 - 0x41
	word16 cx_145 = DPB(cx_123, al_119 - 0x41, 8)
	branch al_119 <u 0x41 l0800_1B7D
// DataOut: ax bp ch cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x30 dl:<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_1B5D:
	branch al_119 <u 0x47 l0800_1B6C
// DataOut: ax bp ch cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x41 dl:<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_1B62:
	ch_144 = al_119 - 0x61
	cx_145 = DPB(cx_123, al_119 - 0x61, 8) (alias)
	branch al_119 <u 0x61 l0800_1B7D
// DataOut: ax bp ch cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x41 dl:<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_1B67:
	branch al_119 >=u 0x67 l0800_1B7D
// DataOut: ax bp ch cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x61 dl:<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_1B7D:
	branch cl_113 == 0x04 l0800_1B88
// DataOut: bp sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_1B88:
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_1B89_thunk_fn0800_1AEB:
	word16 bp_83
	fn0800_1AEB(bp, out bp_83)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_1B82:
	word16 sp_66
	word16 dx_67
	byte SCZO_68
	word16 cx_69
	word16 bp_70
	selector ss_71
	byte SZO_72
	byte SO_73
	word16 ax_74
	bool C_75
	byte cl_76
	byte ch_77
	byte al_78
	byte dl_79
	bool Z_80
	call Mem29[ss:sp_1:word16] + 0x0003 (retsize: 2; depth: 2)
		uses: al_32,ax_35,bp_39,C_34,ch_41,cl_33,cx_64,dl_43,dx_44,SCZO_65,SO_36,sp_63,ss_38,SZO_37,Z_46
		defs: al_78,ax_74,bp_70,C_75,ch_77,cl_76,cx_69,dl_79,dx_67,SCZO_68,SO_73,sp_66,ss_71,SZO_72,Z_80
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

fn0800_1B2C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid> ch:<invalid> dl:<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_1B6C:
	ch_127 = ch_144 + 0x0A
	cx_128 = DPB(cx_145, ch_127, 8) (alias)
// DataOut: ax bp ch cl cx dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_1B6F:
	dx_142 = DPB(dx_115 << 0x0004, (byte) (dx_115 << 0x0004) + ch_127, 0) (alias)
// DataOut: ax bp cl cx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000



void __scantod()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0800_1B92_entry:
// DataOut: bp bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_1B92:
	word16 sp_4
	selector ds_5
	call Mem0[ds:0x05E2:word16] (retsize: 2; depth: 2)
		uses: ds,sp_1
		defs: ds_5,sp_4
	return
// DataOut: bp bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_1B92_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __scanrslt()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0800_1B96_entry:
// DataOut: bp bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_1B96:
	word16 sp_4
	selector ds_5
	call Mem0[ds:0x05E4:word16] (retsize: 2; depth: 2)
		uses: ds,sp_1
		defs: ds_5,sp_4
	return
// DataOut: bp bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_1B96_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __scanpop()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0800_1B9A_entry:
// DataOut: bp bx di ds es ss
// DataOut (flags): SO
// SymbolicIn: sp:fp

l0800_1B9A:
	word16 sp_4
	selector ds_5
	call Mem0[ds:0x05E6:word16] (retsize: 2; depth: 2)
		uses: ds,sp_1
		defs: ds_5,sp_4
	return
// DataOut: bp bx di ds es ss
// DataOut (flags): SO
// SymbolicIn: sp:fp

fn0800_1B9A_exit:
// DataOut:
// DataOut (flags): SO
// SymbolicIn: sp:fp



bool fn0800_1B9E(byte cl, byte bl)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bl cl
// LiveOut: C
// Trashed: SCZO bh bl bx ebx rbx
// Preserved: bx sp
fn0800_1B9E_entry:
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_1B9E:
	bool C_14
	byte bl_29 = bl - 0x30
	branch bl <u 0x30 l0800_1BC7
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_1BA4:
	branch bl <=u 0x39 l0800_1BBB
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bl:bl - 0x30 -2(fp):bx

l0800_1BA9:
	branch bl >u 0x5A || bl <u 0x30 l0800_1BB3
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bl:bl - 0x30 -2(fp):bx

l0800_1BB3:
	bl_29 = bl - 0x57
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bl:bl - 0x30 -2(fp):bx

l0800_1BAE:
	bl_29 = bl - 0x37
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bl:bl - 0x30 -2(fp):bx

l0800_1BB6:
	branch bl_29 <=u 0x09 l0800_1BC7
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bl:<invalid> -2(fp):bx

l0800_1BBB:
	branch bl_29 >=u cl l0800_1BC7
// DataOut: bl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bl:<invalid> -2(fp):bx

l0800_1BC7:
	C_14 = true
// DataOut: cx di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 2 bl:<invalid> -2(fp):bx

l0800_1BBF:
	C_14 = false
// DataOut: cx di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 2 bl:<invalid> -2(fp):bx

l0800_1BC5:
// DataOut: cx di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp bl:<invalid> bx:bx bh:0x00 -2(fp):bx

l0800_1BCB:
	return C_14
// DataOut: cx di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp bl:<invalid> bx:bx bh:0x00 -2(fp):bx

fn0800_1B9E_exit:
// DataOut:
// DataOut (flags): C
// SymbolicIn: sp:fp bl:<invalid> bx:bx bh:0x00 -2(fp):bx



word16 __scantol(word16 ax, word16 bx, selector ds, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx ds ss
// LiveOut: ax bx di dx es
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: al bp sp
// Stack args: Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)
fn0800_1BCC_entry:
// DataOut: ax bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1BCC:
	byte bLoc07_14 = 0x00
	word16 wLoc06_130 = 0x0000
	word16 wLoc04_127 = 0x0001
	word16 sp_134 = fp - 0x000E
// DataOut: ax bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1BE6:
	selector ds_156
	word16 ax_174
	word16 v9_28 = wLoc06_130 + 0x0001
	word16 sp_33 = sp_134 - 2
	Mem34[ss:sp_33:word16] = wArg06
	wLoc06_130 = v9_28
	word16 sp_35
	word16 bp_36
	byte SCZO_38
	word16 si_39
	word16 di_40
	selector es_41
	byte SZO_42
	word16 cx_43
	word16 ax_44
	bool C_45
	byte SO_46
	byte al_47
	word16 bx_48
	byte bl_49
	bool Z_50
	selector ds_51
	byte CZ_52
	byte cl_53
	word16 dx_54
	byte dl_55
	byte dh_56
	byte ah_57
	call SEQ(0x0800, Mem34[ss:fp + 0x0002:word16]) (retsize: 2; depth: 2)
		uses: bLoc07_14,bp_5,cx,di_20,es,SCZO_7,si,sp_33,ss_25,SZO_30,wLoc02_4,wLoc04_16,wLoc06_29,wLoc0A_10,wLoc0C_13,wLoc0E_19
		defs: ah_57,al_47,ax_44,bl_49,bp_36,bx_48,C_45,cl_53,cx_43,CZ_52,dh_56,di_40,dl_55,ds_51,dx_54,es_41,SCZO_38,si_39,SO_46,sp_35,ss_37,SZO_42,Z_50
	sp_134 = sp_35 + 2
	word16 ax_131 = ax_44
	byte al_64 = (byte) ax_44
	branch ax_44 < 0x0000 l0800_1C5A
// DataOut: al ax bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0241 cx:<invalid> ax:<invalid> bx:(int16) al -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):0x00 -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1BF4:
	word16 ax_211 = (int16) al_64
	byte bl_220 = (byte) ax_211
	branch (bl_220 & 0x80) != 0x00 l0800_1C00
// DataOut: ax bl bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0241 cx:<invalid> ax:<invalid> bx:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):0x00 -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1BFB:
	branch (Mem34[ds_51:ax_211 + di_40:byte] & 0x01) != 0x00 l0800_1BE6
// DataOut: ax bl bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0241 cx:<invalid> ax:<invalid> bx:(int16) al -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):0x00 -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C00:
	ax_131 = ax_211
	byte al_230 = (byte) ax_211
	word16 wArg0A_235 = wArg0A - 0x0001
	branch wArg0A < 0x0001 l0800_1C61
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0241 cx:<invalid> ax:<invalid> bx:(int16) al -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):0x00 -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C06:
	word16 bp_294
	branch al_230 == 0x2B l0800_1C11
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0241 cx:<invalid> ax:(int16) al bx:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):0x00 -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C0A:
	ds_156 = ds_51
	bp_294 = bp_36
	branch al_230 != 0x2D l0800_1C24
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0241 cx:<invalid> ax:(int16) al bx:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):0x00 -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C0E:
	bLoc07_14 = 0x01
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0241 cx:<invalid> ax:(int16) al bx:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):0x00 -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C11:
	wArg0A_235 = wArg0A - 0x0002
	branch wArg0A < 0x0002 l0800_1C61
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0241 cx:<invalid> ax:(int16) al bx:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C16:
	Mem817[ss:sp_35:word16] = wArg06
	wLoc06_130 = v9_28 + 0x0001
	word16 sp_818
	byte SCZO_821
	word16 si_822
	word16 di_823
	selector es_824
	byte SZO_825
	word16 cx_826
	word16 ax_827
	bool C_828
	byte SO_829
	byte al_830
	word16 bx_831
	byte bl_832
	bool Z_833
	byte CZ_835
	byte cl_836
	word16 dx_837
	byte dl_838
	byte dh_839
	byte ah_840
	call SEQ(0x0800, Mem817[ss:bp_36 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_231,al_230,ax_227,bl_220,bLoc07_805,bp_36,bx_233,C_225,cl_53,cx_58,CZ_52,dh_56,di_40,dl_55,ds_51,dx_54,es_41,SCZO_807,si_39,SO_811,sp_816,ss_37,SZO_814,wLoc02_4,wLoc04_16,wLoc06_813,wLoc0A_10,wLoc0C_13,wLoc0E_19,Z_806
		defs: ah_840,al_830,ax_827,bl_832,bp_819,bx_831,C_828,cl_836,cx_826,CZ_835,dh_839,di_823,dl_838,ds_834,dx_837,es_824,SCZO_821,si_822,SO_829,sp_818,ss_820,SZO_825,Z_833
	sp_134 = sp_818 + 2
	ax_131 = ax_827
	al_230 = (byte) ax_827 (alias)
	branch ax_827 < 0x0000 l0800_1C5A
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0241 cx:<invalid> ax:(int16) al bx:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C5A:
	wLoc04_127 = 0xFFFF
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0241 cx:<invalid> ax:<invalid> bx:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0006(16) Stack +000C(16) Stack +000E(16)

l0800_1C24:
	word16 ax_398
	word16 si_296 = 0x0000
	word16 di_299 = 0x0000
	byte cl_303 = (byte) wArg08
	branch wArg08 == 0x0000 l0800_1C7B
// DataOut: al ax cl cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0241 cx:<invalid> ax:<invalid> bx:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C7B:
	wArg08 = 0x000A
	branch al_230 != 0x30 l0800_1CA7
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0000 cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C84:
	word16 v62_761 = wArg0A_235 - 0x0001
	wArg0A_235 = v62_761
	branch v62_761 < 0x0000 l0800_1C78
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0000 cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):0x000A 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C89:
	word16 sp_769 = sp_134 - 2
	Mem770[ss:sp_769:word16] = wArg06
	wLoc06_130 = wLoc06_130 + 0x0001
	word16 sp_771
	byte SCZO_774
	selector es_777
	byte SZO_778
	word16 cx_779
	bool C_781
	byte SO_782
	byte al_783
	word16 bx_784
	byte bl_785
	bool Z_786
	byte CZ_788
	byte cl_789
	word16 dx_790
	byte dl_791
	byte dh_792
	byte ah_793
	call SEQ(0x0800, Mem770[ss:bp_294 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_284,al_283,ax_282,bl_292,bLoc07_273,bp_294,bx_291,C_286,cl_303,cx_301,CZ_275,dh_290,di_299,dl_289,ds_276,dx_287,es_293,SCZO_758,si_296,SO_764,sp_769,ss_278,SZO_767,wLoc02_4,wLoc04_16,wLoc06_766,wLoc0A_10,wLoc0C_13,wLoc0E_19,Z_759
		defs: ah_793,al_783,ax_780,bl_785,bp_772,bx_784,C_781,cl_789,cx_779,CZ_788,dh_792,di_776,dl_791,ds_787,dx_790,es_777,SCZO_774,si_775,SO_782,sp_771,ss_773,SZO_778,Z_786
	sp_134 = sp_771 + 2
	wArg08 = 0x0008
	branch al_783 == 0x78 l0800_1CA0
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0000 cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):0x000A 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C9C:
	branch al_783 != 0x58 l0800_1CCD
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0000 cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):0x0008 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1CA0:
	wArg08 = 0x0010
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0000 cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):0x0008 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C2D:
	branch wArg08 >u 0x0024 l0800_1C61
// DataOut: al ax cl di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0000 cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C32:
	branch cl_303 <u 0x02 l0800_1C61
// DataOut: al ax cl di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0000 cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C37:
	branch al_230 != 0x30 l0800_1CA7
// DataOut: al cl di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0000 cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1CA7:
	branch fn0800_1B9E(0x0A, (byte) ax_131) l0800_1C61
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0000 cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):0x000A 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C61:
	wLoc04_127 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):0x000A 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0006(16) Stack +000C(16) Stack +000E(16)

l0800_1C66:
	word16 sp_136 = sp_134 - 2
	Mem137[ss:sp_136:word16] = wArg06
	Mem139[ss:sp_136 - 2:word16] = ax_131
	word16 sp_140
	word16 bp_141
	byte SCZO_143
	word16 si_144
	word16 di_145
	selector es_146
	byte SZO_147
	word16 cx_148
	word16 ax_149
	bool C_150
	byte SO_151
	byte al_152
	word16 bx_153
	byte bl_154
	bool Z_155
	byte CZ_157
	byte cl_158
	word16 dx_159
	byte dl_160
	byte dh_161
	byte ah_162
	call SEQ(0x0800, Mem139[ss:bp_36 + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ah_65,al_64,ax_131,bl_49,bLoc07_125,bp_36,bx_48,C_69,cl_53,cx_58,CZ_52,dh_56,di_40,dl_55,ds_51,dx_54,es_41,SCZO_38,si_39,SO_68,sp_138,ss_129,SZO_67,wLoc02_4,wLoc04_127,wLoc06_130,wLoc0A_10,wLoc0C_13,wLoc0E_19,Z_50
		defs: ah_162,al_152,ax_149,bl_154,bp_141,bx_153,C_150,cl_158,cx_148,CZ_157,dh_161,di_145,dl_160,ds_156,dx_159,es_146,SCZO_143,si_144,SO_151,sp_140,ss_142,SZO_147,Z_155
	sp_134 = sp_140 + 4
	wLoc06_130 = wLoc06_130 - 0x0001
	ax_174 = 0x0000 (alias)
	word16 dx_176
	*dxOut = 0x0000
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x000A 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +000C(16) Stack +000E(16)

l0800_1CB1:
	si_296 = ax_131
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0000 cx:0x000A ax:<invalid> bx:<invalid> si:0x0000 bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):0x000A 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C3B:
	branch cl_303 != 0x10 l0800_1CA5
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0000 cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C40:
	word16 v30_718 = wArg0A_235 - 0x0001
	wArg0A_235 = v30_718
	branch v30_718 < 0x0000 l0800_1C78
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0000 cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C78:
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0000 cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):0x000A 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +000C(16) Stack +000E(16)

l0800_1C45:
	word16 sp_726 = sp_134 - 2
	Mem727[ss:sp_726:word16] = wArg06
	wLoc06_130 = wLoc06_130 + 0x0001
	word16 sp_728
	byte SCZO_731
	selector es_734
	byte SZO_735
	word16 cx_736
	bool C_738
	byte SO_739
	byte al_740
	word16 bx_741
	byte bl_742
	bool Z_743
	byte CZ_745
	byte cl_746
	word16 dx_747
	byte dl_748
	byte dh_749
	byte ah_750
	call SEQ(0x0800, Mem727[ss:bp_294 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_284,al_283,ax_282,bl_292,bLoc07_273,bp_294,bx_291,C_713,cl_303,cx_301,CZ_711,dh_290,di_299,dl_289,ds_276,dx_287,es_293,SCZO_716,si_296,SO_721,sp_726,ss_278,SZO_724,wLoc02_4,wLoc04_16,wLoc06_723,wLoc0A_10,wLoc0C_13,wLoc0E_19,Z_717
		defs: ah_750,al_740,ax_737,bl_742,bp_729,bx_741,C_738,cl_746,cx_736,CZ_745,dh_749,di_733,dl_748,ds_744,dx_747,es_734,SCZO_731,si_732,SO_739,sp_728,ss_730,SZO_735,Z_743
	sp_134 = sp_728 + 2
	branch al_740 == 0x78 l0800_1CA5
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0000 cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C53:
	branch al_740 == 0x58 l0800_1CA5
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0000 cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1CA5:
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0000 cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):0x0010 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1C57:
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:0x0000 cx:<invalid> ax:<invalid> bx:<invalid> si:0x0000 -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1CCD:
	byte cl_438 = (byte) wArg08
	byte bl_442 = (byte) ax_398
	bool C_443 = fn0800_1B9E(cl_438, bl_442)
	word16 ax_445 = ax_398
	branch C_443 l0800_1CB4
// DataOut: ax di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):<invalid> 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1CB4:
	int32 dx_ax_501 = wArg08 *u si_296
	ui32 di_si_508 = SEQ(di_299, ax_398 + (word16) dx_ax_501) + dx_ax_501
	di_299 = SLICE(di_si_508, word16, 16) (alias)
	si_296 = (word16) di_si_508 (alias)
	bp_539 = bp_294
	branch di_si_508 != 0x00000000 l0800_1CEA
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):<invalid> 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1CEA:
	word16 bp_539
	word16 v47_541 = wArg0A_235 - 0x0001
	wArg0A_235 = v47_541
	branch v47_541 < 0x0000 l0800_1D0F
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):<invalid> 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1CEF:
	word16 sp_549 = sp_134 - 2
	Mem550[ss:sp_549:word16] = wArg06
	wLoc06_130 = wLoc06_130 + 0x0001
	word16 sp_551
	byte SCZO_554
	word16 si_555
	word16 di_556
	selector es_557
	byte SZO_558
	word16 cx_559
	word16 ax_560
	bool C_561
	byte SO_562
	byte al_563
	word16 bx_564
	byte bl_565
	bool Z_566
	byte CZ_568
	byte cl_569
	word16 dx_570
	byte dl_571
	byte dh_572
	byte ah_573
	call SEQ(0x0800, Mem550[ss:bp_539 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_523,al_522,ax_521,bl_532,bLoc07_273,bp_539,bx_531,C_525,cl_514,cx_518,CZ_515,dh_529,di_534,dl_528,ds_516,dx_526,es_533,SCZO_530,si_536,SO_544,sp_549,ss_517,SZO_547,wLoc02_4,wLoc04_16,wLoc06_546,wLoc0A_10,wLoc0C_13,wLoc0E_19,Z_520
		defs: ah_573,al_563,ax_560,bl_565,bp_552,bx_564,C_561,cl_569,cx_559,CZ_568,dh_572,di_556,dl_571,ds_567,dx_570,es_557,SCZO_554,si_555,SO_562,sp_551,ss_553,SZO_558,Z_566
	sp_134 = sp_551 + 2
	ax_445 = ax_560
	branch fn0800_1B9E((byte) wArg08, (byte) ax_560) l0800_1CD9
// DataOut: ax cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):<invalid> 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1CD9:
	int32 dx_ax_595 = wArg08 *u si_555
	word16 ax_596 = (word16) dx_ax_595
	ui32 ax_si_611 = SEQ(di_556, ax_560 + ax_596) + SEQ(SLICE(dx_ax_595, word16, 16), ax_596)
	int32 dx_ax_605 = wArg08 *u di_556
	si_296 = (word16) ax_si_611 (alias)
	di_299 = SLICE(ax_si_611, word16, 16)
	branch SLICE(dx_ax_605, byte, 16) + SLICE(dx_ax_605, byte, 24) + (ax_si_611 <u 0x00000000) != 0x00 l0800_1D32
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):<invalid> 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1D32:
	byte ah_635 = (bLoc07_14 <u 0xFF) + 0xFF
	ax_174 = DPB(0xFFFF, ah_635, 8) (alias)
	word16 dx_641
	*dxOut = (ah_635 <u 0x00) + 0x7FFF
	wLoc04_127 = 0x0002
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):<invalid> 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +000C(16) Stack +000E(16)

l0800_1CBE:
	word16 v39_379 = wArg0A_235 - 0x0001
	wArg0A_235 = v39_379
	branch v39_379 < 0x0000 l0800_1D0F
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):<invalid> 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1CC3:
	word16 sp_387 = sp_134 - 2
	Mem388[ss:sp_387:word16] = wArg06
	wLoc06_130 = wLoc06_130 + 0x0001
	word16 sp_389
	byte SCZO_392
	selector es_395
	byte SZO_396
	word16 cx_397
	bool C_399
	byte SO_400
	byte al_401
	word16 bx_402
	byte bl_403
	bool Z_404
	byte CZ_406
	byte cl_407
	word16 dx_408
	byte dl_409
	byte dh_410
	byte ah_411
	call SEQ(0x0800, Mem388[ss:bp_294 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_361,al_360,ax_359,bl_370,bLoc07_273,bp_377,bx_369,C_363,cl_352,cx_356,CZ_353,dh_367,di_372,dl_366,ds_354,dx_364,es_371,SCZO_368,si_374,SO_382,sp_387,ss_355,SZO_385,wLoc02_4,wLoc04_16,wLoc06_384,wLoc0A_10,wLoc0C_13,wLoc0E_19,Z_358
		defs: ah_411,al_401,ax_398,bl_403,bp_390,bx_402,C_399,cl_407,cx_397,CZ_406,dh_410,di_394,dl_409,ds_405,dx_408,es_395,SCZO_392,si_393,SO_400,sp_389,ss_391,SZO_396,Z_404
	sp_134 = sp_389 + 2
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):<invalid> 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16)

l0800_1CD7:
// DataOut: ax di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):<invalid> 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +0006(16) Stack +000C(16) Stack +000E(16)

l0800_1D03:
	word16 sp_462 = sp_134 - 2
	Mem463[ss:sp_462:word16] = wArg06
	Mem465[ss:sp_462 - 2:word16] = ax_445
	word16 sp_466
	word16 bp_467
	byte SCZO_469
	selector es_472
	byte SZO_473
	word16 cx_474
	word16 ax_475
	bool C_476
	byte SO_477
	byte al_478
	word16 bx_479
	byte bl_480
	bool Z_481
	byte CZ_483
	byte cl_484
	word16 dx_485
	byte dl_486
	byte dh_487
	byte ah_488
	call SEQ(0x0800, Mem465[ss:bp_294 + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ah_449,al_448,ax_455,bl_442,bLoc07_273,bp_434,bx_451,C_443,cl_438,cx_436,CZ_417,dh_427,di_431,dl_426,ds_418,dx_425,es_430,SCZO_428,si_432,SO_419,sp_464,ss_453,SZO_422,wLoc02_4,wLoc04_16,wLoc06_454,wLoc0A_10,wLoc0C_13,wLoc0E_19,Z_423
		defs: ah_488,al_478,ax_475,bl_480,bp_467,bx_479,C_476,cl_484,cx_474,CZ_483,dh_487,di_471,dl_486,ds_482,dx_485,es_472,SCZO_469,si_470,SO_477,sp_466,ss_468,SZO_473,Z_481
	sp_134 = sp_466 + 4
	wLoc06_130 = wLoc06_130 - 0x0001
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):<invalid> 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0007(0) Stack +000C(16) Stack +000E(16)

l0800_1D0F:
	word16 dx_325
	*dxOut = di_299
	ax_174 = si_296
	branch bLoc07_14 == 0x00 l0800_1D1F
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):<invalid> 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +000C(16) Stack +000E(16)

l0800_1D18:
	ax_174 = -si_296
	word16 dx_345
	*dxOut = -di_299 - (ax_174 == 0x0000)
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> bx:<invalid> si:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):bp 8(fp):<invalid> 10(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +000C(16) Stack +000E(16)

l0800_1D1F:
	Mem103[ds_156:wArg0C:word16] = Mem34[ds_156:wArg0C:word16] + wLoc06_130
	Mem109[ds_156:wArg0E:word16] = wLoc04_127
	word16 bx_107
	*bxOut = wLoc04_127
	selector es_110
	*esOut = Mem109[ss:sp_134:selector]
	word16 sp_111 = sp_134 + 2
// DataOut: ax bx ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> si:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> al:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):<invalid> 10(fp):<invalid>
// LocalsOut: fp(16)

l0800_1D48:
	word16 di_112
	*diOut = Mem109[ss:sp_111:word16]
	return ax_174
// DataOut: ax bx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 2 di:<invalid> cx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> al:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):<invalid> 10(fp):<invalid>

fn0800_1BCC_exit:
// DataOut: ax bx di dx es
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> cx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> al:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):es -12(fp):di -10(fp):si -7(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):<invalid> 10(fp):<invalid>



void _tell(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_1D4E_entry:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_1D4E:
	word16 dx_23
	_lseek(0x00, ds, wArg02, 0x0000, 0x0000, 0x01, out dx_23)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_1D63:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 bp:fp - 2 ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0001 -2(fp):bp

fn0800_1D4E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0001 -2(fp):bp



