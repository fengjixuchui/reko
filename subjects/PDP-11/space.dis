void fn0468(word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3
// LiveOut:
// Trashed: NZVC r0 r3
// Preserved: sp
fn0468_entry:
// DataOut: r1 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0468:
	r3 = r3 + 0x0001
	word16 r0_9 = (int16) Mem0[r3:byte]
	branch r0_9 == 0x0000 l04F8
// DataOut: r0 r1 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>

l04F8:
	return
// DataOut: r1
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>

fn0468_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>

l046C:
	branch TTYOUT(r0_9) l046C
// DataOut: r0 r1 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>

l0470:
// DataOut: r1 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



void fn0472(word16 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3
// Preserved: sp
fn0472_entry:
// DataOut: r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0472:
	fn0468(0x05E4)
	word16 r3_6 = Mem0[0x5424:word16]
	word16 r0_10 = Mem0[r3_6 + 0x007C:word16]
	word16 r3_11 = Mem0[r3_6 + 0x000E:word16]
	branch r3_11 == 0x0000 l0490
// DataOut: r0 r1 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l048C:
	r0_10 = Mem0[r3_11 + 0x0002:word16]
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> r0:<invalid> -2(fp):<invalid>

l0490:
	fn0528(r0_10)
	fn0528(Mem0[fp - 0x0002:word16])
	fn0468(0x05EF)
	word16 v21_26 = Mem0[Mem0[0x5426:ptr16]:word16]
	branch v21_26 != 0x0000 l04B2
// DataOut: r0 r1 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> r0:<invalid> -2(fp):<invalid>

l04B2:
	fn04FA(v21_26)
// DataOut: r1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r2:0x0028 -2(fp):<invalid>

l04A8:
// DataOut: r1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r2:0x0028 -2(fp):<invalid>

l04AC:
	branch TTYOUT(63) l04AC
// DataOut: r1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:63 r2:0x0028 -2(fp):<invalid>

l04B0:
// DataOut: r1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:63 r2:0x0028 -2(fp):<invalid>

l04B6:
	branch r1 == 0x003D l04C2
// DataOut: r1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r2:0x0028 -2(fp):<invalid>

l04BC:
	branch r1 != 0x003F l04F2
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r2:0x0028 -2(fp):<invalid>

l04C2:
	fn0468(0x0601)
	word16 r1_52 = Mem0[fp + 0x0010:word16]
	word16 r0_54 = 24
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r2:0x0028 -2(fp):<invalid>

l04D4:
	r1_52 = __rol(r1_52, r1_52)
	word16 r0_64 = __rol(r0_54, r0_54)
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r2:0x0028 -2(fp):<invalid>

l04D8:
	branch TTYOUT(r0_64) l04D8
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r2:0x0028 -2(fp):<invalid>

l04DC:
	r0_54 = 134
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r2:0x0028 -2(fp):<invalid>

l04E0:
	r1_52 = r1_52 << 1
	branch r1_52 == 0x0000 l04EA
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r2:0x0028 -2(fp):<invalid>

l04EA:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r2:0x0028 -2(fp):<invalid>

l04EE:
	branch TTYOUT(41) l04EE
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:41 r1:<invalid> r2:0x0028 -2(fp):<invalid>

l04F2:
	PRINT(0x05E1)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r2:0x0028 r1:<invalid> -2(fp):<invalid>

l04F8_in_fn0472:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:0x05E1 r2:0x0028 r1:<invalid> -2(fp):<invalid>

fn0472_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:0x05E1 r2:0x0028 r1:<invalid> -2(fp):<invalid>

l04E4:
	r0_54 = __rol(r0_54, r0_54)
	branch r0_54 <u 0x0000 l04E0
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r2:0x0028 -2(fp):<invalid>

l04E8:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r2:0x0028 -2(fp):<invalid>



void fn04FA(word16 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut: sp
// Trashed: NZVC r0 sp
// Preserved:
fn04FA_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l04FA:
	word16 wLoc02_10 = r0
	word16 r0_11 = 0x0000
// DataOut: r0 r1 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l04FE:
	word16 v10_13 = wLoc02_10 - 0x000A
	r0_11 = r0_11 + 0x0001
	wLoc02_10 = v10_13
	branch v10_13 >= 0x0000 l04FE
// DataOut: r0 r1 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r0:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0506:
	branch r0_11 == 0x0001 l0512
// DataOut: r0 r1 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r0:<invalid> -2(fp):<invalid>

l050E:
	fn04FA(r0_11 - 0x0001)
// DataOut: r1 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r0:<invalid> -2(fp):<invalid>

l0512:
	word16 r0_26 = (int16) Mem0[fp - 0x0002:byte]
// DataOut: r0 r1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> -2(fp):<invalid>

l0514:
	branch TTYOUT(r0_26) l0514
// DataOut: r0 r1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> -2(fp):<invalid>

l0518:
	return
// DataOut: r1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> -2(fp):<invalid>

fn04FA_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> -2(fp):<invalid>



word16 fn051A(word16 r0, word16 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r2
// LiveOut: r0
// Trashed: NZVC r0 r3
// Preserved: sp
fn051A_entry:
// DataOut: r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l051A:
	word16 r3_10 = r0
	word16 r0_11 = 0x0000
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l051E:
	branch r3_10 - r2 >u 0x0000 l04F8_in_fn051A
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>

l04F8_in_fn051A:
	return r0_11
// DataOut: r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>

fn051A_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>

l0522:
	r3_10 = r3_10 - r2
	r0_11 = r0_11 + 0x0001
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



void fn0528(word16 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut: sp
// Trashed: NZVC r0 r2 r3 sp
// Preserved:
fn0528_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0528:
	word16 r0_12 = fn051A(fn051A(r0, 0x0028), 0x0028)
	word16 sp_13 = fp - 0x0004
	word16 r3_15 = 0x0003
// DataOut: r0 r1 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l053C:
	word16 r0_28 = (int16) Mem0[r0_12 + 0x05AF:byte]
// DataOut: r0 r1 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0028 r3:<invalid> r0:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0540:
	branch TTYOUT(r0_28) l0540
// DataOut: r0 r1 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0028 r3:<invalid> r0:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0544:
	r3_15 = r3_15 - 0x0001
	branch r3_15 == 0x0000 l04F8_in_fn0528
// DataOut: r1 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0028 r3:<invalid> r0:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l04F8_in_fn0528:
	return
// DataOut: r1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0028 r3:<invalid> r0:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0528_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0028 r3:<invalid> r0:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0548:
	sp_13 = sp_13 + 0x0002
	r0_12 = Mem0[sp_13:word16]
// DataOut: r0 r1 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0028 r3:<invalid> r0:<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn054C(word16 r0, word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r3
// LiveOut:
// Trashed: NZVC r0 r2
// Preserved: sp
fn054C_entry:
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l054C:
	Mem3[r3 + 0x00A0:byte] = r0
	Mem6[r3 + 0x00A1:byte] = Mem3[r3 + 0x00A2:byte]
	word16 r0_12 = (r0 >> 3 & ~0x0001) + r3
	word16 r2_13 = r0 & ~0xFFF0
	word16 wLoc02_15 = 0x0000
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l056C:
	word16 v15_22 = __rol(wLoc02_15, wLoc02_15)
	wLoc02_15 = v15_22
	r2_13 = r2_13 - 0x0001
	branch r2_13 > 0x0000 l056C
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r2:<invalid> r0:(r0 >> 14 & ~0x0001) + r3 -2(fp):<invalid>
// LocalsOut: Local -0002(0)

l0572:
	Mem31[r0_12 + 0x0096:word16] = Mem6[r0_12 + 0x0096:word16] | v15_22
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r2:<invalid> r0:(r0 >> 14 & ~0x0001) + r3 -2(fp):<invalid>

fn054C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r0:(r0 >> 14 & ~0x0001) + r3 -2(fp):<invalid>



void fn0608(word16 wArg00, byte bArg01, word16 wArg02, byte bArg03)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r1 r2 r4
// Preserved: sp
// Stack args: Stack +0000(16) Stack +0002(16) Stack +0003(8)
fn0608_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Local -0004(0) Stack +0000(16) Stack +0002(16) Stack +0003(8)

l0608:
	word16 r4_3 = Mem0[0x5424:word16]
	Mem9[r4_3 + 0x002A:word16] = wArg00
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Local -0004(0) Stack +0002(16) Stack +0003(8)

l062A:
	word16 r1_44
	word16 r1_16 = wArg02
	byte NZV_23 = DPB(NZV, false, 0)
	r1_44 = r1_16
	branch NZV_23 l0636
// DataOut: r1 r4
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0x0002 r4:<invalid>
// LocalsOut: fp(16) Local -0002(0) Local -0004(0) Stack +0003(8)

l0632:
	branch wArg02 == 0x0000 l065C
// DataOut: r1 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid> r1:<invalid> 0(fp):0x0000
// LocalsOut: fp(16) Local -0002(0) Local -0004(0) Stack +0003(8)

l0634:
	r1_44 = -wArg02
// DataOut: r1 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid> r1:<invalid> 0(fp):0x0000
// LocalsOut: fp(16) Local -0002(0) Local -0004(0) Stack +0003(8)

l0636:
	word16 v17_49 = __rol(wLoc04, wLoc04)
	word16 r2_51 = 0x0090
// DataOut: r1 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid> r1:<invalid> 0(fp):0x0000
// LocalsOut: fp(16) Local -0002(0) Local -0004(16) Stack +0003(8)

l0640:
	r1_44 = __rol(r1_44, r1_44)
	branch r1_44 <u 0x0000 l0648
// DataOut: r1 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r4:<invalid> r1:<invalid> r2:<invalid> -4(fp):<invalid> 0(fp):0x00
// LocalsOut: fp(16) Local -0002(0) Local -0004(16) Stack +0003(8)

l0648:
	word16 r1_68 = __swab(DPB(r1_44, 0x00, 0) | r2_51)
	__ror(wLoc02, v17_49)
	__ror(r1_68, r1_68)
	__ror(bArg03, bArg03)
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r4:<invalid> r1:<invalid> r2:<invalid> -4(fp):<invalid> 0(fp):0x00

l065C:
	word16 sp_32
	word16 pc_33
	word16 r4_34
	byte NZ_35
	bool V_36
	byte NZVC_37
	bool C_38
	bool N_39
	bool Z_40
	word16 r1_41
	byte NZV_42
	word16 r2_43
	call Mem9[r4_3 + 0x002A:word16] (retsize: 2; depth: 2 FPU: 2;)
		uses: C_14,N_19,NZ_17,NZV_23,NZVC_21,r1_16,r4_31,sp_12,V_20,wLoc02_27,wLoc04_24,Z_18
		defs: C_38,N_39,NZ_35,NZV_42,NZVC_37,pc_33,r1_41,r2_43,r4_34,sp_32,V_36,Z_40
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid> r1:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid> 1(fp):<invalid> 3(fp):<invalid>

fn0608_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid> r1:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid> 1(fp):<invalid> 3(fp):<invalid>

l0644:
	r2_51 = r2_51 - 0x0001
// DataOut: r1 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r4:<invalid> r1:<invalid> r2:<invalid> -4(fp):<invalid> 0(fp):0x00
// LocalsOut: fp(16) Local -0002(0) Local -0004(16) Stack +0003(8)



void fn0670(word16 r5, word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 sp
// Preserved: r5
// Stack args: Stack +0000(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0670_entry:
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0670:
	word16 r4_3 = Mem0[0x5424:word16]
	Mem9[r4_3 + 0x002A:word16] = wArg00
	word16 r0_13 = wArg02
	word16 r1_17 = wArg04
	word16 r2_21 = wArg06
	word16 r3_23 = wArg08
	branch wArg08 != 0x0000 l068E
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0008(16)

l0684:
	r3_23 = wArg04
	r0_13 = wArg06
	r2_21 = wArg02
	r1_17 = wArg08
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0008 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>
// LocalsOut: fp(16)

l068E:
	word16 r0_36 = __rol(r0_13, r0_13)
	word16 r1_35 = r1_17 << 1
	word16 r5_37 = __rol(r5, r5)
	branch r0_36 == 0x0000 l06B2
// DataOut: r0 r1 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0008 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>
// LocalsOut: fp(16) Stack +0008(16)

l069C:
	word16 r2_88 = r2_21 << 1
	branch r2_88 == 0x0000 l06B2
// DataOut: r0 r1 r2 r3 r5
// DataOut (flags): C
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(16)

l06A0:
	word16 r5_95 = r5_37 + (r2_88 <u 0x0000)
	word16 r4_119 = DPB(r0_36, 0x00, 0) + r2_88
	branch r4_119 >=u 0x0000 l06AE
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): N
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(16)

l06AE:
	branch r4_119 < 0x0000 l06B8
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(16)

l06B8:
	r4_119 = r4_119 & 0x7F00
	branch (r4_119 & 0x7F00) == 0x0000 l06B0
// DataOut: r0 r1 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(16)

l06A8:
	branch r4_119 > 0x0000 l06BE
// DataOut: r0 r1 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(16)

l06BE:
	__ror(r5_95, r5_95)
	word16 r4_120 = DPB(r4_119, 0x00, 0)
	word16 r4_123 = __ror(r4_120 + 0x7F01, r4_120 + 0x7F01)
	word16 r2_126 = __ror(r2_88, r2_88)
	word16 r3_127 = __swab(r3_23)
	word16 r2_130 = DPB(__swab(r2_126), 0x00, 0) | r3_127
	word16 r3_131 = DPB(r3_127, 0x00, 0)
	word16 r2_132 = __ror(r2_130, r2_130)
	word16 r3_133 = __ror(r3_131, r3_131)
	word16 r1_134 = __swab(r1_35)
	word16 r0_137 = DPB(__swab(r0_36), 0x00, 0) | r1_134
	word16 r1_138 = DPB(r1_134, 0x00, 0)
	word16 r4_140 = r2_132
	word16 r5_141 = r3_133
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16) Stack +0008(16)

l06E8:
	r4_140 = r4_140 >> 1
	r5_141 = __ror(r5_141, r5_141)
	r1_138 = r1_138 << 1
	branch r1_138 == 0x0000 l06FC
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16) Stack +0008(16)

l06FC:
	word16 r0_165 = __rol(r0_137, r0_137)
	branch r0_165 >=u 0x0000 l0706
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16) Stack +0008(16)

l0700:
	r3_133 = r3_133 + r5_141
	r2_132 = r2_132 + (r3_133 <u 0x0000) + r4_140
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16) Stack +0008(16)

l0706:
	r4_140 = r4_140 >> 1
	r5_141 = __ror(r5_141, r5_141)
	r0_165 = r0_165 << 1
	branch r0_165 <u 0x0000 l0700
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16) Stack +0008(16)

l070E:
	branch r0_165 != 0x0000 l0706
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16) Stack +0008(16)

l0710:
	branch r2_132 < 0x0000 l0724
// DataOut: r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(16)

l0716:
	r3_133 = __rol(r3_133, r3_133)
	r2_132 = __rol(r2_132, r2_132)
	branch (r4_123 & 0x7F80) == 0x0000 l06B0
// DataOut: r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(16)

l06B0:
	__syscall(0x898B)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(16)

l0720:
// DataOut: r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(16)

l0724:
	word16 r3_197 = __rol(r3_133, r3_133)
	__rol(r1_138, r1_138)
	__swab(DPB(r3_197, 0x00, 0) | r2_132)
	__swab(DPB(r2_132, 0x00, 0))
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(16)

l06F0:
	r0_137 = __rol(r0_137, r0_137)
	branch r0_137 >=u 0x0000 l06E8
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16) Stack +0008(16)

l06F4:
	r3_133 = r3_133 + r5_141
	r2_132 = r2_132 + (r3_133 <u 0x0000) + r4_140
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16) Stack +0008(16)

l06AA:
	__syscall(0x898A)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(16)

l06B2:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(16)

l0738:
	word16 sp_60
	word16 pc_61
	word16 r4_62
	byte NZ_63
	bool V_64
	byte NZVC_65
	word16 r0_66
	word16 r1_67
	word16 r2_68
	word16 r3_69
	bool Z_70
	word16 r5_71
	bool C_72
	bool N_73
	call Mem9[r4_3 + 0x002A:word16] (retsize: 2; depth: -4 FPU: 2;)
		uses: NZ_56,NZVC_38,r0_36,r1_35,r2_45,r3_44,r4_59,r5_48,sp_54,V_57,Z_41
		defs: C_72,N_73,NZ_63,NZVC_65,pc_61,r0_66,r1_67,r2_68,r3_69,r4_62,r5_71,sp_60,V_64,Z_70
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>

fn0670_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:r5 4(fp):<invalid> 6(fp):<invalid> 8(fp):<invalid>



void fn0754(word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved: sp
// Stack args: Stack +0000(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0754_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0754:
	word16 r0_163
	word16 r2_105
	Mem8[Mem0[0x5424:word16] + 0x002A:word16] = wArg00
	word16 r3_22 = wArg08
	word16 sp_104 = fp + 0x0006
	branch wArg02 << 1 == 0x0000 l0810
// DataOut: r0 r1 r2 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0810:
	__syscall(0x898C)
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> 6(fp):r5 8(fp):<invalid>

l076E:
	word16 v21_112 = __rol(wArg02, wArg02)
	branch wArg06 << 1 == 0x0000 l080A
// DataOut: r0 r1 r2 r3
// DataOut (flags): C
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0774:
	word16 r2_141 = DPB(wArg06 << 1, 0x00, 0)
	word16 r0_144 = DPB(wArg02 << 1, 0x00, 0)
	word16 v23_138 = v21_112 + (wArg06 << 1 <u 0x0000)
	word16 r4_142 = wArg06 << 1 & ~r2_141
	word16 r5_145 = wArg02 << 1 & ~r0_144
	word16 r2_146 = r2_141 - r0_144
	branch r2_146 <u 0x0000 l078C
// DataOut: r1 r2 r3 r4 r5
// DataOut (flags): N
// SymbolicIn: sp:fp + 0x0002 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> 2(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l078C:
	branch r2_146 > 0x0000 l0808
// DataOut: r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0808:
	__syscall(0x898B)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0786:
	branch r2_146 > 0x0000 l078E
// DataOut: r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l078E:
	word16 r3_189
	word16 r4_155 = __ror(r4_142, r4_142)
	__ror(wArg04, v23_138)
	r2_105 = __ror(r2_146 + 0x7F01, r2_146 + 0x7F01)
	word16 r5_162 = __ror(r5_145, r5_145)
	r0_163 = 0x0100
	word16 v27_164 = r5_162 - r4_155
	branch v27_164 >u 0x0000 l07AC
// DataOut: r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): C
// SymbolicIn: sp:fp + 0x0002 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16)

l07A4:
	r3_189 = r3_22
	branch v27_164 <u 0x0000 l07B6
// DataOut: r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:0x0100 r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16)

l07A6:
	word16 v29_269 = wArg04 - wArg08
	r3_189 = r3_22
	branch v29_269 <u 0x0000 l07B6
// DataOut: r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:0x0100 r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16)

l07AA:
	branch v29_269 == 0x0000 l07E6
// DataOut: r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:0x0100 r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16)

l07AC:
	r3_189 = wArg08 - wArg04
	r4_155 = r4_155 - (r3_189 <u 0x0000) - r5_162
	r0_163 = 0x0202
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:0x0100 r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16)

l07B6:
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16)

l07BA:
	r3_189 = r3_189 << 1
	r4_155 = __rol(r4_155, r4_155)
	branch r4_155 <u 0x0000 l07C6
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):0x07EC 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16)

l07C0:
	word16 v33_231 = r4_155 - r5_162
	branch v33_231 >u 0x0000 l07CE
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):0x07EC 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16)

l07C4:
	branch v33_231 == 0x0000 l07D4
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):0x07EC 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16)

l07D4:
	word16 v34_239 = r3_189 - wArg04
	branch v34_239 >u 0x0000 l07CE
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): C
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):0x07EC 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16)

l07D8:
	branch v34_239 <u 0x0000 l07C6
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):0x07EC 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16)

l07DA:
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):0x07EC 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16)

l07DC:
	r0_163 = __rol(r0_163, r0_163)
	branch r0_163 >=u 0x0000 l07DC
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):0x07EC 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16)

l07E0:
	sp_104 = fp + 0x0006
	branch 0x000A == 0x0000 l07FE
// DataOut: r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):0x07EC 6(fp):r5 8(fp):<invalid>

l07E6:
	sp_104 = fp + 0x0006
	r2_105 = r2_105 + r0_163
// DataOut: r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>

l07C6:
	r3_189 = r3_189 - wArg04
	r4_155 = r4_155 - (r3_189 <u 0x0000) - r5_162
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):0x07EC 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16)

l07CE:
	r0_163 = __rol(r0_163, r0_163)
	branch r0_163 >=u 0x0000 l07BA
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):0x07EC 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16)

l07D2:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):0x07EC 6(fp):r5 8(fp):<invalid>

l0788:
	__syscall(0x898A)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 6(fp):r5 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l080A:
	sp_104 = fp + 0x0004
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 6(fp):r5 8(fp):<invalid>

l080C:
	r2_105 = 0x0000
// DataOut: r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 6(fp):r5 8(fp):<invalid>

l07E8:
	r0_163 = 0x0000
// DataOut: r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>

l07FE:
	word16 sp_53 = sp_104 + 0x0002
	word16 r4_55 = Mem8[sp_53:word16]
	Mem56[sp_53:word16] = r0_163
	Mem58[sp_53 - 0x0002:word16] = r2_105
	word16 sp_67
	word16 pc_68
	word16 r4_69
	byte NZ_70
	bool V_71
	byte NZVC_72
	word16 r0_73
	word16 r1_74
	word16 r2_75
	word16 r3_76
	word16 r5_77
	bool Z_78
	bool C_79
	bool N_80
	byte ZC_81
	call Mem58[r4_55:word16] (retsize: 2; depth: 2 FPU: 2;)
		uses: C,N,NZ_59,NZVC_28,pc,r0_50,r1_16,r2_49,r3_22,r4_62,r5_54,sp_57,V_60,Z_29,ZC
		defs: C_79,N_80,NZ_70,NZVC_72,pc_68,r0_73,r1_74,r2_75,r3_76,r4_69,r5_77,sp_67,V_71,Z_78,ZC_81
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 2(fp):<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>

fn0754_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> 0(fp):<invalid> 2(fp):<invalid> 4(fp):<invalid> 6(fp):r5 8(fp):<invalid>



void fn0818(word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn0818_entry:
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0818:
	fn11A6(r5 + Mem0[r5:word16] + Mem0[r5:word16] + 0x0002, r5)
	word16 sp_21
	word16 r5_22
	word16 r0_23
	byte NZ_24
	bool V_25
	byte NZVC_26
	bool C_27
	word16 pc_28
	call Mem0[0x53F0:word16] (retsize: 2; depth: 80 FPU: 2;)
		uses: C_12,NZ_17,NZVC_15,r0_20,r5,sp_14,V_18
		defs: C_27,NZ_24,NZVC_26,pc_28,r0_23,r5_22,sp_21,V_25
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0818_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x004E r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>



void fn0A64(word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5
// Preserved: sp
fn0A64_entry:
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l0A64:
	fn11A6(r5 + Mem0[r5:word16] + Mem0[r5:word16] + 0x0002, r5)
	word16 sp_19
	word16 r5_20
	word16 r0_21
	byte NZ_22
	bool V_23
	byte NZVC_24
	bool C_25
	word16 pc_26
	call Mem0[0x5414:word16] (retsize: 2; depth: 2 FPU: 2;)
		uses: C_12,NZ_15,r0_18,r5,sp_1,V_16
		defs: C_25,NZ_22,NZVC_24,pc_26,r0_21,r5_20,sp_19,V_23
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0A64_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>



void fn0AAE(word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 sp
// Preserved:
fn0AAE_entry:
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0AAE:
	word16 v11_8 = Mem0[Mem0[r5 + 0x0002:word16]:word16]
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l1040:
	word16 r3_102 = __ror(0x0000, 0x0000)
	word16 r0_28 = __ror(v11_8 << 1, v11_8 << 1)
	word16 r2_30 = DPB(r0_28, 0x00, 0)
	word16 r0_113 = r0_28 & ~r2_30
	word16 r2_111 = __swab(r2_30)
	branch r2_111 > 0x0000 l1060
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r4:0ABE -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l1058:
	branch r2_111 >u 0x0091 l106A
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:0ABE r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l106A:
	word16 v28_114 = r2_111 - 0x0088
	branch v28_114 < 0x0000 l1064
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): Z
// SymbolicIn: sp:fp r4:0ABE r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l1064:
	r0_113 = __rol(r0_113, r0_113)
	r2_111 = r2_111 - 0x0001
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:0ABE r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l1070:
	branch v28_114 == 0x0000 l1078
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:0ABE r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l1072:
	r2_111 = r2_111 + 0x0001
	r0_113 = r0_113 >> 1
	branch r0_113 != 0x0000 l106A
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:0ABE r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l1078:
	branch r3_102 > 0x0000 l107E
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:0ABE r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l107C:
	r0_113 = -r0_113
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:0ABE r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l105E:
	__syscall(0x8981)
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:0ABE r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l1060:
	r0_113 = 0x0000
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:0ABE r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l107E:
	branch r0_113 == 0x0000 l1086
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:0ABE r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l1082:
	r3_102 = r3_102 + r0_113
	branch r3_102 < 0x0000 l105E
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:0ABE r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l1086:
	word16 sp_62
	word16 r5_63
	word16 r4_64
	byte NZ_65
	bool V_66
	word16 r0_67
	word16 r1_68
	word16 r3_69
	bool C_70
	bool N_71
	bool Z_72
	byte NZVC_73
	word16 r2_74
	byte ZC_75
	byte NV_76
	byte NZV_77
	call Mem0[0x0ABE:word16] (retsize: 2; depth: 4 FPU: 2;)
		uses: C_54,N_46,NV_42,NZ_58,NZV_41,NZVC_45,r0_49,r1_48,r2_44,r3_47,r4_61,r5,sp_56,V_59,wLoc02_57,wLoc04_17,Z_53,ZC_43
		defs: C_70,N_71,NV_76,NZ_65,NZV_77,NZVC_73,r0_67,r1_68,r2_74,r3_69,r4_64,r5_63,sp_62,V_66,Z_72,ZC_75
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:0ABE r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0AAE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r4:0AC0 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0AC4(word16 r3, word16 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3 r4
// LiveOut:
// Trashed: NZVC r3 r4 sp
// Preserved:
fn0AC4_entry:
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0AC4:
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0AC8_thunk_fn0AE6:
	fn0AE6(r3, r4, bLoc02)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 -2(fp):0x0101

fn0AC4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> -2(fp):0x0101



void fn0AE2(word16 r3, word16 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3 r4
// LiveOut:
// Trashed: NZVC r3 r4 sp
// Preserved:
fn0AE2_entry:
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0AE2:
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0AE2_thunk_fn0AE6:
	fn0AE6(r3, r4, bLoc02)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 -2(fp):0x0202

fn0AE2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> -2(fp):0x0202



void fn0AE6(word16 r3, word16 r4, byte bArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3 r4
// LiveOut:
// Trashed: NZVC r3 r4 sp
// Preserved:
// Stack args: Stack +0000(16)
l0AE6:
	sp = sp - 0x0002
	Mem0[sp:word16] = r3
	r3 = Mem0[0x5424:word16]
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0000
	v16 = Mem0[sp + 0x0004:byte]
	Mem0[sp:byte] = v16
	v17 = 0x0001 - Mem0[sp:word16]
	NZVC = cond(v17)
	Z = (bool) NZVC (alias)
	branch Test(EQ,Z) l0B02
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn:

l0AF6_thunk_fn0B02:
	fn0B02(r3, r4, wArg00, wArg02, wArg04, wArg05, wArg06, wArg08, wArg0A)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

l0AF6_thunk_fn0AF8:
	fn0AF8(r3, r4, wArg00)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0AE6_entry:
	def fp
	def r3
	def Mem0
	def bArg00
	def r4
	def wArg00
	def wArg01
	def wArg02
	def wArg04
	def wArg06
	sp_1 = fp
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l0AE6:
	sp_2 = fp - 0x0002
	wLoc02_4 = r3
	r3_6 = Mem0[0x5424:word16]
	sp_7 = fp - 0x0004
	wLoc04_8 = 0x0000
	v12_10 = bArg00
	bLoc04_11 = v12_10
	wLoc04_12 = DPB(wLoc04_8, bLoc04_11, 0) (alias)
	v14_13 = 0x0001 - wLoc04_12
	NZVC_14 = cond(v14_13)
	Z_15 = (bool) NZVC_14 (alias)
	branch v14_13 == 0x0000 l0AF6_thunk_fn0B02
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16) Local -0004(16)

l0AF6_thunk_fn0B02:
	fn0B02(r3_6, r4, wLoc04_12, wLoc02_4, wArg00, wArg01, wArg02, wArg04, wArg06)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r3:<invalid> -4(fp):<invalid> -2(fp):r3

l0AF6_thunk_fn0AF8:
	fn0AF8(r3_6, r4, wLoc04_12)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r3:<invalid> -4(fp):<invalid> -2(fp):r3

fn0AE6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> -4(fp):<invalid> -2(fp):r3



void fn0AF8(word16 r3, word16 r4, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3 r4
// LiveOut:
// Trashed: NZVC r3 r4 sp
// Preserved: sp
// Stack args: Stack +0000(16)
fn0AF8_entry:
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0000(16)

l0AF8:
	branch wArg00 == 0x0008 l0B02
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0000(16)

l0AFC_thunk_fn0B02:
	fn0B02(r3, r4, wArg00, wArg02, wArg04, wArg05, wArg06, wArg08, wArg0A)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0AFE:
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0AFE_thunk_fn0B02:
	fn0B02(r3, r4, wArg00 + 0x0003, wArg02, wArg04, wArg05, wArg06, wArg08, wArg0A)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp 0(fp):<invalid>

fn0AF8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> 0(fp):<invalid>



void fn0B02(word16 r3, word16 r4, word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg05, word16 wArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3 r4
// LiveOut:
// Trashed: NZVC r3 r4 sp
// Preserved:
// Stack args: Stack +0000(16) Stack +0002(16) Stack +0004(16) Stack +0005(16) Stack +0006(16) Stack +0008(16)
fn0B02_entry:
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(16) Stack +0004(16) Stack +0005(16) Stack +0006(16) Stack +0008(16)

l0B02:
	Mem12[r3 + 0x00A4:word16] = wArg00 + (wArg05 - wArg04 <u 0x0000)
	branch Mem12[r3 + 0x0074:byte] == 0x00 l0B22
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0B22:
	Mem69[r3 + 0x0052:word16] = wArg04
	Mem71[r3 + 0x0044:word16] = wArg08
	word16 sp_89
	byte NZVC_90
	bool C_91
	word16 r3_92
	byte NZ_93
	bool V_94
	bool Z_95
	word16 r4_96
	call wArg0A (retsize: 2; depth: -8 FPU: 2;)
		uses: C_79,NZ_85,NZVC_5,r3_74,r4,sp_88,V_86,Z_17
		defs: C_91,NZ_93,NZVC_90,r3_92,r4_96,sp_89,V_94,Z_95
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 0(fp):<invalid>

l0B14:
	Mem38[r3 + 0x0052:word16] = wArg04
	Mem42[r3 + 0x0044:word16] = wArg06
	word16 sp_49
	byte NZVC_50
	bool C_51
	word16 r3_52
	byte NZ_53
	bool V_54
	bool Z_55
	word16 r4_56
	call wArg08 (retsize: 2; depth: -8 FPU: 2;)
		uses: C_35,NZ_43,NZVC_5,r3,r4,sp_47,V_44,Z_17
		defs: C_51,NZ_53,NZVC_50,r3_52,r4_56,sp_49,V_54,Z_55
	word16 sp_59
	byte NZVC_60
	bool C_61
	word16 r3_62
	byte NZ_63
	bool V_64
	bool Z_65
	word16 r4_66
	call Mem42[r4_56:word16] (retsize: 2; depth: -8 FPU: 2;)
		uses: C_51,NZ_53,NZVC_50,r3_52,r4_58,sp_49,V_54,Z_55
		defs: C_61,NZ_63,NZVC_60,r3_62,r4_66,sp_59,V_64,Z_65
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 0(fp):<invalid>

fn0B02_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000A r4:r4 + 0x0002 r3:<invalid> 0(fp):<invalid> 8(fp):<invalid> 10(fp):<invalid>



void fn0B3E(word16 r0, word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r3
// LiveOut:
// Trashed: NZVC r0 r3 sp
// Preserved:
fn0B3E_entry:
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0B3E:
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0B42_thunk_fn0B60:
	fn0B60(r0, r3, 0x0202, wLoc01, wArg00, ptrArg02, ptrArg04)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 -2(fp):0x0202

fn0B3E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> -2(fp):0x0202



void fn0B44(word16 r0, word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r3
// LiveOut:
// Trashed: NZVC r0 r3 sp
// Preserved:
fn0B44_entry:
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0B44:
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0B48_thunk_fn0B60:
	fn0B60(r0, r3, 0x0101, wLoc01, wArg00, ptrArg02, ptrArg04)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 -2(fp):0x0101

fn0B44_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> -2(fp):0x0101



void fn0B60(word16 r0, word16 r3, word16 wArg00, word16 wArg01, word16 wArg02, ptr16 ptrArg04, ptr16 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r3
// LiveOut:
// Trashed: NZVC r0 r3 sp
// Preserved:
// Stack args: Stack +0000(16) Stack +0001(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0B60_entry:
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0001(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0B60:
	word16 wLoc04_12 = (word16) bArg00
	word16 r3_6 = Mem0[0x5424:word16]
	branch wLoc04_12 == 0x0001 l0B7C
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0000(16) Stack +0001(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0B72:
	branch wLoc04_12 == 0x0008 l0B7C
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r3:<invalid> -4(fp):<invalid> -2(fp):r3
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0000(16) Stack +0001(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0B78:
	wLoc04_12 = wLoc04_12 + 0x0003
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r3:<invalid> -4(fp):<invalid> -2(fp):r3
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0000(16) Stack +0001(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0B7C:
	word16 sp_121
	word16 sp_152
	Mem26[r3_6 + 0x00A4:word16] = wLoc04_12 + (wArg01 - wArg00 <u 0x0000)
	branch Mem26[r3_6 + 0x0074:byte] == 0x00 l0BA4
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r3:<invalid> -4(fp):<invalid> -2(fp):r3
// LocalsOut: fp(16) Local -0002(16) Stack +0000(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0BA4:
	Mem137[r3_6 + 0x0052:word16] = wArg00
	Mem140[r3_6 + 0x007E:word16] = wArg02
	Mem143[r3_6 + 0x0044:word16] = ptrArg04
	Mem145[r3_6 + 0x005A:word16] = Mem143[ptrArg06:word16]
	sp_152 = fp + 0x0006
// DataOut: r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> -4(fp):<invalid> -2(fp):r3

l0B8E:
	Mem114[r3_6 + 0x0052:word16] = wArg00
	Mem118[r3_6 + 0x0044:word16] = wArg02
	Mem122[r3_6 + 0x005A:word16] = Mem118[ptrArg04:word16]
	Mem123[r3_6 + 0x007E:word16] = 0x0BEC
	sp_121 = fp + 0x0006
// DataOut: r0 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> -4(fp):<invalid> -2(fp):r3

l0BC6:
	word16 sp_57
	word16 r3_58
	byte NZ_59
	bool V_60
	word16 pc_61
	bool C_62
	bool N_63
	bool Z_64
	byte NZVC_65
	word16 r0_66
	byte NZV_67
	call Mem26[sp_121:word16] (retsize: 2; depth: 2 FPU: 2;)
		uses: bLoc04_11,C_31,N,NZ_29,NZV,NZVC_20,pc,r0,r3_6,sp_52,V_32,wLoc02_4,wLoc04_48,Z_30
		defs: C_62,N_63,NZ_59,NZV_67,NZVC_65,pc_61,r0_66,r3_58,sp_57,V_60,Z_64
	Mem69[sp_57 - 0x0002:word16] = r3_58
	Mem71[sp_57 - 0x0004:word16] = r0_66
	word16 r3_72 = Mem71[0x5424:word16]
	Mem75[r3_72 + 0x0044:word16] = Mem71[r3_72 + 0x0044:word16] + (int16) Mem71[r3_72 + 0x0053:byte]
	word16 v38_80 = Mem75[r3_72 + 0x005A:word16] - 0x0001
	Mem81[r3_72 + 0x005A:word16] = v38_80
	sp_152 = sp_57 - 0x0002
	branch v38_80 != 0x0000 l0BC4
// DataOut: r0 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> -4(fp):<invalid> -2(fp):r3 4(fp):r0 6(fp):<invalid>

l0BC4:
	sp_121 = sp_152 + 0x0002
// DataOut: r0 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> -4(fp):<invalid> -2(fp):r3 4(fp):r0 6(fp):<invalid>

l0BE0:
	Mem86[sp_57 - 0x0004:word16] = Mem81[sp_57 - 0x0002:word16]
	Mem88[sp_57 - 0x0002:word16] = Mem86[r3_72 + 0x007E:word16]
	word16 sp_96
	word16 r3_97
	byte NZ_98
	bool V_99
	word16 pc_100
	bool C_101
	bool N_102
	bool Z_103
	byte NZVC_104
	word16 r0_105
	byte NZV_106
	call Mem88[sp_57 - 0x0002:word16] (retsize: 2; depth: 2 FPU: 2;)
		uses: bLoc04_11,C_62,N_63,NZ_92,NZV_82,NZVC_76,pc_61,r0_79,r3_91,sp_95,V_93,wLoc02_4,wLoc04_48,Z_83
		defs: C_101,N_102,NZ_98,NZV_106,NZVC_104,pc_100,r0_105,r3_97,sp_96,V_99,Z_103
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> -4(fp):<invalid> -2(fp):r3 4(fp):r0 6(fp):<invalid>

fn0B60_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> -4(fp):<invalid> -2(fp):<invalid> 4(fp):<invalid> 6(fp):<invalid>



void fn0C4A(word16 r0, word16 r1, word16 r3, word16 wArg00, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r3
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 sp
// Preserved:
// Stack args: Stack +0000(16) Stack +0002(16)
fn0C4A_entry:
// DataOut: r0 r1 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(16)

l0C4A:
	branch r0 > 0x0001 l0C64
// DataOut: r1 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(16)

l0C64:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 - 0x0001

l0C4E:
	branch wArg02 << 1 >=u 0x0000 l0C62
// DataOut: r1
// DataOut (flags): N
// SymbolicIn: sp:fp r0:r0 - 0x0001
// LocalsOut: fp(16)

l0C54:
	branch wArg02 << 1 > 0x0000 l0C5A
// DataOut: r1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r0:r0 - 0x0001 2(fp):<invalid>
// LocalsOut: fp(16)

l0C58:
	r1 = -r1
// DataOut: r1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r0:r0 - 0x0001 2(fp):<invalid>
// LocalsOut: fp(16)

l0C5A:
	word16 r1_58 = __ror(r1, r1)
	branch OVERFLOW(__rol(r1_58, r1_58)) l0C44
// DataOut: r1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r0:r0 - 0x0001 r1:-r1 2(fp):<invalid>
// LocalsOut: fp(16)

l0C44:
	word16 sp_72
	word16 r0_73
	byte NZV_74
	bool N_75
	byte NZ_76
	bool C_77
	bool V_78
	byte NZVC_79
	word16 r1_80
	word16 r3_81
	word16 r2_82
	call wArg04 (retsize: 2; depth: -2 FPU: 2;)
		uses: C_63,N_30,NZ_65,NZV_57,NZVC_60,r0_3,r1_71,r2,r3,sp_69,V_66
		defs: C_77,N_75,NZ_76,NZV_74,NZVC_79,r0_73,r1_80,r2_82,r3_81,sp_72,V_78
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r0:r0 - 0x0001 r1:<invalid> 2(fp):<invalid>

l0C60:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r0:r0 - 0x0001 r1:<invalid> 2(fp):<invalid>
// LocalsOut: fp(16)

l0C62:
	word16 sp_44
	word16 r0_45
	byte NZV_46
	bool N_47
	byte NZ_48
	bool C_49
	bool V_50
	byte NZVC_51
	word16 r1_52
	word16 r3_53
	word16 r2_54
	call wArg04 (retsize: 2; depth: -2 FPU: 2;)
		uses: C_32,N_30,NZ_31,NZV_29,NZVC_28,r0_3,r1_41,r2,r3,sp_39,V_33
		defs: C_49,N_47,NZ_48,NZV_46,NZVC_51,r0_45,r1_52,r2_54,r3_53,sp_44,V_50
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 r0:r0 - 0x0001 r1:<invalid> 2(fp):<invalid>

fn0C4A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:r3 + 0x0001 r2:<invalid> r1:<invalid> 2(fp):<invalid> 4(fp):<invalid>



void fn0CF4(word16 r0, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r5
// Preserved: sp
fn0CF4_entry:
// DataOut: r0 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0CF4:
	branch Mem0[r5:word16] == 0x0001 l0CFE
// DataOut: r0 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0CFE:
	word16 r0_35 = Mem0[r5 + 0x0002:word16]
	fn15CC(fp - 0x0008)
	word16 r0_74 = fn0D3E(r0_35, fp - 0x0004)
	Mem75[r0_74:byte] = 0x2D
	word16 r1_67 = (fp - 0x0006 << 1) + (fp - 0x0006)
	Mem81[r0_74 + 0x0001:byte] = Mem75[r1_67 + 0x0D4F:byte]
	Mem85[r0_74 + 0x0002:byte] = Mem81[r1_67 + 0x0D50:byte]
	Mem89[r0_74 + 0x0003:byte] = Mem85[r1_67 + 0x0D51:byte]
	Mem91[r0_74 + 0x0004:byte] = 0x2D
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l0D3C_thunk_fn0D3E:
	fn0D3E(r0_74 + 0x0005, fp - 0x0002)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:<invalid> r0:<invalid> r1:(fp - 0x0006 << 1) + (fp - 0x0006) + 0x0D52 r2:fp - 0x0002 r3:0xFFE0 -10(fp):<invalid> -8(fp):0x0003 -6(fp):fp - 0x0006 -4(fp):fp - 0x0004 -2(fp):fp - 0x0002

l0CFA:
	__syscall(0x8990)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0D50_in_fn0CF4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0CF4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:<invalid> r0:<invalid> r1:(fp - 0x0006 << 1) + (fp - 0x0006) + 0x0D52 r2:<invalid> r3:0xFFE0 -10(fp):<invalid> -8(fp):0x0003 -6(fp):fp - 0x0006 -4(fp):fp - 0x0004 -2(fp):fp - 0x0002



word16 fn0D3E(word16 r0, word16 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r2
// LiveOut: r0
// Trashed: NZVC r0 r2
// Preserved: sp
fn0D3E_entry:
// DataOut: r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l0D3E:
	word16 r2_3 = __swab(r2)
// DataOut: r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l0D40:
	r2_3 = r2_3 + 0xF601
	branch r2_3 > 0x0000 l0D40
// DataOut: r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid>

l0D46:
	Mem12[r0:word16] = r2_3 + 0x3A2F
	Mem17[r0 + 0x0002:word16] = __swab(r2_3 + 0x3A2F)
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid>

l0D50:
	return r0 + 0x0004
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r0:r0 + 0x0006

fn0D3E_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r0:r0 + 0x0006



void fn0D7A(word16 wArg00, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r2 r3 sp
// Preserved:
fn0D7A_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) v26(16) v27(16) v31(16)

l0D7A:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) v26(16) v27(16) v31(16)

l123C_in_fn0D7A:
	word16 sp_58
	word16 pc_59
	word16 r3_60
	word16 r2_61
	byte NZ_62
	bool V_63
	word16 r1_64
	word16 r0_65
	byte NZVC_66
	bool C_67
	word16 r5_68
	word16 r4_69
	call r3 (retsize: 2; depth: 16 FPU: 2;)
		uses: C_38,NZ_55,r0_29,r1,r2_52,r3,r3_5,r4,r5,sp_47,V_56,wLoc02_4,wLoc04_8,wLoc06_12,wLoc08_15,wLoc0A_17,wLoc0C_43,wLoc0E_49
		defs: C_67,NZ_62,NZVC_66,pc_59,r0_65,r1_64,r2_61,r3_60,r4_69,r5_68,sp_58,V_63
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r3:0D7E -2(fp):r3

fn0D7A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E r3:0D7E r2:fp r0:<invalid> -14(fp):v35 -12(fp):v33 -10(fp):0x125A -8(fp):r0 -6(fp):r1 -4(fp):r2 -2(fp):r3 0(fp):r4 2(fp):r5 4(fp):v29



void fn0DC8(word16 wArg00, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r2 r3 sp
// Preserved:
fn0DC8_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) v26(16) v27(16) v31(16)

l0DC8:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) v26(16) v27(16) v31(16)

l123C_in_fn0DC8:
	word16 sp_58
	word16 pc_59
	word16 r3_60
	word16 r2_61
	byte NZ_62
	bool V_63
	word16 r1_64
	word16 r0_65
	byte NZVC_66
	bool C_67
	word16 r5_68
	word16 r4_69
	call r3 (retsize: 2; depth: 16 FPU: 2;)
		uses: C_38,NZ_55,r0_29,r1,r2_52,r3,r3_5,r4,r5,sp_47,V_56,wLoc02_4,wLoc04_8,wLoc06_12,wLoc08_15,wLoc0A_17,wLoc0C_43,wLoc0E_49
		defs: C_67,NZ_62,NZVC_66,pc_59,r0_65,r1_64,r2_61,r3_60,r4_69,r5_68,sp_58,V_63
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r3:0DCC -2(fp):r3

fn0DC8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E r3:0DCC r2:fp r0:<invalid> -14(fp):v35 -12(fp):v33 -10(fp):0x125A -8(fp):r0 -6(fp):r1 -4(fp):r2 -2(fp):r3 0(fp):r4 2(fp):r5 4(fp):v29



void fn0E0E(word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 sp
// Preserved:
// Stack args: Stack +0000(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0E0E_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0E0E:
	word16 r4_3 = Mem0[0x5424:word16]
	Mem9[r4_3 + 0x002A:word16] = wArg00
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0E6E:
	bool C_51
	word16 v18_28 = wArg02 - wArg06
	byte NZVC_29 = cond(v18_28)
	bool C_33 = (bool) NZVC_29
	C_51 = C_33
	branch v18_28 != 0x0000 l0E76
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): C
// SymbolicIn: sp:fp + 0x000A r4:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid>

l0E72:
	word16 v20_59 = wArg04 - wArg08
	C_51 = (bool) cond(v20_59) (alias)
	branch v20_59 == 0x0000 l0E7C
// DataOut: r0 r2 r4
// DataOut (flags): C
// SymbolicIn: sp:fp + 0x000A r4:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid>

l0E76:
	branch C_51 l0E7C
// DataOut: r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000A r4:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid>

l0E7A:
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000A r4:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid>

l0E7C:
	word16 sp_37
	word16 pc_38
	word16 r4_39
	byte NZ_40
	bool V_41
	byte NZVC_42
	word16 r2_43
	word16 r3_44
	word16 r0_45
	word16 r1_46
	bool Z_47
	bool C_48
	byte NZV_49
	call Mem9[r4_3 + 0x002A:word16] (retsize: 2; depth: -8 FPU: 2;)
		uses: C_33,NZ_30,NZV_34,NZVC_29,r0_21,r1_25,r2_13,r3_17,r4_36,sp_24,V_31,Z_32
		defs: C_48,NZ_40,NZV_49,NZVC_42,pc_38,r0_45,r1_46,r2_43,r3_44,r4_39,sp_37,V_41,Z_47
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000A r4:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid>

fn0E0E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000A r4:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid>



void fn0EA8(word16 r3, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3
// LiveOut:
// Trashed: NZVC r3
// Preserved: sp
// Stack args: Stack +0000(16)
fn0EA8_entry:
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) v13(16)

l0EA8:
	word16 r3_6 = Mem0[0x5424:word16]
	Mem7[r3_6 + 0x0044:word16] = 0x0000
	word16 sp_14 = fp - 0x0002
	branch Mem7[r3_6 + 0x0074:byte] != 0x00 l0EC2
// DataOut: r3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0000(16) v13(16)

l0EB8:
	Mem75[r3_6 + 0x007E:word16] = wArg00
	sp_14 = fp + 0x0002
// DataOut: r3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> -2(fp):r3
// LocalsOut: v13(16)

l0EC2:
	word16 sp_17
	word16 r3_18
	byte NZ_19
	bool V_20
	word16 pc_21
	bool C_22
	bool N_23
	bool Z_24
	call Mem7[sp_14:word16] (retsize: 2; depth: 2 FPU: 2;)
		uses: C_12,NZ_10,r3_6,sp_16,V_13,wLoc02_4,Z_11
		defs: C_22,N_23,NZ_19,pc_21,r3_18,sp_17,V_20,Z_24
	Mem26[sp_17 - 0x0002:word16] = 0x0EF4
	Mem28[sp_17 - 0x0004:word16] = r3_18
	word16 r3_29 = Mem28[0x5424:word16]
	branch Mem28[r3_29 + 0x0074:byte] != 0x00 l0EDA_in_fn0EA8
// DataOut: r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> -2(fp):r3
// LocalsOut: v13(16)

l0EDA_in_fn0EA8:
	Mem59[r3_29 + 0x0072:word16] = 0x0000
	Mem60[r3_29 + 0x0070:word16] = 0x0000
	Mem61[r3_29 + 0x0014:word16] = 0x0000
	Mem64[r3_29 + 0x000C:word16] = v13
	Mem65[r3_29 + 0x00A2:byte] = 0x00
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> -2(fp):r3

l0ED4:
	Mem42[sp_17 - 0x0002:word16] = Mem28[r3_29 + 0x007E:word16]
// DataOut: r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> -2(fp):r3
// LocalsOut: v13(16)

l0EDA_in_fn0EA8:
	Mem45[r3_29 + 0x0072:word16] = 0x0000
	Mem46[r3_29 + 0x0070:word16] = 0x0000
	Mem47[r3_29 + 0x0014:word16] = 0x0000
	Mem50[r3_29 + 0x000C:word16] = v13
	Mem51[r3_29 + 0x00A2:byte] = 0x00
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> -2(fp):r3

fn0EA8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:v14 -2(fp):r3



void fn0EF8(word16 r0, word16 r4, word16 r5, word16 wArg00, byte bArg01)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
// Stack args: Stack +0000(16)
fn0EF8_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(16) Stack +0000(16)

l0EF8:
	word16 v13_10 = Mem0[r4:word16]
	word16 r3_13 = Mem0[0x5424:word16]
	Mem31[r3_13:word16] = 0x0000
	Mem33[r3_13 + 0x000E:word16] = fp - 0x0007
	word16 v22_37 = Mem33[r5:word16]
	word16 r5_136 = r5 + 0x0002
	word16 r1_138 = v22_37
	branch v22_37 == 0x0000 l0F2C
// DataOut: r0 r1 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -0009(8) Stack +0000(8)

l0F1C:
	word16 v23_126 = Mem33[v13_10 + 0x0004:word16]
	word16 r2_128 = v23_126
	branch v23_126 == 0x0000 l0F2C
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0009 r1:<invalid> r4:r4 + 0x0002 r0:<invalid> r3:<invalid> r5:r5 + 0x0002 -9(fp):0x0000 -7(fp):<invalid> -5(fp):<invalid> -3(fp):<invalid> -1(fp):<invalid> 1(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -0009(8) Stack +0000(8)

l0F20:
	word16 r0_132 = Mem33[v13_10 + 0x0006:word16]
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0009 r1:<invalid> r4:r4 + 0x0002 r0:<invalid> r3:<invalid> r5:r5 + 0x0002 r2:<invalid> -9(fp):0x0000 -7(fp):<invalid> -5(fp):<invalid> -3(fp):<invalid> -1(fp):<invalid> 1(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -0009(8) Stack +0000(8)

l0F22:
	Mem141[r0_132:word16] = Mem33[r5_136:word16]
	r5_136 = r5_136 + 0x0002
	r0_132 = r0_132 + 0x0002
	r1_138 = r1_138 - 0x0001
	branch r1_138 == 0x0000 l0F2C
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0009 r1:<invalid> r4:r4 + 0x0002 r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -9(fp):0x0000 -7(fp):<invalid> -5(fp):<invalid> -3(fp):<invalid> -1(fp):<invalid> 1(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -0009(8) Stack +0000(8)

l0F28:
	r2_128 = r2_128 - 0x0001
	branch r2_128 != 0x0000 l0F22
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0009 r1:<invalid> r4:r4 + 0x0002 r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -9(fp):0x0000 -7(fp):<invalid> -5(fp):<invalid> -3(fp):<invalid> -1(fp):<invalid> 1(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -0009(8) Stack +0000(8)

l0F2C:
	Mem53[r3_13 + 0x0074:byte] = bLoc09
	branch bLoc09 == 0x00 l0F34
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0009 r1:<invalid> r4:r4 + 0x0002 r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -9(fp):0x0000 -7(fp):<invalid> -5(fp):<invalid> -3(fp):<invalid> -1(fp):<invalid> 1(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(16) Stack +0000(8)

l0F34:
	word16 sp_89
	word16 r1_90
	bool C_91
	bool V_92
	bool N_93
	bool Z_94
	word16 r0_95
	byte NZVC_96
	word16 r4_97
	byte NZ_98
	word16 r3_99
	word16 r5_100
	word16 r2_101
	byte NZV_102
	call r4 + 0x0002 (retsize: 2; depth: 10 FPU: 2;)
		uses: bLoc09,C_32,N,NZ_54,NZV_45,NZVC,r0_48,r1_49,r2_46,r3_13,r4_11,r5_47,sp_52,V_56,wLoc01_19,wLoc03_22,wLoc05_26,wLoc07_30,wLoc09_35,Z_55
		defs: C_91,N_93,NZ_98,NZV_102,NZVC_96,r0_95,r1_90,r2_101,r3_99,r4_97,r5_100,sp_89,V_92,Z_94
	word16 r4_111 = Mem53[0x5424:word16]
	Mem115[r4_111:word16] = wLoc04
	Mem119[r4_111 + 0x000E:word16] = wLoc02
	Mem123[r4_111 + 0x0074:byte] = bArg00
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 r1:<invalid> r4:r4 + 0x0002 r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -9(fp):0x0000 -7(fp):<invalid> -5(fp):<invalid> -3(fp):<invalid> -1(fp):<invalid> 1(fp):<invalid>

l0F32:
	word16 sp_75
	word16 r1_76
	bool C_77
	bool V_78
	bool N_79
	bool Z_80
	word16 r0_81
	byte NZVC_82
	word16 r4_83
	byte NZ_84
	word16 r3_85
	word16 r5_86
	word16 r2_87
	byte NZV_88
	call Mem53[r4 + 0x0002:word16] (retsize: 2; depth: 10 FPU: 2;)
		uses: bLoc09,C_32,N,NZ_54,NZV_45,NZVC,r0_48,r1_49,r2_46,r3_13,r4_72,r5_47,sp_52,V_56,wLoc01_19,wLoc03_22,wLoc05_26,wLoc07_30,wLoc09_35,Z_55
		defs: C_77,N_79,NZ_84,NZV_88,NZVC_82,r0_81,r1_76,r2_87,r3_85,r4_83,r5_86,sp_75,V_78,Z_80
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 r1:<invalid> r4:r4 + 0x0002 r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -9(fp):0x0000 -7(fp):<invalid> -5(fp):<invalid> -3(fp):<invalid> -1(fp):<invalid> 1(fp):<invalid>

fn0EF8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r4:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -9(fp):0x0000 -7(fp):<invalid> -5(fp):<invalid> -3(fp):<invalid> -1(fp):<invalid> 1(fp):<invalid>



void fn0F48(word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r5
// Preserved: sp
fn0F48_entry:
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l0F48:
	branch Mem0[r5:word16] != 0x0002 l0F98
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l0F98:
	__syscall(0x8990)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0F4E:
	word16 r1_38
	word16 r0_37
	word16 v13_24 = Mem0[r5 + 0x0002:word16]
	word16 v15_27 = Mem0[r5 + 0x0004:word16]
	word16 r0_30 = Mem0[v13_24:word16]
	word16 r1_31 = Mem0[v15_27:word16]
	branch r1_31 == 0x0000 l0F90
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0F90:
	r1_38 = 0x0003
	r0_37 = r0_30 + 0x0001
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 + 0x000E r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid>

l0F5A:
	word16 r0_67 = __rol(r0_30, r0_30) + Mem0[v13_24:word16]
	r1_38 = (r1_31 << 1) + Mem0[v15_27:word16]
	r0_37 = r0_67 + (r1_38 <u 0x0000) + Mem0[v15_27:word16]
	branch r0_37 > 0x0000 l0F6C
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 + 0x000E r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid>

l0F68:
	r0_37 = r0_37 + 0x8000
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 + 0x000E r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid>

l0F6C:
	Mem41[v13_24:word16] = r0_37
	Mem42[v15_27:word16] = r1_38
	word16 r2_43 = 0x0081
// DataOut: r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 + 0x000E r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid>

l0F74:
	r1_38 = r1_38 << 1
	r0_37 = __rol(r0_37, r0_37)
	branch r0_37 <u 0x0000 l0F7E
// DataOut: r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 + 0x000E r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid>

l0F7E:
	word16 r1_58 = __swab(DPB(r1_38, 0x00, 0) | r0_37)
	word16 r0_61 = __swab(DPB(r0_37, 0x00, 0) | r2_43)
	__ror(r0_61, r0_61)
	__ror(r1_58, r1_58)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 + 0x000E r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid>

l0F9A:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 + 0x000E r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid>

fn0F48_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 + 0x000E r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid>

l0F7A:
	r2_43 = r2_43 - 0x0001
// DataOut: r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 + 0x000E r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid>



void fn0F9C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r2 r3 r4
// Preserved: sp
fn0F9C_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0F9C:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l13AA:
	Mem4[0x002B:word16] = Mem0[0x002B:word16] | 0x0001
	word16 r3_21 = Mem4[0x5424:word16]
	Mem7[r3_21 + 0x0066:word16] = Mem4[r3_21 + 0x0066:word16] + 0x0001
	word16 r4_26 = Mem7[r3_21 + 0x0004:word16]
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l13BC:
	branch Mem7[r3_21 + 0x0002:word16] - r4_26 >=u 0x0000 l13DC
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r2:<invalid>

l13DC:
	word16 r0_59 = Mem7[r3_21 + 0x006E:word16]
	branch r0_59 == 0x0000 l13E4
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r2:<invalid>

l13E4:
	word16 v30_76 = Mem7[0x0024:word16] & 0x0800
	Mem77[0x0024:word16] = v30_76
	branch v30_76 != 0x0000 l13EE
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid>

l13EC:
	r0_59 = r0_59 + 0x0001
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid>

l13EE:
	EXIT(r0_59)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid>

l13E2:
	word16 sp_63
	word16 pc_64
	byte NZ_65
	bool V_66
	word16 r3_67
	byte NZV_68
	word16 r4_69
	byte NZVC_70
	bool C_71
	word16 r2_72
	bool Z_73
	bool N_74
	word16 r0_75
	call r0_59 (retsize: 2; depth: 2 FPU: 2;)
		uses: C_30,N_18,NZ_60,NZV_27,NZVC_29,pc_24,r0_59,r2_20,r3_21,r4_26,sp_25,V_62,Z_61
		defs: C_71,N_74,NZ_65,NZV_68,NZVC_70,pc_64,r0_75,r2_72,r3_67,r4_69,sp_63,V_66,Z_73
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid>

fn0F9C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid>

l13C2:
	r4_26 = r4_26 + 0x0001
	word16 r2_33 = (int16) Mem7[r4_26:byte]
	branch r2_33 == 0x0000 l13BC
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r2:<invalid>

l13C6:
	branch Mem7[r3_21 + 0x0066:word16] != 0x0002 l13D6
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r2:<invalid>

l13D6:
	word16 sp_46
	word16 pc_47
	byte NZ_48
	bool V_49
	byte NZV_51
	byte NZVC_53
	bool C_54
	word16 r2_55
	bool Z_56
	bool N_57
	word16 r0_58
	call Mem7[0x1DAA:word16] (retsize: 2; depth: 2 FPU: 2;)
		uses: C_30,N_18,NZ_34,NZV_27,NZVC_38,pc_24,r0_17,r2_33,r3_21,r4_32,sp_25,V_36,Z_39
		defs: C_54,N_57,NZ_48,NZV_51,NZVC_53,pc_47,r0_58,r2_55,r3_50,r4_52,sp_46,V_49,Z_56
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r2:<invalid>

l13CE:
	Mem41[r4_26 - 0x0001:byte] = 0x00
	Mem44[r3_21 + 0x0066:word16] = Mem41[r3_21 + 0x0066:word16] - 0x0001
	r4_26 = r4_26 - 0x0001
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r2:<invalid>



void fn0FA4(word16 r2, word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r3
// LiveOut:
// Trashed: NZVC r0 r2 r3 sp
// Preserved:
fn0FA4_entry:
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0FA4:
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0FA8_thunk_fn0FB2:
	fn0FB2(r2, r3, 0x1020, wArg00, wArg02, wArg04, wArg06)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 -2(fp):0x1020

fn0FA4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> -2(fp):0x1020



void fn0FAE(word16 r2, word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r3
// LiveOut:
// Trashed: NZVC r0 r2 r3 sp
// Preserved:
fn0FAE_entry:
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0FAE:
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0FAE_thunk_fn0FB2:
	fn0FB2(r2, r3, 0x101E, wArg00, wArg02, wArg04, wArg06)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 -2(fp):0x101E

fn0FAE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> -2(fp):0x101E



void fn0FB2(word16 r2, word16 r3, word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r3
// LiveOut:
// Trashed: NZVC r0 r2 r3 sp
// Preserved:
// Stack args: Stack +0000(16) Stack +0004(16) Stack +0006(16)
fn0FB2_entry:
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0004(16) Stack +0006(16)

l0FB2:
	word16 r3_10 = Mem0[0x5424:word16]
	Mem13[r3_10 + 0x0064:word16] = fp + 0x000A
	branch Mem13[r3_10 + 0x0014:word16] == 0x0000 l0FCC
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0000(16) Stack +0004(16) Stack +0006(16)

l0FCA:
	__syscall(0x899A)
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> -4(fp):fp + 0x000A -2(fp):r3
// LocalsOut: fp(16) Local -0002(16) Stack +0000(16) Stack +0004(16) Stack +0006(16)

l0FCC:
	Mem22[r3_10 + 0x0014:word16] = wArg00
	Mem25[r3_10 + 0x001C:word16] = wArg04
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> -4(fp):fp + 0x000A -2(fp):r3
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16)

l123C:
	word16 sp_85
	word16 r3_86
	byte NZ_87
	bool V_88
	byte NZVC_89
	word16 pc_90
	bool C_91
	bool Z_92
	word16 r2_93
	word16 r1_94
	word16 r0_95
	word16 r5_96
	word16 r4_97
	call 0x0FE2 (retsize: 2; depth: 12 FPU: 2;)
		uses: C_68,NZ_83,r0_62,r1,r2_80,r3_42,r4,r5,sp_76,V_84,wLoc02_49,wLoc04_52,wLoc06_54,wLoc08_72,wLoc0A_77,Z_17
		defs: C_91,NZ_87,NZVC_89,pc_90,r0_95,r1_94,r2_93,r3_86,r4_97,r5_96,sp_85,V_88,Z_92
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 r3:0FE2 -4(fp):fp + 0x000A -2(fp):r3 2(fp):r3 4(fp):<invalid>

fn0FB2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A r3:0FE2 r2:fp + 0x0004 r0:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x125A -4(fp):r0 -2(fp):r1 0(fp):r2 2(fp):r3 4(fp):r4 6(fp):r5 8(fp):<invalid>



void fn11A6(word16 r0, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5
// Preserved: sp
fn11A6_entry:
// DataOut: r0 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l11A6:
	word16 r3_3 = Mem0[0x5424:word16]
	Mem5[r3_3 + 0x0064:word16] = r0
	Mem7[r3_3 + 0x0058:word16] = Mem5[r3_3 + 0x000C:word16]
	word16 r0_21 = 0x541C
	word16 r1_22 = 0x542C
	word16 r2_10 = 0x5426
	word16 r5_14 = r5 + 0x0002
// DataOut: r0 r1 r2 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l11C2:
	r2_10 = r2_10 - 0x0002
	word16 r3_29 = Mem7[r2_10:word16]
	branch r3_29 == 0x0000 l11E4
// DataOut: r0 r1 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l11E4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> -2(fp):<invalid>

fn11A6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> -2(fp):<invalid>

l11C6:
	word16 r4_35 = Mem7[r0_21:word16]
	r1_22 = r1_22 - 0x0002
	Mem39[r1_22:word16] = Mem7[Mem7[r5_14:ptr16]:word16]
	word16 v24_40 = Mem39[r1_22:word16]
	r0_21 = r0_21 + 0x0002
	r5_14 = r5_14 + 0x0002
	word16 wLoc02_41 = v24_40
	bool Z_43 = (bool) cond(v24_40)
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l11CC:
	branch Z_43 l11C2
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l11CE:
	word16 v27_55 = __ror(wLoc02_41, wLoc02_41)
	wLoc02_41 = v27_55
	branch v27_55 >=u 0x0000 l11DC
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l11D4:
	r4_35 = r4_35 & 0x0001
	branch r4_35 == 0x0000 l11DC
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l11DA:
	Mem79[r3_29:word16] = Mem39[r5_14:word16]
	r5_14 = r5_14 + 0x0002
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l11DC:
	r3_29 = r3_29 + 0x0002
	r4_35 = __ror(r4_35, r4_35)
	Z_43 = (bool) cond(v27_55) (alias)
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)



void fn12AC(word16 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut:
// Trashed: NZVC r0 r1 r3
// Preserved: sp
fn12AC_entry:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l12AC:
	word16 r3_3 = Mem0[0x5424:word16]
	Mem5[r3_3 + 0x00A2:byte] = r2
	branch Mem5[r3_3 + 0x0014:word16] == 0x0000 l12BC
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l12BA:
	__syscall(0x899A)
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l12BC:
	word16 r0_12 = fn1420(r2, r3_3)
	Mem13[r3_3 + 0x0014:word16] = r0_12
	Mem15[r0_12:word16] = Mem13[r0_12:word16] & 0x0800
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

fn12AC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r0:<invalid>



void fn12CA(word16 r2, word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r3
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3
// Preserved: r4 r5 sp
fn12CA_entry:
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l12CA:
	word16 r4_10 = Mem0[r3 + 0x0014:word16]
	word16 r1_102 = Mem0[r3 + 0x001A:word16]
	branch Mem0[r4_10:byte] > 0x00 l12E8
// DataOut: r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l12DA:
	PRINT(0x138E)
	r2 = Mem0[r3 + 0x0054:word16]
	Mem156[r3 + 0x0054:word16] = fp - 0x0004
// DataOut: r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r4:<invalid> r1:<invalid> -4(fp):r4 -2(fp):r5

l12E8:
	word16 v18_21 = Mem0[r4_10:word16] & 0x0020
	Mem22[r4_10:word16] = v18_21
	word16 r0_106 = 0x000A
	branch v18_21 == 0x0000 l131E
// DataOut: r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r4:<invalid> r1:<invalid> r0:0x138E r2:<invalid> -4(fp):r4 -2(fp):r5

l12F2:
	r1_102 = r1_102 + 0x0001
	word16 r5_123 = (int16) Mem22[r1_102:byte]
	branch r5_123 != 0x0031 l12FE
// DataOut: r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r4:<invalid> r1:<invalid> r0:0x000A r2:<invalid> -4(fp):r4 -2(fp):r5

l12FE:
	branch r5_123 == 0x002B l132A
// DataOut: r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r4:<invalid> r1:<invalid> r0:0x000A r2:<invalid> r5:<invalid> -4(fp):r4 -2(fp):r5

l1304:
	branch r5_123 != 0x0024 l1314
// DataOut: r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r4:<invalid> r1:<invalid> r0:0x000A r2:<invalid> r5:<invalid> -4(fp):r4 -2(fp):r5

l1314:
	branch r5_123 != 0x0030 l131E
// DataOut: r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r4:<invalid> r1:<invalid> r0:0x000A r2:<invalid> r5:<invalid> -4(fp):r4 -2(fp):r5

l131A:
	r0_106 = fn1366(0x000A, r3, r4_10, out r2, out r3, out r4_10)
// DataOut: r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r4:<invalid> r1:<invalid> r0:0x000A r2:<invalid> r5:<invalid> -4(fp):r4 -2(fp):r5

l130A:
	Mem141[r3 + 0x001C:word16] = Mem22[r3 + 0x001C:word16] - 0x0001
	Mem142[r3 + 0x0054:word16] = 0x0000
// DataOut: r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r4:<invalid> r1:<invalid> r0:0x000A r2:<invalid> r5:<invalid> -4(fp):r4 -2(fp):r5

l131E:
	branch Mem22[r4_10:byte] > 0x00 l1326
// DataOut: r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r5:<invalid> r3:<invalid> -4(fp):r4 -2(fp):r5

l1322:
	branch r2 == 0x0000 l132A
// DataOut: r0 r1 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r5:<invalid> r3:<invalid> -4(fp):r4 -2(fp):r5

l12FA:
	r0_106 = 0x000C
// DataOut: r0 r1 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r4:<invalid> r1:<invalid> r0:0x000A r2:<invalid> r5:<invalid> -4(fp):r4 -2(fp):r5

l1326:
	word16 r2_97
	fn1366(r0_106, r3, r4_10, out r2_97, out r3, out r4_10)
// DataOut: r1 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r5:<invalid> r3:<invalid> -4(fp):r4 -2(fp):r5

l132A:
	branch Mem22[r4_10:byte] > 0x00 l134C
// DataOut: r1 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r5:<invalid> r3:<invalid> -4(fp):r4 -2(fp):r5

l134C:
	branch Mem22[r3 + 0x001C:word16] - r1_102 >=u 0x0000 l1346
// DataOut: r1 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r5:<invalid> r3:<invalid> -4(fp):r4 -2(fp):r5

l1352:
	word16 r2_81
	fn1370((int16) Mem22[r1_102:byte], r3, r4_10, out r2_81, out r3, out r4_10)
	r1_102 = r1_102 + 0x0001
// DataOut: r1 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r5:<invalid> r3:<invalid> -4(fp):r4 -2(fp):r5

l132E:
	branch Mem22[r3 + 0x001C:word16] - r1_102 >=u 0x0000 l1346
// DataOut: r1 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r5:<invalid> r3:<invalid> -4(fp):r4 -2(fp):r5

l1334:
	word16 r5_59 = (int16) Mem22[Mem22[r3 + 0x001C:ptr16]:byte]
	Mem60[Mem60[r3 + 0x001C:byte]:ptr16] = 0x80
	PRINT(r1_102)
	Mem62[Mem62[r3 + 0x001C:byte]:ptr16] = r5_59
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r5:<invalid> r3:<invalid> -4(fp):r4 -2(fp):r5

l1346:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r5:<invalid> r3:<invalid> -4(fp):r4 -2(fp):r5

fn12CA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r1:<invalid> r0:<invalid> r2:<invalid> r5:r5 r3:<invalid> -4(fp):r4 -2(fp):r5



word16 fn1366(word16 r0, word16 r3, word16 r4, ptr16 & r2Out, ptr16 & r3Out, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r3 r4
// LiveOut: r0 r2 r3 r4
// Trashed: NZVC r0 r2 r3 r4 sp
// Preserved: sp
fn1366_entry:
	*r4Out = r4
	*r2Out = r2
	*r3Out = r3
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l1366:
	branch Mem0[r4:byte] > 0x00 l1368_thunk_fn1370
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l1368_thunk_fn1370:
	word16 r2_22
	word16 r3_23
	word16 r4_24
	return fn1370(r0, r3, r4, out r2_22, out r3_23, out r4_24)
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l136A:
	branch TTYOUT(r0) l136A
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l136E_in_fn1366:
	return r0
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1366_exit:
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r4:<invalid> r3:<invalid>



word16 fn1370(word16 r0, word16 r3, word16 r4, ptr16 & r2Out, ptr16 & r3Out, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r3 r4
// LiveOut: r0 r2 r3 r4
// Trashed: NZVC r0 r2 r3 r4 sp
// Preserved: sp
fn1370_entry:
	*r4Out = r4
	*r3Out = r3
// DataOut: r0 r1 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l1370:
	word16 r2_5 = Mem0[r4 + 0x000E:word16] + Mem0[r4 + 0x0002:word16]
	*r2Out = r2_5
	Mem8[r2_5:word16] = r0
	Mem10[r4 + 0x000E:word16] = Mem8[r4 + 0x000E:word16] + 0x0001
	word16 v14_11 = Mem10[r4 + 0x000E:word16] & 0x01FF
	Mem12[r4 + 0x000E:word16] = v14_11
	branch v14_11 != 0x0000 l136E
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l136E:
	return r0
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid>

l1386:
	Mem27[r4 + 0x000E:word16] = 0x0000
// DataOut: r1 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid>

l138A_thunk_fn1836:
	word16 r2_33
	word16 r3_34
	word16 r4_35
	return fn1836(r3, r4, out r2_33, out r3_34, out r4_35)
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid>

fn1370_exit:
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r4:<invalid> r3:<invalid>



void fn13FE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn13FE_entry:
// DataOut: r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l13FE:
	__syscall(0x88A0)
	__syscall(0x88A1)
	__syscall(0x88A2)
	__syscall(0x88A3)
	__syscall(0x88A4)
	__syscall(0x88A5)
	__syscall(0x88A6)
	__syscall(0x88A7)
	__syscall(0x88A8)
	__syscall(0x88A9)
	__syscall(0x88AA)
	__syscall(0x88AB)
	__syscall(0x88AC)
	__syscall(0x88AD)
	__syscall(0x88AE)
	__syscall(0x88AF)
	return
// DataOut: r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

fn13FE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word16 fn1420(word16 r2, word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r3
// LiveOut: r0
// Trashed: NZVC r0 r1
// Preserved: sp
fn1420_entry:
// DataOut: r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l1420:
	branch DPB(NZV, false, 0) l142A
// DataOut: r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l1424:
	branch r2 >= 0x0063 l142C
// DataOut: r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l142A:
	__syscall(0x8994)
// DataOut: r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l142C:
	word16 v14_16 = Mem0[r3 + 0x0004:word16]
	word16 r1_19 = v14_16
// DataOut: r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l1432:
	r1_19 = r1_19 + 0x0002
	branch Mem0[r1_19:word16] - r2 == 0x0000 l144A
// DataOut: r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r1:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l1436:
	branch Mem0[r3 + 0x0002:word16] - r1_19 <u 0x0000 l1432
// DataOut: r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r1:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l143C:
	r1_19 = v14_16
// DataOut: r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r1:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l143E:
	r1_19 = r1_19 + 0x0002
	branch Mem0[r1_19:word16] == 0x0000 l144A
// DataOut: r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r1:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l1442:
	branch Mem0[r3 + 0x0002:word16] - r1_19 <u 0x0000 l143E
// DataOut: r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r1:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l1448:
	__syscall(0x8995)
// DataOut: r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r1:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l144A:
	word16 r1_33 = r1_19 - 0x0002
	Mem34[r1_33:word16] = r2
	word16 r0_35 = Mem34[r3 + 0x0006:word16]
	word16 r1_38 = r1_33 - v14_16
	branch r1_38 == 0x0000 l145C
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r1:<invalid> -2(fp):<invalid>

l1454:
	r0_35 = r0_35 + 0x0020
	r1_38 = r1_38 - 0x0001
	branch r1_38 != 0x0000 l1454
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> -2(fp):<invalid>

l145C:
	return r0_35
// DataOut: r0 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> -2(fp):<invalid>

fn1420_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> -2(fp):<invalid>



void fn145E(word16 r2, word16 wArg00, word16 wArg02, ptr16 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r5 sp
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16)
fn145E_entry:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l145E:
	word16 r3_3 = Mem0[0x5424:word16]
	Mem6[r3_3 + 0x0064:word16] = fp + 0x0016
	Mem8[r3_3 + 0x00A2:byte] = r2
	branch Mem8[r3_3 + 0x0014:word16] == 0x0000 l1478
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l1476:
	__syscall(0x899A)
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:fp + 0x0016
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l1478:
	Mem22[r3_3 + 0x0012:word16] = wArg02
	word16 r0_31 = fn1420(Mem22[ptrArg04:word16], r3_3)
	Mem32[r3_3 + 0x0014:word16] = r0_31
	Mem34[r0_31:word16] = Mem32[r0_31:word16] & 0x0800
	word16 sp_39
	word16 pc_40
	word16 r3_41
	byte NZ_42
	bool V_43
	word16 r0_44
	byte NZVC_45
	word16 r2_46
	bool C_47
	bool Z_48
	call wArg00 (retsize: 2; depth: -4 FPU: 2;)
		uses: C_13,NZ_35,r0_31,r2_26,r3_3,sp_38,V_36,Z_12
		defs: C_47,NZ_42,NZVC_45,pc_40,r0_44,r2_46,r3_41,sp_39,V_43,Z_48
	word16 v21_49 = Mem34[r0_44:word16] & 0x0800
	Mem50[r0_44:word16] = v21_49
	branch v21_49 != 0x0000 l149A
// DataOut: r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:fp + 0x0016

l1496:
	fn45F6(r0_44, r2_46, r3_41)
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r3:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> 4(fp):<invalid>

l149A:
	Mem55[r3_41 + 0x001A:word16] = Mem50[r3_41 + 0x0002:word16]
	Mem57[r3_41 + 0x0058:word16] = Mem55[r3_41 + 0x000C:word16]
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r3:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r5:<invalid> 4(fp):<invalid>

fn145E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0006 r3:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r5:<invalid> 4(fp):<invalid>



void fn14A8(word16 r2, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4
// Preserved: r2 r5 sp
fn14A8_entry:
// DataOut: r2 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l14A8:
	word16 r3_12 = Mem0[0x5424:word16]
	Mem13[r3_12 + 0x00A2:byte] = r2
	word16 r0_130 = fn1420(r2, r3_12)
	Mem17[r3_12 + 0x0014:word16] = r0_130
	word16 v13_18 = Mem17[r0_130:word16] & 0x0800
	Mem19[r0_130:word16] = v13_18
	branch v13_18 == 0x0000 l15A0
// DataOut: r0 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l14C4:
	branch Mem19[r0_130:byte] < 0x00 l15C4
// DataOut: r0 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 r3:<invalid> r1:<invalid> r0:<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l15C4:
// DataOut: r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 r3:<invalid> r1:<invalid> r0:<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l14C8:
	word16 r4_133
	r3_12 = fn1D30(r0_130, r3_12, out r4_133)
	word16 v20_135 = Mem19[r4_133:word16] & 0x0200
	Mem136[r4_133:word16] = v20_135
	branch v20_135 == 0x0000 l1526
// DataOut: r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 r3:<invalid> r1:<invalid> r0:<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l14D2:
	word16 v22_204 = Mem136[r4_133 + 0x0018:word16]
	Mem205[r4_133 + 0x0016:word16] = v22_204
	branch v22_204 == 0x0000 l1526
// DataOut: r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l14DA:
	word16 r2_209 = Mem205[r4_133 + 0x0002:word16]
	word16 r5_210 = 0x0100
// DataOut: r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l14E2:
	Mem215[r2_209:word16] = 0x0000
	r2_209 = r2_209 + 0x0002
	r5_210 = r5_210 - 0x0001
	branch r5_210 != 0x0000 l14E2
// DataOut: r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l14E8:
	word16 v25_221 = Mem215[r4_133:word16] & 0x0100
	Mem222[r4_133:word16] = v25_221
	branch v25_221 != 0x0000 l14FC
// DataOut: r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l14FC:
	Mem237[r3_12 + 0x0070:word16] = 0x1520
	branch Mem237[r3_12 + 0x0074:byte] == 0x00 l150E
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l1508:
	Mem258[r3_12 + 0x0072:word16] = 0x151E
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l150E:
	Mem249[r3_12 + 0x0064:word16] = fp - 0x0009
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l1518:
	word16 r2_254
	fn1836(r3_12, r4_133, out r2_254, out r3_12, out r4_133)
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l14EE:
	branch Mem222[r4_133 + 0x001A:word16] - Mem222[r4_133 + 0x0016:word16] >u 0x0000 l1526
// DataOut: r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l1526:
	fn13FE()
	word16 r5_146 = Mem136[r4_133 + 0x0004:word16]
	word16 r2_149 = Mem136[r4_133 + 0x0002:word16]
	word16 v46_150 = Mem136[r4_133:word16] & 0x0001
	Mem151[r4_133:word16] = v46_150
	r5 = r5_146 << 1
	branch v46_150 == 0x0000 l153E
// DataOut: r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r5:<invalid> r1:<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l153A:
	r2_149 = r2_149 - 0x0200
// DataOut: r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l153E:
	Mem157[fp - 0x0008:word16] = r2_149
	word16 r0_159 = r2_149 + (r5_146 << 1)
// DataOut: r0 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l1544:
	Mem165[r2_149:word16] = Mem157[r0_159:word16]
	r0_159 = r0_159 + 0x0002
	r2_149 = r2_149 + 0x0002
	branch Mem165[r3_12 + 0x000C:word16] - r0_159 <u 0x0000 l1544
// DataOut: r0 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l154C:
	Mem171[r3_12 + 0x000C:word16] = Mem165[r3_12 + 0x000C:word16] - (r5_146 << 1)
	word16 v60_174 = Mem171[r4_133:word16] & 0x0004
	Mem175[r4_133:word16] = v60_174
	branch v60_174 == 0x0000 l155E
// DataOut: r0 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l155A:
// DataOut: r0 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:0x0600 r4:<invalid> r1:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l155E:
	word16 r1_181 = (int16) Mem175[r4_133 + 0x0011:byte]
	__syscall(0x88FC)
	word16 r0_183 = 0x0000
// DataOut: r0 r1 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l156A:
	r0_183 = __rol(r0_183, r0_183)
	r1_181 = r1_181 - 0x0001
	branch r1_181 > 0x0000 l156A
// DataOut: r0 r1 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l1570:
	Mem196[r3_12 + 0x0010:word16] = Mem175[r3_12 + 0x0010:word16] & ~r0_183
// DataOut: r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l1574:
	Mem97[r3_12 + 0x0072:word16] = 0x0000
	Mem98[r3_12 + 0x0070:word16] = 0x0000
	word16 r4_100 = Mem98[r3_12 + 0x0004:word16]
// DataOut: r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r5:<invalid> r2:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l1580:
	branch Mem98[r3_12 + 0x0002:word16] - r4_100 >=u 0x0000 l159A
// DataOut: r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r5:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l159A:
	r0_130 = Mem98[r3_12 + 0x0014:word16]
// DataOut: r0 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r5:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l15A0:
	word16 r4_43 = 0x0010
// DataOut: r0 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r5:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l15A4:
	Mem48[r0_130:word16] = 0x0000
	r0_130 = r0_130 + 0x0002
	r4_43 = r4_43 - 0x0001
	branch r4_43 != 0x0000 l15A4
// DataOut: r0 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r5:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l15AA:
	word16 r0_54 = Mem48[r3_12 + 0x0004:word16]
	word16 v33_55 = Mem48[fp - 0x0006:word16]
// DataOut: r0 r2 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r5:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l15B0:
	r0_54 = r0_266 + 0x0002
	word16 r0_266 = r0_54
	branch v33_55 - Mem48[r0_266:word16] != 0x0000 l15B0
// DataOut: r0 r2 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r5:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l15B4:
	Mem67[r0_54 - 0x0001:byte] = 0x00
	Mem68[r3_12 + 0x0014:word16] = 0x0000
	Mem69[r3_12 + 0x00A2:byte] = 0x00
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r5:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

fn14A8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r5:r5 r1:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l1586:
	r4_100 = r4_100 + 0x0001
	word16 r2_114 = (int16) Mem98[r4_100:byte]
	branch r2_114 == 0x0000 l1580
// DataOut: r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r5:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l158A:
	word16 r0_118 = fn1420(r2_114, r3_12)
	branch Mem98[r0_118 + 0x0002:word16] - Mem98[fp - 0x0008:word16] >=u 0x0000 l1580
// DataOut: r0 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r5:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l1594:
	Mem123[r0_118 + 0x0002:word16] = Mem98[r0_118 + 0x0002:word16] - r5
// DataOut: r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r5:<invalid> -8(fp):<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5

l14F6:
	word16 r2_233
	fn1836(r3_12, r4_133, out r2_233, out r3_12, out r4_133)
// DataOut: r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> -6(fp):r2 -4(fp):r4 -2(fp):r5



void fn15CC(word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r5
// Preserved: sp
fn15CC_entry:
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l15CC:
	branch Mem0[r5:word16] == 0x0003 l15D6
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l15D6:
	FnSubfn(fp - 0x0004)
	__syscall(0x88FC)
	word16 r2_41 = 0x0A00
	branch 0x0A00 == 0x0000 l15FA
// DataOut: r2 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l15F4:
	r2_41 = (~0xFFE0 & 0x0A00) + 0x0048
// DataOut: r2 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0A00 r3:0xFFE0 r2:0x0A00 -4(fp):0x1100 -2(fp):fp - 0x0004

l15FA:
	Mem59[Mem59[r5 + 0x0002:word16]:ptr16] = __swab(0x0280) & ~0xFFE0
	Mem61[Mem61[r5 + 0x0004:word16]:ptr16] = ~0xFFE0 & 80
	Mem63[Mem63[r5 + 0x0006:word16]:ptr16] = r2_41
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0A00 r3:0xFFE0 r2:<invalid> -4(fp):0x1100 -2(fp):fp - 0x0004

l15D2:
	__syscall(0x8990)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l1614:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:0xFFE0 r2:<invalid> r1:~0xFFE0 & 80 r5:r5 + 0x001E -4(fp):0x1100 -2(fp):fp - 0x0004

fn15CC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:0xFFE0 r2:<invalid> r1:~0xFFE0 & 80 r5:r5 + 0x001E -4(fp):0x1100 -2(fp):fp - 0x0004



void fn16DA(word16 r0, word16 r2, word16 r3, word16 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r2 r3 r4
// LiveOut:
// Trashed: NZVC r0 r2 r3 r4
// Preserved: sp
fn16DA_entry:
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l16DA:
	Mem3[r4 + 0x000E:word16] = r2
	branch Mem3[r3 + 0x005E:word16] - Mem3[r4 + 0x0016:word16] == 0x0000 l1718
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l16E6:
	word16 v13_27 = Mem3[r4:word16] & 0x0002
	Mem28[r4:word16] = v13_27
	branch v13_27 == 0x0000 l16F8
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l16EC:
	word16 r2_63
	r0 = fn1836(r3, r4, out r2_63, out r3, out r4)
	Mem67[r4 + 0x0018:word16] = 0x0000
	Mem70[r4:word16] = Mem67[r4:word16] & ~0x0002
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l16F8:
	Mem37[r4 + 0x0016:word16] = Mem28[r3 + 0x005E:word16]
	branch Mem37[r4:word16] > 0x0000 l1710
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r4:<invalid> r2:0x0000 r3:<invalid>

l1702:
	branch Mem37[r3 + 0x005C:word16] > 0x0200 l1710
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r4:<invalid> r2:0x0000 r3:<invalid>

l170A:
	branch Mem37[r4 + 0x000E:word16] == 0x0000 l1718
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r4:<invalid> r2:0x0000 r3:<invalid>

l1710:
	word16 r4_49
	r3 = fn18BE(r0, r3, r4, out r4_49)
	Mem52[r4_49 + 0x0016:word16] = Mem37[r4_49 + 0x0016:word16] - 0x0001
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r4:<invalid> r2:0x0000 r3:<invalid>

l1718:
	Mem25[r3 + 0x005E:word16] = Mem3[r3 + 0x005E:word16] + 0x0001
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:0x0000 r4:<invalid> r3:<invalid>

fn16DA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:0x0000 r4:<invalid> r3:<invalid>



void fn171E(word16 r0, word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r3
// LiveOut:
// Trashed: NZVC r1 r2 r3 r4 r5
// Preserved: sp
fn171E_entry:
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l171E:
	word16 r2_4 = Mem0[Mem0[r3 + 0x0012:ptr16]:word16]
	Mem5[Mem5[r0 + 0x0012:word16]:ptr16] = r2_4
	Mem8[Mem8[r0 + 0x0012:word16]:ptr16] = Mem5[Mem5[r0 + 0x0012:ptr16]:word16] + 0x0001
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l172A_thunk_fn172C:
	fn172C(r0, r2_4 - 0x0001)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid>

fn171E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>



void fn172C(word16 r0, word16 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r2
// LiveOut:
// Trashed: NZVC r1 r2 r3 r4 r5
// Preserved: sp
fn172C_entry:
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l172C:
	word16 r3_19 = Mem0[r0 + 0x0014:word16]
	word16 r1_17 = 0x0000
	word16 r4_16 = 0x0000
	word16 r5_10 = 0x0000
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l1738:
	r3_19 = r3_19 >> 1
	branch r3_19 <u 0x0000 l1766
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> -2(fp):r5

l1766:
	r1_17 = r1_17 + r2
	r4_16 = r4_16 + (r1_17 <u 0x0000) + r5_10
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> -2(fp):r5

l173C:
	branch r3_19 != 0x0000 l176C
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> -2(fp):r5

l176C:
	r2 = r2 << 1
	r5_10 = __rol(r5_10, r5_10)
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> -2(fp):r5

l173E:
	word16 r1_37 = __swab(DPB(r1_17, 0x00, 0))
	word16 r4_38 = __swab(r4_16)
	branch r4_38 == 0x0000 l174C
// DataOut: r0 r1 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> -2(fp):r5

l174A:
	__syscall(0x89A8)
// DataOut: r0 r1 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> -2(fp):r5

l174C:
	word16 r3_47 = Mem0[0x5424:word16]
	Mem48[r3_47 + 0x005E:word16] = r1_37 | r4_38
	Mem50[r3_47 + 0x005C:word16] = Mem48[r0 + 0x0014:word16]
	Mem53[r3_47 + 0x005C:word16] = Mem50[r3_47 + 0x005C:word16] << 1
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> -2(fp):r5

fn172C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> -2(fp):r5



word16 fn1836(word16 r3, word16 r4, ptr16 & r2Out, ptr16 & r3Out, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3 r4
// LiveOut: r0 r2 r3 r4 sp
// Trashed: NZVC r0 r2 r3 r4 sp
// Preserved:
fn1836_entry:
// DataOut: r1 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l1836:
	Mem8[r4 + 0x0018:word16] = Mem0[r4 + 0x0016:word16]
	Mem10[r4 + 0x0018:word16] = Mem8[r4 + 0x0018:word16] + 0x0001
	branch Mem10[r4 + 0x001A:word16] - Mem10[r4 + 0x0016:word16] <u 0x0000 l1850
// DataOut: r1 r3 r4
// DataOut (flags): C
// SymbolicIn: sp:fp

l184A:
	Mem78[r4 + 0x001A:word16] = Mem10[r4 + 0x0016:word16]
// DataOut: r1 r3 r4
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 -2(fp):r0

l1850:
	word16 v19_21 = Mem10[r4:word16] & 0x0040
	Mem22[r4:word16] = v19_21
	branch v19_21 == 0x0000 l1860
// DataOut: r1 r3 r4
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 -2(fp):r0

l1856:
	Mem68[r4:word16] = Mem22[r4:word16] & ~0x8000
	Mem69[r4 + 0x0018:word16] = 0x0000
	__syscall(0x89A3)
// DataOut: r1 r3 r4
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 -2(fp):r0

l1860:
	word16 r3_30
	word16 r4_31
	word16 r2_32 = fn1900(r3, r4, out r3_30, out r4_31)
	Mem34[fp - 0x0004:word16] = 0x099E
	Mem36[fp - 0x0006:word16] = 0x8890
	Mem38[fp - 0x0006:word16] = Mem36[fp - 0x0006:word16] | Mem36[r4_31 + 0x0011:word16]
	Mem40[fp - 0x0008:word16] = 0x1888
	Mem42[fp - 0x000A:word16] = 0x0001
	Mem44[fp - 0x000C:word16] = 0x0100
	Mem47[fp - 0x000E:word16] = Mem44[r4_31 + 0x0002:word16]
	word16 sp_51
	word16 r0_52
	byte NZ_53
	bool V_54
	word16 r4_55
	byte NZV_56
	byte NZVC_57
	bool C_58
	bool Z_59
	bool N_60
	word16 pc_61
	word16 r3_62
	word16 r2_63
	call Mem47[fp - 0x0006:word16] (retsize: 2; depth: 2 FPU: 2;)
		uses: C_17,N_25,NZ_49,NZV_27,NZVC_28,r0_48,r2_32,r3_30,r4_31,sp_46,V_50,wLoc02_4,Z_24
		defs: C_58,N_60,NZ_53,NZV_56,NZVC_57,pc_61,r0_52,r2_63,r3_62,r4_55,sp_51,V_54,Z_59
	return r0_52
// DataOut: r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 -2(fp):r0

fn1836_exit:
// DataOut: r0 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r4:<invalid> r2:0x0000 r3:<invalid> -14(fp):<invalid> -12(fp):0x0100 -10(fp):0x0001 -8(fp):0x1888 -6(fp):<invalid> -4(fp):0x099E -2(fp):r0



word16 fn18BE(word16 r0, word16 r3, word16 r4, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r3 r4
// LiveOut: r3 r4
// Trashed: NZVC r0 r2 r3 r4 sp
// Preserved:
fn18BE_entry:
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l18BE:
	branch Mem0[r4 + 0x0018:word16] == 0x0000 l18CE
// DataOut: r3 r4
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l18C6:
	branch Mem0[r4 + 0x0018:word16] - Mem0[r4 + 0x0016:word16] >=u 0x0000 l18CC_thunk_fn1932
// DataOut: r3 r4
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 -2(fp):r0
// LocalsOut: Local -0002(0)

l18CC_thunk_fn1932:
	word16 r3_72
	word16 r4_73
	fn1932(r3, r4, r0, out r3_72, out r4_73)
	return r3_72
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 -2(fp):r0

l18CE:
	word16 r3_30
	word16 r4_31
	word16 r2_32 = fn1900(r3, r4, out r3_30, out r4_31)
	Mem34[fp - 0x0004:word16] = 0x099E
	Mem36[fp - 0x0006:word16] = 0x8880
	Mem38[fp - 0x0006:word16] = Mem36[fp - 0x0006:word16] | Mem36[r4_31 + 0x0011:word16]
	Mem40[fp - 0x0008:word16] = 0x18F4
	Mem42[fp - 0x000A:word16] = 0x0000
	Mem45[fp - 0x000C:word16] = 0x0100
	Mem48[fp - 0x000E:word16] = Mem45[r4_31 + 0x0002:word16]
	word16 sp_53
	word16 r0_54
	byte NZ_55
	bool V_56
	word16 r4_57
	bool C_58
	bool Z_59
	byte NZVC_60
	word16 pc_61
	bool N_62
	word16 r3_63
	word16 r2_64
	call Mem48[fp - 0x0006:word16] (retsize: 2; depth: 2 FPU: 2;)
		uses: C_43,N_11,NZ_50,NZVC_15,pc,r0_49,r2_32,r3_30,r4_31,sp_47,V_51,wLoc02_4,Z_10
		defs: C_58,N_62,NZ_55,NZVC_60,pc_61,r0_54,r2_64,r3_63,r4_57,sp_53,V_56,Z_59
	return r3_63
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 -2(fp):r0

fn18BE_exit:
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:0x0000 r4:<invalid> r3:<invalid> -14(fp):<invalid> -12(fp):0x0100 -10(fp):0x0000 -8(fp):0x18F4 -6(fp):<invalid> -4(fp):0x099E -2(fp):r0



word16 fn1900(word16 r3, word16 r4, ptr16 & r3Out, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C r3 r4
// LiveOut: r2 r3 r4 sp
// Trashed: NZVC r0 r2 r3 r4 sp
// Preserved:
fn1900_entry:
// DataOut: r1 r3 r4
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l1900:
	word16 sp_12
	byte NZ_13
	bool V_14
	word16 r4_15
	word16 pc_16
	bool C_17
	bool Z_18
	word16 r3_19
	bool N_20
	byte NZV_21
	word16 r2_22
	word16 r0_23
	call fp - 0x0004 (retsize: 2; depth: 6 FPU: 2;)
		uses: NZ_10,r4,sp_4,V_11,wLoc02_3,wLoc04_9
		defs: C_17,N_20,NZ_13,NZV_21,pc_16,r0_23,r2_22,r3_19,r4_15,sp_12,V_14,Z_18
	word16 v7_8 = Mem0[r4 + 0x0011:word16] | 0x88A0
	branch C_17 l18FE
// DataOut: r1 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0004(0)

l190E_thunk_fn1932:
	word16 r3_64
	word16 r4_65
	return fn1932(r3_19, r4_15, v7_8, out r3_64, out r4_65)
// DataOut: r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 -4(fp):<invalid> -2(fp):0x099E

l1910:
	Mem34[r4_15:word16] = Mem0[r4_15:word16] & ~0x8002
	word16 v12_35 = Mem34[r4_15:word16] & 0x4000
	Mem36[r4_15:word16] = v12_35
	branch v12_35 == 0x0000 l1920
// DataOut: r1 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 -4(fp):<invalid> -2(fp):0x099E
// LocalsOut: Local -0004(0)

l191A:
	Mem61[r4_15 + 0x0016:word16] = 0xFFFF
// DataOut: r1 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 -4(fp):<invalid> -2(fp):0x099E
// LocalsOut: Local -0004(0)

l1920:
	branch Mem36[0x002A:byte] == 0x00 l1932
// DataOut: r1 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 -4(fp):<invalid> -2(fp):0x099E
// LocalsOut: Local -0004(0)

l1924_thunk_fn1932:
	word16 r3_58
	word16 r4_59
	return fn1932(r3_19, r4_15, v7_8, out r3_58, out r4_59)
// DataOut: r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 -4(fp):<invalid> -2(fp):0x099E

l1926:
	Mem46[r3_19 + 0x0070:word16] = 0x0000
	word16 r4_48 = Mem46[r3_19 + 0x0072:word16]
	branch r4_48 != 0x0000 l194A
// DataOut: r1 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 -4(fp):<invalid> -2(fp):0x099E
// LocalsOut: Local -0004(0)

l192E_thunk_fn1932:
	word16 r3_55
	word16 r4_56
	return fn1932(r3_19, r4_48, v7_8, out r3_55, out r4_56)
// DataOut: r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r4:<invalid> -4(fp):<invalid> -2(fp):0x099E

l1930:
	__syscall(0x8997)
// DataOut: r1 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r4:<invalid> -4(fp):<invalid> -2(fp):0x099E
// LocalsOut: Local -0004(0)

l1930_thunk_fn1932:
	word16 r3_52
	word16 r4_53
	return fn1932(r3_19, r4_48, v7_8, out r3_52, out r4_53)
// DataOut: r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r4:<invalid> -4(fp):<invalid> -2(fp):0x099E

fn1900_exit:
// DataOut: r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r2:0x0000 r0:<invalid> r3:<invalid> -4(fp):<invalid> -2(fp):0x099E



word16 fn1932(word16 r3, word16 r4, word16 wArg00, ptr16 & r3Out, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3 r4
// LiveOut: r2 r3 r4 sp
// Trashed: NZVC r0 r2 r3 r4 sp
// Preserved:
fn1932_entry:
	*r4Out = r4
	*r3Out = r3
// DataOut: r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l1932:
	word16 v4_4 = Mem0[r4 + 0x001C:word16] & 0x0008
	Mem5[r4 + 0x001C:word16] = v4_4
	branch v4_4 != 0x0000 l18F6
// DataOut: r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l18F6:
	Mem58[r4 + 0x0016:word16] = Mem5[r4 + 0x0016:word16] + 0x0001
// DataOut: r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l18FE:
	return 0x0000
// DataOut: r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 r2:0x0000 r0:<invalid>

l193A:
	Mem21[r4:word16] = Mem5[r4:word16] | 0x1000
	Mem22[r3 + 0x0072:word16] = 0x0000
	word16 r4_25 = Mem22[r3 + 0x0070:word16]
	*r4Out = r4_25
	branch r4_25 != 0x0000 l194A
// DataOut: r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l1948:
	__syscall(0x8998)
// DataOut: r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid>

l194A:
// DataOut: r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid>

l0E92:
	word16 sp_29 = Mem22[r3 + 0x0064:word16]
	Mem31[sp_29 - 0x0002:word16] = 0x0EF4
	Mem33[sp_29 - 0x0004:word16] = r3
	branch Mem33[r3 + 0x0074:byte] != 0x00 l0EDA
// DataOut: r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid>

l0EA2:
	Mem54[sp_29 - 0x0002:word16] = r4_25
// DataOut: r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid>

l0EDA:
	Mem40[r3 + 0x0072:word16] = 0x0000
	Mem41[r3 + 0x0070:word16] = 0x0000
	Mem42[r3 + 0x0014:word16] = 0x0000
	Mem44[r3 + 0x000C:word16] = Mem42[r3 + 0x0058:word16]
	Mem45[r3 + 0x00A2:byte] = 0x00
	word16 r3_49
	*r3Out = Mem45[sp_29 - 0x0004:word16]
	return r2
// DataOut: r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid>

fn1932_exit:
// DataOut: r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000 r0:<invalid> r4:<invalid> r3:<invalid>



void fn194E(word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3
// LiveOut:
// Trashed: NZVC r1
// Preserved: sp
fn194E_entry:
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l194E:
	Mem8[r3 + 0x0012:word16] = Mem0[r3 + 0x0012:word16] + 0x0001
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn194E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid>



void fn1966(word16 r0, word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r3
// LiveOut:
// Trashed: NZVC r0
// Preserved: sp
fn1966_entry:
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l1966:
	Mem3[Mem3[r3 + 0x001C:byte]:ptr16] = r0
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l1966_thunk_fn196A:
	fn196A(r3)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1966_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void fn196A(word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3
// LiveOut:
// Trashed: NZVC r0
// Preserved: sp
fn196A_entry:
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l196A:
	branch Mem0[r3 + 0x0018:word16] - Mem0[r3 + 0x001C:word16] >=u 0x0000 l1978
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l1974:
	Mem11[r3 + 0x001C:word16] = Mem0[r3 + 0x001C:word16] + 0x0001
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

l1978:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

fn196A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void fn197A(word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3
// LiveOut:
// Trashed: NZVC r0 sp
// Preserved:
fn197A_entry:
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l197A:
	branch Mem0[r3 + 0x0046:word16] - Mem0[r3 + 0x001C:word16] >=u 0x0000 l1988
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l1982:
	Mem68[r3 + 0x001C:word16] = Mem0[r3 + 0x0046:word16]
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l1988:
	Mem7[r3 + 0x0046:word16] = 0x0000
	branch Mem7[r3 + 0x0056:word16] != 0x0000 l199E
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l199E:
	word16 sp_41
	word16 r3_42
	byte NZVC_43
	bool C_44
	byte NZ_45
	bool V_46
	bool N_47
	bool Z_48
	word16 r0_49
	word16 pc_50
	call Mem7[r3 + 0x0060:ptr16] (retsize: 2; depth: 2 FPU: 2;)
		uses: C_12,N,NZ_10,NZVC_5,pc,r0,r3,sp_1,V_13,Z_11
		defs: C_44,N_47,NZ_45,NZVC_43,pc_50,r0_49,r3_42,sp_41,V_46,Z_48
	Mem51[r3_42 + 0x0056:word16] = 0x0000
	branch Mem51[Mem51[r3_42 + 0x0014:ptr16]:byte] > 0x00 l19B0
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l19AC:
	Mem62[r3_42 + 0x0054:word16] = 0x0000
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l19B0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l1992:
	fn1966(13, r3)
	word16 sp_30
	word16 r3_31
	byte NZVC_32
	bool C_33
	byte NZ_34
	bool V_35
	bool N_36
	bool Z_37
	word16 r0_38
	word16 pc_39
	call Mem7[r3 + 0x0060:ptr16] (retsize: 2; depth: 4 FPU: 2;)
		uses: C_12,N,NZ_25,NZVC_5,pc,r0_24,r3,sp_27,V_26,Z_11
		defs: C_33,N_36,NZ_34,NZVC_32,pc_39,r0_38,r3_31,sp_30,V_35,Z_37
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn197A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid>



void fn1CFA()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn1CFA_entry:
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l1CFA:
	return
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1CFA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn1CFC(word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 sp
// Preserved:
// Stack args: Stack +0002(16)
fn1CFC_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l1CFC:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1CFC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A r0:fp + 0x000A -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):0x1D26 2(fp):r3 4(fp):r2 6(fp):r1 8(fp):fp + 0x0008 10(fp):<invalid>



word16 fn1D30(word16 r0, word16 r3, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r3
// LiveOut: r3 r4
// Trashed: NZVC r0 r1 r2 r3 r4
// Preserved: sp
fn1D30_entry:
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l1D30:
	word16 v7_5 = Mem0[r0:word16] & 0x4000
	Mem6[r0:word16] = v7_5
	word16 r4_3
	*r4Out = r0
	branch v7_5 == 0x0000 l1D44
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l1D44:
	branch Mem6[r0:word16] > 0x0000 l1D84
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0

l1D48:
	word16 v15_57 = Mem6[r0:word16] & 0x0200
	Mem58[r0:word16] = v15_57
	branch v15_57 == 0x0000 l1D74
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0

l1D74:
	word16 r2_98 = Mem58[r0 + 0x0002:word16] + 0x01FE
	Mem101[r2_98:word16] = Mem58[r2_98:word16] | 0x8000
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0

l1D4E:
	word16 r2_62 = Mem58[r0 + 0x000E:word16]
	word16 r2_64 = r2_62 + Mem58[r0 + 0x0002:word16]
	word16 v21_66 = Mem58[r0:word16] & 0x2000
	Mem67[r0:word16] = v21_66
	branch v21_66 == 0x0000 l1D62
// DataOut: r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0

l1D62:
	Mem93[r2_64:byte] = 0x0A
// DataOut: r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 r2:<invalid> r1:<invalid>

l1D5E:
	Mem87[r2_64:byte] = 0x00
// DataOut: r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 r2:<invalid> r1:<invalid>

l1D66:
	word16 r2_75 = r2_62 + Mem58[r0 + 0x0002:word16] + 0x0001
	word16 r1_76 = r2_62 - 0x01FF
	branch r2_62 == 0x01FF l1D80
// DataOut: r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 r2:<invalid> r1:<invalid>

l1D6C:
	Mem81[r2_75:byte] = 0x00
	r2_75 = r2_75 + 0x0001
	r1_76 = r1_76 + 0x0001
	branch r1_76 < 0x0000 l1D6C
// DataOut: r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 r2:<invalid> r1:<invalid>

l1D72:
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 r2:<invalid> r1:<invalid>

l1D38:
	word16 v9_36 = Mem6[r0:word16] & 0x0002
	Mem37[r0:word16] = v9_36
	branch v9_36 == 0x0000 l1D84
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0

l1D3E:
	Mem48[r0:word16] = Mem37[r0:word16] & ~0x0002
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0

l1D80:
	word16 r2_32
	word16 r4_34
	fn1836(r3, r0, out r2_32, out r3, out r4_34)
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 r2:<invalid> r1:<invalid>

l1D84:
	return r3
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r3:<invalid>

fn1D30_exit:
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r3:<invalid>



void fn1DAE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5
// Preserved: sp
fn1DAE_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l1DAE:
	word16 r4_27 = 0x1DB2
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0218:
	word16 r0_9 = Mem0[0x1DAA:word16]
	branch r0_9 == 0x0000 l0222
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:1DB2 -2(fp):r4

l0220:
	word16 sp_291
	word16 pc_292
	word16 r1_294
	bool C_295
	bool V_296
	bool N_297
	bool Z_298
	word16 r0_299
	byte NZ_300
	word16 r5_301
	byte NZVC_302
	byte ZC_303
	word16 r3_304
	word16 r2_305
	byte NZV_306
	call r0_9 (retsize: 2; depth: 4 FPU: 2;)
		uses: C_7,N,NZ_10,NZV,NZVC,pc,r0_9,r1_6,r2,r3,r4_5,r5,sp_2,V_12,wLoc02_4,Z_11,ZC
		defs: C_295,N_297,NZ_300,NZV_306,NZVC_302,pc_292,r0_299,r1_294,r2_305,r3_304,r4_293,r5_301,sp_291,V_296,Z_298,ZC_303
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:1DB2 r1:0x0000 r0:<invalid> -2(fp):r4

l0222:
	word16 sp_29 = Mem0[0x0022:word16]
	Mem31[sp_29 - 0x0002:word16] = r4_27
	FnSubfn(0x0592)
	word16 r5_33 = Mem31[0x0028:word16]
	Mem35[sp_29 - 0x0004:word16] = r5_33
	Mem41[sp_29 - 0x0006:word16] = 0x0000
	Mem43[sp_29 - 0x0008:word16] = 0x1000
	Mem46[sp_29 - 0x0006:word16] = sp_29 - 0x0018
	FnSubfn(sp_29 - 0x0008)
	word16 r4_281 = Mem46[sp_29 - 0x0016:word16]
	branch Mem46[0x1DAA:word16] != 0x0000 l028E
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:1DB2 r1:0x0000 r0:<invalid> -2(fp):r4

l0252:
	FnSubfn(0x03B8)
	branch 0x0000 == 0x0000 l0264
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:<invalid> r5:<invalid> -2(fp):r4

l025E:
	Mem287[0x001E:word16] = 0xF000
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:0x0000 r5:<invalid> -2(fp):r4

l0264:
	branch false l028E
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:0x0000 r5:<invalid> -2(fp):r4

l026A:
	Mem264[0x0026:word16] = 0x0200
	branch Mem264[0x53EA:word16] == 0x0000 l028E
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:0x0000 r5:<invalid> -2(fp):r4

l0276:
	branch Mem264[sp_29 - 0x0018:word16] == 0x0000 l0282
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:0x0000 r5:<invalid> -2(fp):r4

l0282:
	FnSubfn(0x03BC)
	Mem282[0x0026:word16] = 0x0000
	r4_281 = 0x03BC
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:0x0000 r5:<invalid> -2(fp):r4

l027A:
	PRINT(0x0380)
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:0x0000 r5:<invalid> -2(fp):r4

l028E:
	SETTOP(r4_281 - 0x0002)
	word16 r4_64 = Mem46[0x0028:word16]
	branch r5_33 + 0x0002 - r4_64 <=u 0x0000 l0372
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:<invalid> r5:<invalid> -2(fp):r4

l029C:
	Mem83[0x5426:word16] = r4_64 - 0x00B2
	word16 r4_87 = r4_64 - 0x00B2 - Mem83[0x53E8:word16] & ~0x0001
	Mem89[sp_29 - 0x001A:word16] = r4_87
	word16 r2_101 = Mem89[0x53EC:word16]
	branch r2_101 == 0x0000 l0372
// DataOut: r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:<invalid> r5:<invalid> -2(fp):r4

l02B6:
	word16 r4_94 = r4_87 - r2_101
	Mem97[sp_29 - 0x001C:word16] = r4_94
	word16 r4_102 = r4_94 & ~0x0001
// DataOut: r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> -2(fp):r4

l02BE:
	r4_102 = r4_102 - 0x0020
	r2_101 = r2_101 - 0x0001
	branch r2_101 != 0x0000 l02BE
// DataOut: r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> -2(fp):r4

l02C6:
	Mem109[sp_29 - 0x001E:word16] = r4_102
	Mem112[sp_29 - 0x0020:word16] = r4_102 - 0x0038
	branch r5_33 + 0x0002 - (r4_102 - 0x0038) <=u 0x0000 l0372
// DataOut: r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> -2(fp):r4

l02D2:
	word16 r2_117 = r4_64
// DataOut: r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> -2(fp):r4

l02D8:
	r2_117 = r2_117 - 0x0002
	Mem121[r2_117:word16] = 0x0000
	branch r4_102 - 0x0038 - r2_117 >u 0x0000 l02D8
// DataOut: r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> -2(fp):r4

l02DE:
	Mem125[r4_64 - 0x003E:byte] = 0x0000
	Mem126[r4_64 - 0x003D:byte] = 0x0000
	Mem129[r4_64 - 0x00AA:word16] = Mem126[sp_29 - 0x0020:word16]
	Mem132[r4_64 - 0x00AC:word16] = Mem129[sp_29 - 0x001E:word16]
	Mem135[r4_64 - 0x00AE:word16] = Mem132[sp_29 - 0x001C:word16]
	Mem138[r4_64 - 0x00B0:word16] = Mem135[sp_29 - 0x001A:word16]
	Mem140[r4_64 - 0x003C:word16] = Mem138[sp_29 - 0x0016:word16]
	Mem142[r4_64 - 0x003A:word16] = Mem140[sp_29 - 0x0014:word16]
	Mem143[r4_64 - 0x00A8:word16] = r4_102 - 0x0038
	Mem144[r4_64 - 0x00A6:word16] = r5_33 + 0x0002
	branch r5_33 + 0x0002 - (r4_102 - 0x0038) <=u 0x0000 l0372
// DataOut: r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> -2(fp):r4

l030E:
	branch Mem144[0x1DAA:word16] == 0x0000 l0332
// DataOut: r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> -2(fp):r4

l0314:
	FnSubfn(0x03B8)
	branch true l0332
// DataOut: r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> -2(fp):r4

l0320:
	branch Mem144[0x53EA:word16] - Mem144[sp_29 - 0x0018:word16] <u 0x0000 l0332
// DataOut: r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:0x0200 r5:<invalid> r3:<invalid> r2:<invalid> -2(fp):r4

l0326:
	branch Mem144[0x0022:word16] + 0x1000 - (r4_102 - 0x0038) <=u 0x0000 l0372
// DataOut: r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:0x0200 r5:<invalid> r3:<invalid> r2:<invalid> -2(fp):r4

l0372:
	PRINT(0x0397)
	Mem79[0x002B:word16] = Mem46[0x002B:word16] | 0x0008
	EXIT(0x0397)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> -2(fp):r4

l0332:
	Mem157[r4_64 - 0x00A2:word16] = 0x8000
	Mem158[r4_64 - 0x0062:word16] = r4_64 - 0x00B2
	Mem160[r4_64 - 0x0062:word16] = Mem158[r4_64 - 0x0062:word16] + 0x0022
	Mem164[r4_64 - 0x0048:word16] = Mem160[sp_29 - 0x0004:word16]
	word16 v54_165 = Mem164[sp_29 - 0x0002:word16]
	Mem168[r4_64 - 0x004A:word16] = v54_165
	word16 v55_169 = Mem168[v54_165:word16]
	Mem174[r4_64 - 0x0036:word16] = Mem168[v55_169:word16]
	Mem176[r4_64 - 0x0038:word16] = Mem174[v55_169 + 0x0002:word16]
	Mem177[0x0020:word16] = 0x0202
	Mem179[0x0024:word16] = Mem177[0x0024:word16] | 0x2000
	fn1CFA()
	branch Mem179[r4_64 - 0x003D:byte] == 0x00 l03B2
// DataOut: r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> -2(fp):r4

l03B2:
	Mem223[sp_29 - 0x0002:word16] = 0x1396
	word16 sp_226
	word16 pc_227
	word16 r4_228
	word16 r1_229
	bool C_230
	bool V_231
	bool N_232
	bool Z_233
	word16 r0_234
	byte NZ_235
	word16 r5_236
	byte NZVC_237
	byte ZC_238
	word16 r3_239
	word16 r2_240
	byte NZV_241
	call v54_165 + 0x0002 (retsize: 2; depth: 2 FPU: 2;)
		uses: C_186,N_56,NZ_224,NZV_106,NZVC_161,pc_28,r0_173,r1_26,r2_154,r3_84,r4_170,r5_37,sp_222,V_225,wLoc02_4,Z_185,ZC_155
		defs: C_230,N_232,NZ_235,NZV_241,NZVC_237,pc_227,r0_234,r1_229,r2_240,r3_239,r4_228,r5_236,sp_226,V_231,Z_233,ZC_238
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> -2(fp):r4

l0370:
	word16 sp_206
	word16 pc_207
	word16 r4_208
	word16 r1_209
	bool C_210
	bool V_211
	bool N_212
	bool Z_213
	word16 r0_214
	byte NZ_215
	word16 r5_216
	byte NZVC_217
	byte ZC_218
	word16 r3_219
	word16 r2_220
	byte NZV_221
	call Mem179[v54_165 + 0x0002:word16] (retsize: 2; depth: 2 FPU: 2;)
		uses: C_186,N_56,NZ_184,NZV_106,NZVC_161,pc_28,r0_173,r1_26,r2_154,r3_84,r4_205,r5_37,sp_166,V_187,wLoc02_4,Z_185,ZC_155
		defs: C_210,N_212,NZ_215,NZV_221,NZVC_217,pc_207,r0_214,r1_209,r2_220,r3_219,r4_208,r5_216,sp_206,V_211,Z_213,ZC_218
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:0x0000 r0:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> -2(fp):r4

fn1DAE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid> r1:0x0000 r0:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> -2(fp):r4 0(fp):0x1396



void fn243A(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn243A_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l243A:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l243A_thunk_fn0EF8:
	fn0EF8(r0, 0x243E, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:243E -2(fp):r4

fn243A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn2B90(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn2B90_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l2B90:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l2B90_thunk_fn0EF8:
	fn0EF8(r0, 0x2B94, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:2B94 -2(fp):r4

fn2B90_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn2E20(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn2E20_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l2E20:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l2E20_thunk_fn0EF8:
	fn0EF8(r0, 0x2E24, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:2E24 -2(fp):r4

fn2E20_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn2EC4(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn2EC4_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l2EC4:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l2EC4_thunk_fn0EF8:
	fn0EF8(r0, 0x2EC8, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:2EC8 -2(fp):r4

fn2EC4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn3220(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn3220_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l3220:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l3220_thunk_fn0EF8:
	fn0EF8(r0, 0x3224, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:3224 -2(fp):r4

fn3220_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn34AC(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn34AC_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l34AC:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l34AC_thunk_fn0EF8:
	fn0EF8(r0, 0x34B0, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:34B0 -2(fp):r4

fn34AC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn395C(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn395C_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l395C:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l395C_thunk_fn0EF8:
	fn0EF8(r0, 0x3960, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:3960 -2(fp):r4

fn395C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn3B3C(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn3B3C_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l3B3C:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l3B3C_thunk_fn0EF8:
	fn0EF8(r0, 0x3B40, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:3B40 -2(fp):r4

fn3B3C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn3E12(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn3E12_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l3E12:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l3E12_thunk_fn0EF8:
	fn0EF8(r0, 0x3E16, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:3E16 -2(fp):r4

fn3E12_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn3F42(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn3F42_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l3F42:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l3F42_thunk_fn0EF8:
	fn0EF8(r0, 0x3F46, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:3F46 -2(fp):r4

fn3F42_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn4030(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn4030_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l4030:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l4030_thunk_fn0EF8:
	fn0EF8(r0, 0x4034, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:4034 -2(fp):r4

fn4030_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn4072(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn4072_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l4072:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l4072_thunk_fn0EF8:
	fn0EF8(r0, 0x4076, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:4076 -2(fp):r4

fn4072_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn413C(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn413C_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l413C:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l413C_thunk_fn0EF8:
	fn0EF8(r0, 0x4140, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:4140 -2(fp):r4

fn413C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn4180(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn4180_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l4180:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l4180_thunk_fn0EF8:
	fn0EF8(r0, 0x4184, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:4184 -2(fp):r4

fn4180_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn4230(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn4230_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l4230:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l4230_thunk_fn0EF8:
	fn0EF8(r0, 0x4234, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:4234 -2(fp):r4

fn4230_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn4534(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn4534_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l4534:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l4534_thunk_fn0EF8:
	fn0EF8(r0, 0x4538, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:4538 -2(fp):r4

fn4534_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn457C(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn457C_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l457C:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l457C_thunk_fn0EF8:
	fn0EF8(r0, 0x4580, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:4580 -2(fp):r4

fn457C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn45C8(word16 r0, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn45C8_entry:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l45C8:
// DataOut: r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l45C8_thunk_fn0EF8:
	fn0EF8(r0, 0x45CC, r5, r4, bLoc01)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:45CC -2(fp):r4

fn45C8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> -2(fp):r4



void fn45F6(word16 r0, word16 r2, word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r2 r3
// LiveOut:
// Trashed: NZVC r1 r5
// Preserved: r0 r2 r4 sp
fn45F6_entry:
// DataOut: r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l45F6:
	word16 r4_17 = 0x0000
	r2_23 = r2
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l4602:
	word16 r2_23
	r2_23 = r2_23 - 0x000A
	branch r2_23 < 0x0000 l460C
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A r4:<invalid> r2:<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l460C:
	word16 r2_239 = r2_23 + 0x000A
	branch r4_17 != 0x0000 l461A
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A r4:<invalid> r2:<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l4614:
	r4_17 = r4_17 + r2_239
	r2_239 = 0xFFE2
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A r4:<invalid> r2:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l461A:
	word16 r4_43 = r4_17 + 0x001E
	r4_17 = r4_43 * 0x0028
	branch r4_43 * 0x0028 > 0x0000 l4614
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A r4:<invalid> r2:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l462E:
	word16 r2_220 = Mem0[r0 + 0x0006:word16]
	branch r2_220 != 0x0000 l465A
// DataOut: r0 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A r4:<invalid> r2:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l4638:
	Mem205[r0 + 0x0006:word16] = r4_43 * 0x0028
	word16 r1_207 = 0x47E4
// DataOut: r0 r1 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A r4:<invalid> r2:<invalid> r5:r0 + 0x0006 -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l463E:
	branch Mem205[r1_207:word16] == 0x0000 l464A
// DataOut: r0 r1 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A r4:<invalid> r2:<invalid> r5:r0 + 0x0008 r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l4642:
	branch r2 - Mem205[r1_207:word16] == 0x0000 l464A
// DataOut: r0 r1 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A r4:<invalid> r2:<invalid> r5:r0 + 0x0008 r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l464A:
	r2_220 = Mem205[r1_207 - 0x0002:word16]
	Mem221[r0 + 0x0008:word16] = 0x28AE
	Mem223[r0 + 0x000A:word16] = r4_43 * 0x0028
	Mem225[r0 + 0x000C:word16] = 0x193C
// DataOut: r0 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A r4:<invalid> r2:<invalid> r5:r0 + 0x0008 r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16) Local -0008(16)

l465A:
	branch Mem0[r0:word16] < 0x0000 l4662
// DataOut: r0 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A r4:<invalid> r2:<invalid> r5:r0 + 0x0006 r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16) Local -0008(16)

l465E:
	Mem202[r0:word16] = Mem0[r0:word16] | 0x0100
// DataOut: r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A r4:<invalid> r2:<invalid> r5:r0 + 0x0006 r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16) Local -0008(16)

l4662:
	word16 r0_77 = Mem0[r3 + 0x0010:word16]
	word16 r1_101 = 0x0000
	r0_100 = r0_77
// DataOut: r0 r1 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A r4:<invalid> r2:<invalid> r5:r0 + 0x0006 r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16) Local -0008(16) Local -000C(16)

l466A:
	word16 r0_100
	r1_101 = r1_101 + 0x0001
	branch OVERFLOW(r1_101) l46C2
// DataOut: r0 r1 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C r4:<invalid> r2:<invalid> r5:r0 + 0x0006 r0:<invalid> r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16) Local -0008(16) Local -000C(16)

l46C2:
	__syscall(0x899F)
	__syscall(0x899B)
	__syscall(0x899C)
	__syscall(0x899D)
// DataOut: r1 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C r4:<invalid> r2:<invalid> r5:r0 + 0x0006 r0:<invalid> r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16) Local -0008(16) Local -000C(16)

l4712:
	Mem155[r3 + 0x0010:word16] = r0_77
	Mem157[r1_101 + 0xFFFA:word16] = Mem155[r1_101 + 0xFFFA:word16] | 0x0080
	Mem158[r1_101 + 0x000A:byte] = 0x00
	Mem165[r0 + 0x0018:word16] = 0x0000
	word16 v51_167 = Mem165[r0:word16] & 0x0018
	Mem168[r0:word16] = v51_167
	branch v51_167 == 0x0000 l4736
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C r4:<invalid> r2:<invalid> r5:r0 + 0x0006 r0:<invalid> r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l4736:
	word16 v53_196 = Mem168[r0:word16] & 0x0480
	Mem197[r0:word16] = v53_196
	branch v53_196 == 0x0000 l4740
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 r4:<invalid> r2:r2 r5:r0 + 0x0006 r0:r0 r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l472E:
	word16 v52_191 = Mem168[r0:word16] & 0x0010
	Mem192[r0:word16] = v52_191
	branch v52_191 == 0x0000 l4740
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 r4:<invalid> r2:r2 r5:r0 + 0x0006 r0:r0 r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l4734:
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 r4:<invalid> r2:r2 r5:r0 + 0x0006 r0:r0 r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l473C:
	Mem188[r0:word16] = Mem168[r0:word16] | 0x0020
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 r4:<invalid> r2:r2 r5:r0 + 0x0006 r0:r0 r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l4740:
	Mem174[r0:word16] = Mem168[r0:word16] | 0x0800
	return
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 r4:<invalid> r2:r2 r5:r0 + 0x0006 r0:r0 r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5

fn45F6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r2:r2 r5:r0 + 0x0006 r0:r0 r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5

l466E:
	r0_100 = __ror(r0_100, r0_100)
	branch r0_100 <u 0x0000 l466A
// DataOut: r0 r1 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C r4:<invalid> r2:<invalid> r5:r0 + 0x0006 r0:<invalid> r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16) Local -0008(16) Local -000C(16)

l4672:
	Mem95[r0 + 0x0011:byte] = r1_101
	Mem97[r0 + 0x0011:byte] = Mem95[r0 + 0x0011:byte] - 0x01
// DataOut: r0 r1 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C r4:<invalid> r2:<invalid> r5:r0 + 0x0006 r0:<invalid> r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l467C:
	r0_100 = __rol(r0_100, r0_100)
	r1_101 = r1_101 - 0x0001
	branch r1_101 != 0x0000 l467C
// DataOut: r0 r1 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C r4:<invalid> r2:<invalid> r5:r0 + 0x0006 r0:<invalid> r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l4682:
	Mem107[r3 + 0x0010:word16] = r0_100
	fn13FE()
	word16 r4_110 = Mem107[r3 + 0x0050:word16]
	word16 r5_113 = Mem107[0x0026:word16]
	branch r5_113 == 0x0000 l46BA
// DataOut: r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C r4:<invalid> r2:<invalid> r5:r0 + 0x0006 r0:<invalid> r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l469A:
	branch r5_113 >=u 0xC8B2 l46BA
// DataOut: r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C r4:<invalid> r2:<invalid> r5:<invalid> r0:0x474C r1:r0 + 0x0006 -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l46A4:
	word16 r5_133 = 0x47E0
	branch Mem107[0x0026:word16] <=u 0x47E0 l46BA
// DataOut: r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C r4:<invalid> r2:<invalid> r5:<invalid> r0:0x474C r1:r0 + 0x0006 -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16)

l46AE:
	word16 sp_137 = fp - 0x000E
// DataOut: r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C r4:<invalid> r2:<invalid> r5:0x47E0 r0:0x474C r1:r0 + 0x0006 -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5

l46B2:
	r5_133 = r5_133 - 0x0002
	sp_137 = sp_137 - 0x0002
	Mem146[sp_137:word16] = Mem107[r5_133:word16]
	branch r5_133 <u 0x474C l46B2
// DataOut: r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r2:<invalid> r5:<invalid> r0:0x474C r1:r0 + 0x0006 -16(fp):<invalid> -14(fp):0x099E -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5

l46B8:
// DataOut: r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r2:<invalid> r5:<invalid> r0:0x474C r1:r0 + 0x0006 -16(fp):<invalid> -14(fp):0x099E -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5

l46BA:
	fn474C(r0 + 0x0006, r2_220, r3, r4_110)
	// This indirect jump appears to use the range [-1,1], which Reko can't deduce. This is a typical place where a user annotation (indicating the range of valid values) would help.
	switch (0x0000) { }
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r2:<invalid> r5:<invalid> r0:<invalid> r1:r0 + 0x0006 -16(fp):<invalid> -14(fp):0x099E -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5

l4646:
	r1_207 = r1_207 + 0x0004
// DataOut: r0 r1 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A r4:<invalid> r2:<invalid> r5:r0 + 0x0008 r1:<invalid> -12(fp):<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l4608:
	r4_17 = r4_17 + 0x0001
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A r4:<invalid> r2:<invalid> -10(fp):r2 -8(fp):r0 -6(fp):r1 -4(fp):r4 -2(fp):r5
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)



void fn474C(word16 r1, word16 r2, word16 r3, word16 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1 r2 r3 r4
// LiveOut:
// Trashed: NZVC r0 r2 r4
// Preserved: sp
fn474C_entry:
// DataOut: r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l474C:
	LOCK()
	word16 sp_16 = fp - 0x0002
	word16 r0_7 = Mem0[r3 + 0x0008:word16]
	branch r0_7 == 0x0000 l4762
// DataOut: r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l4756:
	QSET(r0_7, 0x0004)
	Mem185[r3 + 0x0008:word16] = 0x0000
	sp_16 = fp - 0x0004
// DataOut: r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r0:<invalid> -2(fp):0x0000

l4762:
	word16 sp_104 = sp_16 - 0x0002
	Mem21[sp_104:word16] = r4
	branch DSTAT(Mem21[sp_104:ptr16], r1) l4772
// DataOut: r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> -4(fp):<invalid> -2(fp):0x0000

l476A:
	Mem174[r1:word16] = r2
	Mem176[sp_104 - 0x0002:word16] = r4
	sp_104 = sp_104 - 0x0002
	branch DSTAT(Mem176[sp_104 - 0x0002:ptr16], r1) l47DC
// DataOut: r1 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:r1 -4(fp):<invalid> -2(fp):0x0000

l4772:
	branch Mem21[r4:word16] == 0x0004 l47D6
// DataOut: r1 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:r1 -4(fp):<invalid> -2(fp):0x0000

l477A:
	word16 v17_92 = Mem21[r4 + 0x0002:word16]
	branch Mem21[r4 + 0x0004:word16] != 0x0000 l4796
// DataOut: r1 r2 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:r1 r4:r4 + 0x0002 r2:<invalid> -4(fp):<invalid> -2(fp):0x0000

l4780:
	Mem161[r3 + 0x000A:word16] = Mem21[r3 + 0x000A:word16] - v17_92
	branch Mem161[r3 + 0x000C:word16] - Mem161[r3 + 0x000A:word16] <=u 0x0000 l47D8
// DataOut: r1 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:r1 r4:r4 + 0x0006 r2:<invalid> -4(fp):<invalid> -2(fp):0x0000

l478C:
	sp_104 = sp_104 - 0x0002
	Mem168[sp_104:word16] = Mem161[r3 + 0x000A:word16]
	word16 r0_171
	branch FETCH(Mem168[sp_104:ptr16], r1, out r0_171) l47DC
// DataOut: r1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:r1 r4:r4 + 0x0006 r2:<invalid> -4(fp):<invalid> -2(fp):0x0000

l4796:
	word16 sp_106 = sp_104 - 0x0002
	Mem107[sp_106:word16] = 0x0000
	word16 v27_110 = Mem107[r1 + 0xFFFA:word16] & 0x0100
	Mem111[r1 + 0xFFFA:word16] = v27_110
	word16 r0_109 = 0x0100
	branch v27_110 != 0x0000 l47AE
// DataOut: r0 r1 r4 sp
// DataOut (flags): C
// SymbolicIn: sp:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):0x0000

l47A6:
	Mem151[sp_106 - 0x0002:word16] = Mem111[r1 + 0x0012:word16]
	sp_106 = sp_106 - 0x0002
	r0_109 = 0x0200
// DataOut: r0 r1 r4 sp
// DataOut (flags): C
// SymbolicIn: sp:<invalid> r0:0x0100 r4:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):0x0000

l47AE:
	word16 sp_126 = sp_106 - 0x0002
	Mem127[sp_126:word16] = r1
	Mem130[sp_126 - 0x0002:word16] = r0_109 | Mem127[r1 + 0x000B:word16]
	FnSubfn(sp_126 - 0x0002)
	branch false l47D4
// DataOut: r1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):0x0000

l47D4:
	Mem147[sp_104:word16] = Mem130[sp_104:word16] + 0x0001
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):0x0000

l47D6:
	Mem90[sp_104:word16] = Mem21[sp_104:word16] + 0x0001
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):0x0000

l47D8:
	Mem76[sp_104:word16] = Mem21[sp_104:word16] + 0x0001
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):0x0000

l47BE:
	word16 v32_135 = Mem130[r1 + 0x0016:word16] & 0x0004
	Mem136[r1 + 0x0016:word16] = v32_135
	branch v32_135 == 0x0000 l47DA
// DataOut: r1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):0x0000

l47DA:
	Mem62[sp_104:word16] = Mem21[sp_104:word16] + 0x0001
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):0x0000

l47DC:
	UNLOCK()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):0x0000

fn474C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r4:0x0000 r2:<invalid> -4(fp):<invalid> -2(fp):0x0000

l47C6:
	Mem141[r1 + 0xFFFA:word16] = Mem136[r1 + 0xFFFA:word16] & ~0x0100
	Mem143[r1 + 0x0016:word16] = Mem141[r1 + 0x0016:word16] & ~0x0004
// DataOut: r1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> -4(fp):<invalid> -2(fp):0x0000



void fn5A90(word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5
// LiveOut:
// Trashed: NZVC r0 r1 r5
// Preserved: sp
fn5A90_entry:
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l5A90:
	Mem11[0x0024:word16] = Mem0[0x0024:word16] | 0x5040
	word16 r0_14
	TTYIN(out r0_14)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn5A90_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 + 0x0002 r0:0x0000 r1:<invalid>



