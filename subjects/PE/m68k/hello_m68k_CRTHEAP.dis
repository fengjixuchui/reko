void fn000024B0(word32 a5, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved:
fn000024B0_entry:
l000024B0:
	fn000024C4(a5, dwArg04)
	return
fn000024B0_exit:


word32 fn000024C4(word32 a5, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut: a6
// Trashed: CVZN a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: X
fn000024C4_entry:
l000024C4:
	word32 a7_12 = fp - 0xC<32>
	branch dwArg04 <=u -32<i32> l000024E0
l000024E0:
	word32 d3_25 = SEQ(SLICE(dwArg04 + 3<32>, word16, 16), SLICE(dwArg04 + 3<32>, word16, 0) & 0xFFFC<16>)
l000024EA:
	word32 a7_29 = a7_12 - 4<i32>
	Mem32[a7_29:word32] = d3_25
	word32 a7_45 = <invalid>
	word32 a5_43
	word32 d4_46
	word32 a6_44
	branch fn00002510(a5, Mem32[a7_29:word32], out d3_25, out d4_46, out a5_43, out a6_44) != 0<32> l00002506
l000024F6:
	branch d4_46 == 0<32> l00002506
l000024FA:
	Mem66[a7_45:word32] = d3_25
	word32 a7_72 = <invalid>
	a7_12 = a7_72 + 4<i32>
	branch fn00002644(a5_43, Mem66[a7_45:word32], out a5, out a6_44) != 0<32> l000024EA
l00002506:
	return Mem83[a6_44:word32]
l000024D6:
	return a6
fn000024C4_exit:


word32 fn00002510(word32 a5, word32 dwArg04, ptr32 & d3Out, ptr32 & d4Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut: a5 a6 a7 d0 d3 d4
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved:
fn00002510_entry:
l00002510:
	word32 a0_25
	word32 d0_23 = fn000027B0(a5, dwArg04, out a0_25)
	word32 a6_182 = fp - 4<32>
	word32 d3_117 = dwArg04
	word32 a7_124 = fp - 0xC<32>
	word32 a2_105 = d0_23
	branch d0_23 != 0<32> l0000254A
l0000252A:
	word32 a7_48 = <invalid>
	branch fn000028A0(a0_25, d0_23, a5, dwArg04, out d3_117, out d4, out a5, out a6_182) == -1<i32> l000025A8
l000025A8:
	word32 a6_75 = Mem40[a6_182:word32]
	d3Out = Mem40[a7_48 + 8<i32>:word32]
	d4Out = d4
	a5Out = a5
	a6Out = a6_75
	return 0<i32>
l00002538:
	Mem79[a7_48:word32] = d3_117
	word32 a0_245
	word32 d0_82 = fn000027B0(a5, Mem79[a7_48:word32], out a0_245)
	a7_124 = a7_48 + 4<i32>
	a2_105 = d0_82
	branch d0_82 != 0<32> l0000254A
l00002546:
	a5 = fn000027A0(a5, a6_182, out a6_182)
	a7_124 = <invalid>
l0000254A:
	word32 d0_108 = Mem106[Mem106[a2_105:word32] + 4<i32>:word32]
	word32 d1_112 = Mem106[a2_105 + 4<i32>:word32]
	branch SEQ(SLICE(d0_108, word16, 16), SLICE(d0_108, word16, 0) & 0xFFFC<16>) - SEQ(SLICE(d1_112, word16, 16), SLICE(d1_112, word16, 0) & 0xFFFC<16>) - d3_117 == 4<i32> l00002586
l00002566:
	word32 a7_125 = a7_124 - 4<i32>
	Mem127[a7_125:word32] = d3_117
	Mem130[a7_125 - 4<i32>:word32] = a2_105
	word32 d0_134 = fn000025B4(a5, Mem130[a7_125 - 4<i32>:word32], Mem130[a7_125:word32])
	branch d0_134 == 0<32> l00002586
l00002576:
	word32 d0_150
	__bclr(Mem130[d0_134 + 4<i32>:word32], 1<32>, out d0_150)
	word32 d0_152
	__bset(d0_150, 0<16>, out d0_152)
	Mem155[d0_134 + 4<i32>:word32] = d0_152
l00002586:
	word32 d0_159 = Mem158[a2_105 + 4<i32>:word32]
	Mem164[a2_105 + 4<i32>:word32] = SEQ(SLICE(d0_159, word16, 16), SLICE(d0_159, word16, 0) & 0xFFFC<16>)
	Mem167[a5 + -1332<i32>:word32] = Mem164[a2_105:word32]
	word32 d0_168 = Mem167[a2_105 + 4<i32>:word32]
	word32 a6_184 = Mem167[a6_182:word32]
	d3Out = Mem167[a7_124 + 4<i32>:word32]
	d4Out = d4
	a5Out = a5
	a6Out = a6_184
	return SEQ(SLICE(d0_168, word16, 16), SLICE(d0_168, word16, 0) & 0xFFFC<16>) + 4<32>
fn00002510_exit:


word32 fn000025B4(word32 a5, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1 d2
// Preserved: a2 a6 a7
fn000025B4_entry:
l000025B4:
	word32 a0_13 = Mem11[dwArg04:word32]
	word32 d0_14 = Mem11[a0_13 + 4<i32>:word32]
	word32 d1_18 = Mem11[dwArg04 + 4<i32>:word32]
	branch SEQ(SLICE(d0_14, word16, 16), SLICE(d0_14, word16, 0) & 0xFFFC<16>) - SEQ(SLICE(d1_18, word16, 16), SLICE(d1_18, word16, 0) & 0xFFFC<16>) - 4<32> - dwArg08 <=u 0<32> l00002608
l000025DA:
	word32 a0_111
	word32 d0_30 = fn0000273C(a0_13, a5, out a0_111)
	branch d0_30 == 0<32> l00002608
l00002608:
	return 0<i32>
l000025E4:
	word32 d0_52 = Mem11[dwArg04 + 4<i32>:word32]
	word32 d0_56 = SEQ(SLICE(d0_52, word16, 16), SLICE(d0_52, word16, 0) & 0xFFFC<16>) + dwArg08
	Mem61[d0_30 + 4<i32>:word32] = d0_56 + 4<32>
	Mem63[d0_56 + 4<32>:word32] = d0_30
	Mem65[d0_30:word32] = Mem63[dwArg04:word32]
	Mem67[dwArg04:word32] = d0_30
	return d0_30
fn000025B4_exit:


void fn00002610(word32 a5, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN d0
// Preserved: a6 a7
fn00002610_entry:
l00002610:
	Mem10[a5 + -716<i32>:word32] = dwArg04
	return
fn00002610_exit:


word32 fn00002644(word32 a5, word32 dwArg04, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut: a5 a6 a7 d0
// Trashed: CVZN a0 a5 a6 a7 d0
// Preserved:
fn00002644_entry:
l00002644:
	word32 a6_19 = fp - 4<32>
	word32 a0_9 = Mem5[a5 + -716<i32>:word32]
	branch a0_9 == 0<32> l00002664
l00002650:
	word32 d0_22
	call a0_9 (retsize: 4;)
		uses: a5:a5,a6:fp - 4<32>,Stack +0004:dwArg04,Stack +0010:dwArg04
		defs: a5:a5_20,a6:a6_19,d0:d0_22
	branch d0_22 == 0<32> l00002664
l00002664:
	word32 a6_34 = Mem33[a6_19:word32]
	a5Out = a5
	a6Out = a6_34
	return 0<i32>
l0000265C:
	word32 a6_39 = Mem16[a6_19:word32]
	a5Out = a5
	a6Out = a6_39
	return 1<i32>
fn00002644_exit:


word32 fn0000273C(word32 a0, word32 a5, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 d0
// Trashed: CVZN a0 d0 d1 d2
// Preserved: X a6 a7
fn0000273C_entry:
l0000273C:
	word32 d0_15
	word32 a0_14
	branch Mem5[a5 + -1328<i32>:word32] != 0<32> l0000274E
l00002746:
	d0_15 = fn0000275C(a0, a5, out a0_14)
	branch d0_15 == 0<32> l00002758
l0000274E:
	d0_15 = Mem5[a5 + -1328<i32>:word32]
	Mem32[a5 + -1328<i32>:word32] = Mem5[d0_15:word32]
	a0_14 = d0_15
l00002758:
	a0Out = a0_14
	return d0_15
fn0000273C_exit:


word32 fn0000275C(word32 a0, word32 a5, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 d0
// Trashed: CVZNX a0 d0 d1 d2
// Preserved: a6 a7
fn0000275C_entry:
l0000275C:
	__syscall(0xA11E<16>)
	branch a0 != 0<32> l00002774
l00002774:
	Mem16[a5 + -1328<i32>:word32] = a0
	word32 d0_13 = a0
	word32 d1_19 = a0 + 8<32>
	branch a0 + 0xFF8<32> - a0 <=u 0<32> l00002794
l00002788:
	Mem28[d0_13:word32] = d1_82
	d0_13 = d1_82
	d1_19 = d1_82 + 8<32>
	d1_82 = d1_19
	branch a0 + 0xFF8<32> - d1_82 >u 0<32> l00002788
l00002794:
	Mem40[a0 + 0xFF8<32>:word32] = 0<i32>
	a0Out = a0 + 0xFF8<32>
	return 1<i32>
l0000276C:
	a0Out = a0
	return 0<i32>
fn0000275C_exit:


word32 fn000027A0(word32 a5, word32 a6, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] a6:[0..31]
// LiveOut: a5 a6 a7
// Trashed: CVZN a5 a6 a7 d2
// Preserved:
fn000027A0_entry:
l000027A0:
	word32 a6_15
	word32 a5_17
	call a5 + 90<i32> (retsize: 4;)
		uses: a5:a5,a6:fp - 4<32>,d2:18<i32>,Stack +0004:18<i32>,Stack +0008:a6
		defs: a5:a5_17,a6:a6_15
	a6Out = Mem11[a6_15:word32]
	return a5_17
fn000027A0_exit:


word32 fn000027B0(word32 a5, word32 dwArg04, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut: a0 d0
// Trashed: CVZNX a0 a1 d0 d1 d2
// Preserved: a2 a3 a4 a6 a7 d3 d4 d5 d6
fn000027B0_entry:
l000027B0:
	word32 a2_101 = Mem28[a5 + -1332<i32>:word32]
	word32 a1_213 = 0<32>
	branch a5 + -1324<i32> - a2_101 == 0<32> l00002814
l00002814:
l000027D0:
l000027D4:
	word32 a4_44 = a2_101 + 4<i32>
	branch (Mem45[a4_44:word32] & 3<i32>) != 1<32> l0000280C
l000027E0:
	a0 = Mem54[a2_101:word32]
	word32 d0_56 = Mem54[a0 + 4<i32>:word32]
	word32 d3_63 = Mem54[a4_44:word32]
	branch SEQ(SLICE(d0_56, word16, 16), SLICE(d0_56, word16, 0) & 0xFFFC<16>) - SEQ(SLICE(d3_63, word16, 16), SLICE(d3_63, word16, 0) & 0xFFFC<16>) - 4<32> - dwArg04 >=u 0<32> l00002880
l000027F8:
	branch (d0_56 & 3<i32>) != 1<32> l0000280C
l0000280C:
	a2_101 = Mem81[a2_101:word32]
	branch a2_101 - (a5 + -1324<i32>) != 0<32> l000027D4
l00002812:
l00002818:
	a2_101 = Mem96[a5 + -1336<i32>:word32]
	branch a2_101 - Mem96[a5 + -1332<i32>:word32] == 0<32> l00002882
l0000282C:
	word32 a3_102 = a2_101 + 4<i32>
	branch (Mem103[a3_102:word32] & 3<i32>) != 1<32> l0000288C
l00002838:
	a0 = Mem112[a2_101:word32]
	word32 d3_114 = Mem112[a0 + 4<i32>:word32]
	word32 d1_121 = Mem112[a3_102:word32]
	branch SEQ(SLICE(d3_114, word16, 16), SLICE(d3_114, word16, 0) & 0xFFFC<16>) - SEQ(SLICE(d1_121, word16, 16), SLICE(d1_121, word16, 0) & 0xFFFC<16>) - 4<32> - dwArg04 >=u 0<32> l00002880
l0000284E:
	branch (d3_114 & 3<i32>) != 1<32> l0000288C
l0000288C:
	a2_101 = Mem139[a2_101:word32]
	branch a2_101 - Mem139[a5 + -1332<i32>:word32] != 0<32> l0000282C
l00002894:
	a0Out = a0
	return 0<32>
l00002854:
	Mem187[a2_101:word32] = Mem112[a0:word32]
	Mem189[a0:word32] = Mem187[a5 + -1328<i32>:word32]
	Mem191[a5 + -1328<i32>:word32] = a0
	branch a0 - Mem191[a5 + -1332<i32>:word32] != 0<32> l00002838
l00002864:
	Mem196[a5 + -1332<i32>:word32] = a2_101
	a0 = Mem196[a2_101:word32]
	word32 d0_198 = Mem196[a0 + 4<i32>:word32]
	word32 d1_202 = Mem196[a3_102:word32]
	branch SEQ(SLICE(d0_198, word16, 16), SLICE(d0_198, word16, 0) & 0xFFFC<16>) - SEQ(SLICE(d1_202, word16, 16), SLICE(d1_202, word16, 0) & 0xFFFC<16>) - 4<32> - dwArg04 <u 0<32> l00002882
l00002880:
	a1_213 = a2_101
l00002882:
	a0Out = a0
	return a1_213
fn000027B0_exit:
l000027FE:
	Mem240[a2_101:word32] = Mem54[a0:word32]
	Mem242[a0:word32] = Mem240[a5 + -1328<i32>:word32]
	Mem244[a5 + -1328<i32>:word32] = a0


word32 fn000028A0(word32 a0, word32 a2, word32 a5, word32 dwArg04, ptr32 & d3Out, ptr32 & d4Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[16..31] a5:[0..31] Stack +0004:[0..31]
// LiveOut: a5 a6 a7 d0 d3 d4
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved:
fn000028A0_entry:
l000028A0:
	word32 d4_114 = Mem25[a5 + -1292<i32>:word32]
	word32 a6_334 = fp - 4<32>
	word32 a7_23 = fp - 0x1C<32>
	word32 a2_117 = SEQ(SLICE(a2, word16, 16), 0x10<16>)
	word32 d5_115 = -1<i32>
	word32 d3_270 = SEQ(SLICE(dwArg04 + 7<32>, word16, 16), SLICE(dwArg04 + 7<32>, word16, 0) & 0xFFFC<16>)
	branch d4_114 - Mem25[a5 + -1312<i32>:word32] >= 0<32> l0000290E
l000028C6:
	word32 d7_119 = d4_114 << 4<32>
l000028CA:
	branch Mem46[Mem46[Mem46[a5 + -1316<i32>:word32]:word32] + d7_119:word32] == 0<32> l000028E4
l000028D6:
	word32 a7_55 = a7_23 - 4<i32>
	Mem58[a7_55:word32] = d3_270
	Mem62[a7_55 - 4<i32>:word32] = d4_114
	word32 a7_70 = <invalid>
	a7_23 = a7_70 + 8<i32>
	branch fn00002A54(a5, Mem62[a7_55 - 4<i32>:word32], Mem62[a7_55:word32], out d3_270, out d4_114, out d5_115, out a2_117, out a5, out a6_334) != -1<i32> l000028FC
l000028FC:
	Mem88[a5 + -1292<i32>:word32] = d4_114
	word32 d4_93 = Mem88[a7_70 + 12<i32>:word32]
	word32 a6_103 = Mem88[a6_334:word32]
	d3Out = Mem88[a7_70 + 8<i32>:word32]
	d4Out = d4_93
	a5Out = a5
	a6Out = a6_103
	return 0<i32>
l000028E4:
	a0 = Mem106[Mem106[a5 + -1316<i32>:word32]:word32]
	branch Mem106[a0 + d7_119:word32] == 0<32> l0000290C
l0000290C:
	d5_115 = d4_114
l000028F0:
	d4_114 = d4_114 + 1<32>
	d7_119 = d7_119 + a2_117
	branch d4_114 - Mem106[a5 + -1312<i32>:word32] < 0<32> l000028CA
l000028FA:
l0000290E:
	branch d5_115 != -1<i32> l000029B4
l00002916:
	branch Mem133[a5 + -1316<i32>:word32] == 0<32> l0000292E
l00002926:
	a0 = Mem133[a5 + -1316<i32>:word32]
	__syscall(0xA024<16>)
l0000292E:
	branch Mem133[a5 + -1316<i32>:word32] == 0<32> l0000293C
l00002934:
	a0 = Mem133[a5 + -1296<i32>:word32]
	branch Mem133[a0:word16] == 0<16> l00002974
l0000293C:
	__syscall(0xA122<16>)
	branch a0 != 0<32> l00002950
l00002950:
	__syscall(0xA029<16>)
	branch Mem133[a5 + -1316<i32>:word32] == 0<32> l00002970
l0000295A:
	__syscall(0xA02E<16>)
	__syscall(0xA023<16>)
l00002970:
	Mem185[a5 + -1316<i32>:word32] = a0
l00002974:
	a0 = Mem189[Mem189[a5 + -1316<i32>:word32]:word32] + (Mem189[a5 + -1312<i32>:word32] << 4<32>)
	word32 d0_196 = 7<i32>
l00002986:
	Mem201[a0:word32] = 0<i32>
	word32 a0_202 = a0 + 4<i32>
	Mem204[a0_202:word32] = 0<i32>
	Mem207[a0_202 + 4<i32>:word32] = 0<i32>
	Mem210[a0_202 + 8<i32>:word32] = 0<i32>
	Mem213[a0_202 + 12<i32>:word32] = 0<i32>
	Mem216[a0_202 + 16<i32>:word32] = 0<i32>
	Mem219[a0_202 + 20<i32>:word32] = 0<i32>
	Mem222[a0_202 + 24<i32>:word32] = 0<i32>
	Mem225[a0_202 + 28<i32>:word32] = 0<i32>
	Mem228[a0_202 + 32<i32>:word32] = 0<i32>
	Mem231[a0_202 + 36<i32>:word32] = 0<i32>
	Mem234[a0_202 + 40<i32>:word32] = 0<i32>
	Mem237[a0_202 + 44<i32>:word32] = 0<i32>
	Mem240[a0_202 + 48<i32>:word32] = 0<i32>
	Mem243[a0_202 + 52<i32>:word32] = 0<i32>
	Mem246[a0_202 + 56<i32>:word32] = 0<i32>
	word16 v49_250 = SLICE(d0_196, word16, 0)
	a0 = a0_202 + 60<i32>
	d0_196 = SEQ(SLICE(d0_196, word16, 16), v49_250 - 1<i16>)
	branch v49_250 != 0<16> l00002986
l000029AA:
	d5_115 = Mem246[a5 + -1312<i32>:word32]
	Mem258[a5 + -1312<i32>:word32] = Mem246[a5 + -1312<i32>:word32] + 32<i32>
l000029B4:
	word32 a7_268 = a7_23 - 4<i32>
	Mem278[a7_268:word32] = d3_270
	Mem282[a7_268 - 4<i32>:word32] = d5_115
	word32 a5_293
	word32 a6_294
	word32 d0_286 = fn000029C8(a0, a5, Mem282[a7_268 - 4<i32>:word32], Mem282[a7_268:word32], out a5_293, out a6_294)
	word32 a7_295 = <invalid>
	word32 d4_307 = Mem282[a7_295 + 12<i32>:word32]
	word32 a6_317 = Mem282[a6_294:word32]
	d3Out = Mem282[a7_295 + 8<i32>:word32]
	d4Out = d4_307
	a5Out = a5_293
	a6Out = a6_317
	return d0_286
l00002946:
	word32 d4_323 = Mem133[a7_23 + 4<i32>:word32]
	word32 a6_338 = Mem133[a6_334:word32]
	d3Out = Mem133[a7_23:word32]
	d4Out = d4_323
	a5Out = a5
	a6Out = a6_338
	return -1<i32>
fn000028A0_exit:


word32 fn000029C8(word32 a0, word32 a5, word32 dwArg04, word32 dwArg08, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a5 a6 a7 d0
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5
// Preserved:
fn000029C8_entry:
l000029C8:
	word32 d4_18 = Mem16[a5 + -1300<i32>:word32]
	word32 d4_23 = SEQ(SLICE(d4_18 + 0xFFF<32>, word16, 16), SLICE(d4_18 + 0xFFF<32>, word16, 0) & 0xF000<16>)
	word32 a6_102 = fp - 4<32>
	branch d4_23 - dwArg08 >=u 0<32> l000029E8
l000029E6:
	d4_23 = dwArg08
l000029E8:
	word32 d0_104
	__syscall(0xA11E<16>)
	branch a0 == 0<32> l00002A4A
l000029F2:
	word32 a1_42 = Mem16[Mem16[a5 + -1316<i32>:word32]:word32]
	branch (SLICE(a0, word16, 0) & 3<16>) == 0<16> l00002A14
l00002A14:
	Mem56[a1_42 + (dwArg04 << 4<32>):word32] = a0
l000029FE:
	Mem68[a1_42 + (dwArg04 << 4<32>):word32] = SEQ(SLICE(a0 + 3<32>, word16, 16), SLICE(a0 + 3<32>, word16, 0) & 0xFFFC<16>)
l00002A20:
	word32 a1_75 = a1_42 + (dwArg04 << 4<32>)
	Mem78[a1_75 + 12<i32>:word32] = a0
	Mem81[a1_75 + 8<i32>:word32] = d4_23
	Mem84[a1_75 + 4<i32>:word32] = 0<i32>
	word32 a2_99
	word32 d5_108
	word32 d4_197
	word32 d3_196
	d0_104 = fn00002A54(a5, dwArg04, dwArg08, out d3_196, out d4_197, out d5_108, out a2_99, out a5, out a6_102)
	word32 a7_103 = <invalid>
	branch d0_104 == 0<32> l00002A4C
l00002A42:
	Mem122[a7_103 + 4<i32>:word32] = d5_108
	fn00002AE0(a5, Mem122[a7_103 + 4<i32>:word32])
l00002A4A:
	d0_104 = -1<i32>
l00002A4C:
	word32 a6_146 = Mem136[a6_102:word32]
	a5Out = a5
	a6Out = a6_146
	return d0_104
fn000029C8_exit:


word32 fn00002A54(word32 a5, word32 dwArg04, word32 dwArg08, ptr32 & d3Out, ptr32 & d4Out, ptr32 & d5Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a2 a5 a6 a7 d0 d3 d4 d5
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5
// Preserved:
fn00002A54_entry:
l00002A54:
	word32 a2_25 = Mem19[Mem19[a5 + -1316<i32>:word32]:word32] + (dwArg04 << 4<32>)
	word32 d4_26 = Mem19[a2_25 + 8<i32>:word32]
	word32 d1_27 = Mem19[a2_25 + 4<i32>:word32]
	word32 d0_29 = d4_26 - d1_27
	word32 d3_38 = SEQ(SLICE(dwArg08 + 3<32>, word16, 16), SLICE(dwArg08 + 3<32>, word16, 0) & 0xFFFC<16>)
	word32 a1_32 = Mem19[a2_25:word32] + d1_27
	branch d3_38 - d0_29 <=u 0<32> l00002ABE
l00002A8A:
	__syscall(0xA020<16>)
	word32 d4_43 = d4_26 - d0_29 + d3_38
	word32 d4_48 = SEQ(SLICE(d4_43 + 4<32>, word16, 16), SLICE(d4_43 + 4<32>, word16, 0) & 0xFFFC<16>)
	a2_25 = Mem19[Mem19[a5 + -1316<i32>:word32]:word32] + (dwArg04 << 4<32>)
	branch Mem19[Mem19[a5 + -1296<i32>:word32]:word16] == 0<16> l00002AB4
l00002AB4:
	Mem59[a2_25 + 8<i32>:word32] = d4_48
	a1_32 = Mem59[a2_25:word32] + Mem59[a2_25 + 4<i32>:word32]
l00002ABE:
	Mem67[a2_25 + 4<i32>:word32] = Mem64[a2_25 + 4<i32>:word32] + d3_38
	word32 a7_100 = fp - 0x14<32>
	word32 a6_117
	word32 a5_151
	branch fn00002BB4(a5, a1_32, d3_38, out a5_151, out a6_117) == 0<32> l00002AD4
l00002AD0:
	a5_151 = fn000027A0(a5_151, a6_117, out a6_117)
	a7_100 = <invalid>
l00002AD4:
	word32 a7_111 = a7_100 + 4<i32>
	word32 d4_112 = Mem76[a7_111:word32]
	word32 d5_114 = Mem76[a7_111 + 4<i32>:word32]
	word32 a2_116 = Mem76[a7_111 + 8<i32>:word32]
	word32 a6_119 = Mem76[a6_117:word32]
	d3Out = Mem76[a7_100:word32]
	d4Out = d4_112
	d5Out = d5_114
	a2Out = a2_116
	a5Out = a5_151
	a6Out = a6_119
	return 0<i32>
l00002AA8:
	d3Out = d3
	d4Out = d4
	d5Out = d5
	a2Out = a2
	a5Out = a5
	a6Out = a6
	return -1<i32>
fn00002A54_exit:


void fn00002AE0(word32 a5, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 d2
// Preserved: a6 a7 d3
fn00002AE0_entry:
l00002AE0:
	branch Mem11[Mem11[Mem11[a5 + -1316<i32>:word32]:word32] + (dwArg04 << 4<32>):word32] == 0<32> l00002AFE
l00002AF8:
	__syscall(0xA01F<16>)
l00002AFE:
	word32 a0_26 = Mem11[Mem11[a5 + -1316<i32>:word32]:word32]
	Mem30[a0_26 + (dwArg04 << 4<32>):word32] = 0<i32>
	Mem32[a0_26 + 4<i32> + (dwArg04 << 4<32>):word32] = 0<i32>
	Mem34[a0_26 + 8<i32> + (dwArg04 << 4<32>):word32] = 0<i32>
	return
fn00002AE0_exit:


void fn00002B18(word32 a5, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a2 a5 a6 a7 d0 d1 d2
// Preserved:
fn00002B18_entry:
l00002B18:
	branch dwArg04 == 0<32> l00002B78
l00002B24:
	word32 a2_18 = Mem11[dwArg04 - 4<32>:word32]
	word32 d1_19 = Mem11[a2_18 + 4<i32>:word32]
	branch SEQ(SLICE(d1_19, word16, 16), SLICE(d1_19, word16, 0) & 0xFFFC<16>) - (dwArg04 - 4<32>) == 0<32> l00002B3A
l00002B36:
	word32 a6_118
	a5 = fn000027A0(a5, fp - 4<32>, out a6_118)
l00002B3A:
	word32 d0_38
	__bclr(Mem11[a2_18 + 4<i32>:word32], 1<32>, out d0_38)
	word32 d0_40
	__bset(d0_38, 0<16>, out d0_40)
	Mem43[a2_18 + 4<i32>:word32] = d0_40
	branch Mem43[a5 + -1308<i32>:word32] == -1<i32> l00002B78
l00002B52:
	branch d0_40 - Mem43[Mem43[a5 + -1332<i32>:word32] + 4<i32>:word32] >=u 0<32> l00002B78
l00002B5C:
	word32 d1_54 = Mem43[Mem43[a2_18:word32] + 4<i32>:word32]
	branch SEQ(SLICE(d1_54, word16, 16), SLICE(d1_54, word16, 0) & 0xFFFC<16>) - SEQ(SLICE(d0_40, word16, 16), SLICE(d0_40, word16, 0) & 0xFFFC<16>) - 4<32> - Mem43[a5 + -1308<i32>:word32] <u 0<32> l00002B78
l00002B74:
	Mem68[a5 + -1332<i32>:word32] = a2_18
l00002B78:
	return
fn00002B18_exit:


word32 fn00002BB4(word32 a5, word32 dwArg04, word32 dwArg08, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a5 a6 d0
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 d0 d1 d2
// Preserved: a7
fn00002BB4_entry:
l00002BB4:
	word32 dwLoc1C_317 = fp + 0xFFFFFFE8<32>
	word32 a0_30
	word32 d0_31 = fn0000273C(fp + 0xFFFFFFE8<32>, a5, out a0_30)
	branch d0_31 == 0<32> l00002DE8
l00002BE2:
	word32 a0_42
	branch fn0000273C(a0_30, a5, out a0_42) == 0<32> l00002DE8
l00002BEE:
	word32 a0_418
	branch fn0000273C(a0_42, a5, out a0_418) == 0<32> l00002DE8
l00002BFA:
	word32 a3_100
	word32 d0_75 = fn00002EA8(a5, dwArg04, fp + 0xFFFFFFF8<32>)
	branch d0_75 != 0<32> l00002C28
l00002C28:
	a3_100 = d0_31
	dwLoc1C_317 = fp + 0xFFFFFFEC<32>
l00002C0E:
	branch (Mem71[dwLoc08 + 4<i32>:word32] & 3<i32>) != 2<i32> l00002DE8
l00002C22:
	a3_100 = dwLoc08
l00002C32:
	Mem104[a3_100 + 4<i32>:word32] = dwArg04
	word32 d1_106
	__bclr(dwArg04, 1<32>, out d1_106)
	word32 d1_108
	__bset(d1_106, 0<16>, out d1_108)
	Mem111[a3_100 + 4<i32>:word32] = d1_108
	Mem113[dwArg04:word32] = a3_100
	branch d0_75 + 3<32> >u 3<i32> l00002C60
l00002C60:
	branch (Mem113[dwLoc08 + 4<i32>:word32] & 3<i32>) != 2<i32> l00002DE8
l00002DE8:
	branch Mem131[dwLoc1C_317:word32] == 0<32> l00002E0E
l00002DF0:
	Mem143[Mem138[dwLoc1C_317:word32]:word32] = Mem138[a5 + -1328<i32>:word32]
	Mem146[a5 + -1328<i32>:word32] = Mem143[dwLoc1C_317:word32]
	word32 v30_147 = dwLoc1C_317 + 4<32>
	dwLoc1C_317 = v30_147
	branch Mem148[v30_147:word32] != 0<32> l00002DF0
l00002E0E:
	a5Out = a5
	a6Out = a6
	return -1<i32>
l00002C74:
	branch a5 + -1324<i32> - Mem113[dwLoc08:word32] != 0<32> l00002C92
l00002C7C:
	word32 d0_176 = Mem113[a3_100 + 4<i32>:word32]
	word32 d0_180 = SEQ(SLICE(d0_176, word16, 16), SLICE(d0_176, word16, 0) & 0xFFFC<16>) + dwArg08
	branch d0_180 - Mem113[a5 + -1320<i32>:word32] <=u 0<32> l00002C92
l00002C8E:
	Mem186[a5 + -1320<i32>:word32] = d0_180
l00002C92:
	fn00002E18(a3_100, dwArg08, Mem191[dwLoc08:word32], fp + 0xFFFFFFE4<32>)
	word32 d0_224 = Mem221[Mem221[dwLoc08:word32] + 4<i32>:word32]
	word32 d1_229 = Mem221[dwLoc08 + 4<i32>:word32]
	word32 d0_233 = SEQ(SLICE(d0_224, word16, 16), SLICE(d0_224, word16, 0) & 0xFFFC<16>) - SEQ(SLICE(d1_229, word16, 16), SLICE(d1_229, word16, 0) & 0xFFFC<16>)
l00002DA4:
	fn00002E18(dwLoc08, d0_233, a3_100, fp + 0xFFFFFFE4<32>)
	word32 d0_255 = Mem240[Mem240[a5 + -1332<i32>:word32] + 4<i32>:word32]
	branch SEQ(SLICE(d0_255, word16, 16), SLICE(d0_255, word16, 0) & 0xFFFC<16>) - dwArg04 <=u 0<32> l00002DDC
l00002DBC:
	word32 d0_264 = Mem240[Mem240[a3_100:word32] + 4<i32>:word32]
	word32 d1_268 = Mem240[a3_100 + 4<i32>:word32]
	branch SEQ(SLICE(d0_264, word16, 16), SLICE(d0_264, word16, 0) & 0xFFFC<16>) - SEQ(SLICE(d1_268, word16, 16), SLICE(d1_268, word16, 0) & 0xFFFC<16>) - 4<32> - Mem240[a5 + -1308<i32>:word32] <u 0<32> l00002DDC
l00002DD8:
	Mem279[a5 + -1332<i32>:word32] = a3_100
l00002DDC:
	a5Out = a5
	a6Out = a6
	return 0<i32>
l00002C4E:
	word32 d0_296 = SEQ(SLICE(d0_75 + 3<32>, word16, 16), Mem113[0x00002C58<p32> + (int32) ((int16) (d0_75 + 3<32>)) * 2<i32>:word16])
	word32 a6_299
	word32 d0_304
	word32 a5_306
	word32 a1_307
	call 0x00002C58<p32> + (int32) ((int16) d0_296) (retsize: 0;)
		uses: a1:a1_307,a2:dwArg04,a3:a3_103,a5:a5,a6:fp - 4<32>,d0:d0_296,Stack +001C:dwLoc08,Stack +0028:dwArg04,Stack +002C:dwArg08
		defs: a1:a1_307,a5:a5_306,a6:a6_299,d0:d0_304
	a5Out = a5_306
	a6Out = a6_299
	return d0_304
fn00002BB4_exit:


void fn00002E18(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1 d2
// Preserved: a2 a3 a6 a7
fn00002E18_entry:
l00002E18:
	word32 d2_17 = Mem15[dwArg04 + 4<i32>:word32]
	word32 a2_16 = dwArg04
	branch (d2_17 & 3<i32>) == 2<i32> l00002E9A
l00002E34:
	word32 d1_27 = Mem15[dwArg0C + 4<i32>:word32]
	branch (d1_27 & 3<32>) != 2<32> l00002E6C
l00002E6C:
	word32 d2_36 = SEQ(SLICE(d2_17, word16, 16), SLICE(d2_17, word16, 0) & 0xFFFC<16>) + dwArg08
	branch SEQ(SLICE(d1_27, word16, 16), SLICE(d1_27, word16, 0) & 0xFFFC<16>) - d2_36 == 0<32> l00002E9A
l00002E7C:
	word32 a0_45 = Mem15[dwArg10:word32]
	word32 v36_46 = Mem15[a0_45:word32]
	Mem50[dwArg10:word32] = a0_45 + 4<i32>
	Mem52[v36_46 + 4<i32>:word32] = d2_36
	word32 d2_53
	__bclr(d2_36, 0<32>, out d2_53)
	word32 d2_55
	__bset(d2_53, 1<16>, out d2_55)
	Mem58[v36_46 + 4<i32>:word32] = d2_55
	Mem60[dwArg04:word32] = v36_46
	a2_16 = v36_46
l00002E9A:
	Mem67[a2_16:word32] = dwArg0C
	return
l00002E4C:
	word32 d2_81 = SEQ(SLICE(d2_17, word16, 16), SLICE(d2_17, word16, 0) & 0xFFFC<16>) + dwArg08
	Mem84[dwArg0C + 4<i32>:word32] = d2_81
	word32 d2_85
	__bclr(d2_81, 0<32>, out d2_85)
	word32 d2_87
	__bset(d2_85, 1<16>, out d2_87)
	Mem90[dwArg0C + 4<i32>:word32] = d2_87
	Mem92[dwArg04:word32] = dwArg0C
	return
fn00002E18_exit:


word32 fn00002EA8(word32 a5, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZN a0 a1 d0 d1 d2
// Preserved: a6 a7
fn00002EA8_entry:
l00002EA8:
	branch a5 + -1324<i32> - Mem5[a5 + -1336<i32>:word32] != 0<32> l00002EBC
l00002EBC:
	word32 d0_14 = Mem5[Mem5[a5 + -1336<i32>:word32] + 4<i32>:word32]
	branch SEQ(SLICE(d0_14, word16, 16), SLICE(d0_14, word16, 0) & 0xFFFC<16>) - dwArg04 <=u 0<32> l00002ED8
l00002ED8:
	word32 d0_22 = Mem5[a5 + -1320<i32>:word32]
	branch SEQ(SLICE(d0_22, word16, 16), SLICE(d0_22, word16, 0) & 0xFFFC<16>) - dwArg04 >u 0<32> l00002EEC
l00002EEC:
	word32 a1_31 = Mem5[a5 + -1336<i32>:word32]
l00002EF6:
	word32 a0_34 = Mem5[a1_31:word32]
	word32 d1_35 = Mem5[a0_34 + 4<i32>:word32]
	branch SEQ(SLICE(d1_35, word16, 16), SLICE(d1_35, word16, 0) & 0xFFFC<16>) - dwArg04 >u 0<32> l00002F08
l00002F08:
	Mem47[dwArg08:word32] = a1_31
	word32 d1_49 = Mem47[a1_31 + 4<i32>:word32]
	word32 d0_100 = 0<i32>
	branch SEQ(SLICE(d1_49, word16, 16), SLICE(d1_49, word16, 0) & 0xFFFC<16>) - dwArg04 == 0<32> l00002F1E
l00002F1C:
	d0_100 = 1<i32>
l00002F1E:
	return d0_100
l00002F02:
	a1_31 = a0_34
l00002EE4:
	return -2<i32>
l00002ED0:
	return -1<i32>
l00002EB6:
	return -3<i32>
fn00002EA8_exit:


